{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        },
        {
          "internalType": "int256",
          "name": "_initialAnswer",
          "type": "int256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "description",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getAnswer",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "_roundId",
          "type": "uint80"
        }
      ],
      "name": "getRoundData",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "roundId",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "answer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "startedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "answeredInRound",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getStartedAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestAnswer",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestRound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestRoundData",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "roundId",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "answer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "startedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "answeredInRound",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "_answer",
          "type": "int256"
        }
      ],
      "name": "updateAnswer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "_roundId",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "_answer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startedAt",
          "type": "uint256"
        }
      ],
      "name": "updateRoundData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "25": "contracts/chainlink_contracts/AggregatorV3Interface.sol",
    "37": "contracts/test_contracts/mocks/MockV3Aggregator.sol"
  },
  "ast": {
    "absolutePath": "contracts/test_contracts/mocks/MockV3Aggregator.sol",
    "exportedSymbols": {
      "MockV3Aggregator": [
        3281
      ]
    },
    "id": 3282,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3082,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:37"
      },
      {
        "absolutePath": "contracts/chainlink_contracts/AggregatorV3Interface.sol",
        "file": "../../chainlink_contracts/AggregatorV3Interface.sol",
        "id": 3083,
        "nodeType": "ImportDirective",
        "scope": 3282,
        "sourceUnit": 4974,
        "src": "57:61:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3085,
              "name": "AggregatorV3Interface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4973,
              "src": "412:21:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$4973",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "id": 3086,
            "nodeType": "InheritanceSpecifier",
            "src": "412:21:37"
          }
        ],
        "contractDependencies": [
          4973
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3084,
          "nodeType": "StructuredDocumentation",
          "src": "120:262:37",
          "text": " @title MockV3Aggregator\n @notice Based on the FluxAggregator contract\n @notice Use this contract when you need to test\n other contract's ability to read data from an\n aggregator contract, but how the aggregator got\n its answer is unimportant"
        },
        "fullyImplemented": true,
        "id": 3281,
        "linearizedBaseContracts": [
          3281,
          4973
        ],
        "name": "MockV3Aggregator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              4944
            ],
            "constant": true,
            "functionSelector": "54fd4d50",
            "id": 3090,
            "mutability": "constant",
            "name": "version",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 3088,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "464:8:37"
            },
            "scope": 3281,
            "src": "440:44:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3087,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "440:7:37",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 3089,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "483:1:37",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4934
            ],
            "constant": false,
            "functionSelector": "313ce567",
            "id": 3093,
            "mutability": "mutable",
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 3092,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "504:8:37"
            },
            "scope": 3281,
            "src": "491:30:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 3091,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "491:5:37",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "50d25bcd",
            "id": 3095,
            "mutability": "mutable",
            "name": "latestAnswer",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3281,
            "src": "527:26:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int256",
              "typeString": "int256"
            },
            "typeName": {
              "id": 3094,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "527:6:37",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8205bf6a",
            "id": 3097,
            "mutability": "mutable",
            "name": "latestTimestamp",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3281,
            "src": "559:30:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3096,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "559:7:37",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "668a0f02",
            "id": 3099,
            "mutability": "mutable",
            "name": "latestRound",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3281,
            "src": "595:26:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3098,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "595:7:37",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b5ab58dc",
            "id": 3103,
            "mutability": "mutable",
            "name": "getAnswer",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3281,
            "src": "628:43:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_int256_$",
              "typeString": "mapping(uint256 => int256)"
            },
            "typeName": {
              "id": 3102,
              "keyType": {
                "id": 3100,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "636:7:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "628:26:37",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_int256_$",
                "typeString": "mapping(uint256 => int256)"
              },
              "valueType": {
                "id": 3101,
                "name": "int256",
                "nodeType": "ElementaryTypeName",
                "src": "647:6:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b633620c",
            "id": 3107,
            "mutability": "mutable",
            "name": "getTimestamp",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3281,
            "src": "677:47:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 3106,
              "keyType": {
                "id": 3104,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "685:7:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "677:27:37",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 3105,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "696:7:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ac0de66f",
            "id": 3111,
            "mutability": "mutable",
            "name": "getStartedAt",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3281,
            "src": "730:47:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 3110,
              "keyType": {
                "id": 3108,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "738:7:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "730:27:37",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 3109,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "749:7:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3126,
              "nodeType": "Block",
              "src": "843:75:37",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3118,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3093,
                      "src": "853:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3119,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3113,
                      "src": "864:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "853:20:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 3121,
                  "nodeType": "ExpressionStatement",
                  "src": "853:20:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3123,
                        "name": "_initialAnswer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3115,
                        "src": "896:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 3122,
                      "name": "updateAnswer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3165,
                      "src": "883:12:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_int256_$returns$__$",
                        "typeString": "function (int256)"
                      }
                    },
                    "id": 3124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "883:28:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3125,
                  "nodeType": "ExpressionStatement",
                  "src": "883:28:37"
                }
              ]
            },
            "documentation": null,
            "id": 3127,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3113,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3127,
                  "src": "796:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3112,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "796:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3115,
                  "mutability": "mutable",
                  "name": "_initialAnswer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3127,
                  "src": "813:21:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 3114,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "813:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "795:40:37"
            },
            "returnParameters": {
              "id": 3117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "843:0:37"
            },
            "scope": 3281,
            "src": "784:134:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3164,
              "nodeType": "Block",
              "src": "969:253:37",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3132,
                      "name": "latestAnswer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3095,
                      "src": "979:12:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3133,
                      "name": "_answer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3129,
                      "src": "994:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "979:22:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 3135,
                  "nodeType": "ExpressionStatement",
                  "src": "979:22:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3136,
                      "name": "latestTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3097,
                      "src": "1011:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3137,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1029:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1029:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1011:33:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3140,
                  "nodeType": "ExpressionStatement",
                  "src": "1011:33:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1054:13:37",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 3141,
                      "name": "latestRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3099,
                      "src": "1054:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3143,
                  "nodeType": "ExpressionStatement",
                  "src": "1054:13:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3144,
                        "name": "getAnswer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3103,
                        "src": "1077:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_int256_$",
                          "typeString": "mapping(uint256 => int256)"
                        }
                      },
                      "id": 3146,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3145,
                        "name": "latestRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3099,
                        "src": "1087:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1077:22:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3147,
                      "name": "_answer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3129,
                      "src": "1102:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "1077:32:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 3149,
                  "nodeType": "ExpressionStatement",
                  "src": "1077:32:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3150,
                        "name": "getTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3107,
                        "src": "1119:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 3152,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3151,
                        "name": "latestRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3099,
                        "src": "1132:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1119:25:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3153,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1147:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1147:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1119:43:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3156,
                  "nodeType": "ExpressionStatement",
                  "src": "1119:43:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3157,
                        "name": "getStartedAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3111,
                        "src": "1172:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 3159,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3158,
                        "name": "latestRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3099,
                        "src": "1185:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1172:25:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3160,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1200:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1200:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1172:43:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3163,
                  "nodeType": "ExpressionStatement",
                  "src": "1172:43:37"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a87a20ce",
            "id": 3165,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateAnswer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3129,
                  "mutability": "mutable",
                  "name": "_answer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3165,
                  "src": "946:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 3128,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "946:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "945:16:37"
            },
            "returnParameters": {
              "id": 3131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "969:0:37"
            },
            "scope": 3281,
            "src": "924:298:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3206,
              "nodeType": "Block",
              "src": "1371:247:37",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3176,
                      "name": "latestRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3099,
                      "src": "1381:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3177,
                      "name": "_roundId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3167,
                      "src": "1395:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      }
                    },
                    "src": "1381:22:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3179,
                  "nodeType": "ExpressionStatement",
                  "src": "1381:22:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3180,
                      "name": "latestAnswer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3095,
                      "src": "1413:12:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3181,
                      "name": "_answer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3169,
                      "src": "1428:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "1413:22:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 3183,
                  "nodeType": "ExpressionStatement",
                  "src": "1413:22:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3184,
                      "name": "latestTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3097,
                      "src": "1445:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3185,
                      "name": "_timestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3171,
                      "src": "1463:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1445:28:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3187,
                  "nodeType": "ExpressionStatement",
                  "src": "1445:28:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3188,
                        "name": "getAnswer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3103,
                        "src": "1483:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_int256_$",
                          "typeString": "mapping(uint256 => int256)"
                        }
                      },
                      "id": 3190,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3189,
                        "name": "latestRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3099,
                        "src": "1493:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1483:22:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3191,
                      "name": "_answer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3169,
                      "src": "1508:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "1483:32:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 3193,
                  "nodeType": "ExpressionStatement",
                  "src": "1483:32:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3194,
                        "name": "getTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3107,
                        "src": "1525:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 3196,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3195,
                        "name": "latestRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3099,
                        "src": "1538:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1525:25:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3197,
                      "name": "_timestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3171,
                      "src": "1553:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1525:38:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3199,
                  "nodeType": "ExpressionStatement",
                  "src": "1525:38:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3200,
                        "name": "getStartedAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3111,
                        "src": "1573:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 3202,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3201,
                        "name": "latestRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3099,
                        "src": "1586:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1573:25:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3203,
                      "name": "_startedAt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3173,
                      "src": "1601:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1573:38:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3205,
                  "nodeType": "ExpressionStatement",
                  "src": "1573:38:37"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4aa2011f",
            "id": 3207,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateRoundData",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3167,
                  "mutability": "mutable",
                  "name": "_roundId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3207,
                  "src": "1262:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 3166,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "1262:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3169,
                  "mutability": "mutable",
                  "name": "_answer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3207,
                  "src": "1287:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 3168,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1287:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3171,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3207,
                  "src": "1311:18:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3170,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1311:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3173,
                  "mutability": "mutable",
                  "name": "_startedAt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3207,
                  "src": "1339:18:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1339:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1252:111:37"
            },
            "returnParameters": {
              "id": 3175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1371:0:37"
            },
            "scope": 3281,
            "src": "1228:390:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4959
            ],
            "body": {
              "id": 3236,
              "nodeType": "Block",
              "src": "1894:113:37",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 3223,
                        "name": "_roundId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3209,
                        "src": "1912:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3224,
                          "name": "getAnswer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3103,
                          "src": "1922:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_int256_$",
                            "typeString": "mapping(uint256 => int256)"
                          }
                        },
                        "id": 3226,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3225,
                          "name": "_roundId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3209,
                          "src": "1932:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1922:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3227,
                          "name": "getStartedAt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3111,
                          "src": "1943:12:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 3229,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3228,
                          "name": "_roundId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3209,
                          "src": "1956:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1943:22:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3230,
                          "name": "getTimestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3107,
                          "src": "1967:12:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 3232,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3231,
                          "name": "_roundId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3209,
                          "src": "1980:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1967:22:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3233,
                        "name": "_roundId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3209,
                        "src": "1991:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      }
                    ],
                    "id": 3234,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1911:89:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "functionReturnParameters": 3222,
                  "id": 3235,
                  "nodeType": "Return",
                  "src": "1904:96:37"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9a6fc8f5",
            "id": 3237,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRoundData",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3211,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1701:8:37"
            },
            "parameters": {
              "id": 3210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3209,
                  "mutability": "mutable",
                  "name": "_roundId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3237,
                  "src": "1646:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 3208,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "1646:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1645:17:37"
            },
            "returnParameters": {
              "id": 3222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3213,
                  "mutability": "mutable",
                  "name": "roundId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3237,
                  "src": "1740:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 3212,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "1740:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3215,
                  "mutability": "mutable",
                  "name": "answer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3237,
                  "src": "1768:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 3214,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1768:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3217,
                  "mutability": "mutable",
                  "name": "startedAt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3237,
                  "src": "1795:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1795:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3219,
                  "mutability": "mutable",
                  "name": "updatedAt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3237,
                  "src": "1826:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3218,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1826:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3221,
                  "mutability": "mutable",
                  "name": "answeredInRound",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3237,
                  "src": "1857:22:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 3220,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "1857:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1726:163:37"
            },
            "scope": 3281,
            "src": "1624:383:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4972
            ],
            "body": {
              "id": 3270,
              "nodeType": "Block",
              "src": "2271:214:37",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3253,
                            "name": "latestRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3099,
                            "src": "2309:11:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 3252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2302:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint80_$",
                            "typeString": "type(uint80)"
                          },
                          "typeName": {
                            "id": 3251,
                            "name": "uint80",
                            "nodeType": "ElementaryTypeName",
                            "src": "2302:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2302:19:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3255,
                          "name": "getAnswer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3103,
                          "src": "2335:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_int256_$",
                            "typeString": "mapping(uint256 => int256)"
                          }
                        },
                        "id": 3257,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3256,
                          "name": "latestRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3099,
                          "src": "2345:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2335:22:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3258,
                          "name": "getStartedAt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3111,
                          "src": "2371:12:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 3260,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3259,
                          "name": "latestRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3099,
                          "src": "2384:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2371:25:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3261,
                          "name": "getTimestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3107,
                          "src": "2410:12:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 3263,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3262,
                          "name": "latestRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3099,
                          "src": "2423:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2410:25:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3266,
                            "name": "latestRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3099,
                            "src": "2456:11:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 3265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2449:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint80_$",
                            "typeString": "type(uint80)"
                          },
                          "typeName": {
                            "id": 3264,
                            "name": "uint80",
                            "nodeType": "ElementaryTypeName",
                            "src": "2449:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2449:19:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      }
                    ],
                    "id": 3268,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2288:190:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "functionReturnParameters": 3250,
                  "id": 3269,
                  "nodeType": "Return",
                  "src": "2281:197:37"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "feaf968c",
            "id": 3271,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "latestRoundData",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3239,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2078:8:37"
            },
            "parameters": {
              "id": 3238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2037:2:37"
            },
            "returnParameters": {
              "id": 3250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3241,
                  "mutability": "mutable",
                  "name": "roundId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3271,
                  "src": "2117:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 3240,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "2117:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3243,
                  "mutability": "mutable",
                  "name": "answer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3271,
                  "src": "2145:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 3242,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2145:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3245,
                  "mutability": "mutable",
                  "name": "startedAt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3271,
                  "src": "2172:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3244,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2172:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3247,
                  "mutability": "mutable",
                  "name": "updatedAt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3271,
                  "src": "2203:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2203:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3249,
                  "mutability": "mutable",
                  "name": "answeredInRound",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3271,
                  "src": "2234:22:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 3248,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "2234:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2103:163:37"
            },
            "scope": 3281,
            "src": "2013:472:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4939
            ],
            "body": {
              "id": 3279,
              "nodeType": "Block",
              "src": "2561:57:37",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "76302e362f74657374732f4d6f636b563341676772656761746f722e736f6c",
                    "id": 3277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2578:33:37",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f07fb5b1ad79aac528cd96a1cc4b4ec6f7cefc63060a932b3b6750094ba19ff0",
                      "typeString": "literal_string \"v0.6/tests/MockV3Aggregator.sol\""
                    },
                    "value": "v0.6/tests/MockV3Aggregator.sol"
                  },
                  "functionReturnParameters": 3276,
                  "id": 3278,
                  "nodeType": "Return",
                  "src": "2571:40:37"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "7284e416",
            "id": 3280,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "description",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3273,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2528:8:37"
            },
            "parameters": {
              "id": 3272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2511:2:37"
            },
            "returnParameters": {
              "id": 3276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3275,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3280,
                  "src": "2546:13:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3274,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2546:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2545:15:37"
            },
            "scope": 3281,
            "src": "2491:127:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3282,
        "src": "383:2237:37"
      }
    ],
    "src": "32:2589:37"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516105293803806105298339818101604052604081101561003357600080fd5b5080516020909101516000805460ff191660ff84161790556100548161005b565b50506100a2565b600181815542600281905560038054909201808355600090815260046020908152604080832095909555835482526005815284822083905592548152600690925291902055565b610478806100b16000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638205bf6a1161008c578063ac0de66f11610066578063ac0de66f14610262578063b5ab58dc1461027f578063b633620c1461029c578063feaf968c146102b9576100cf565b80638205bf6a146101d35780639a6fc8f5146101db578063a87a20ce14610245576100cf565b8063313ce567146100d45780634aa2011f146100f257806350d25bcd1461012c57806354fd4d5014610146578063668a0f021461014e5780637284e41614610156575b600080fd5b6100dc6102c1565b6040805160ff9092168252519081900360200190f35b61012a6004803603608081101561010857600080fd5b506001600160501b0381351690602081013590604081013590606001356102ca565b005b610134610314565b60408051918252519081900360200190f35b61013461031a565b61013461031f565b61015e610325565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610198578181015183820152602001610180565b50505050905090810190601f1680156101c55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61013461035c565b610201600480360360208110156101f157600080fd5b50356001600160501b0316610362565b60405180866001600160501b03168152602001858152602001848152602001838152602001826001600160501b031681526020019550505050505060405180910390f35b61012a6004803603602081101561025b57600080fd5b5035610398565b6101346004803603602081101561027857600080fd5b50356103df565b6101346004803603602081101561029557600080fd5b50356103f1565b610134600480360360208110156102b257600080fd5b5035610403565b610201610415565b60005460ff1681565b6001600160501b0390931660038181556001849055600283905560009182526004602090815260408084209590955581548352600581528483209390935554815260069091522055565b60015481565b600081565b60035481565b60408051808201909152601f81527f76302e362f74657374732f4d6f636b563341676772656761746f722e736f6c00602082015290565b60025481565b6001600160501b038116600090815260046020908152604080832054600683528184205460059093529220549293919290918490565b600181815542600281905560038054909201808355600090815260046020908152604080832095909555835482526005815284822083905592548152600690925291902055565b60066020526000908152604090205481565b60046020526000908152604090205481565b60056020526000908152604090205481565b6003546000818152600460209081526040808320546006835281842054600590935292205483909192939456fea26469706673582212208450f57dba22baee14e65a694f686b6d0f47b794cc1cc88dc92c9b54b012677564736f6c634300060c0033",
  "bytecodeSha1": "6d67ebb80788e7935532f76d613db0f5e2a1624c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "MockV3Aggregator",
  "coverageMap": {
    "branches": {
      "25": {},
      "37": {}
    },
    "statements": {
      "25": {},
      "37": {
        "MockV3Aggregator.description": {
          "6": [
            2571,
            2611
          ]
        },
        "MockV3Aggregator.getRoundData": {
          "7": [
            1904,
            2000
          ]
        },
        "MockV3Aggregator.latestRoundData": {
          "14": [
            2281,
            2478
          ]
        },
        "MockV3Aggregator.updateAnswer": {
          "8": [
            979,
            1001
          ],
          "9": [
            1011,
            1044
          ],
          "10": [
            1054,
            1067
          ],
          "11": [
            1077,
            1109
          ],
          "12": [
            1119,
            1162
          ],
          "13": [
            1172,
            1215
          ]
        },
        "MockV3Aggregator.updateRoundData": {
          "0": [
            1381,
            1403
          ],
          "1": [
            1413,
            1435
          ],
          "2": [
            1445,
            1473
          ],
          "3": [
            1483,
            1515
          ],
          "4": [
            1525,
            1563
          ],
          "5": [
            1573,
            1611
          ]
        }
      }
    }
  },
  "dependencies": [
    "AggregatorV3Interface"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638205bf6a1161008c578063ac0de66f11610066578063ac0de66f14610262578063b5ab58dc1461027f578063b633620c1461029c578063feaf968c146102b9576100cf565b80638205bf6a146101d35780639a6fc8f5146101db578063a87a20ce14610245576100cf565b8063313ce567146100d45780634aa2011f146100f257806350d25bcd1461012c57806354fd4d5014610146578063668a0f021461014e5780637284e41614610156575b600080fd5b6100dc6102c1565b6040805160ff9092168252519081900360200190f35b61012a6004803603608081101561010857600080fd5b506001600160501b0381351690602081013590604081013590606001356102ca565b005b610134610314565b60408051918252519081900360200190f35b61013461031a565b61013461031f565b61015e610325565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610198578181015183820152602001610180565b50505050905090810190601f1680156101c55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61013461035c565b610201600480360360208110156101f157600080fd5b50356001600160501b0316610362565b60405180866001600160501b03168152602001858152602001848152602001838152602001826001600160501b031681526020019550505050505060405180910390f35b61012a6004803603602081101561025b57600080fd5b5035610398565b6101346004803603602081101561027857600080fd5b50356103df565b6101346004803603602081101561029557600080fd5b50356103f1565b610134600480360360208110156102b257600080fd5b5035610403565b610201610415565b60005460ff1681565b6001600160501b0390931660038181556001849055600283905560009182526004602090815260408084209590955581548352600581528483209390935554815260069091522055565b60015481565b600081565b60035481565b60408051808201909152601f81527f76302e362f74657374732f4d6f636b563341676772656761746f722e736f6c00602082015290565b60025481565b6001600160501b038116600090815260046020908152604080832054600683528184205460059093529220549293919290918490565b600181815542600281905560038054909201808355600090815260046020908152604080832095909555835482526005815284822083905592548152600690925291902055565b60066020526000908152604090205481565b60046020526000908152604090205481565b60056020526000908152604090205481565b6003546000818152600460209081526040808320546006835281842054600590935292205483909192939456fea26469706673582212208450f57dba22baee14e65a694f686b6d0f47b794cc1cc88dc92c9b54b012677564736f6c634300060c0033",
  "deployedSourceMap": "383:2237:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;491:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1228:390;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1228:390:37;;;;;;;;;;;;;;;;;;:::i;:::-;;527:26;;;:::i;:::-;;;;;;;;;;;;;;;;440:44;;;:::i;595:26::-;;;:::i;2491:127::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;559:30;;;:::i;1624:383::-;;;;;;;;;;;;;;;;-1:-1:-1;1624:383:37;-1:-1:-1;;;;;1624:383:37;;:::i;:::-;;;;;-1:-1:-1;;;;;1624:383:37;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1624:383:37;;;;;;;;;;;;;;;;;;;924:298;;;;;;;;;;;;;;;;-1:-1:-1;924:298:37;;:::i;730:47::-;;;;;;;;;;;;;;;;-1:-1:-1;730:47:37;;:::i;628:43::-;;;;;;;;;;;;;;;;-1:-1:-1;628:43:37;;:::i;677:47::-;;;;;;;;;;;;;;;;-1:-1:-1;677:47:37;;:::i;2013:472::-;;;:::i;491:30::-;;;;;;:::o;1228:390::-;-1:-1:-1;;;;;1381:22:37;;;:11;:22;;;1413:12;:22;;;-1:-1:-1;1445:28:37;;;-1:-1:-1;1483:22:37;;;:9;:22;;;;;;;;:32;;;;1538:11;;1525:25;;:12;:25;;;;;:38;;;;1586:11;1573:25;;:12;:25;;;;:38;1228:390::o;527:26::-;;;;:::o;440:44::-;483:1;440:44;:::o;595:26::-;;;;:::o;2491:127::-;2571:40;;;;;;;;;;;;;;;;;2491:127;:::o;559:30::-;;;;:::o;1624:383::-;-1:-1:-1;;;;;1922:19:37;;1740:14;1922:19;;;:9;:19;;;;;;;;;1943:12;:22;;;;;;1967:12;:22;;;;;;1922:19;;;;1943:22;;1922:19;;1624:383::o;924:298::-;979:12;:22;;;1029:15;1011;:33;;;1054:11;:13;;;;;;;;-1:-1:-1;1077:22:37;;;:9;:22;;;;;;;;:32;;;;1132:11;;1119:25;;:12;:25;;;;;:43;;;1185:11;;1172:25;;:12;:25;;;;;;:43;924:298::o;730:47::-;;;;;;;;;;;;;:::o;628:43::-;;;;;;;;;;;;;:::o;677:47::-;;;;;;;;;;;;;:::o;2013:472::-;2309:11;;2117:14;2335:22;;;:9;:22;;;;;;;;;2371:12;:25;;;;;;2410:12;:25;;;;;;2309:11;2013:472;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "notice": "Based on the FluxAggregator contractUse this contract when you need to test other contract's ability to read data from an aggregator contract, but how the aggregator got its answer is unimportant",
    "title": "MockV3Aggregator",
    "version": 1
  },
  "offset": [
    383,
    2620
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8205BF6A GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xAC0DE66F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xAC0DE66F EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xB5AB58DC EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xB633620C EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0xFEAF968C EQ PUSH2 0x2B9 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x8205BF6A EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x9A6FC8F5 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0xA87A20CE EQ PUSH2 0x245 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x4AA2011F EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x50D25BCD EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x668A0F02 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x7284E416 EQ PUSH2 0x156 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x2CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x134 PUSH2 0x314 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH2 0x31A JUMP JUMPDEST PUSH2 0x134 PUSH2 0x31F JUMP JUMPDEST PUSH2 0x15E PUSH2 0x325 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x198 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x180 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1C5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH2 0x35C JUMP JUMPDEST PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH2 0x362 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x398 JUMP JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3DF JUMP JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x403 JUMP JUMPDEST PUSH2 0x201 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP4 AND PUSH1 0x3 DUP2 DUP2 SSTORE PUSH1 0x1 DUP5 SWAP1 SSTORE PUSH1 0x2 DUP4 SWAP1 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP2 SLOAD DUP4 MSTORE PUSH1 0x5 DUP2 MSTORE DUP5 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SLOAD DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH32 0x76302E362F74657374732F4D6F636B563341676772656761746F722E736F6C00 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD PUSH1 0x5 SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP5 SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SSTORE TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP1 SWAP3 ADD DUP1 DUP4 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP4 SLOAD DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE DUP5 DUP3 KECCAK256 DUP4 SWAP1 SSTORE SWAP3 SLOAD DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD PUSH1 0x5 SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SLOAD DUP4 SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 POP CREATE2 PUSH30 0xBA22BAEE14E65A694F686B6D0F47B794CC1CC88DC92C9B54B01267756473 PUSH16 0x6C634300060C00330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        383,
        2620
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "5": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "CALLVALUE",
      "path": "37"
    },
    "6": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "DUP1",
      "path": "37"
    },
    "7": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "8": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "12": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "DUP1",
      "path": "37"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "REVERT",
      "path": "37"
    },
    "16": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "17": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "POP",
      "path": "37"
    },
    "18": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "21": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "LT",
      "path": "37"
    },
    "22": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "26": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "29": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "SHR",
      "path": "37"
    },
    "32": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "DUP1",
      "path": "37"
    },
    "33": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x8205BF6A"
    },
    "38": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "GT",
      "path": "37"
    },
    "39": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "43": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "DUP1",
      "path": "37"
    },
    "44": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xAC0DE66F"
    },
    "49": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "GT",
      "path": "37"
    },
    "50": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "54": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "DUP1",
      "path": "37"
    },
    "55": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xAC0DE66F"
    },
    "60": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "EQ",
      "path": "37"
    },
    "61": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x262"
    },
    "64": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "65": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "DUP1",
      "path": "37"
    },
    "66": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xB5AB58DC"
    },
    "71": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "EQ",
      "path": "37"
    },
    "72": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x27F"
    },
    "75": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "76": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "DUP1",
      "path": "37"
    },
    "77": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xB633620C"
    },
    "82": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "EQ",
      "path": "37"
    },
    "83": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x29C"
    },
    "86": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "87": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "DUP1",
      "path": "37"
    },
    "88": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFEAF968C"
    },
    "93": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "EQ",
      "path": "37"
    },
    "94": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2B9"
    },
    "97": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "98": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xCF"
    },
    "101": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "JUMP",
      "path": "37"
    },
    "102": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "103": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "DUP1",
      "path": "37"
    },
    "104": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x8205BF6A"
    },
    "109": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "EQ",
      "path": "37"
    },
    "110": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1D3"
    },
    "113": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "114": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "DUP1",
      "path": "37"
    },
    "115": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x9A6FC8F5"
    },
    "120": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "EQ",
      "path": "37"
    },
    "121": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1DB"
    },
    "124": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "125": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "DUP1",
      "path": "37"
    },
    "126": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xA87A20CE"
    },
    "131": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "EQ",
      "path": "37"
    },
    "132": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x245"
    },
    "135": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "136": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xCF"
    },
    "139": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "JUMP",
      "path": "37"
    },
    "140": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "141": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "DUP1",
      "path": "37"
    },
    "142": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x313CE567"
    },
    "147": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "EQ",
      "path": "37"
    },
    "148": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "152": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "DUP1",
      "path": "37"
    },
    "153": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x4AA2011F"
    },
    "158": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "EQ",
      "path": "37"
    },
    "159": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xF2"
    },
    "162": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "163": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "DUP1",
      "path": "37"
    },
    "164": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x50D25BCD"
    },
    "169": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "EQ",
      "path": "37"
    },
    "170": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x12C"
    },
    "173": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "174": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "DUP1",
      "path": "37"
    },
    "175": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x54FD4D50"
    },
    "180": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "EQ",
      "path": "37"
    },
    "181": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x146"
    },
    "184": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "185": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "DUP1",
      "path": "37"
    },
    "186": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x668A0F02"
    },
    "191": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "EQ",
      "path": "37"
    },
    "192": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x14E"
    },
    "195": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "196": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "DUP1",
      "path": "37"
    },
    "197": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x7284E416"
    },
    "202": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "EQ",
      "path": "37"
    },
    "203": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x156"
    },
    "206": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "207": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "208": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "DUP1",
      "path": "37"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        383,
        2620
      ],
      "op": "REVERT",
      "path": "37"
    },
    "212": {
      "offset": [
        491,
        521
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "213": {
      "fn": null,
      "offset": [
        491,
        521
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xDC"
    },
    "216": {
      "fn": null,
      "offset": [
        491,
        521
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2C1"
    },
    "219": {
      "fn": null,
      "jump": "i",
      "offset": [
        491,
        521
      ],
      "op": "JUMP",
      "path": "37"
    },
    "220": {
      "fn": null,
      "offset": [
        491,
        521
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "221": {
      "fn": null,
      "offset": [
        491,
        521
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "223": {
      "fn": null,
      "offset": [
        491,
        521
      ],
      "op": "DUP1",
      "path": "37"
    },
    "224": {
      "fn": null,
      "offset": [
        491,
        521
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "225": {
      "fn": null,
      "offset": [
        491,
        521
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "227": {
      "fn": null,
      "offset": [
        491,
        521
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "228": {
      "fn": null,
      "offset": [
        491,
        521
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "229": {
      "fn": null,
      "offset": [
        491,
        521
      ],
      "op": "AND",
      "path": "37"
    },
    "230": {
      "fn": null,
      "offset": [
        491,
        521
      ],
      "op": "DUP3",
      "path": "37"
    },
    "231": {
      "fn": null,
      "offset": [
        491,
        521
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "232": {
      "fn": null,
      "offset": [
        491,
        521
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "233": {
      "fn": null,
      "offset": [
        491,
        521
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "234": {
      "fn": null,
      "offset": [
        491,
        521
      ],
      "op": "DUP2",
      "path": "37"
    },
    "235": {
      "fn": null,
      "offset": [
        491,
        521
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "236": {
      "fn": null,
      "offset": [
        491,
        521
      ],
      "op": "SUB",
      "path": "37"
    },
    "237": {
      "fn": null,
      "offset": [
        491,
        521
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "239": {
      "fn": null,
      "offset": [
        491,
        521
      ],
      "op": "ADD",
      "path": "37"
    },
    "240": {
      "fn": null,
      "offset": [
        491,
        521
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "241": {
      "fn": null,
      "offset": [
        491,
        521
      ],
      "op": "RETURN",
      "path": "37"
    },
    "242": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "243": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x12A"
    },
    "246": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "248": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "DUP1",
      "path": "37"
    },
    "249": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "250": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "SUB",
      "path": "37"
    },
    "251": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x80"
    },
    "253": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "DUP2",
      "path": "37"
    },
    "254": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "LT",
      "path": "37"
    },
    "255": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "256": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x108"
    },
    "259": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "260": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "262": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "DUP1",
      "path": "37"
    },
    "263": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "REVERT",
      "path": "37"
    },
    "264": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "265": {
      "op": "POP"
    },
    "266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "270": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "272": {
      "op": "SHL"
    },
    "273": {
      "op": "SUB"
    },
    "274": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "DUP2",
      "path": "37"
    },
    "275": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "276": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "AND",
      "path": "37"
    },
    "277": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "278": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "280": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "DUP2",
      "path": "37"
    },
    "281": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "ADD",
      "path": "37"
    },
    "282": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "283": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "284": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "286": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "DUP2",
      "path": "37"
    },
    "287": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "ADD",
      "path": "37"
    },
    "288": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "289": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "290": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x60"
    },
    "292": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "ADD",
      "path": "37"
    },
    "293": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "294": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2CA"
    },
    "297": {
      "fn": "MockV3Aggregator.updateRoundData",
      "jump": "i",
      "offset": [
        1228,
        1618
      ],
      "op": "JUMP",
      "path": "37"
    },
    "298": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "299": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "STOP",
      "path": "37"
    },
    "300": {
      "offset": [
        527,
        553
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "301": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        527,
        553
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x134"
    },
    "304": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        527,
        553
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x314"
    },
    "307": {
      "fn": "MockV3Aggregator.updateRoundData",
      "jump": "i",
      "offset": [
        527,
        553
      ],
      "op": "JUMP",
      "path": "37"
    },
    "308": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        527,
        553
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "309": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        527,
        553
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "311": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        527,
        553
      ],
      "op": "DUP1",
      "path": "37"
    },
    "312": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        527,
        553
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "313": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        527,
        553
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "314": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        527,
        553
      ],
      "op": "DUP3",
      "path": "37"
    },
    "315": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        527,
        553
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "316": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        527,
        553
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "317": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        527,
        553
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "318": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        527,
        553
      ],
      "op": "DUP2",
      "path": "37"
    },
    "319": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        527,
        553
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "320": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        527,
        553
      ],
      "op": "SUB",
      "path": "37"
    },
    "321": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        527,
        553
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "323": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        527,
        553
      ],
      "op": "ADD",
      "path": "37"
    },
    "324": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        527,
        553
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "325": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        527,
        553
      ],
      "op": "RETURN",
      "path": "37"
    },
    "326": {
      "offset": [
        440,
        484
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "327": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        440,
        484
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x134"
    },
    "330": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        440,
        484
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x31A"
    },
    "333": {
      "fn": "MockV3Aggregator.updateRoundData",
      "jump": "i",
      "offset": [
        440,
        484
      ],
      "op": "JUMP",
      "path": "37"
    },
    "334": {
      "offset": [
        595,
        621
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "335": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        595,
        621
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x134"
    },
    "338": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        595,
        621
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x31F"
    },
    "341": {
      "fn": "MockV3Aggregator.updateRoundData",
      "jump": "i",
      "offset": [
        595,
        621
      ],
      "op": "JUMP",
      "path": "37"
    },
    "342": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "343": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x15E"
    },
    "346": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x325"
    },
    "349": {
      "fn": "MockV3Aggregator.description",
      "jump": "i",
      "offset": [
        2491,
        2618
      ],
      "op": "JUMP",
      "path": "37"
    },
    "350": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "351": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "353": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "DUP1",
      "path": "37"
    },
    "354": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "355": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "357": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "DUP1",
      "path": "37"
    },
    "358": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "DUP3",
      "path": "37"
    },
    "359": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "360": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "DUP4",
      "path": "37"
    },
    "361": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "362": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "DUP2",
      "path": "37"
    },
    "363": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "DUP4",
      "path": "37"
    },
    "364": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "ADD",
      "path": "37"
    },
    "365": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "366": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "DUP4",
      "path": "37"
    },
    "367": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "368": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "369": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "370": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "DUP4",
      "path": "37"
    },
    "371": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "372": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "373": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "DUP4",
      "path": "37"
    },
    "374": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "ADD",
      "path": "37"
    },
    "375": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "376": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "DUP6",
      "path": "37"
    },
    "377": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "ADD",
      "path": "37"
    },
    "378": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "379": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "DUP1",
      "path": "37"
    },
    "380": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "DUP4",
      "path": "37"
    },
    "381": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "DUP4",
      "path": "37"
    },
    "382": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "384": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "385": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "DUP4",
      "path": "37"
    },
    "386": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "DUP2",
      "path": "37"
    },
    "387": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "LT",
      "path": "37"
    },
    "388": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "389": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x198"
    },
    "392": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "393": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "DUP2",
      "path": "37"
    },
    "394": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "DUP2",
      "path": "37"
    },
    "395": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "ADD",
      "path": "37"
    },
    "396": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "397": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "DUP4",
      "path": "37"
    },
    "398": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "DUP3",
      "path": "37"
    },
    "399": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "ADD",
      "path": "37"
    },
    "400": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "401": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "403": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "ADD",
      "path": "37"
    },
    "404": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x180"
    },
    "407": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "JUMP",
      "path": "37"
    },
    "408": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "409": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "POP",
      "path": "37"
    },
    "410": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "POP",
      "path": "37"
    },
    "411": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "POP",
      "path": "37"
    },
    "412": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "POP",
      "path": "37"
    },
    "413": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "414": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "POP",
      "path": "37"
    },
    "415": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "416": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "DUP2",
      "path": "37"
    },
    "417": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "ADD",
      "path": "37"
    },
    "418": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "419": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "421": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "AND",
      "path": "37"
    },
    "422": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "DUP1",
      "path": "37"
    },
    "423": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "424": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1C5"
    },
    "427": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "428": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "DUP1",
      "path": "37"
    },
    "429": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "DUP3",
      "path": "37"
    },
    "430": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "SUB",
      "path": "37"
    },
    "431": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "DUP1",
      "path": "37"
    },
    "432": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "433": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "435": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "DUP4",
      "path": "37"
    },
    "436": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "438": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "SUB",
      "path": "37"
    },
    "439": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x100"
    },
    "442": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "EXP",
      "path": "37"
    },
    "443": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "SUB",
      "path": "37"
    },
    "444": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "NOT",
      "path": "37"
    },
    "445": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "AND",
      "path": "37"
    },
    "446": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "DUP2",
      "path": "37"
    },
    "447": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "448": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "450": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "ADD",
      "path": "37"
    },
    "451": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "452": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "POP",
      "path": "37"
    },
    "453": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "454": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "POP",
      "path": "37"
    },
    "455": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "456": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "POP",
      "path": "37"
    },
    "457": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "POP",
      "path": "37"
    },
    "458": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "POP",
      "path": "37"
    },
    "459": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "461": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "462": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "DUP1",
      "path": "37"
    },
    "463": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "464": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "SUB",
      "path": "37"
    },
    "465": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "466": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "RETURN",
      "path": "37"
    },
    "467": {
      "offset": [
        559,
        589
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "468": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        559,
        589
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x134"
    },
    "471": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        559,
        589
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x35C"
    },
    "474": {
      "fn": "MockV3Aggregator.description",
      "jump": "i",
      "offset": [
        559,
        589
      ],
      "op": "JUMP",
      "path": "37"
    },
    "475": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "476": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x201"
    },
    "479": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "481": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "DUP1",
      "path": "37"
    },
    "482": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "483": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "SUB",
      "path": "37"
    },
    "484": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "486": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "DUP2",
      "path": "37"
    },
    "487": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "LT",
      "path": "37"
    },
    "488": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "489": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1F1"
    },
    "492": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "493": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "495": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "DUP1",
      "path": "37"
    },
    "496": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "REVERT",
      "path": "37"
    },
    "497": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "498": {
      "op": "POP"
    },
    "499": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "504": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "506": {
      "op": "SHL"
    },
    "507": {
      "op": "SUB"
    },
    "508": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "AND",
      "path": "37"
    },
    "509": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x362"
    },
    "512": {
      "fn": "MockV3Aggregator.getRoundData",
      "jump": "i",
      "offset": [
        1624,
        2007
      ],
      "op": "JUMP",
      "path": "37"
    },
    "513": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "514": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "516": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "517": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "DUP1",
      "path": "37"
    },
    "518": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "DUP7",
      "path": "37"
    },
    "519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "523": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "525": {
      "op": "SHL"
    },
    "526": {
      "op": "SUB"
    },
    "527": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "AND",
      "path": "37"
    },
    "528": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "DUP2",
      "path": "37"
    },
    "529": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "530": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "532": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "ADD",
      "path": "37"
    },
    "533": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "DUP6",
      "path": "37"
    },
    "534": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "DUP2",
      "path": "37"
    },
    "535": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "536": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "538": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "ADD",
      "path": "37"
    },
    "539": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "DUP5",
      "path": "37"
    },
    "540": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "DUP2",
      "path": "37"
    },
    "541": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "542": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "544": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "ADD",
      "path": "37"
    },
    "545": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "DUP4",
      "path": "37"
    },
    "546": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "DUP2",
      "path": "37"
    },
    "547": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "548": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "550": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "ADD",
      "path": "37"
    },
    "551": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "DUP3",
      "path": "37"
    },
    "552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "556": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "558": {
      "op": "SHL"
    },
    "559": {
      "op": "SUB"
    },
    "560": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "AND",
      "path": "37"
    },
    "561": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "DUP2",
      "path": "37"
    },
    "562": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "563": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "565": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "ADD",
      "path": "37"
    },
    "566": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "SWAP6",
      "path": "37"
    },
    "567": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "POP",
      "path": "37"
    },
    "568": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "POP",
      "path": "37"
    },
    "569": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "POP",
      "path": "37"
    },
    "570": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "POP",
      "path": "37"
    },
    "571": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "POP",
      "path": "37"
    },
    "572": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "POP",
      "path": "37"
    },
    "573": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "575": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "576": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "DUP1",
      "path": "37"
    },
    "577": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "578": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "SUB",
      "path": "37"
    },
    "579": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "580": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "RETURN",
      "path": "37"
    },
    "581": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        924,
        1222
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "582": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        924,
        1222
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x12A"
    },
    "585": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        924,
        1222
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "587": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        924,
        1222
      ],
      "op": "DUP1",
      "path": "37"
    },
    "588": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        924,
        1222
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "589": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        924,
        1222
      ],
      "op": "SUB",
      "path": "37"
    },
    "590": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        924,
        1222
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "592": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        924,
        1222
      ],
      "op": "DUP2",
      "path": "37"
    },
    "593": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        924,
        1222
      ],
      "op": "LT",
      "path": "37"
    },
    "594": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        924,
        1222
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "595": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        924,
        1222
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x25B"
    },
    "598": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        924,
        1222
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "599": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        924,
        1222
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "601": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        924,
        1222
      ],
      "op": "DUP1",
      "path": "37"
    },
    "602": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        924,
        1222
      ],
      "op": "REVERT",
      "path": "37"
    },
    "603": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        924,
        1222
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "604": {
      "op": "POP"
    },
    "605": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        924,
        1222
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "606": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        924,
        1222
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x398"
    },
    "609": {
      "fn": "MockV3Aggregator.updateAnswer",
      "jump": "i",
      "offset": [
        924,
        1222
      ],
      "op": "JUMP",
      "path": "37"
    },
    "610": {
      "offset": [
        730,
        777
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "611": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        730,
        777
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x134"
    },
    "614": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        730,
        777
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "616": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        730,
        777
      ],
      "op": "DUP1",
      "path": "37"
    },
    "617": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        730,
        777
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "618": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        730,
        777
      ],
      "op": "SUB",
      "path": "37"
    },
    "619": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        730,
        777
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "621": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        730,
        777
      ],
      "op": "DUP2",
      "path": "37"
    },
    "622": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        730,
        777
      ],
      "op": "LT",
      "path": "37"
    },
    "623": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        730,
        777
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "624": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        730,
        777
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x278"
    },
    "627": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        730,
        777
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "628": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        730,
        777
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "630": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        730,
        777
      ],
      "op": "DUP1",
      "path": "37"
    },
    "631": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        730,
        777
      ],
      "op": "REVERT",
      "path": "37"
    },
    "632": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        730,
        777
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "633": {
      "op": "POP"
    },
    "634": {
      "offset": [
        730,
        777
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "635": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        730,
        777
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3DF"
    },
    "638": {
      "fn": "MockV3Aggregator.updateAnswer",
      "jump": "i",
      "offset": [
        730,
        777
      ],
      "op": "JUMP",
      "path": "37"
    },
    "639": {
      "offset": [
        628,
        671
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "640": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        628,
        671
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x134"
    },
    "643": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        628,
        671
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "645": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        628,
        671
      ],
      "op": "DUP1",
      "path": "37"
    },
    "646": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        628,
        671
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "647": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        628,
        671
      ],
      "op": "SUB",
      "path": "37"
    },
    "648": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        628,
        671
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "650": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        628,
        671
      ],
      "op": "DUP2",
      "path": "37"
    },
    "651": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        628,
        671
      ],
      "op": "LT",
      "path": "37"
    },
    "652": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        628,
        671
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "653": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        628,
        671
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x295"
    },
    "656": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        628,
        671
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "657": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        628,
        671
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "659": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        628,
        671
      ],
      "op": "DUP1",
      "path": "37"
    },
    "660": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        628,
        671
      ],
      "op": "REVERT",
      "path": "37"
    },
    "661": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        628,
        671
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "662": {
      "op": "POP"
    },
    "663": {
      "offset": [
        628,
        671
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "664": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        628,
        671
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3F1"
    },
    "667": {
      "fn": "MockV3Aggregator.updateAnswer",
      "jump": "i",
      "offset": [
        628,
        671
      ],
      "op": "JUMP",
      "path": "37"
    },
    "668": {
      "offset": [
        677,
        724
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "669": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        677,
        724
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x134"
    },
    "672": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        677,
        724
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "674": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        677,
        724
      ],
      "op": "DUP1",
      "path": "37"
    },
    "675": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        677,
        724
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "676": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        677,
        724
      ],
      "op": "SUB",
      "path": "37"
    },
    "677": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        677,
        724
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "679": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        677,
        724
      ],
      "op": "DUP2",
      "path": "37"
    },
    "680": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        677,
        724
      ],
      "op": "LT",
      "path": "37"
    },
    "681": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        677,
        724
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "682": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        677,
        724
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2B2"
    },
    "685": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        677,
        724
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "686": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        677,
        724
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "688": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        677,
        724
      ],
      "op": "DUP1",
      "path": "37"
    },
    "689": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        677,
        724
      ],
      "op": "REVERT",
      "path": "37"
    },
    "690": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        677,
        724
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "691": {
      "op": "POP"
    },
    "692": {
      "offset": [
        677,
        724
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "693": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        677,
        724
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x403"
    },
    "696": {
      "fn": "MockV3Aggregator.updateAnswer",
      "jump": "i",
      "offset": [
        677,
        724
      ],
      "op": "JUMP",
      "path": "37"
    },
    "697": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2013,
        2485
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "698": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2013,
        2485
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x201"
    },
    "701": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2013,
        2485
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x415"
    },
    "704": {
      "fn": "MockV3Aggregator.latestRoundData",
      "jump": "i",
      "offset": [
        2013,
        2485
      ],
      "op": "JUMP",
      "path": "37"
    },
    "705": {
      "offset": [
        491,
        521
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "706": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        491,
        521
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "708": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        491,
        521
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "709": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        491,
        521
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "711": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        491,
        521
      ],
      "op": "AND",
      "path": "37"
    },
    "712": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        491,
        521
      ],
      "op": "DUP2",
      "path": "37"
    },
    "713": {
      "fn": "MockV3Aggregator.latestRoundData",
      "jump": "o",
      "offset": [
        491,
        521
      ],
      "op": "JUMP",
      "path": "37"
    },
    "714": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1228,
        1618
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "719": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "721": {
      "op": "SHL"
    },
    "722": {
      "op": "SUB"
    },
    "723": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1381,
        1403
      ],
      "op": "SWAP1",
      "path": "37",
      "statement": 0
    },
    "724": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1381,
        1403
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "725": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1381,
        1403
      ],
      "op": "AND",
      "path": "37"
    },
    "726": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1381,
        1392
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "728": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1381,
        1403
      ],
      "op": "DUP2",
      "path": "37"
    },
    "729": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1381,
        1403
      ],
      "op": "DUP2",
      "path": "37"
    },
    "730": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1381,
        1403
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "731": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1413,
        1425
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 1,
      "value": "0x1"
    },
    "733": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1413,
        1435
      ],
      "op": "DUP5",
      "path": "37"
    },
    "734": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1413,
        1435
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "735": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1413,
        1435
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "736": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "738": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1445,
        1473
      ],
      "op": "DUP4",
      "path": "37",
      "statement": 2
    },
    "739": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1445,
        1473
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "740": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1445,
        1473
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "741": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "743": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1483,
        1505
      ],
      "op": "SWAP2",
      "path": "37",
      "statement": 3
    },
    "744": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1483,
        1505
      ],
      "op": "DUP3",
      "path": "37"
    },
    "745": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1483,
        1505
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "746": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1483,
        1492
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "748": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "750": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1483,
        1505
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "751": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1483,
        1505
      ],
      "op": "DUP2",
      "path": "37"
    },
    "752": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1483,
        1505
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "753": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "755": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1483,
        1505
      ],
      "op": "DUP1",
      "path": "37"
    },
    "756": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1483,
        1505
      ],
      "op": "DUP5",
      "path": "37"
    },
    "757": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1483,
        1505
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "758": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1483,
        1515
      ],
      "op": "SWAP6",
      "path": "37"
    },
    "759": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1483,
        1515
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "760": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1483,
        1515
      ],
      "op": "SWAP6",
      "path": "37"
    },
    "761": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1483,
        1515
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "762": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1538,
        1549
      ],
      "op": "DUP2",
      "path": "37",
      "statement": 4
    },
    "763": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1538,
        1549
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "764": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1525,
        1550
      ],
      "op": "DUP4",
      "path": "37"
    },
    "765": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1525,
        1550
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "766": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1525,
        1537
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x5"
    },
    "768": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1525,
        1550
      ],
      "op": "DUP2",
      "path": "37"
    },
    "769": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1525,
        1550
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "770": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1525,
        1550
      ],
      "op": "DUP5",
      "path": "37"
    },
    "771": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1525,
        1550
      ],
      "op": "DUP4",
      "path": "37"
    },
    "772": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1525,
        1550
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "773": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1525,
        1563
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "774": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1525,
        1563
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "775": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1525,
        1563
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "776": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1525,
        1563
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "777": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1586,
        1597
      ],
      "op": "SLOAD",
      "path": "37",
      "statement": 5
    },
    "778": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1573,
        1598
      ],
      "op": "DUP2",
      "path": "37"
    },
    "779": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1573,
        1598
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "780": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1573,
        1585
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x6"
    },
    "782": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1573,
        1598
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "783": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1573,
        1598
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "784": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1573,
        1598
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "785": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1573,
        1598
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "786": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1573,
        1611
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "787": {
      "fn": "MockV3Aggregator.updateRoundData",
      "jump": "o",
      "offset": [
        1228,
        1618
      ],
      "op": "JUMP",
      "path": "37"
    },
    "788": {
      "offset": [
        527,
        553
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "789": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        527,
        553
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "791": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        527,
        553
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "792": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        527,
        553
      ],
      "op": "DUP2",
      "path": "37"
    },
    "793": {
      "fn": "MockV3Aggregator.updateRoundData",
      "jump": "o",
      "offset": [
        527,
        553
      ],
      "op": "JUMP",
      "path": "37"
    },
    "794": {
      "offset": [
        440,
        484
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "795": {
      "offset": [
        483,
        484
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "797": {
      "offset": [
        440,
        484
      ],
      "op": "DUP2",
      "path": "37"
    },
    "798": {
      "fn": "MockV3Aggregator.updateRoundData",
      "jump": "o",
      "offset": [
        440,
        484
      ],
      "op": "JUMP",
      "path": "37"
    },
    "799": {
      "offset": [
        595,
        621
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "800": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        595,
        621
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "802": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        595,
        621
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "803": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        595,
        621
      ],
      "op": "DUP2",
      "path": "37"
    },
    "804": {
      "fn": "MockV3Aggregator.updateRoundData",
      "jump": "o",
      "offset": [
        595,
        621
      ],
      "op": "JUMP",
      "path": "37"
    },
    "805": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "806": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2571,
        2611
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 6,
      "value": "0x40"
    },
    "808": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2571,
        2611
      ],
      "op": "DUP1",
      "path": "37"
    },
    "809": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2571,
        2611
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "810": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2571,
        2611
      ],
      "op": "DUP1",
      "path": "37"
    },
    "811": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2571,
        2611
      ],
      "op": "DUP3",
      "path": "37"
    },
    "812": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2571,
        2611
      ],
      "op": "ADD",
      "path": "37"
    },
    "813": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2571,
        2611
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "814": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2571,
        2611
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "815": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2571,
        2611
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "816": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2571,
        2611
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "818": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2571,
        2611
      ],
      "op": "DUP2",
      "path": "37"
    },
    "819": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2571,
        2611
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "820": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2571,
        2611
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0x76302E362F74657374732F4D6F636B563341676772656761746F722E736F6C00"
    },
    "853": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2571,
        2611
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "855": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2571,
        2611
      ],
      "op": "DUP3",
      "path": "37"
    },
    "856": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2571,
        2611
      ],
      "op": "ADD",
      "path": "37"
    },
    "857": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2571,
        2611
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "858": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2491,
        2618
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "859": {
      "fn": "MockV3Aggregator.description",
      "jump": "o",
      "offset": [
        2491,
        2618
      ],
      "op": "JUMP",
      "path": "37"
    },
    "860": {
      "offset": [
        559,
        589
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "861": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        559,
        589
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "863": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        559,
        589
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "864": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        559,
        589
      ],
      "op": "DUP2",
      "path": "37"
    },
    "865": {
      "fn": "MockV3Aggregator.description",
      "jump": "o",
      "offset": [
        559,
        589
      ],
      "op": "JUMP",
      "path": "37"
    },
    "866": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1624,
        2007
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "873": {
      "op": "SHL"
    },
    "874": {
      "op": "SUB"
    },
    "875": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1922,
        1941
      ],
      "op": "DUP2",
      "path": "37",
      "statement": 7
    },
    "876": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1922,
        1941
      ],
      "op": "AND",
      "path": "37"
    },
    "877": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1740,
        1754
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "879": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1922,
        1941
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "880": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1922,
        1941
      ],
      "op": "DUP2",
      "path": "37"
    },
    "881": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1922,
        1941
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "882": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1922,
        1931
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "884": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1922,
        1941
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "886": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1922,
        1941
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "887": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1922,
        1941
      ],
      "op": "DUP2",
      "path": "37"
    },
    "888": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1922,
        1941
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "889": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1922,
        1941
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "891": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1922,
        1941
      ],
      "op": "DUP1",
      "path": "37"
    },
    "892": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1922,
        1941
      ],
      "op": "DUP4",
      "path": "37"
    },
    "893": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1922,
        1941
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "894": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1922,
        1941
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "895": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1943,
        1955
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x6"
    },
    "897": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1943,
        1965
      ],
      "op": "DUP4",
      "path": "37"
    },
    "898": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1943,
        1965
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "899": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1943,
        1965
      ],
      "op": "DUP2",
      "path": "37"
    },
    "900": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1943,
        1965
      ],
      "op": "DUP5",
      "path": "37"
    },
    "901": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1943,
        1965
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "902": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1943,
        1965
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "903": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1967,
        1979
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x5"
    },
    "905": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1967,
        1989
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "906": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1967,
        1989
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "907": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1967,
        1989
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "908": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1967,
        1989
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "909": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1967,
        1989
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "910": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1967,
        1989
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "911": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1922,
        1941
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "912": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1922,
        1941
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "913": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1922,
        1941
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "914": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1922,
        1941
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "915": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1943,
        1965
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "916": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1943,
        1965
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "917": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1922,
        1941
      ],
      "op": "DUP5",
      "path": "37"
    },
    "918": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1922,
        1941
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "919": {
      "fn": "MockV3Aggregator.getRoundData",
      "jump": "o",
      "offset": [
        1624,
        2007
      ],
      "op": "JUMP",
      "path": "37"
    },
    "920": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        924,
        1222
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "921": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        979,
        991
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 8,
      "value": "0x1"
    },
    "923": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        979,
        1001
      ],
      "op": "DUP2",
      "path": "37"
    },
    "924": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        979,
        1001
      ],
      "op": "DUP2",
      "path": "37"
    },
    "925": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        979,
        1001
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "926": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1029,
        1044
      ],
      "op": "TIMESTAMP",
      "path": "37",
      "statement": 9
    },
    "927": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1011,
        1026
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "929": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1011,
        1044
      ],
      "op": "DUP2",
      "path": "37"
    },
    "930": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1011,
        1044
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "931": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1011,
        1044
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "932": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1054,
        1065
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 10,
      "value": "0x3"
    },
    "934": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1054,
        1067
      ],
      "op": "DUP1",
      "path": "37"
    },
    "935": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1054,
        1067
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "936": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1054,
        1067
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "937": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1054,
        1067
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "938": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1054,
        1067
      ],
      "op": "ADD",
      "path": "37"
    },
    "939": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1054,
        1067
      ],
      "op": "DUP1",
      "path": "37"
    },
    "940": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1054,
        1067
      ],
      "op": "DUP4",
      "path": "37"
    },
    "941": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1054,
        1067
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "944": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1077,
        1099
      ],
      "op": "SWAP1",
      "path": "37",
      "statement": 11
    },
    "945": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1077,
        1099
      ],
      "op": "DUP2",
      "path": "37"
    },
    "946": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1077,
        1099
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "947": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1077,
        1086
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "949": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1077,
        1099
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "951": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1077,
        1099
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "952": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1077,
        1099
      ],
      "op": "DUP2",
      "path": "37"
    },
    "953": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1077,
        1099
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "954": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1077,
        1099
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "956": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1077,
        1099
      ],
      "op": "DUP1",
      "path": "37"
    },
    "957": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1077,
        1099
      ],
      "op": "DUP4",
      "path": "37"
    },
    "958": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1077,
        1099
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "959": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1077,
        1109
      ],
      "op": "SWAP6",
      "path": "37"
    },
    "960": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1077,
        1109
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "961": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1077,
        1109
      ],
      "op": "SWAP6",
      "path": "37"
    },
    "962": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1077,
        1109
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "963": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1132,
        1143
      ],
      "op": "DUP4",
      "path": "37",
      "statement": 12
    },
    "964": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1132,
        1143
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "965": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1119,
        1144
      ],
      "op": "DUP3",
      "path": "37"
    },
    "966": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1119,
        1144
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "967": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1119,
        1131
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x5"
    },
    "969": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1119,
        1144
      ],
      "op": "DUP2",
      "path": "37"
    },
    "970": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1119,
        1144
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "971": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1119,
        1144
      ],
      "op": "DUP5",
      "path": "37"
    },
    "972": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1119,
        1144
      ],
      "op": "DUP3",
      "path": "37"
    },
    "973": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1119,
        1144
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "974": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1119,
        1162
      ],
      "op": "DUP4",
      "path": "37"
    },
    "975": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1119,
        1162
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "976": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1119,
        1162
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "977": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1185,
        1196
      ],
      "op": "SWAP3",
      "path": "37",
      "statement": 13
    },
    "978": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1185,
        1196
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "979": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1172,
        1197
      ],
      "op": "DUP2",
      "path": "37"
    },
    "980": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1172,
        1197
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "981": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1172,
        1184
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x6"
    },
    "983": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1172,
        1197
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "984": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1172,
        1197
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "985": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1172,
        1197
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "986": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1172,
        1197
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "987": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1172,
        1197
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "988": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1172,
        1197
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "989": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1172,
        1215
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "990": {
      "fn": "MockV3Aggregator.updateAnswer",
      "jump": "o",
      "offset": [
        924,
        1222
      ],
      "op": "JUMP",
      "path": "37"
    },
    "991": {
      "offset": [
        730,
        777
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "992": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        730,
        777
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x6"
    },
    "994": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        730,
        777
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "996": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        730,
        777
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "997": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        730,
        777
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "999": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        730,
        777
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1000": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        730,
        777
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1001": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        730,
        777
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1002": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        730,
        777
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "1004": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        730,
        777
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1005": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        730,
        777
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "1006": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        730,
        777
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "1007": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        730,
        777
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1008": {
      "fn": "MockV3Aggregator.updateAnswer",
      "jump": "o",
      "offset": [
        730,
        777
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1009": {
      "offset": [
        628,
        671
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1010": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        628,
        671
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1012": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        628,
        671
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "1014": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        628,
        671
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1015": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        628,
        671
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1017": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        628,
        671
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1018": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        628,
        671
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1019": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        628,
        671
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1020": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        628,
        671
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "1022": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        628,
        671
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1023": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        628,
        671
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "1024": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        628,
        671
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "1025": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        628,
        671
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1026": {
      "fn": "MockV3Aggregator.updateAnswer",
      "jump": "o",
      "offset": [
        628,
        671
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1027": {
      "offset": [
        677,
        724
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1028": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        677,
        724
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x5"
    },
    "1030": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        677,
        724
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "1032": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        677,
        724
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1033": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        677,
        724
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1035": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        677,
        724
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1036": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        677,
        724
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1037": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        677,
        724
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1038": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        677,
        724
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "1040": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        677,
        724
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1041": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        677,
        724
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "1042": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        677,
        724
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "1043": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        677,
        724
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1044": {
      "fn": "MockV3Aggregator.updateAnswer",
      "jump": "o",
      "offset": [
        677,
        724
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1045": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2013,
        2485
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1046": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2309,
        2320
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 14,
      "value": "0x3"
    },
    "1048": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2309,
        2320
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "1049": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2117,
        2131
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1051": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2335,
        2357
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1052": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2335,
        2357
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1053": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2335,
        2357
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1054": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2335,
        2344
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1056": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2335,
        2357
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "1058": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2335,
        2357
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1059": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2335,
        2357
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1060": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2335,
        2357
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1061": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2335,
        2357
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "1063": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2335,
        2357
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1064": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2335,
        2357
      ],
      "op": "DUP4",
      "path": "37"
    },
    "1065": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2335,
        2357
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "1066": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2335,
        2357
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "1067": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2371,
        2383
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x6"
    },
    "1069": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2371,
        2396
      ],
      "op": "DUP4",
      "path": "37"
    },
    "1070": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2371,
        2396
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1071": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2371,
        2396
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1072": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2371,
        2396
      ],
      "op": "DUP5",
      "path": "37"
    },
    "1073": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2371,
        2396
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "1074": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2371,
        2396
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "1075": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2410,
        2422
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x5"
    },
    "1077": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2410,
        2435
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1078": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2410,
        2435
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "1079": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2410,
        2435
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1080": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2410,
        2435
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "1081": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2410,
        2435
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "1082": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2410,
        2435
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "1083": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2309,
        2320
      ],
      "op": "DUP4",
      "path": "37"
    },
    "1084": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2013,
        2485
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1085": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2013,
        2485
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "1086": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2013,
        2485
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "1087": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2013,
        2485
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "1088": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2013,
        2485
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "1089": {
      "fn": "MockV3Aggregator.latestRoundData",
      "jump": "o",
      "offset": [
        2013,
        2485
      ],
      "op": "JUMP",
      "path": "37"
    }
  },
  "sha1": "a6b3278de644ffff53040782d6085d15e0f3281e",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport \"../../chainlink_contracts/AggregatorV3Interface.sol\";\n\n/**\n * @title MockV3Aggregator\n * @notice Based on the FluxAggregator contract\n * @notice Use this contract when you need to test\n * other contract's ability to read data from an\n * aggregator contract, but how the aggregator got\n * its answer is unimportant\n */\ncontract MockV3Aggregator is AggregatorV3Interface {\n    uint256 public constant override version = 0;\n\n    uint8 public override decimals;\n    int256 public latestAnswer;\n    uint256 public latestTimestamp;\n    uint256 public latestRound;\n\n    mapping(uint256 => int256) public getAnswer;\n    mapping(uint256 => uint256) public getTimestamp;\n    mapping(uint256 => uint256) public getStartedAt;\n\n    constructor(uint8 _decimals, int256 _initialAnswer) public {\n        decimals = _decimals;\n        updateAnswer(_initialAnswer);\n    }\n\n    function updateAnswer(int256 _answer) public {\n        latestAnswer = _answer;\n        latestTimestamp = block.timestamp;\n        latestRound++;\n        getAnswer[latestRound] = _answer;\n        getTimestamp[latestRound] = block.timestamp;\n        getStartedAt[latestRound] = block.timestamp;\n    }\n\n    function updateRoundData(\n        uint80 _roundId,\n        int256 _answer,\n        uint256 _timestamp,\n        uint256 _startedAt\n    ) public {\n        latestRound = _roundId;\n        latestAnswer = _answer;\n        latestTimestamp = _timestamp;\n        getAnswer[latestRound] = _answer;\n        getTimestamp[latestRound] = _timestamp;\n        getStartedAt[latestRound] = _startedAt;\n    }\n\n    function getRoundData(uint80 _roundId)\n        external\n        view\n        override\n        returns (\n            uint80 roundId,\n            int256 answer,\n            uint256 startedAt,\n            uint256 updatedAt,\n            uint80 answeredInRound\n        )\n    {\n        return (_roundId, getAnswer[_roundId], getStartedAt[_roundId], getTimestamp[_roundId], _roundId);\n    }\n\n    function latestRoundData()\n        external\n        view\n        override\n        returns (\n            uint80 roundId,\n            int256 answer,\n            uint256 startedAt,\n            uint256 updatedAt,\n            uint80 answeredInRound\n        )\n    {\n        return (\n            uint80(latestRound),\n            getAnswer[latestRound],\n            getStartedAt[latestRound],\n            getTimestamp[latestRound],\n            uint80(latestRound)\n        );\n    }\n\n    function description() external view override returns (string memory) {\n        return \"v0.6/tests/MockV3Aggregator.sol\";\n    }\n}\n",
  "sourceMap": "383:2237:37:-:0;;;784:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;784:134:37;;;;;;;853:8;:20;;-1:-1:-1;;853:20:37;;;;;;;883:28;784:134;883:12;:28::i;:::-;784:134;;383:2237;;924:298;979:12;:22;;;1029:15;1011;:33;;;1054:11;:13;;;;;;;;-1:-1:-1;1077:22:37;;;:9;:22;;;;;;;;:32;;;;1132:11;;1119:25;;:12;:25;;;;;:43;;;1185:11;;1172:25;;:12;:25;;;;;;:43;924:298::o;383:2237::-;;;;;;;",
  "sourcePath": "contracts/test_contracts/mocks/MockV3Aggregator.sol",
  "type": "contract"
}