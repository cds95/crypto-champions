{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "keyhash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "vrfCoordinator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "linkToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "minigameFactoryRegistry",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "elderId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "ElderSpiritMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "ElderSpiritsBurned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "HeroMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_NUMBER_OF_ELDERS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "affinities",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "claimReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenTicker",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "feedAddress",
          "type": "address"
        }
      ],
      "name": "createAffinity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentPhase",
      "outputs": [
        {
          "internalType": "enum CryptoChampions.Phase",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentPhaseStartTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentRound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "winningAffinity",
          "type": "string"
        }
      ],
      "name": "declareRoundWinner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "delegatedTransferInGameTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "devFund",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "elderMintPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eldersInGame",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "affinity",
          "type": "string"
        }
      ],
      "name": "getAffinityFeedAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "elderId",
          "type": "uint256"
        }
      ],
      "name": "getElderOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "round",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "elderId",
          "type": "uint256"
        }
      ],
      "name": "getElderSpawnsAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "elderId",
          "type": "uint256"
        }
      ],
      "name": "getElderSpirit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "getHeroGameData",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "getHeroLore",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "round",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "elderId",
          "type": "uint256"
        }
      ],
      "name": "getHeroMintPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "getHeroOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "getHeroStats",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "getHeroTraitsSkills",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "getHeroVisuals",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "getHeroVitals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNumEldersInGame",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "heroesMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "raceId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "classId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "affinity",
          "type": "string"
        }
      ],
      "name": "mintElderSpirit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "elderId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "heroName",
          "type": "string"
        }
      ],
      "name": "mintHero",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "randomness",
          "type": "uint256"
        }
      ],
      "name": "rawFulfillRandomness",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refreshPhase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsPoolAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "setElderMintPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum CryptoChampions.Phase",
          "name": "phase",
          "type": "uint8"
        }
      ],
      "name": "setPhase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferInGameTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "winningAffinitiesByRound",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/AccessControl.sol",
    "1": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/introspection/ERC165.sol",
    "10": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Context.sol",
    "11": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/EnumerableSet.sol",
    "12": "contracts/CryptoChampions.sol",
    "13": "contracts/chainlink_contracts/AggregatorV3Interface.sol",
    "14": "contracts/chainlink_contracts/LinkTokenInterface.sol",
    "15": "contracts/chainlink_contracts/VRFConsumerBase.sol",
    "16": "contracts/chainlink_contracts/VRFRequestIDBase.sol",
    "17": "contracts/minigames/Minigame.sol",
    "18": "contracts/minigames/games/priceWars/PriceWars.sol",
    "19": "contracts/minigames/games/priceWars/PriceWarsFactory.sol",
    "2": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/introspection/IERC165.sol",
    "21": "interfaces/ICryptoChampions.sol",
    "22": "interfaces/IMinigameFactoryRegistry.sol",
    "3": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
    "4": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SignedSafeMath.sol",
    "5": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/ERC1155.sol",
    "6": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/IERC1155.sol",
    "7": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/IERC1155MetadataURI.sol",
    "8": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/IERC1155Receiver.sol",
    "9": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/CryptoChampions.sol",
    "exportedSymbols": {
      "CryptoChampions": [
        2343
      ]
    },
    "id": 2344,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:12"
      },
      {
        "absolutePath": "interfaces/ICryptoChampions.sol",
        "file": "../interfaces/ICryptoChampions.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 2344,
        "sourceUnit": 4715,
        "src": "64:44:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IMinigameFactoryRegistry.sol",
        "file": "../interfaces/IMinigameFactoryRegistry.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 2344,
        "sourceUnit": 4732,
        "src": "109:52:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/chainlink_contracts/AggregatorV3Interface.sol",
        "file": "./chainlink_contracts/AggregatorV3Interface.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 2344,
        "sourceUnit": 4319,
        "src": "162:57:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/chainlink_contracts/VRFConsumerBase.sol",
        "file": "./chainlink_contracts/VRFConsumerBase.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 2344,
        "sourceUnit": 4442,
        "src": "220:51:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/minigames/games/priceWars/PriceWarsFactory.sol",
        "file": "./minigames/games/priceWars/PriceWarsFactory.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 2344,
        "sourceUnit": 2492,
        "src": "272:58:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/minigames/games/priceWars/PriceWars.sol",
        "file": "./minigames/games/priceWars/PriceWars.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 2344,
        "sourceUnit": 2454,
        "src": "331:51:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/AccessControl.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/AccessControl.sol",
        "id": 8,
        "nodeType": "ImportDirective",
        "scope": 2344,
        "sourceUnit": 2910,
        "src": "384:86:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "id": 9,
        "nodeType": "ImportDirective",
        "scope": 2344,
        "sourceUnit": 3265,
        "src": "471:79:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/ERC1155.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/ERC1155.sol",
        "id": 10,
        "nodeType": "ImportDirective",
        "scope": 2344,
        "sourceUnit": 4273,
        "src": "551:87:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12,
              "name": "ICryptoChampions",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4714,
              "src": "771:16:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICryptoChampions_$4714",
                "typeString": "contract ICryptoChampions"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "771:16:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 14,
              "name": "AccessControl",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2909,
              "src": "789:13:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccessControl_$2909",
                "typeString": "contract AccessControl"
              }
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "789:13:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16,
              "name": "ERC1155",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4272,
              "src": "804:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155_$4272",
                "typeString": "contract ERC1155"
              }
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "804:7:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 18,
              "name": "VRFConsumerBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4441,
              "src": "813:15:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VRFConsumerBase_$4441",
                "typeString": "contract VRFConsumerBase"
              }
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "813:15:12"
          }
        ],
        "contractDependencies": [
          2909,
          4272,
          4441,
          4714,
          5400,
          5949,
          6071,
          6086,
          6272,
          6284
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 11,
          "nodeType": "StructuredDocumentation",
          "src": "640:103:12",
          "text": "@title Crypto Champions Interface\n @author Oozyx\n @notice This is the crypto champions class"
        },
        "fullyImplemented": true,
        "id": 2343,
        "linearizedBaseContracts": [
          2343,
          4441,
          6272,
          4272,
          6086,
          6071,
          5949,
          6284,
          2909,
          5400,
          4714
        ],
        "name": "CryptoChampions",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 22,
            "libraryName": {
              "contractScope": null,
              "id": 20,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3264,
              "src": "841:8:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3264",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "835:27:12",
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "854:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 25,
            "libraryName": {
              "contractScope": null,
              "id": 23,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3264,
              "src": "873:8:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3264",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "867:25:12",
            "typeName": {
              "id": 24,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "886:5:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            }
          },
          {
            "canonicalName": "CryptoChampions.Phase",
            "id": 28,
            "members": [
              {
                "id": 26,
                "name": "SETUP",
                "nodeType": "EnumValue",
                "src": "1043:5:12"
              },
              {
                "id": 27,
                "name": "ACTION",
                "nodeType": "EnumValue",
                "src": "1050:6:12"
              }
            ],
            "name": "Phase",
            "nodeType": "EnumDefinition",
            "src": "1030:28:12"
          },
          {
            "constant": false,
            "functionSelector": "055ad42e",
            "id": 30,
            "mutability": "mutable",
            "name": "currentPhase",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "1109:25:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_Phase_$28",
              "typeString": "enum CryptoChampions.Phase"
            },
            "typeName": {
              "contractScope": null,
              "id": 29,
              "name": "Phase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 28,
              "src": "1109:5:12",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Phase_$28",
                "typeString": "enum CryptoChampions.Phase"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 37,
            "mutability": "constant",
            "name": "NUM_TOKENS_MINTED",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "1201:58:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 31,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1201:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_500000000000000000000_by_1",
                "typeString": "int_const 500000000000000000000"
              },
              "id": 36,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "353030",
                "id": 32,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1247:3:12",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_500_by_1",
                  "typeString": "int_const 500"
                },
                "value": "500"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "id": 35,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "hexValue": "3130",
                  "id": 33,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1253:2:12",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "argumentTypes": null,
                  "hexValue": "3138",
                  "id": 34,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1257:2:12",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_18_by_1",
                    "typeString": "int_const 18"
                  },
                  "value": "18"
                },
                "src": "1253:6:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                }
              },
              "src": "1247:12:12",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500000000000000000000_by_1",
                "typeString": "int_const 500000000000000000000"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 40,
            "mutability": "mutable",
            "name": "SETUP_PHASE_DURATION",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "1308:49:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 38,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1308:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "32",
              "id": 39,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1348:9:12",
              "subdenomination": "seconds",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 43,
            "mutability": "mutable",
            "name": "ACTION_PHASE_DURATION",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "1363:50:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 41,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1363:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "32",
              "id": 42,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1404:9:12",
              "subdenomination": "seconds",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "010a768e",
            "id": 45,
            "mutability": "mutable",
            "name": "currentPhaseStartTime",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "1456:36:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 44,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1456:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 50,
            "mutability": "constant",
            "name": "ROLE_OWNER",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "1561:62:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 46,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1561:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "524f4c455f4f574e4552",
                  "id": 48,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1610:12:12",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f4e1c871d5fdd0aee1cd182666698a4492b24c6832aac230d07b11046af5a89",
                    "typeString": "literal_string \"ROLE_OWNER\""
                  },
                  "value": "ROLE_OWNER"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f4e1c871d5fdd0aee1cd182666698a4492b24c6832aac230d07b11046af5a89",
                    "typeString": "literal_string \"ROLE_OWNER\""
                  }
                ],
                "id": 47,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1600:9:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 49,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1600:23:12",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 55,
            "mutability": "constant",
            "name": "ROLE_ADMIN",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "1710:62:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 51,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1710:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "524f4c455f41444d494e",
                  "id": 53,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1759:12:12",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096",
                    "typeString": "literal_string \"ROLE_ADMIN\""
                  },
                  "value": "ROLE_ADMIN"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096",
                    "typeString": "literal_string \"ROLE_ADMIN\""
                  }
                ],
                "id": 52,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1749:9:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 54,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1749:23:12",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 60,
            "mutability": "constant",
            "name": "ROLE_GAME_ADMIN",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "1820:72:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 56,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1820:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "524f4c455f47414d455f41444d494e",
                  "id": 58,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1874:17:12",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_ae0c232b87105e0a8134f8b92146dcd1d99373d32394be9d70f700f90b3a3db3",
                    "typeString": "literal_string \"ROLE_GAME_ADMIN\""
                  },
                  "value": "ROLE_GAME_ADMIN"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_ae0c232b87105e0a8134f8b92146dcd1d99373d32394be9d70f700f90b3a3db3",
                    "typeString": "literal_string \"ROLE_GAME_ADMIN\""
                  }
                ],
                "id": 57,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1864:9:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 59,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1864:28:12",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 63,
            "mutability": "constant",
            "name": "IN_GAME_CURRENCY_ID",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "1943:49:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 61,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1943:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 62,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1991:1:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 66,
            "mutability": "constant",
            "name": "HERO_MINT_ROYALTY_PERCENT",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "2107:54:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 64,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "2107:5:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3235",
              "id": 65,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2159:2:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_25_by_1",
                "typeString": "int_const 25"
              },
              "value": "25"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 69,
            "mutability": "constant",
            "name": "HERO_MINT_DEV_PERCENT",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "2167:50:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 67,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "2167:5:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3235",
              "id": 68,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2215:2:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_25_by_1",
                "typeString": "int_const 25"
              },
              "value": "25"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "d6303cce",
            "id": 72,
            "mutability": "mutable",
            "name": "rewardsPoolAmount",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "2279:36:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 70,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2279:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 71,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2314:1:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4390d2a8",
            "id": 75,
            "mutability": "mutable",
            "name": "devFund",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "2373:26:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 73,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2373:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 74,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2398:1:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 78,
            "mutability": "mutable",
            "name": "_heroRewardsShare",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "2509:38:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 76,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2509:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 77,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2546:1:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 81,
            "mutability": "constant",
            "name": "PRICE_WARS_ID",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "2600:53:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 79,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2600:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "50524943455f57415253",
              "id": 80,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2641:12:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b6cec68f785839f995f869881592b008194e95f206e81883d1180a68c36101a2",
                "typeString": "literal_string \"PRICE_WARS\""
              },
              "value": "PRICE_WARS"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "functionSelector": "90ded47e",
            "id": 84,
            "mutability": "constant",
            "name": "MAX_NUMBER_OF_ELDERS",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "2711:48:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 82,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2711:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "37",
              "id": 83,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2758:1:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_7_by_1",
                "typeString": "int_const 7"
              },
              "value": "7"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bf61211f",
            "id": 87,
            "mutability": "mutable",
            "name": "eldersInGame",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "2864:31:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 85,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2864:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 86,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2894:1:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 91,
            "mutability": "mutable",
            "name": "_elderOwners",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "3007:49:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 90,
              "keyType": {
                "id": 88,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3015:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3007:27:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 89,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3026:7:12",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 95,
            "mutability": "mutable",
            "name": "_elderSpirits",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "3114:54:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$4454_storage_$",
              "typeString": "mapping(uint256 => struct ElderSpirit)"
            },
            "typeName": {
              "id": 94,
              "keyType": {
                "id": 92,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3122:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3114:31:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$4454_storage_$",
                "typeString": "mapping(uint256 => struct ElderSpirit)"
              },
              "valueType": {
                "contractScope": null,
                "id": 93,
                "name": "ElderSpirit",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 4454,
                "src": "3133:11:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ElderSpirit_$4454_storage_ptr",
                  "typeString": "struct ElderSpirit"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "caab7ef8",
            "id": 98,
            "mutability": "mutable",
            "name": "heroesMinted",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "3209:31:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 96,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3209:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 97,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3239:1:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 102,
            "mutability": "mutable",
            "name": "_heroOwners",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "3355:48:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 101,
              "keyType": {
                "id": 99,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3363:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3355:27:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 100,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3374:7:12",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 106,
            "mutability": "mutable",
            "name": "_heroes",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "3452:41:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
              "typeString": "mapping(uint256 => struct Hero)"
            },
            "typeName": {
              "id": 105,
              "keyType": {
                "id": 103,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3460:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3452:24:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                "typeString": "mapping(uint256 => struct Hero)"
              },
              "valueType": {
                "contractScope": null,
                "id": 104,
                "name": "Hero",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 4509,
                "src": "3471:4:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Hero_$4509_storage_ptr",
                  "typeString": "struct Hero"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 112,
            "mutability": "mutable",
            "name": "_roundElderSpawns",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "3567:74:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 111,
              "keyType": {
                "id": 107,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3575:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3567:47:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 110,
                "keyType": {
                  "id": 108,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3594:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "3586:27:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 109,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3605:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "79935fe0",
            "id": 114,
            "mutability": "mutable",
            "name": "elderMintPrice",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "3692:29:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 113,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3692:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8a19c8bc",
            "id": 116,
            "mutability": "mutable",
            "name": "currentRound",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "3759:27:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 115,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3759:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 120,
            "mutability": "mutable",
            "name": "_affinities",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "3863:47:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 119,
              "keyType": {
                "id": 117,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "3871:6:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "3863:26:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 118,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3881:7:12",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "e5b0a993",
            "id": 123,
            "mutability": "mutable",
            "name": "affinities",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "3953:26:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 121,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "3953:6:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 122,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "3953:8:12",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 125,
            "mutability": "mutable",
            "name": "_keyHash",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "4019:25:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 124,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "4019:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 127,
            "mutability": "mutable",
            "name": "_fee",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "4082:21:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 126,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4082:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 131,
            "mutability": "mutable",
            "name": "_heroRandomRequest",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "4150:55:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 130,
              "keyType": {
                "id": 128,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "4158:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "4150:27:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
                "id": 129,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4169:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 135,
            "mutability": "mutable",
            "name": "_randomResultsVRF",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "4258:54:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 134,
              "keyType": {
                "id": 132,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "4266:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "4258:27:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
                "id": 133,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4277:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "6de51353",
            "id": 139,
            "mutability": "mutable",
            "name": "winningAffinitiesByRound",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "4369:58:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 138,
              "keyType": {
                "id": 136,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4377:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "4369:26:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 137,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "4388:6:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 145,
            "mutability": "mutable",
            "name": "_heroRewardsClaimed",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "4513:73:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(uint256 => bool))"
            },
            "typeName": {
              "id": 144,
              "keyType": {
                "id": 140,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4521:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "4513:44:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(uint256 => bool))"
              },
              "valueType": {
                "id": 143,
                "keyType": {
                  "id": 141,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "4540:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "4532:24:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                  "typeString": "mapping(uint256 => bool)"
                },
                "valueType": {
                  "id": 142,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "4551:4:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 147,
            "mutability": "mutable",
            "name": "_minigameFactoryRegistry",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2343,
            "src": "4635:58:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IMinigameFactoryRegistry_$4731",
              "typeString": "contract IMinigameFactoryRegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 146,
              "name": "IMinigameFactoryRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4731,
              "src": "4635:24:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMinigameFactoryRegistry_$4731",
                "typeString": "contract IMinigameFactoryRegistry"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 148,
              "nodeType": "StructuredDocumentation",
              "src": "4700:166:12",
              "text": "@notice Triggered when an elder spirit gets minted\n @param elderId The elder id belonging to the minted elder\n @param owner The address of the owner"
            },
            "id": 154,
            "name": "ElderSpiritMinted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 150,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 154,
                  "src": "4895:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4895:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 152,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 154,
                  "src": "4912:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4912:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4894:32:12"
            },
            "src": "4871:56:12"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 155,
              "nodeType": "StructuredDocumentation",
              "src": "4933:163:12",
              "text": "@notice Triggered when a hero gets minted\n @param heroId The hero id belonging to the hero that was minted\n @param owner The address of the owner"
            },
            "id": 161,
            "name": "HeroMinted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 161,
                  "src": "5118:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5118:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 159,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 161,
                  "src": "5134:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5134:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5117:31:12"
            },
            "src": "5101:48:12"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 162,
              "nodeType": "StructuredDocumentation",
              "src": "5155:61:12",
              "text": "@notice Triggered when the elder spirits have been burned"
            },
            "id": 164,
            "name": "ElderSpiritsBurned",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5245:2:12"
            },
            "src": "5221:27:12"
          },
          {
            "body": {
              "id": 244,
              "nodeType": "Block",
              "src": "5556:810:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 183,
                        "name": "ROLE_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "5619:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 184,
                        "name": "ROLE_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "5631:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 182,
                      "name": "_setRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2860,
                      "src": "5605:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5605:37:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "5605:37:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 188,
                        "name": "ROLE_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "5666:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 189,
                        "name": "ROLE_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "5678:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 187,
                      "name": "_setRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2860,
                      "src": "5652:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5652:37:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "5652:37:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 193,
                        "name": "ROLE_GAME_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "5713:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 194,
                        "name": "ROLE_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "5730:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 192,
                      "name": "_setRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2860,
                      "src": "5699:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5699:42:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "5699:42:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 198,
                        "name": "ROLE_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "5829:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 199,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5841:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5841:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 197,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2835,
                      "src": "5818:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5818:34:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "5818:34:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 204,
                        "name": "ROLE_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "5872:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 205,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5884:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5884:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 203,
                      "name": "grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2773,
                      "src": "5862:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5862:33:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "5862:33:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 209,
                      "name": "elderMintPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 114,
                      "src": "5946:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "302e323731",
                      "id": 210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5963:11:12",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_271000000000000000_by_1",
                        "typeString": "int_const 271000000000000000"
                      },
                      "value": "0.271"
                    },
                    "src": "5946:28:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "5946:28:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 213,
                      "name": "currentRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "6023:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6038:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6023:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 216,
                  "nodeType": "ExpressionStatement",
                  "src": "6023:16:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 217,
                      "name": "currentPhase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "6113:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Phase_$28",
                        "typeString": "enum CryptoChampions.Phase"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 218,
                        "name": "Phase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "6128:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Phase_$28_$",
                          "typeString": "type(enum CryptoChampions.Phase)"
                        }
                      },
                      "id": 219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "SETUP",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6128:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Phase_$28",
                        "typeString": "enum CryptoChampions.Phase"
                      }
                    },
                    "src": "6113:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Phase_$28",
                      "typeString": "enum CryptoChampions.Phase"
                    }
                  },
                  "id": 221,
                  "nodeType": "ExpressionStatement",
                  "src": "6113:26:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 222,
                      "name": "currentPhaseStartTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "6149:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 223,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -17,
                      "src": "6173:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6149:27:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "6149:27:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 226,
                      "name": "_keyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 125,
                      "src": "6213:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 227,
                      "name": "keyhash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "6224:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6213:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "6213:18:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 230,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "6241:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      },
                      "id": 235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "302e31",
                        "id": 231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6248:3:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_10",
                          "typeString": "rational_const 1 / 10"
                        },
                        "value": "0.1"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6254:2:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3138",
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6258:2:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "src": "6254:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "6248:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      }
                    },
                    "src": "6241:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 237,
                  "nodeType": "ExpressionStatement",
                  "src": "6241:19:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 238,
                      "name": "_minigameFactoryRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 147,
                      "src": "6283:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMinigameFactoryRegistry_$4731",
                        "typeString": "contract IMinigameFactoryRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 240,
                          "name": "minigameFactoryRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 172,
                          "src": "6335:23:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 239,
                        "name": "IMinigameFactoryRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4731,
                        "src": "6310:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IMinigameFactoryRegistry_$4731_$",
                          "typeString": "type(contract IMinigameFactoryRegistry)"
                        }
                      },
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6310:49:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMinigameFactoryRegistry_$4731",
                        "typeString": "contract IMinigameFactoryRegistry"
                      }
                    },
                    "src": "6283:76:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMinigameFactoryRegistry_$4731",
                      "typeString": "contract IMinigameFactoryRegistry"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "6283:76:12"
                }
              ]
            },
            "documentation": null,
            "id": 245,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "757269",
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5506:5:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_96ee3279dd30231650e0b4a1a3516ab3dc26b6d3dfcb6ef20fb4329cfc1213e1",
                      "typeString": "literal_string \"uri\""
                    },
                    "value": "uri"
                  }
                ],
                "id": 176,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 174,
                  "name": "ERC1155",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4272,
                  "src": "5498:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC1155_$4272_$",
                    "typeString": "type(contract ERC1155)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5498:14:12"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 178,
                    "name": "vrfCoordinator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 168,
                    "src": "5529:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 179,
                    "name": "linkToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 170,
                    "src": "5545:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 180,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 177,
                  "name": "VRFConsumerBase",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4441,
                  "src": "5513:15:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_VRFConsumerBase_$4441_$",
                    "typeString": "type(contract VRFConsumerBase)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5513:42:12"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "mutability": "mutable",
                  "name": "keyhash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 245,
                  "src": "5369:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5369:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "vrfCoordinator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 245,
                  "src": "5394:22:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5394:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 170,
                  "mutability": "mutable",
                  "name": "linkToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 245,
                  "src": "5426:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5426:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 172,
                  "mutability": "mutable",
                  "name": "minigameFactoryRegistry",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 245,
                  "src": "5453:31:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5453:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5359:131:12"
            },
            "returnParameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5556:0:12"
            },
            "scope": 2343,
            "src": "5348:1018:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 260,
              "nodeType": "Block",
              "src": "6419:132:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 250,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 247,
                            "src": "6437:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 251,
                            "name": "IN_GAME_CURRENCY_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63,
                            "src": "6447:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6437:29:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 253,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 247,
                            "src": "6470:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 254,
                            "name": "MAX_NUMBER_OF_ELDERS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "6481:20:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6470:31:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6437:64:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 249,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6429:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6429:73:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "6429:73:12"
                },
                {
                  "id": 259,
                  "nodeType": "PlaceholderStatement",
                  "src": "6543:1:12"
                }
              ]
            },
            "documentation": null,
            "id": 261,
            "name": "isValidElderSpiritId",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 247,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 261,
                  "src": "6402:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6402:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6401:17:12"
            },
            "src": "6372:179:12",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 279,
              "nodeType": "Block",
              "src": "6594:164:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 266,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 263,
                          "src": "6612:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 267,
                          "name": "MAX_NUMBER_OF_ELDERS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84,
                          "src": "6621:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6612:29:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 265,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6604:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6604:38:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "6604:38:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 272,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "6691:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 274,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 273,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "6699:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6691:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4509_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 275,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "valid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4456,
                        "src": "6691:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 271,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6683:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6683:30:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 277,
                  "nodeType": "ExpressionStatement",
                  "src": "6683:30:12"
                },
                {
                  "id": 278,
                  "nodeType": "PlaceholderStatement",
                  "src": "6750:1:12"
                }
              ]
            },
            "documentation": null,
            "id": 280,
            "name": "isValidHero",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 263,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 280,
                  "src": "6578:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6578:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6577:16:12"
            },
            "src": "6557:201:12",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 287,
              "nodeType": "Block",
              "src": "6831:53:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 283,
                        "name": "ROLE_GAME_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "6850:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 282,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 529,
                      "src": "6841:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) view"
                      }
                    },
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6841:25:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 285,
                  "nodeType": "ExpressionStatement",
                  "src": "6841:25:12"
                },
                {
                  "id": 286,
                  "nodeType": "PlaceholderStatement",
                  "src": "6876:1:12"
                }
              ]
            },
            "documentation": null,
            "id": 288,
            "name": "onlyGameAdmin",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6831:0:12"
            },
            "src": "6808:76:12",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 295,
              "nodeType": "Block",
              "src": "6940:48:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 291,
                        "name": "ROLE_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "6959:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 290,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 529,
                      "src": "6950:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) view"
                      }
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6950:20:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "6950:20:12"
                },
                {
                  "id": 294,
                  "nodeType": "PlaceholderStatement",
                  "src": "6980:1:12"
                }
              ]
            },
            "documentation": null,
            "id": 296,
            "name": "onlyAdmin",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6940:0:12"
            },
            "src": "6921:67:12",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 307,
              "nodeType": "Block",
              "src": "7063:98:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_Phase_$28",
                          "typeString": "enum CryptoChampions.Phase"
                        },
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 301,
                          "name": "currentPhase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "7081:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Phase_$28",
                            "typeString": "enum CryptoChampions.Phase"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 302,
                          "name": "phase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 298,
                          "src": "7097:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Phase_$28",
                            "typeString": "enum CryptoChampions.Phase"
                          }
                        },
                        "src": "7081:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 300,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7073:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7073:30:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 305,
                  "nodeType": "ExpressionStatement",
                  "src": "7073:30:12"
                },
                {
                  "id": 306,
                  "nodeType": "PlaceholderStatement",
                  "src": "7153:1:12"
                }
              ]
            },
            "documentation": null,
            "id": 308,
            "name": "atPhase",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 298,
                  "mutability": "mutable",
                  "name": "phase",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 308,
                  "src": "7050:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Phase_$28",
                    "typeString": "enum CryptoChampions.Phase"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 297,
                    "name": "Phase",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 28,
                    "src": "7050:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Phase_$28",
                      "typeString": "enum CryptoChampions.Phase"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7049:13:12"
            },
            "src": "7033:128:12",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 410,
              "nodeType": "Block",
              "src": "7254:1442:12",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_Phase_$28",
                      "typeString": "enum CryptoChampions.Phase"
                    },
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 312,
                      "name": "currentPhase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "7268:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Phase_$28",
                        "typeString": "enum CryptoChampions.Phase"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 313,
                        "name": "Phase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "7284:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Phase_$28_$",
                          "typeString": "type(enum CryptoChampions.Phase)"
                        }
                      },
                      "id": 314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "SETUP",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7284:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Phase_$28",
                        "typeString": "enum CryptoChampions.Phase"
                      }
                    },
                    "src": "7268:27:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_Phase_$28",
                        "typeString": "enum CryptoChampions.Phase"
                      },
                      "id": 340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 337,
                        "name": "currentPhase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "7740:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Phase_$28",
                          "typeString": "enum CryptoChampions.Phase"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 338,
                          "name": "Phase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "7756:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Phase_$28_$",
                            "typeString": "type(enum CryptoChampions.Phase)"
                          }
                        },
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ACTION",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7756:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Phase_$28",
                          "typeString": "enum CryptoChampions.Phase"
                        }
                      },
                      "src": "7740:28:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 404,
                    "nodeType": "IfStatement",
                    "src": "7736:916:12",
                    "trueBody": {
                      "id": 403,
                      "nodeType": "Block",
                      "src": "7770:882:12",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 341,
                              "name": "_startNewPriceGame",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2297,
                              "src": "7861:18:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                "typeString": "function ()"
                              }
                            },
                            "id": 342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7861:20:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 343,
                          "nodeType": "ExpressionStatement",
                          "src": "7861:20:12"
                        },
                        {
                          "assignments": [
                            345
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 345,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "overrides": null,
                              "scope": 403,
                              "src": "8004:9:12",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 344,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8004:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 347,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8016:1:12",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "8004:13:12"
                        },
                        {
                          "body": {
                            "id": 393,
                            "nodeType": "Block",
                            "src": "8062:446:12",
                            "statements": [
                              {
                                "condition": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "id": 371,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 357,
                                                "name": "_elderSpirits",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 95,
                                                "src": "8121:13:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$4454_storage_$",
                                                  "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                                                }
                                              },
                                              "id": 359,
                                              "indexExpression": {
                                                "argumentTypes": null,
                                                "id": 358,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 345,
                                                "src": "8135:1:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "8121:16:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_ElderSpirit_$4454_storage",
                                                "typeString": "struct ElderSpirit storage ref"
                                              }
                                            },
                                            "id": 360,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "affinity",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 4451,
                                            "src": "8121:25:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_string_storage",
                                              "typeString": "string storage ref"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_string_storage",
                                              "typeString": "string storage ref"
                                            }
                                          ],
                                          "id": 356,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "8115:5:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                            "typeString": "type(bytes storage pointer)"
                                          },
                                          "typeName": {
                                            "id": 355,
                                            "name": "bytes",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "8115:5:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": null,
                                              "typeString": null
                                            }
                                          }
                                        },
                                        "id": 361,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8115:32:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_storage_ptr",
                                          "typeString": "bytes storage pointer"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_storage_ptr",
                                          "typeString": "bytes storage pointer"
                                        }
                                      ],
                                      "id": 354,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "8105:9:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 362,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8105:43:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "id": 366,
                                              "name": "winningAffinitiesByRound",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 139,
                                              "src": "8188:24:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                                "typeString": "mapping(uint256 => string storage ref)"
                                              }
                                            },
                                            "id": 368,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "id": 367,
                                              "name": "currentRound",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 116,
                                              "src": "8213:12:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "8188:38:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_string_storage",
                                              "typeString": "string storage ref"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_string_storage",
                                              "typeString": "string storage ref"
                                            }
                                          ],
                                          "id": 365,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "8182:5:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                            "typeString": "type(bytes storage pointer)"
                                          },
                                          "typeName": {
                                            "id": 364,
                                            "name": "bytes",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "8182:5:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": null,
                                              "typeString": null
                                            }
                                          }
                                        },
                                        "id": 369,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8182:45:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_storage_ptr",
                                          "typeString": "bytes storage pointer"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_storage_ptr",
                                          "typeString": "bytes storage pointer"
                                        }
                                      ],
                                      "id": 363,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "8172:9:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 370,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8172:56:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "src": "8105:123:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": null,
                                "id": 392,
                                "nodeType": "IfStatement",
                                "src": "8080:414:12",
                                "trueBody": {
                                  "id": 391,
                                  "nodeType": "Block",
                                  "src": "8247:247:12",
                                  "statements": [
                                    {
                                      "condition": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 377,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "id": 373,
                                              "name": "currentRound",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 116,
                                              "src": "8294:12:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "argumentTypes": null,
                                              "id": 374,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 345,
                                              "src": "8308:1:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "id": 372,
                                            "name": "getElderSpawnsAmount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1813,
                                            "src": "8273:20:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) view returns (uint256)"
                                            }
                                          },
                                          "id": 375,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "8273:37:12",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "30",
                                          "id": 376,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "8313:1:12",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "8273:41:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseBody": null,
                                      "id": 390,
                                      "nodeType": "IfStatement",
                                      "src": "8269:207:12",
                                      "trueBody": {
                                        "id": 389,
                                        "nodeType": "Block",
                                        "src": "8316:160:12",
                                        "statements": [
                                          {
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 386,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftHandSide": {
                                                "argumentTypes": null,
                                                "id": 378,
                                                "name": "_heroRewardsShare",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 78,
                                                "src": "8342:17:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "Assignment",
                                              "operator": "=",
                                              "rightHandSide": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                  {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                      {
                                                        "argumentTypes": null,
                                                        "id": 382,
                                                        "name": "currentRound",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 116,
                                                        "src": "8405:12:12",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      {
                                                        "argumentTypes": null,
                                                        "id": 383,
                                                        "name": "i",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 345,
                                                        "src": "8419:1:12",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        },
                                                        {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      ],
                                                      "id": 381,
                                                      "name": "getElderSpawnsAmount",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1813,
                                                      "src": "8384:20:12",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                                        "typeString": "function (uint256,uint256) view returns (uint256)"
                                                      }
                                                    },
                                                    "id": 384,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "8384:37:12",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "id": 379,
                                                    "name": "rewardsPoolAmount",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 72,
                                                    "src": "8362:17:12",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "id": 380,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "div",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 3169,
                                                  "src": "8362:21:12",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                  }
                                                },
                                                "id": 385,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8362:60:12",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "8342:80:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 387,
                                            "nodeType": "ExpressionStatement",
                                            "src": "8342:80:12"
                                          },
                                          {
                                            "id": 388,
                                            "nodeType": "Break",
                                            "src": "8448:5:12"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 348,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 345,
                              "src": "8038:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 349,
                              "name": "eldersInGame",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87,
                              "src": "8043:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8038:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 394,
                          "initializationExpression": null,
                          "loopExpression": {
                            "expression": {
                              "argumentTypes": null,
                              "id": 352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "8057:3:12",
                              "subExpression": {
                                "argumentTypes": null,
                                "id": 351,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 345,
                                "src": "8059:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 353,
                            "nodeType": "ExpressionStatement",
                            "src": "8057:3:12"
                          },
                          "nodeType": "ForStatement",
                          "src": "8031:477:12"
                        },
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 395,
                              "name": "_burnElders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1571,
                              "src": "8553:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                "typeString": "function ()"
                              }
                            },
                            "id": 396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8553:13:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 397,
                          "nodeType": "ExpressionStatement",
                          "src": "8553:13:12"
                        },
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 398,
                              "name": "currentPhase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "8615:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Phase_$28",
                                "typeString": "enum CryptoChampions.Phase"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 399,
                                "name": "Phase",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28,
                                "src": "8630:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Phase_$28_$",
                                  "typeString": "type(enum CryptoChampions.Phase)"
                                }
                              },
                              "id": 400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "SETUP",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "8630:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Phase_$28",
                                "typeString": "enum CryptoChampions.Phase"
                              }
                            },
                            "src": "8615:26:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Phase_$28",
                              "typeString": "enum CryptoChampions.Phase"
                            }
                          },
                          "id": 402,
                          "nodeType": "ExpressionStatement",
                          "src": "8615:26:12"
                        }
                      ]
                    }
                  },
                  "id": 405,
                  "nodeType": "IfStatement",
                  "src": "7264:1388:12",
                  "trueBody": {
                    "id": 336,
                    "nodeType": "Block",
                    "src": "7297:433:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 316,
                            "name": "rewardsPoolAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "7394:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7414:1:12",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7394:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 319,
                        "nodeType": "ExpressionStatement",
                        "src": "7394:21:12"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 320,
                            "name": "_heroRewardsShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "7474:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7494:1:12",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7474:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 323,
                        "nodeType": "ExpressionStatement",
                        "src": "7474:21:12"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 324,
                            "name": "currentRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "7609:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 327,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7641:1:12",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 325,
                                "name": "currentRound",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 116,
                                "src": "7624:12:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3091,
                              "src": "7624:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7624:19:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7609:34:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 330,
                        "nodeType": "ExpressionStatement",
                        "src": "7609:34:12"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 331,
                            "name": "currentPhase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "7692:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Phase_$28",
                              "typeString": "enum CryptoChampions.Phase"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 332,
                              "name": "Phase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "7707:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Phase_$28_$",
                                "typeString": "type(enum CryptoChampions.Phase)"
                              }
                            },
                            "id": 333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ACTION",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "7707:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Phase_$28",
                              "typeString": "enum CryptoChampions.Phase"
                            }
                          },
                          "src": "7692:27:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Phase_$28",
                            "typeString": "enum CryptoChampions.Phase"
                          }
                        },
                        "id": 335,
                        "nodeType": "ExpressionStatement",
                        "src": "7692:27:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 406,
                      "name": "currentPhaseStartTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "8662:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 407,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -17,
                      "src": "8686:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8662:27:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 409,
                  "nodeType": "ExpressionStatement",
                  "src": "8662:27:12"
                }
              ]
            },
            "documentation": {
              "id": 309,
              "nodeType": "StructuredDocumentation",
              "src": "7167:41:12",
              "text": "@notice Transitions to the next phase"
            },
            "id": 411,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transitionNextPhase",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7242:2:12"
            },
            "returnParameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7254:0:12"
            },
            "scope": 2343,
            "src": "7213:1483:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 423,
              "nodeType": "Block",
              "src": "8929:37:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 419,
                      "name": "currentPhase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "8939:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Phase_$28",
                        "typeString": "enum CryptoChampions.Phase"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 420,
                      "name": "phase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 414,
                      "src": "8954:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Phase_$28",
                        "typeString": "enum CryptoChampions.Phase"
                      }
                    },
                    "src": "8939:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Phase_$28",
                      "typeString": "enum CryptoChampions.Phase"
                    }
                  },
                  "id": 422,
                  "nodeType": "ExpressionStatement",
                  "src": "8939:20:12"
                }
              ]
            },
            "documentation": {
              "id": 412,
              "nodeType": "StructuredDocumentation",
              "src": "8702:172:12",
              "text": "@notice Sets the contract's phase\n @dev May delete function and keep only the refresh phase function\n @param phase The phase the contract should be set to"
            },
            "functionSelector": "c03afb59",
            "id": 424,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 417,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 416,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 296,
                  "src": "8919:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8919:9:12"
              }
            ],
            "name": "setPhase",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 414,
                  "mutability": "mutable",
                  "name": "phase",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 424,
                  "src": "8897:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Phase_$28",
                    "typeString": "enum CryptoChampions.Phase"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 413,
                    "name": "Phase",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 28,
                    "src": "8897:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Phase_$28",
                      "typeString": "enum CryptoChampions.Phase"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8896:13:12"
            },
            "returnParameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8929:0:12"
            },
            "scope": 2343,
            "src": "8879:87:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4713
            ],
            "body": {
              "id": 466,
              "nodeType": "Block",
              "src": "9133:407:12",
              "statements": [
                {
                  "assignments": [
                    430
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 430,
                      "mutability": "mutable",
                      "name": "phaseChanged",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 466,
                      "src": "9143:17:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 429,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9143:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 432,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9163:5:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9143:25:12"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_Phase_$28",
                        "typeString": "enum CryptoChampions.Phase"
                      },
                      "id": 436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 433,
                        "name": "currentPhase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "9183:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Phase_$28",
                          "typeString": "enum CryptoChampions.Phase"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 434,
                          "name": "Phase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "9199:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Phase_$28_$",
                            "typeString": "type(enum CryptoChampions.Phase)"
                          }
                        },
                        "id": 435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "SETUP",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "9199:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Phase_$28",
                          "typeString": "enum CryptoChampions.Phase"
                        }
                      },
                      "src": "9183:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 437,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -17,
                        "src": "9214:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 438,
                          "name": "currentPhaseStartTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "9221:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 439,
                          "name": "SETUP_PHASE_DURATION",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "9245:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9221:44:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9214:51:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9183:82:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_Phase_$28",
                          "typeString": "enum CryptoChampions.Phase"
                        },
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 447,
                          "name": "currentPhase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "9324:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Phase_$28",
                            "typeString": "enum CryptoChampions.Phase"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 448,
                            "name": "Phase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "9340:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Phase_$28_$",
                              "typeString": "type(enum CryptoChampions.Phase)"
                            }
                          },
                          "id": 449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ACTION",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "9340:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Phase_$28",
                            "typeString": "enum CryptoChampions.Phase"
                          }
                        },
                        "src": "9324:28:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 451,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -17,
                          "src": "9356:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 452,
                            "name": "currentPhaseStartTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "9363:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 453,
                            "name": "ACTION_PHASE_DURATION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "9387:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9363:45:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9356:52:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "9324:84:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 461,
                    "nodeType": "IfStatement",
                    "src": "9320:137:12",
                    "trueBody": {
                      "id": 460,
                      "nodeType": "Block",
                      "src": "9410:47:12",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 457,
                              "name": "_transitionNextPhase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 411,
                              "src": "9424:20:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                "typeString": "function ()"
                              }
                            },
                            "id": 458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9424:22:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 459,
                          "nodeType": "ExpressionStatement",
                          "src": "9424:22:12"
                        }
                      ]
                    }
                  },
                  "id": 462,
                  "nodeType": "IfStatement",
                  "src": "9179:278:12",
                  "trueBody": {
                    "id": 446,
                    "nodeType": "Block",
                    "src": "9267:47:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 443,
                            "name": "_transitionNextPhase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 411,
                            "src": "9281:20:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9281:22:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 445,
                        "nodeType": "ExpressionStatement",
                        "src": "9281:22:12"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 463,
                    "name": "phaseChanged",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 430,
                    "src": "9471:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 465,
                  "nodeType": "IfStatement",
                  "src": "9467:67:12",
                  "trueBody": {
                    "id": 464,
                    "nodeType": "Block",
                    "src": "9485:49:12",
                    "statements": []
                  }
                }
              ]
            },
            "documentation": {
              "id": 425,
              "nodeType": "StructuredDocumentation",
              "src": "8972:114:12",
              "text": "@notice Transitions to next phase if the condition is met and rewards caller for a successful phase transition"
            },
            "functionSelector": "9ff1103f",
            "id": 467,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refreshPhase",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 427,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9124:8:12"
            },
            "parameters": {
              "id": 426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9112:2:12"
            },
            "returnParameters": {
              "id": 428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9133:0:12"
            },
            "scope": 2343,
            "src": "9091:449:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 493,
              "nodeType": "Block",
              "src": "9792:183:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 480,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "9833:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CryptoChampions_$2343",
                                    "typeString": "contract CryptoChampions"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_CryptoChampions_$2343",
                                    "typeString": "contract CryptoChampions"
                                  }
                                ],
                                "id": 479,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9825:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 478,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9825:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 481,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9825:13:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 476,
                              "name": "LINK",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4394,
                              "src": "9810:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$6222",
                                "typeString": "contract LinkTokenInterface"
                              }
                            },
                            "id": 477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6154,
                            "src": "9810:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9810:29:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 483,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 127,
                          "src": "9843:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9810:37:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 475,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9802:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9802:46:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 486,
                  "nodeType": "ExpressionStatement",
                  "src": "9802:46:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 488,
                        "name": "_keyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "9935:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 489,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "9945:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 490,
                        "name": "userProvidedSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 470,
                        "src": "9951:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 487,
                      "name": "requestRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4392,
                      "src": "9917:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,uint256,uint256) returns (bytes32)"
                      }
                    },
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9917:51:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 474,
                  "id": 492,
                  "nodeType": "Return",
                  "src": "9910:58:12"
                }
              ]
            },
            "documentation": {
              "id": 468,
              "nodeType": "StructuredDocumentation",
              "src": "9546:152:12",
              "text": "@notice Makes a request for a random number\n @param userProvidedSeed The seed for the random request\n @return requestId The request id"
            },
            "id": 494,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getRandomNumber",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 470,
                  "mutability": "mutable",
                  "name": "userProvidedSeed",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 494,
                  "src": "9729:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 469,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9729:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9728:26:12"
            },
            "returnParameters": {
              "id": 474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 473,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 494,
                  "src": "9773:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 472,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9773:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9772:19:12"
            },
            "scope": 2343,
            "src": "9703:272:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4337
            ],
            "body": {
              "id": 513,
              "nodeType": "Block",
              "src": "10208:89:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 503,
                        "name": "_randomResultsVRF",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "10218:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 505,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 504,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 497,
                        "src": "10236:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10218:28:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 506,
                      "name": "randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 499,
                      "src": "10249:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10218:41:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 508,
                  "nodeType": "ExpressionStatement",
                  "src": "10218:41:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 510,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 497,
                        "src": "10280:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 509,
                      "name": "_trainHero",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1484,
                      "src": "10269:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10269:21:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 512,
                  "nodeType": "ExpressionStatement",
                  "src": "10269:21:12"
                }
              ]
            },
            "documentation": {
              "id": 495,
              "nodeType": "StructuredDocumentation",
              "src": "9981:138:12",
              "text": "@notice Callback function used by the VRF coordinator\n @param requestId The request id\n @param randomness The randomness"
            },
            "id": 514,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillRandomness",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 501,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10199:8:12"
            },
            "parameters": {
              "id": 500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 497,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 514,
                  "src": "10151:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 496,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10151:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 499,
                  "mutability": "mutable",
                  "name": "randomness",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 514,
                  "src": "10170:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 498,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10170:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10150:39:12"
            },
            "returnParameters": {
              "id": 502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10208:0:12"
            },
            "scope": 2343,
            "src": "10124:173:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 528,
              "nodeType": "Block",
              "src": "10437:74:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 522,
                            "name": "role",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 517,
                            "src": "10463:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 523,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10469:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10469:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 521,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2698,
                          "src": "10455:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10455:25:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 520,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10447:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10447:34:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 527,
                  "nodeType": "ExpressionStatement",
                  "src": "10447:34:12"
                }
              ]
            },
            "documentation": {
              "id": 515,
              "nodeType": "StructuredDocumentation",
              "src": "10303:83:12",
              "text": "@notice Check if msg.sender has the role\n @param role The role to verify"
            },
            "id": 529,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_hasRole",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 517,
                  "mutability": "mutable",
                  "name": "role",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 529,
                  "src": "10409:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 516,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10409:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10408:14:12"
            },
            "returnParameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10437:0:12"
            },
            "scope": 2343,
            "src": "10391:120:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4516
            ],
            "body": {
              "id": 552,
              "nodeType": "Block",
              "src": "10933:93:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 540,
                        "name": "_affinities",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "10943:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 542,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 541,
                        "name": "tokenTicker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 532,
                        "src": "10955:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10943:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 543,
                      "name": "feedAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 534,
                      "src": "10970:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10943:38:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 545,
                  "nodeType": "ExpressionStatement",
                  "src": "10943:38:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 549,
                        "name": "tokenTicker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 532,
                        "src": "11007:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 546,
                        "name": "affinities",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "10991:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "10991:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$__$",
                        "typeString": "function (string storage ref)"
                      }
                    },
                    "id": 550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10991:28:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 551,
                  "nodeType": "ExpressionStatement",
                  "src": "10991:28:12"
                }
              ]
            },
            "documentation": {
              "id": 530,
              "nodeType": "StructuredDocumentation",
              "src": "10517:309:12",
              "text": "@notice Creates a new token affinity\n @dev This will be called by a priviledged address. It will allow to create new affinities. May need to add a\n remove affinity function as well.\n @param tokenTicker The token ticker of the affinity\n @param feedAddress The price feed address"
            },
            "functionSelector": "9d5b82c0",
            "id": 553,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 538,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 537,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 296,
                  "src": "10923:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10923:9:12"
              }
            ],
            "name": "createAffinity",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 536,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10914:8:12"
            },
            "parameters": {
              "id": 535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 532,
                  "mutability": "mutable",
                  "name": "tokenTicker",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 553,
                  "src": "10855:27:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 531,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10855:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 534,
                  "mutability": "mutable",
                  "name": "feedAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 553,
                  "src": "10884:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10884:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10854:50:12"
            },
            "returnParameters": {
              "id": 539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10933:0:12"
            },
            "scope": 2343,
            "src": "10831:195:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4521
            ],
            "body": {
              "id": 566,
              "nodeType": "Block",
              "src": "11242:39:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 562,
                      "name": "elderMintPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 114,
                      "src": "11252:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 563,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 556,
                      "src": "11269:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11252:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 565,
                  "nodeType": "ExpressionStatement",
                  "src": "11252:22:12"
                }
              ]
            },
            "documentation": {
              "id": 554,
              "nodeType": "StructuredDocumentation",
              "src": "11032:135:12",
              "text": "@notice Sets the elder mint price\n @dev Can only be called by an admin address\n @param price The new elder mint price"
            },
            "functionSelector": "e3e98382",
            "id": 567,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 560,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 559,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 296,
                  "src": "11232:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "11232:9:12"
              }
            ],
            "name": "setElderMintPrice",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 558,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11223:8:12"
            },
            "parameters": {
              "id": 557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 556,
                  "mutability": "mutable",
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 567,
                  "src": "11199:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 555,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11199:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11198:15:12"
            },
            "returnParameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11242:0:12"
            },
            "scope": 2343,
            "src": "11172:109:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4532
            ],
            "body": {
              "id": 729,
              "nodeType": "Block",
              "src": "11890:1598:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 585,
                          "name": "eldersInGame",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "11908:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 586,
                          "name": "MAX_NUMBER_OF_ELDERS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84,
                          "src": "11923:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11908:35:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 584,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11900:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11900:44:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 589,
                  "nodeType": "ExpressionStatement",
                  "src": "11900:44:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 591,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12007:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "12007:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 593,
                          "name": "elderMintPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 114,
                          "src": "12020:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12007:27:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 590,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11999:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11999:36:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 596,
                  "nodeType": "ExpressionStatement",
                  "src": "11999:36:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 598,
                            "name": "_affinities",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 120,
                            "src": "12083:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 600,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 599,
                            "name": "affinity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 574,
                            "src": "12095:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12083:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 603,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12116:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 602,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12108:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 601,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12108:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12108:10:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "12083:35:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 597,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12075:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12075:44:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 607,
                  "nodeType": "ExpressionStatement",
                  "src": "12075:44:12"
                },
                {
                  "assignments": [
                    609
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 609,
                      "mutability": "mutable",
                      "name": "elderId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 729,
                      "src": "12235:15:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 608,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12235:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 614,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12270:1:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 610,
                        "name": "eldersInGame",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "12253:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3091,
                      "src": "12253:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12253:19:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12235:37:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 616,
                            "name": "_elderOwners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91,
                            "src": "12289:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 618,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 617,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 609,
                            "src": "12302:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12289:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12322:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12314:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 619,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12314:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12314:10:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "12289:35:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 615,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "12282:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12282:43:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 625,
                  "nodeType": "ExpressionStatement",
                  "src": "12282:43:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 627,
                              "name": "_elderSpirits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 95,
                              "src": "12383:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$4454_storage_$",
                                "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                              }
                            },
                            "id": 629,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 628,
                              "name": "elderId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 609,
                              "src": "12397:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12383:22:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ElderSpirit_$4454_storage",
                              "typeString": "struct ElderSpirit storage ref"
                            }
                          },
                          "id": 630,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "valid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4445,
                          "src": "12383:28:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12415:5:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "12383:37:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 626,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "12376:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12376:45:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 634,
                  "nodeType": "ExpressionStatement",
                  "src": "12376:45:12"
                },
                {
                  "assignments": [
                    636
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 636,
                      "mutability": "mutable",
                      "name": "affinityPrice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 729,
                      "src": "12531:20:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 635,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12531:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 637,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12531:20:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        null,
                        {
                          "argumentTypes": null,
                          "id": 638,
                          "name": "affinityPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 636,
                          "src": "12564:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        null,
                        null,
                        null
                      ],
                      "id": 639,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "12561:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_int256_$__$__$__$",
                        "typeString": "tuple(,int256,,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 641,
                                "name": "_affinities",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 120,
                                "src": "12609:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                  "typeString": "mapping(string memory => address)"
                                }
                              },
                              "id": 643,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 642,
                                "name": "affinity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 574,
                                "src": "12621:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12609:21:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 640,
                            "name": "AggregatorV3Interface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4318,
                            "src": "12587:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$4318_$",
                              "typeString": "type(contract AggregatorV3Interface)"
                            }
                          },
                          "id": 644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12587:44:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$4318",
                            "typeString": "contract AggregatorV3Interface"
                          }
                        },
                        "id": 645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "latestRoundData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4317,
                        "src": "12587:60:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                          "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                        }
                      },
                      "id": 646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12587:62:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "src": "12561:88:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 648,
                  "nodeType": "ExpressionStatement",
                  "src": "12561:88:12"
                },
                {
                  "assignments": [
                    650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 650,
                      "mutability": "mutable",
                      "name": "elder",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 729,
                      "src": "12695:24:12",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ElderSpirit_$4454_memory_ptr",
                        "typeString": "struct ElderSpirit"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 649,
                        "name": "ElderSpirit",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4454,
                        "src": "12695:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$4454_storage_ptr",
                          "typeString": "struct ElderSpirit"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 651,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12695:24:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 652,
                        "name": "elder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "12729:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$4454_memory_ptr",
                          "typeString": "struct ElderSpirit memory"
                        }
                      },
                      "id": 654,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "valid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4445,
                      "src": "12729:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12743:4:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "12729:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 657,
                  "nodeType": "ExpressionStatement",
                  "src": "12729:18:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 658,
                        "name": "elder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "12757:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$4454_memory_ptr",
                          "typeString": "struct ElderSpirit memory"
                        }
                      },
                      "id": 660,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "raceId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4447,
                      "src": "12757:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 661,
                      "name": "raceId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 570,
                      "src": "12772:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12757:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 663,
                  "nodeType": "ExpressionStatement",
                  "src": "12757:21:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 664,
                        "name": "elder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "12788:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$4454_memory_ptr",
                          "typeString": "struct ElderSpirit memory"
                        }
                      },
                      "id": 666,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "classId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4449,
                      "src": "12788:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 667,
                      "name": "classId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 572,
                      "src": "12804:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12788:23:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 669,
                  "nodeType": "ExpressionStatement",
                  "src": "12788:23:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 670,
                        "name": "elder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "12821:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$4454_memory_ptr",
                          "typeString": "struct ElderSpirit memory"
                        }
                      },
                      "id": 672,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "affinity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4451,
                      "src": "12821:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 673,
                      "name": "affinity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 574,
                      "src": "12838:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "12821:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 675,
                  "nodeType": "ExpressionStatement",
                  "src": "12821:25:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 676,
                        "name": "elder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "12856:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$4454_memory_ptr",
                          "typeString": "struct ElderSpirit memory"
                        }
                      },
                      "id": 678,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "affinityPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4453,
                      "src": "12856:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 679,
                      "name": "affinityPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 636,
                      "src": "12878:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "12856:35:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 681,
                  "nodeType": "ExpressionStatement",
                  "src": "12856:35:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 683,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5388,
                          "src": "12932:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12932:12:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 685,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 609,
                        "src": "12946:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12955:1:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12958:2:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 682,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3820,
                      "src": "12926:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12926:35:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 689,
                  "nodeType": "ExpressionStatement",
                  "src": "12926:35:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 690,
                        "name": "_elderOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "13055:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 692,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 691,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 609,
                        "src": "13068:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13055:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 693,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5388,
                        "src": "13079:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                          "typeString": "function () view returns (address payable)"
                        }
                      },
                      "id": 694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13079:12:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "13055:36:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 696,
                  "nodeType": "ExpressionStatement",
                  "src": "13055:36:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 697,
                        "name": "_elderSpirits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "13101:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$4454_storage_$",
                          "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                        }
                      },
                      "id": 699,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 698,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 609,
                        "src": "13115:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13101:22:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ElderSpirit_$4454_storage",
                        "typeString": "struct ElderSpirit storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 700,
                      "name": "elder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 650,
                      "src": "13126:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ElderSpirit_$4454_memory_ptr",
                        "typeString": "struct ElderSpirit memory"
                      }
                    },
                    "src": "13101:30:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ElderSpirit_$4454_storage",
                      "typeString": "struct ElderSpirit storage ref"
                    }
                  },
                  "id": 702,
                  "nodeType": "ExpressionStatement",
                  "src": "13101:30:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 703,
                      "name": "eldersInGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "13177:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13209:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 704,
                          "name": "eldersInGame",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "13192:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3091,
                        "src": "13192:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13192:19:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13177:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 709,
                  "nodeType": "ExpressionStatement",
                  "src": "13177:34:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 711,
                        "name": "elderMintPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "13276:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 710,
                      "name": "_refundSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1847,
                      "src": "13262:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13262:29:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 713,
                  "nodeType": "ExpressionStatement",
                  "src": "13262:29:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 714,
                      "name": "devFund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "13363:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 717,
                          "name": "elderMintPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 114,
                          "src": "13385:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 715,
                          "name": "devFund",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "13373:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3091,
                        "src": "13373:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13373:27:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13363:37:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 720,
                  "nodeType": "ExpressionStatement",
                  "src": "13363:37:12"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 722,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 609,
                        "src": "13434:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 723,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5388,
                          "src": "13443:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13443:12:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 721,
                      "name": "ElderSpiritMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "13416:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13416:40:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 726,
                  "nodeType": "EmitStatement",
                  "src": "13411:45:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 727,
                    "name": "elderId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 609,
                    "src": "13474:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 583,
                  "id": 728,
                  "nodeType": "Return",
                  "src": "13467:14:12"
                }
              ]
            },
            "documentation": {
              "id": 568,
              "nodeType": "StructuredDocumentation",
              "src": "11287:419:12",
              "text": "@notice Mints an elder spirit\n @dev For now only race, class, and token (affinity) are needed. This will change. The race and class ids will\n probably be public constants defined in the crypto champions contract, this is subject to change.\n @param raceId The race id\n @param classId The class id\n @param affinity The affinity of the minted hero\n @return The elder spirit id"
            },
            "functionSelector": "0fbea841",
            "id": 730,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 578,
                      "name": "Phase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "11859:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Phase_$28_$",
                        "typeString": "type(enum CryptoChampions.Phase)"
                      }
                    },
                    "id": 579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "SETUP",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "11859:11:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Phase_$28",
                      "typeString": "enum CryptoChampions.Phase"
                    }
                  }
                ],
                "id": 580,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 577,
                  "name": "atPhase",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 308,
                  "src": "11851:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_enum$_Phase_$28_$",
                    "typeString": "modifier (enum CryptoChampions.Phase)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "11851:20:12"
              }
            ],
            "name": "mintElderSpirit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 576,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11842:8:12"
            },
            "parameters": {
              "id": 575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 570,
                  "mutability": "mutable",
                  "name": "raceId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 730,
                  "src": "11745:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 569,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11745:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 572,
                  "mutability": "mutable",
                  "name": "classId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 730,
                  "src": "11769:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 571,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11769:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 574,
                  "mutability": "mutable",
                  "name": "affinity",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 730,
                  "src": "11794:24:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 573,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11794:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11735:89:12"
            },
            "returnParameters": {
              "id": 583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 582,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 730,
                  "src": "11881:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 581,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11881:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11880:9:12"
            },
            "scope": 2343,
            "src": "11711:1777:12",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4539
            ],
            "body": {
              "id": 757,
              "nodeType": "Block",
              "src": "13738:144:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 743,
                            "name": "_elderOwners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91,
                            "src": "13756:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 745,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 744,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 733,
                            "src": "13769:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13756:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 748,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13789:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 747,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13781:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 746,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13781:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13781:10:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "13756:35:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 742,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13748:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13748:44:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 752,
                  "nodeType": "ExpressionStatement",
                  "src": "13748:44:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 753,
                      "name": "_elderOwners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "13854:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 755,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 754,
                      "name": "elderId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 733,
                      "src": "13867:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13854:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 741,
                  "id": 756,
                  "nodeType": "Return",
                  "src": "13847:28:12"
                }
              ]
            },
            "documentation": {
              "id": 731,
              "nodeType": "StructuredDocumentation",
              "src": "13494:130:12",
              "text": "@notice Gets the elder owner for the given elder id\n @param elderId The elder id\n @return The owner of the elder"
            },
            "functionSelector": "72eda5bb",
            "id": 758,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 737,
                    "name": "elderId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 733,
                    "src": "13711:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 738,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 736,
                  "name": "isValidElderSpiritId",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 261,
                  "src": "13690:20:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "13690:29:12"
              }
            ],
            "name": "getElderOwner",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 735,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "13681:8:12"
            },
            "parameters": {
              "id": 734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 733,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 758,
                  "src": "13652:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 732,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13652:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13651:17:12"
            },
            "returnParameters": {
              "id": 741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 740,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 758,
                  "src": "13729:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13729:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13728:9:12"
            },
            "scope": 2343,
            "src": "13629:253:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4548
            ],
            "body": {
              "id": 1021,
              "nodeType": "Block",
              "src": "14251:2374:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 777,
                            "name": "_elderSpirits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "14269:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$4454_storage_$",
                              "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                            }
                          },
                          "id": 779,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 778,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 761,
                            "src": "14283:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14269:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ElderSpirit_$4454_storage",
                            "typeString": "struct ElderSpirit storage ref"
                          }
                        },
                        "id": 780,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "valid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4445,
                        "src": "14269:28:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 776,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14261:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14261:37:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 782,
                  "nodeType": "ExpressionStatement",
                  "src": "14261:37:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 785,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 761,
                            "src": "14381:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 784,
                          "name": "_canMintHero",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1090,
                          "src": "14368:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14368:21:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 783,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14360:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14360:30:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 788,
                  "nodeType": "ExpressionStatement",
                  "src": "14360:30:12"
                },
                {
                  "assignments": [
                    790
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 790,
                      "mutability": "mutable",
                      "name": "mintPrice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1021,
                      "src": "14460:17:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 789,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14460:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 795,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 792,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "14497:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 793,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 761,
                        "src": "14511:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 791,
                      "name": "getHeroMintPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1655,
                      "src": "14480:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14480:39:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14460:59:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 797,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "14537:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "14537:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 799,
                          "name": "mintPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 790,
                          "src": "14550:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14537:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 796,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14529:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14529:31:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 802,
                  "nodeType": "ExpressionStatement",
                  "src": "14529:31:12"
                },
                {
                  "assignments": [
                    804
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 804,
                      "mutability": "mutable",
                      "name": "heroId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1021,
                      "src": "14633:14:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 803,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14633:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 811,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14667:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 805,
                          "name": "heroesMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "14650:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3091,
                        "src": "14650:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14650:19:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 809,
                      "name": "MAX_NUMBER_OF_ELDERS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "14672:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14650:42:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14633:59:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 813,
                            "name": "_heroOwners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102,
                            "src": "14709:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 815,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 814,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 804,
                            "src": "14721:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14709:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14740:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14732:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 816,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14732:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14732:10:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "14709:33:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 812,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "14702:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14702:41:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 822,
                  "nodeType": "ExpressionStatement",
                  "src": "14702:41:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 824,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "14803:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 826,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 825,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 804,
                              "src": "14811:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14803:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4509_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 827,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "valid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4456,
                          "src": "14803:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14828:5:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "14803:30:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 823,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "14796:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14796:38:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 831,
                  "nodeType": "ExpressionStatement",
                  "src": "14796:38:12"
                },
                {
                  "assignments": [
                    833
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 833,
                      "mutability": "mutable",
                      "name": "hero",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1021,
                      "src": "14921:16:12",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Hero_$4509_memory_ptr",
                        "typeString": "struct Hero"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 832,
                        "name": "Hero",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4509,
                        "src": "14921:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4509_storage_ptr",
                          "typeString": "struct Hero"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 834,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14921:16:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 835,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 833,
                        "src": "14947:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4509_memory_ptr",
                          "typeString": "struct Hero memory"
                        }
                      },
                      "id": 837,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "valid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4456,
                      "src": "14947:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14960:4:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "14947:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 840,
                  "nodeType": "ExpressionStatement",
                  "src": "14947:17:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 841,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 833,
                        "src": "14974:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4509_memory_ptr",
                          "typeString": "struct Hero memory"
                        }
                      },
                      "id": 843,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4458,
                      "src": "14974:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 844,
                      "name": "heroName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 763,
                      "src": "14986:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "14974:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 846,
                  "nodeType": "ExpressionStatement",
                  "src": "14974:20:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 847,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 833,
                        "src": "15004:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4509_memory_ptr",
                          "typeString": "struct Hero memory"
                        }
                      },
                      "id": 849,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "roundMinted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4464,
                      "src": "15004:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 850,
                      "name": "currentRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "15023:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15004:31:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 852,
                  "nodeType": "ExpressionStatement",
                  "src": "15004:31:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 853,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 833,
                        "src": "15045:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4509_memory_ptr",
                          "typeString": "struct Hero memory"
                        }
                      },
                      "id": 855,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "elderId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4466,
                      "src": "15045:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 856,
                      "name": "elderId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 761,
                      "src": "15060:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15045:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 858,
                  "nodeType": "ExpressionStatement",
                  "src": "15045:22:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 859,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 833,
                        "src": "15077:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4509_memory_ptr",
                          "typeString": "struct Hero memory"
                        }
                      },
                      "id": 861,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "raceId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4468,
                      "src": "15077:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 862,
                          "name": "_elderSpirits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 95,
                          "src": "15091:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$4454_storage_$",
                            "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                          }
                        },
                        "id": 864,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 863,
                          "name": "elderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 761,
                          "src": "15105:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15091:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$4454_storage",
                          "typeString": "struct ElderSpirit storage ref"
                        }
                      },
                      "id": 865,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "raceId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4447,
                      "src": "15091:29:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15077:43:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 867,
                  "nodeType": "ExpressionStatement",
                  "src": "15077:43:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 868,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 833,
                        "src": "15130:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4509_memory_ptr",
                          "typeString": "struct Hero memory"
                        }
                      },
                      "id": 870,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "classId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4470,
                      "src": "15130:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 871,
                          "name": "_elderSpirits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 95,
                          "src": "15145:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$4454_storage_$",
                            "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                          }
                        },
                        "id": 873,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 872,
                          "name": "elderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 761,
                          "src": "15159:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15145:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$4454_storage",
                          "typeString": "struct ElderSpirit storage ref"
                        }
                      },
                      "id": 874,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "classId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4449,
                      "src": "15145:30:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15130:45:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 876,
                  "nodeType": "ExpressionStatement",
                  "src": "15130:45:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 877,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 833,
                        "src": "15185:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4509_memory_ptr",
                          "typeString": "struct Hero memory"
                        }
                      },
                      "id": 879,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "affinity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4460,
                      "src": "15185:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 880,
                          "name": "_elderSpirits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 95,
                          "src": "15201:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$4454_storage_$",
                            "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                          }
                        },
                        "id": 882,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 881,
                          "name": "elderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 761,
                          "src": "15215:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15201:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$4454_storage",
                          "typeString": "struct ElderSpirit storage ref"
                        }
                      },
                      "id": 883,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "affinity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4451,
                      "src": "15201:31:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "15185:47:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 885,
                  "nodeType": "ExpressionStatement",
                  "src": "15185:47:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 886,
                        "name": "_heroes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "15242:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                          "typeString": "mapping(uint256 => struct Hero storage ref)"
                        }
                      },
                      "id": 888,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 887,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 804,
                        "src": "15250:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15242:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Hero_$4509_storage",
                        "typeString": "struct Hero storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 889,
                      "name": "hero",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 833,
                      "src": "15260:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Hero_$4509_memory_ptr",
                        "typeString": "struct Hero memory"
                      }
                    },
                    "src": "15242:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Hero_$4509_storage",
                      "typeString": "struct Hero storage ref"
                    }
                  },
                  "id": 891,
                  "nodeType": "ExpressionStatement",
                  "src": "15242:22:12"
                },
                {
                  "assignments": [
                    893
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 893,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1021,
                      "src": "15336:17:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 892,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "15336:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 897,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 895,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 804,
                        "src": "15373:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 894,
                      "name": "_getRandomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 494,
                      "src": "15356:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256) returns (bytes32)"
                      }
                    },
                    "id": 896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15356:24:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15336:44:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 898,
                        "name": "_heroRandomRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 131,
                        "src": "15390:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 900,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 899,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 893,
                        "src": "15409:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15390:29:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 901,
                      "name": "heroId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 804,
                      "src": "15422:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15390:38:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 903,
                  "nodeType": "ExpressionStatement",
                  "src": "15390:38:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 905,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5388,
                          "src": "15469:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15469:12:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 907,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 804,
                        "src": "15483:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15491:1:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15494:2:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 904,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3820,
                      "src": "15463:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15463:34:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 911,
                  "nodeType": "ExpressionStatement",
                  "src": "15463:34:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 913,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5388,
                          "src": "15576:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15576:12:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 915,
                        "name": "IN_GAME_CURRENCY_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "15590:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 916,
                        "name": "NUM_TOKENS_MINTED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "15611:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15630:2:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 912,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3820,
                      "src": "15570:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15570:63:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 919,
                  "nodeType": "ExpressionStatement",
                  "src": "15570:63:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 920,
                        "name": "_heroOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "15707:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 922,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 921,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 804,
                        "src": "15719:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15707:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 923,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5388,
                        "src": "15729:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                          "typeString": "function () view returns (address payable)"
                        }
                      },
                      "id": 924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15729:12:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "15707:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 926,
                  "nodeType": "ExpressionStatement",
                  "src": "15707:34:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 927,
                      "name": "heroesMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "15812:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15844:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 928,
                          "name": "heroesMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "15827:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3091,
                        "src": "15827:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15827:19:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15812:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 933,
                  "nodeType": "ExpressionStatement",
                  "src": "15812:34:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 934,
                          "name": "_roundElderSpawns",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 112,
                          "src": "15856:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 937,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 935,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "15874:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15856:31:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 938,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 936,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 761,
                        "src": "15888:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15856:40:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15944:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 939,
                              "name": "_roundElderSpawns",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 112,
                              "src": "15899:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 941,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 940,
                              "name": "currentRound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 116,
                              "src": "15917:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15899:31:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 943,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 942,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 761,
                            "src": "15931:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15899:40:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3091,
                        "src": "15899:44:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15899:47:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15856:90:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 948,
                  "nodeType": "ExpressionStatement",
                  "src": "15856:90:12"
                },
                {
                  "assignments": [
                    950
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 950,
                      "mutability": "mutable",
                      "name": "royaltyFee",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1021,
                      "src": "15987:18:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 949,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15987:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 958,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16053:3:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 953,
                            "name": "HERO_MINT_ROYALTY_PERCENT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "16022:25:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 951,
                            "name": "mintPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 790,
                            "src": "16008:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3147,
                          "src": "16008:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16008:40:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3169,
                      "src": "16008:44:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16008:49:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15987:70:12"
                },
                {
                  "assignments": [
                    960
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 960,
                      "mutability": "mutable",
                      "name": "seedOwner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1021,
                      "src": "16067:17:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 959,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "16067:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 964,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 961,
                      "name": "_elderOwners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "16087:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 963,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 962,
                      "name": "elderId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 761,
                      "src": "16100:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "16087:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16067:41:12"
                },
                {
                  "assignments": [
                    966,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 966,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1021,
                      "src": "16119:12:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 965,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "16119:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 973,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16173:2:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 967,
                          "name": "seedOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 960,
                          "src": "16137:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "16137:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "argumentTypes": null,
                          "id": 969,
                          "name": "royaltyFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 950,
                          "src": "16160:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "16137:35:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16137:39:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16118:58:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 975,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 966,
                        "src": "16194:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5061796d656e74206661696c6564",
                        "id": 976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16203:16:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87ec06ce2059ab3cf6fe4dd2fb1218712f1c693016c832faa431271492b69c3e",
                          "typeString": "literal_string \"Payment failed\""
                        },
                        "value": "Payment failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87ec06ce2059ab3cf6fe4dd2fb1218712f1c693016c832faa431271492b69c3e",
                          "typeString": "literal_string \"Payment failed\""
                        }
                      ],
                      "id": 974,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16186:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16186:34:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 978,
                  "nodeType": "ExpressionStatement",
                  "src": "16186:34:12"
                },
                {
                  "assignments": [
                    980
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 980,
                      "mutability": "mutable",
                      "name": "devFee",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1021,
                      "src": "16280:14:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 979,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16280:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 988,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16338:3:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 983,
                            "name": "HERO_MINT_DEV_PERCENT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "16311:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 981,
                            "name": "mintPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 790,
                            "src": "16297:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3147,
                          "src": "16297:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16297:36:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3169,
                      "src": "16297:40:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16297:45:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16280:62:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 989,
                      "name": "devFund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "16352:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 992,
                          "name": "devFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 980,
                          "src": "16374:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 990,
                          "name": "devFund",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "16362:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3091,
                        "src": "16362:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16362:19:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16352:29:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 995,
                  "nodeType": "ExpressionStatement",
                  "src": "16352:29:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 996,
                      "name": "rewardsPoolAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "16391:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1004,
                              "name": "devFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 980,
                              "src": "16463:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1001,
                                  "name": "royaltyFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 950,
                                  "src": "16447:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 999,
                                  "name": "mintPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 790,
                                  "src": "16433:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1000,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3113,
                                "src": "16433:13:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16433:25:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3113,
                            "src": "16433:29:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16433:37:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 997,
                          "name": "rewardsPoolAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "16411:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3091,
                        "src": "16411:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16411:60:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16391:80:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1008,
                  "nodeType": "ExpressionStatement",
                  "src": "16391:80:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1010,
                        "name": "mintPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 790,
                        "src": "16536:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1009,
                      "name": "_refundSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1847,
                      "src": "16522:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16522:24:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1012,
                  "nodeType": "ExpressionStatement",
                  "src": "16522:24:12"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1014,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 804,
                        "src": "16573:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1015,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5388,
                          "src": "16581:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 1016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16581:12:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1013,
                      "name": "HeroMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "16562:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 1017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16562:32:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1018,
                  "nodeType": "EmitStatement",
                  "src": "16557:37:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1019,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 804,
                    "src": "16612:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 775,
                  "id": 1020,
                  "nodeType": "Return",
                  "src": "16605:13:12"
                }
              ]
            },
            "documentation": {
              "id": 759,
              "nodeType": "StructuredDocumentation",
              "src": "13888:149:12",
              "text": "@notice Mints a hero based on an elder spirit\n @param elderId The id of the elder spirit this hero is based on\n @return The hero id"
            },
            "functionSelector": "498e8219",
            "id": 1022,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 767,
                    "name": "elderId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 761,
                    "src": "14182:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 768,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 766,
                  "name": "isValidElderSpiritId",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 261,
                  "src": "14161:20:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "14161:29:12"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 770,
                      "name": "Phase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "14207:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Phase_$28_$",
                        "typeString": "type(enum CryptoChampions.Phase)"
                      }
                    },
                    "id": 771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "ACTION",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "14207:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Phase_$28",
                      "typeString": "enum CryptoChampions.Phase"
                    }
                  }
                ],
                "id": 772,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 769,
                  "name": "atPhase",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 308,
                  "src": "14199:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_enum$_Phase_$28_$",
                    "typeString": "modifier (enum CryptoChampions.Phase)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "14199:21:12"
              }
            ],
            "name": "mintHero",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 765,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "14144:8:12"
            },
            "parameters": {
              "id": 764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 761,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1022,
                  "src": "14060:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 760,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14060:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 763,
                  "mutability": "mutable",
                  "name": "heroName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1022,
                  "src": "14077:24:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 762,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14077:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14059:43:12"
            },
            "returnParameters": {
              "id": 775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 774,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1022,
                  "src": "14238:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 773,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14238:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14237:9:12"
            },
            "scope": 2343,
            "src": "14042:2583:12",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1089,
              "nodeType": "Block",
              "src": "17059:598:12",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1030,
                          "name": "_roundElderSpawns",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 112,
                          "src": "17107:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 1032,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1031,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "17125:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17107:31:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1034,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1033,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1025,
                        "src": "17139:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "17107:40:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "34",
                      "id": 1035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17150:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "src": "17107:44:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1040,
                  "nodeType": "IfStatement",
                  "src": "17103:86:12",
                  "trueBody": {
                    "id": 1039,
                    "nodeType": "Block",
                    "src": "17153:36:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17174:4:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1029,
                        "id": 1038,
                        "nodeType": "Return",
                        "src": "17167:11:12"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1042
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1042,
                      "mutability": "mutable",
                      "name": "smallestElderAmount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1089,
                      "src": "17264:27:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1041,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17264:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1048,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1043,
                        "name": "_roundElderSpawns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "17294:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                        }
                      },
                      "id": 1045,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1044,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "17312:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "17294:31:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 1047,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1046,
                      "name": "elderId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1025,
                      "src": "17326:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17294:40:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17264:70:12"
                },
                {
                  "body": {
                    "id": 1076,
                    "nodeType": "Block",
                    "src": "17388:175:12",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1059,
                                "name": "_roundElderSpawns",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 112,
                                "src": "17406:17:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                                }
                              },
                              "id": 1061,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1060,
                                "name": "currentRound",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 116,
                                "src": "17424:12:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "17406:31:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 1063,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1062,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1050,
                              "src": "17438:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17406:34:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1064,
                            "name": "smallestElderAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1042,
                            "src": "17443:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17406:56:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1075,
                        "nodeType": "IfStatement",
                        "src": "17402:151:12",
                        "trueBody": {
                          "id": 1074,
                          "nodeType": "Block",
                          "src": "17464:89:12",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1072,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1066,
                                  "name": "smallestElderAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1042,
                                  "src": "17482:19:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1067,
                                      "name": "_roundElderSpawns",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 112,
                                      "src": "17504:17:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                        "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                                      }
                                    },
                                    "id": 1069,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1068,
                                      "name": "currentRound",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 116,
                                      "src": "17522:12:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "17504:31:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 1071,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1070,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1050,
                                    "src": "17536:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "17504:34:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17482:56:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1073,
                              "nodeType": "ExpressionStatement",
                              "src": "17482:56:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1053,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1050,
                      "src": "17364:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1054,
                      "name": "eldersInGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "17369:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17364:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1077,
                  "initializationExpression": {
                    "assignments": [
                      1050
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1050,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1077,
                        "src": "17349:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1049,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17349:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1052,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17361:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "17349:13:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "17383:3:12",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1056,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1050,
                        "src": "17385:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1058,
                    "nodeType": "ExpressionStatement",
                    "src": "17383:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "17344:219:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1078,
                          "name": "_roundElderSpawns",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 112,
                          "src": "17580:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 1080,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1079,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "17598:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17580:31:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1082,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1081,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1025,
                        "src": "17612:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "17580:40:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 1085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17648:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1083,
                          "name": "smallestElderAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1042,
                          "src": "17624:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3147,
                        "src": "17624:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17624:26:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17580:70:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1029,
                  "id": 1088,
                  "nodeType": "Return",
                  "src": "17573:77:12"
                }
              ]
            },
            "documentation": {
              "id": 1023,
              "nodeType": "StructuredDocumentation",
              "src": "16631:355:12",
              "text": "@notice Checks to see if a hero can be minted for a given elder\n @dev (n < 4) || (n <= 2 * m)\n     n is number of champions already minted for elder\n     m is number of champions already minted for elder with least amount of champions\n @param elderId The elder id\n @return True if hero can be minted, false otherwise"
            },
            "id": 1090,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canMintHero",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1025,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1090,
                  "src": "17013:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1024,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17013:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17012:17:12"
            },
            "returnParameters": {
              "id": 1029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1028,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1090,
                  "src": "17053:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1027,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17053:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17052:6:12"
            },
            "scope": 2343,
            "src": "16991:666:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1483,
              "nodeType": "Block",
              "src": "17860:2658:12",
              "statements": [
                {
                  "assignments": [
                    1102
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1102,
                      "mutability": "mutable",
                      "name": "heroId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1483,
                      "src": "17870:14:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1101,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17870:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1106,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1103,
                      "name": "_heroRandomRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 131,
                      "src": "17887:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 1105,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1104,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1093,
                      "src": "17906:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17887:29:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17870:46:12"
                },
                {
                  "assignments": [
                    1108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1108,
                      "mutability": "mutable",
                      "name": "randomNumber",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1483,
                      "src": "17926:20:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1107,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17926:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1112,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1109,
                      "name": "_randomResultsVRF",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135,
                      "src": "17949:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 1111,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1110,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1093,
                      "src": "17967:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17949:28:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17926:51:12"
                },
                {
                  "assignments": [
                    1114
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1114,
                      "mutability": "mutable",
                      "name": "newRandomNumber",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1483,
                      "src": "17987:23:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1113,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17987:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1115,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17987:23:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1116,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "18021:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1118,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1117,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1102,
                          "src": "18029:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18021:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4509_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1119,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4490,
                      "src": "18021:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18045:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "18021:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1122,
                  "nodeType": "ExpressionStatement",
                  "src": "18021:25:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1123,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "18073:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1125,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1124,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1102,
                              "src": "18081:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "18073:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4509_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1126,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "appearance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4472,
                          "src": "18073:26:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1127,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "18101:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1128,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "18072:45:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 1130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18130:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1131,
                          "name": "randomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1108,
                          "src": "18133:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1129,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1513,
                        "src": "18120:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18120:26:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "18072:74:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1134,
                  "nodeType": "ExpressionStatement",
                  "src": "18072:74:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1135,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "18172:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1137,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1136,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1102,
                              "src": "18180:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "18172:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4509_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1138,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "trait1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4474,
                          "src": "18172:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1139,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "18196:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1140,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "18171:41:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "34",
                          "id": 1142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18225:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1143,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "18228:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1141,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1513,
                        "src": "18215:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18215:29:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "18171:73:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1146,
                  "nodeType": "ExpressionStatement",
                  "src": "18171:73:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1147,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "18269:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1149,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1148,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1102,
                              "src": "18277:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "18269:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4509_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1150,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "trait2",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4476,
                          "src": "18269:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1151,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "18293:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1152,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "18268:41:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "34",
                          "id": 1154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18322:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1155,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "18325:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1153,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1513,
                        "src": "18312:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18312:29:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "18268:73:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1158,
                  "nodeType": "ExpressionStatement",
                  "src": "18268:73:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1159,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "18366:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1161,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1160,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1102,
                              "src": "18374:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "18366:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4509_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1162,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "skill1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4478,
                          "src": "18366:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1163,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "18390:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1164,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "18365:41:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "34",
                          "id": 1166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18419:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1167,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "18422:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1165,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1513,
                        "src": "18409:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18409:29:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "18365:73:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1170,
                  "nodeType": "ExpressionStatement",
                  "src": "18365:73:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1171,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "18463:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1173,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1172,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1102,
                              "src": "18471:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "18463:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4509_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1174,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "skill2",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4480,
                          "src": "18463:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1175,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "18487:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1176,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "18462:41:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "34",
                          "id": 1178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18516:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1179,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "18519:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1177,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1513,
                        "src": "18506:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18506:29:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "18462:73:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1182,
                  "nodeType": "ExpressionStatement",
                  "src": "18462:73:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1183,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "18561:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1185,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1184,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1102,
                              "src": "18569:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "18561:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4509_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1186,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "alignment",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4482,
                          "src": "18561:25:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1187,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "18588:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1188,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "18560:44:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "39",
                          "id": 1190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18617:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          },
                          "value": "9"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1191,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "18620:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1189,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1513,
                        "src": "18607:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18607:29:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "18560:76:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1194,
                  "nodeType": "ExpressionStatement",
                  "src": "18560:76:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1195,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "18661:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1197,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1196,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1102,
                              "src": "18669:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "18661:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4509_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1198,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "background",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4484,
                          "src": "18661:26:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1199,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "18689:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1200,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "18660:45:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3330",
                          "id": 1202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18718:2:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1203,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "18722:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1201,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1513,
                        "src": "18708:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18708:30:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "18660:78:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1206,
                  "nodeType": "ExpressionStatement",
                  "src": "18660:78:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1207,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "18764:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1209,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1208,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1102,
                              "src": "18772:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "18764:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4509_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1210,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "hometown",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4486,
                          "src": "18764:24:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1211,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "18790:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1212,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "18763:43:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3234",
                          "id": 1214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18819:2:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_24_by_1",
                            "typeString": "int_const 24"
                          },
                          "value": "24"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1215,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "18823:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_24_by_1",
                            "typeString": "int_const 24"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1213,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1513,
                        "src": "18809:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18809:30:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "18763:76:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1218,
                  "nodeType": "ExpressionStatement",
                  "src": "18763:76:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1219,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "18865:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1221,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1220,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1102,
                              "src": "18873:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "18865:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4509_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1222,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "weather",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4488,
                          "src": "18865:23:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1223,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "18890:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1224,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "18864:42:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "37",
                          "id": 1226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18919:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_7_by_1",
                            "typeString": "int_const 7"
                          },
                          "value": "7"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1227,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "18922:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_7_by_1",
                            "typeString": "int_const 7"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1225,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1513,
                        "src": "18909:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18909:29:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "18864:74:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1230,
                  "nodeType": "ExpressionStatement",
                  "src": "18864:74:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1231,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "18964:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1233,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1232,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1102,
                              "src": "18972:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "18964:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4509_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1234,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "hp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4492,
                          "src": "18964:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1235,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "18984:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1236,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "18963:37:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3231",
                          "id": 1238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19013:2:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_21_by_1",
                            "typeString": "int_const 21"
                          },
                          "value": "21"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1239,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "19017:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_21_by_1",
                            "typeString": "int_const 21"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1237,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1513,
                        "src": "19003:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19003:30:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "18963:70:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1242,
                  "nodeType": "ExpressionStatement",
                  "src": "18963:70:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1243,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "19057:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1245,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1244,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1102,
                          "src": "19065:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19057:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4509_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1246,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "hp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4492,
                      "src": "19057:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "39",
                              "id": 1254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19107:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              },
                              "value": "9"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1249,
                                  "name": "_heroes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 106,
                                  "src": "19084:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                    "typeString": "mapping(uint256 => struct Hero storage ref)"
                                  }
                                },
                                "id": 1251,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1250,
                                  "name": "heroId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1102,
                                  "src": "19092:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "19084:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Hero_$4509_storage",
                                  "typeString": "struct Hero storage ref"
                                }
                              },
                              "id": 1252,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "hp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4492,
                              "src": "19084:18:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 1253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3091,
                            "src": "19084:22:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19084:25:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "19078:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 1247,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "19078:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19078:32:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "19057:53:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1258,
                  "nodeType": "ExpressionStatement",
                  "src": "19057:53:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1259,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "19121:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1261,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1260,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1102,
                              "src": "19129:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "19121:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4509_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1262,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "mana",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4494,
                          "src": "19121:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1263,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "19143:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1264,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "19120:39:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3231",
                          "id": 1266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19172:2:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_21_by_1",
                            "typeString": "int_const 21"
                          },
                          "value": "21"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1267,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "19176:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_21_by_1",
                            "typeString": "int_const 21"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1265,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1513,
                        "src": "19162:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19162:30:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "19120:72:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1270,
                  "nodeType": "ExpressionStatement",
                  "src": "19120:72:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1271,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "19216:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1273,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1272,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1102,
                          "src": "19224:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19216:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4509_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1274,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "mana",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4494,
                      "src": "19216:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "39",
                              "id": 1282,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19270:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              },
                              "value": "9"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1277,
                                  "name": "_heroes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 106,
                                  "src": "19245:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                    "typeString": "mapping(uint256 => struct Hero storage ref)"
                                  }
                                },
                                "id": 1279,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1278,
                                  "name": "heroId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1102,
                                  "src": "19253:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "19245:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Hero_$4509_storage",
                                  "typeString": "struct Hero storage ref"
                                }
                              },
                              "id": 1280,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mana",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4494,
                              "src": "19245:20:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 1281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3091,
                            "src": "19245:24:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19245:27:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "19239:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 1275,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "19239:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19239:34:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "19216:57:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1286,
                  "nodeType": "ExpressionStatement",
                  "src": "19216:57:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1287,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "19284:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1289,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1288,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1102,
                              "src": "19292:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "19284:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4509_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1290,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "stamina",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4496,
                          "src": "19284:23:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1291,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "19309:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1292,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "19283:42:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3331",
                          "id": 1294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19338:2:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_31_by_1",
                            "typeString": "int_const 31"
                          },
                          "value": "31"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1295,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "19342:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_31_by_1",
                            "typeString": "int_const 31"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1293,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1513,
                        "src": "19328:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19328:30:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "19283:75:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1298,
                  "nodeType": "ExpressionStatement",
                  "src": "19283:75:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1299,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "19382:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1301,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1300,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1102,
                          "src": "19390:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19382:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4509_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1302,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stamina",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4496,
                      "src": "19382:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "39",
                              "id": 1310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19442:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              },
                              "value": "9"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1305,
                                  "name": "_heroes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 106,
                                  "src": "19414:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                    "typeString": "mapping(uint256 => struct Hero storage ref)"
                                  }
                                },
                                "id": 1307,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1306,
                                  "name": "heroId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1102,
                                  "src": "19422:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "19414:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Hero_$4509_storage",
                                  "typeString": "struct Hero storage ref"
                                }
                              },
                              "id": 1308,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "stamina",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4496,
                              "src": "19414:23:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 1309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3091,
                            "src": "19414:27:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19414:30:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "19408:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 1303,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "19408:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19408:37:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "19382:63:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1314,
                  "nodeType": "ExpressionStatement",
                  "src": "19382:63:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1315,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "19457:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1317,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1316,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1102,
                              "src": "19465:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "19457:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4509_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1318,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "strength",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4498,
                          "src": "19457:24:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1319,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "19483:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1320,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "19456:43:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3136",
                          "id": 1322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19512:2:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1323,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "19516:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1321,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1513,
                        "src": "19502:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19502:30:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "19456:76:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1326,
                  "nodeType": "ExpressionStatement",
                  "src": "19456:76:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1327,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "19555:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1329,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1328,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1102,
                          "src": "19563:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19555:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4509_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1330,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "strength",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4498,
                      "src": "19555:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1338,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19617:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1333,
                                  "name": "_heroes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 106,
                                  "src": "19588:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                    "typeString": "mapping(uint256 => struct Hero storage ref)"
                                  }
                                },
                                "id": 1335,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1334,
                                  "name": "heroId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1102,
                                  "src": "19596:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "19588:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Hero_$4509_storage",
                                  "typeString": "struct Hero storage ref"
                                }
                              },
                              "id": 1336,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "strength",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4498,
                              "src": "19588:24:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 1337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3091,
                            "src": "19588:28:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19588:31:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "19582:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 1331,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "19582:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19582:38:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "19555:65:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1342,
                  "nodeType": "ExpressionStatement",
                  "src": "19555:65:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1343,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "19631:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1345,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1344,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1102,
                              "src": "19639:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "19631:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4509_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1346,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "dexterity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4500,
                          "src": "19631:25:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1347,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "19658:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1348,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "19630:44:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3136",
                          "id": 1350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19687:2:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1351,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "19691:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1349,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1513,
                        "src": "19677:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19677:30:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "19630:77:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1354,
                  "nodeType": "ExpressionStatement",
                  "src": "19630:77:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1355,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "19730:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1357,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1356,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1102,
                          "src": "19738:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19730:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4509_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1358,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "dexterity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4500,
                      "src": "19730:25:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19794:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1361,
                                  "name": "_heroes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 106,
                                  "src": "19764:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                    "typeString": "mapping(uint256 => struct Hero storage ref)"
                                  }
                                },
                                "id": 1363,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1362,
                                  "name": "heroId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1102,
                                  "src": "19772:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "19764:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Hero_$4509_storage",
                                  "typeString": "struct Hero storage ref"
                                }
                              },
                              "id": 1364,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "dexterity",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4500,
                              "src": "19764:25:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 1365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3091,
                            "src": "19764:29:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19764:32:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "19758:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 1359,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "19758:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19758:39:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "19730:67:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1370,
                  "nodeType": "ExpressionStatement",
                  "src": "19730:67:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1371,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "19808:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1373,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1372,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1102,
                              "src": "19816:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "19808:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4509_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1374,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "constitution",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4502,
                          "src": "19808:28:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1375,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "19838:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1376,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "19807:47:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3136",
                          "id": 1378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19867:2:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1379,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "19871:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1377,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1513,
                        "src": "19857:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19857:30:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "19807:80:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1382,
                  "nodeType": "ExpressionStatement",
                  "src": "19807:80:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1383,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "19910:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1385,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1384,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1102,
                          "src": "19918:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19910:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4509_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1386,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "constitution",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4502,
                      "src": "19910:28:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1394,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19980:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1389,
                                  "name": "_heroes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 106,
                                  "src": "19947:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                    "typeString": "mapping(uint256 => struct Hero storage ref)"
                                  }
                                },
                                "id": 1391,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1390,
                                  "name": "heroId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1102,
                                  "src": "19955:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "19947:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Hero_$4509_storage",
                                  "typeString": "struct Hero storage ref"
                                }
                              },
                              "id": 1392,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "constitution",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4502,
                              "src": "19947:28:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 1393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3091,
                            "src": "19947:32:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19947:35:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "19941:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 1387,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "19941:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19941:42:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "19910:73:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1398,
                  "nodeType": "ExpressionStatement",
                  "src": "19910:73:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1399,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "19994:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1401,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1400,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1102,
                              "src": "20002:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "19994:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4509_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1402,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "intelligence",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4504,
                          "src": "19994:28:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1403,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "20024:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1404,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "19993:47:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3136",
                          "id": 1406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20053:2:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1407,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "20057:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1405,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1513,
                        "src": "20043:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20043:30:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "19993:80:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1410,
                  "nodeType": "ExpressionStatement",
                  "src": "19993:80:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1411,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "20096:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1413,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1412,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1102,
                          "src": "20104:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "20096:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4509_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1414,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "intelligence",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4504,
                      "src": "20096:28:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20166:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1417,
                                  "name": "_heroes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 106,
                                  "src": "20133:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                    "typeString": "mapping(uint256 => struct Hero storage ref)"
                                  }
                                },
                                "id": 1419,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1418,
                                  "name": "heroId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1102,
                                  "src": "20141:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20133:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Hero_$4509_storage",
                                  "typeString": "struct Hero storage ref"
                                }
                              },
                              "id": 1420,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "intelligence",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4504,
                              "src": "20133:28:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 1421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3091,
                            "src": "20133:32:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20133:35:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "20127:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 1415,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "20127:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20127:42:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "20096:73:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1426,
                  "nodeType": "ExpressionStatement",
                  "src": "20096:73:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1427,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "20180:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1429,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1428,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1102,
                              "src": "20188:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20180:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4509_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1430,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "wisdom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4506,
                          "src": "20180:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1431,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "20204:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1432,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "20179:41:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3136",
                          "id": 1434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20233:2:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1435,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "20237:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1433,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1513,
                        "src": "20223:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20223:30:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "20179:74:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1438,
                  "nodeType": "ExpressionStatement",
                  "src": "20179:74:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1439,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "20276:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1441,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1440,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1102,
                          "src": "20284:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "20276:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4509_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1442,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "wisdom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4506,
                      "src": "20276:22:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20334:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1445,
                                  "name": "_heroes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 106,
                                  "src": "20307:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                    "typeString": "mapping(uint256 => struct Hero storage ref)"
                                  }
                                },
                                "id": 1447,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1446,
                                  "name": "heroId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1102,
                                  "src": "20315:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20307:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Hero_$4509_storage",
                                  "typeString": "struct Hero storage ref"
                                }
                              },
                              "id": 1448,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "wisdom",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4506,
                              "src": "20307:22:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 1449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3091,
                            "src": "20307:26:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20307:29:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "20301:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 1443,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "20301:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20301:36:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "20276:61:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1454,
                  "nodeType": "ExpressionStatement",
                  "src": "20276:61:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1455,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "20348:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1457,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1456,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1102,
                              "src": "20356:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20348:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4509_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1458,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "charisma",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4508,
                          "src": "20348:24:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1459,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "20374:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1460,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "20347:43:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3136",
                          "id": 1462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20403:2:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1463,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "20407:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1461,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1513,
                        "src": "20393:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20393:30:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "20347:76:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1466,
                  "nodeType": "ExpressionStatement",
                  "src": "20347:76:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1467,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "20446:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1469,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1468,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1102,
                          "src": "20454:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "20446:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4509_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1470,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "charisma",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4508,
                      "src": "20446:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20508:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1473,
                                  "name": "_heroes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 106,
                                  "src": "20479:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                    "typeString": "mapping(uint256 => struct Hero storage ref)"
                                  }
                                },
                                "id": 1475,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1474,
                                  "name": "heroId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1102,
                                  "src": "20487:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20479:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Hero_$4509_storage",
                                  "typeString": "struct Hero storage ref"
                                }
                              },
                              "id": 1476,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "charisma",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4508,
                              "src": "20479:24:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 1477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3091,
                            "src": "20479:28:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20479:31:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "20473:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 1471,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "20473:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20473:38:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "20446:65:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1482,
                  "nodeType": "ExpressionStatement",
                  "src": "20446:65:12"
                }
              ]
            },
            "documentation": {
              "id": 1091,
              "nodeType": "StructuredDocumentation",
              "src": "17663:101:12",
              "text": "@notice Sets the hero attributes\n @param requestId The request id that is mapped to a hero"
            },
            "id": 1484,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1096,
                      "name": "_heroRandomRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 131,
                      "src": "17829:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 1098,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1097,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1093,
                      "src": "17848:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17829:29:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1099,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1095,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 280,
                  "src": "17817:11:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "17817:42:12"
              }
            ],
            "name": "_trainHero",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1093,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1484,
                  "src": "17789:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1092,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17789:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17788:19:12"
            },
            "returnParameters": {
              "id": 1100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17860:0:12"
            },
            "scope": 2343,
            "src": "17769:2749:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1512,
              "nodeType": "Block",
              "src": "20879:89:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 1503,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20935:1:12",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1500,
                                    "name": "maxNumber",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1487,
                                    "src": "20920:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1498,
                                    "name": "randomNumber",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1489,
                                    "src": "20903:12:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1499,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mod",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3191,
                                  "src": "20903:16:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1501,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20903:27:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1502,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3091,
                              "src": "20903:31:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20903:34:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20897:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 1496,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "20897:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20897:41:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "3130",
                            "id": 1508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20957:2:12",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1506,
                            "name": "randomNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1489,
                            "src": "20940:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3169,
                          "src": "20940:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20940:20:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1510,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "20896:65:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                      "typeString": "tuple(uint8,uint256)"
                    }
                  },
                  "functionReturnParameters": 1495,
                  "id": 1511,
                  "nodeType": "Return",
                  "src": "20889:72:12"
                }
              ]
            },
            "documentation": {
              "id": 1485,
              "nodeType": "StructuredDocumentation",
              "src": "20524:253:12",
              "text": "@notice Simulates rolling dice\n @param maxNumber The max number of the dice (e.g. regular die is 6)\n @param randomNumber The random number\n @return The result of the dice roll and a new random number to use for another dice roll"
            },
            "id": 1513,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_rollDice",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1487,
                  "mutability": "mutable",
                  "name": "maxNumber",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1513,
                  "src": "20801:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1486,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "20801:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1489,
                  "mutability": "mutable",
                  "name": "randomNumber",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1513,
                  "src": "20818:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1488,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20818:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20800:39:12"
            },
            "returnParameters": {
              "id": 1495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1492,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1513,
                  "src": "20863:5:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1491,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "20863:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1494,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1513,
                  "src": "20870:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1493,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20870:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20862:16:12"
            },
            "scope": 2343,
            "src": "20782:186:12",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4555
            ],
            "body": {
              "id": 1540,
              "nodeType": "Block",
              "src": "21196:139:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1526,
                            "name": "_heroOwners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102,
                            "src": "21214:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 1528,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1527,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1516,
                            "src": "21226:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "21214:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21245:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "21237:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1529,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "21237:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21237:10:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "21214:33:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1525,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21206:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21206:42:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1535,
                  "nodeType": "ExpressionStatement",
                  "src": "21206:42:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1536,
                      "name": "_heroOwners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "21309:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 1538,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1537,
                      "name": "heroId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1516,
                      "src": "21321:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "21309:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1524,
                  "id": 1539,
                  "nodeType": "Return",
                  "src": "21302:26:12"
                }
              ]
            },
            "documentation": {
              "id": 1514,
              "nodeType": "StructuredDocumentation",
              "src": "20974:120:12",
              "text": "@notice Get the hero owner for the given hero id\n @param heroId The hero id\n @return The owner address"
            },
            "functionSelector": "56b4d760",
            "id": 1541,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1520,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1516,
                    "src": "21170:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1521,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1519,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 280,
                  "src": "21158:11:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "21158:19:12"
              }
            ],
            "name": "getHeroOwner",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1518,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "21149:8:12"
            },
            "parameters": {
              "id": 1517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1516,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1541,
                  "src": "21121:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1515,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21121:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21120:16:12"
            },
            "returnParameters": {
              "id": 1524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1523,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1541,
                  "src": "21187:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1522,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21187:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21186:9:12"
            },
            "scope": 2343,
            "src": "21099:236:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1570,
              "nodeType": "Block",
              "src": "21425:202:12",
              "statements": [
                {
                  "body": {
                    "id": 1565,
                    "nodeType": "Block",
                    "src": "21487:98:12",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1555,
                              "name": "_elderSpirits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 95,
                              "src": "21505:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$4454_storage_$",
                                "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                              }
                            },
                            "id": 1557,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1556,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1546,
                              "src": "21519:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "21505:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ElderSpirit_$4454_storage",
                              "typeString": "struct ElderSpirit storage ref"
                            }
                          },
                          "id": 1558,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "valid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4445,
                          "src": "21505:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1564,
                        "nodeType": "IfStatement",
                        "src": "21501:74:12",
                        "trueBody": {
                          "id": 1563,
                          "nodeType": "Block",
                          "src": "21529:46:12",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1560,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1546,
                                    "src": "21558:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1559,
                                  "name": "_burnElder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1619,
                                  "src": "21547:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 1561,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21547:13:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1562,
                              "nodeType": "ExpressionStatement",
                              "src": "21547:13:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1549,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1546,
                      "src": "21455:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1550,
                      "name": "MAX_NUMBER_OF_ELDERS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "21460:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21455:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1566,
                  "initializationExpression": {
                    "assignments": [
                      1546
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1546,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1566,
                        "src": "21440:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1545,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "21440:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1548,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21452:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "21440:13:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "21482:3:12",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1552,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1546,
                        "src": "21484:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1554,
                    "nodeType": "ExpressionStatement",
                    "src": "21482:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "21435:150:12"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1567,
                      "name": "ElderSpiritsBurned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 164,
                      "src": "21600:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21600:20:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1569,
                  "nodeType": "EmitStatement",
                  "src": "21595:25:12"
                }
              ]
            },
            "documentation": {
              "id": 1542,
              "nodeType": "StructuredDocumentation",
              "src": "21341:47:12",
              "text": "@notice Burns all the elder spirits in game"
            },
            "id": 1571,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnElders",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21413:2:12"
            },
            "returnParameters": {
              "id": 1544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21425:0:12"
            },
            "scope": 2343,
            "src": "21393:234:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1618,
              "nodeType": "Block",
              "src": "21849:330:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1581,
                            "name": "_elderSpirits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "21867:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$4454_storage_$",
                              "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                            }
                          },
                          "id": 1583,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1582,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1574,
                            "src": "21881:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "21867:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ElderSpirit_$4454_storage",
                            "typeString": "struct ElderSpirit storage ref"
                          }
                        },
                        "id": 1584,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "valid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4445,
                        "src": "21867:28:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1580,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21859:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21859:37:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1586,
                  "nodeType": "ExpressionStatement",
                  "src": "21859:37:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1588,
                          "name": "_elderOwners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91,
                          "src": "21960:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 1590,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1589,
                          "name": "elderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1574,
                          "src": "21973:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "21960:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1591,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1574,
                        "src": "21983:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21992:1:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 1587,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3997,
                      "src": "21954:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21954:40:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1594,
                  "nodeType": "ExpressionStatement",
                  "src": "21954:40:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1595,
                      "name": "eldersInGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "22048:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22080:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1596,
                          "name": "eldersInGame",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "22063:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3113,
                        "src": "22063:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22063:19:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22048:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1601,
                  "nodeType": "ExpressionStatement",
                  "src": "22048:34:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1602,
                        "name": "_elderOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "22092:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1604,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1603,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1574,
                        "src": "22105:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "22092:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22124:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "22116:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1605,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "22116:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22116:10:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "22092:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1610,
                  "nodeType": "ExpressionStatement",
                  "src": "22092:34:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1611,
                          "name": "_elderSpirits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 95,
                          "src": "22136:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$4454_storage_$",
                            "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                          }
                        },
                        "id": 1613,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1612,
                          "name": "elderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1574,
                          "src": "22150:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "22136:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$4454_storage",
                          "typeString": "struct ElderSpirit storage ref"
                        }
                      },
                      "id": 1614,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "valid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4445,
                      "src": "22136:28:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 1615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22167:5:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "22136:36:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1617,
                  "nodeType": "ExpressionStatement",
                  "src": "22136:36:12"
                }
              ]
            },
            "documentation": {
              "id": 1572,
              "nodeType": "StructuredDocumentation",
              "src": "21633:135:12",
              "text": "@notice Burns the elder spirit\n @dev This will only be able to be called by the contract\n @param elderId The elder id"
            },
            "id": 1619,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1577,
                    "name": "elderId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1574,
                    "src": "21840:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1578,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1576,
                  "name": "isValidElderSpiritId",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 261,
                  "src": "21819:20:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "21819:29:12"
              }
            ],
            "name": "_burnElder",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1574,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1619,
                  "src": "21793:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1573,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21793:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21792:17:12"
            },
            "returnParameters": {
              "id": 1579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21849:0:12"
            },
            "scope": 2343,
            "src": "21773:406:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4663
            ],
            "body": {
              "id": 1654,
              "nodeType": "Block",
              "src": "22601:209:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1634,
                          "name": "round",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1622,
                          "src": "22619:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1635,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "22628:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "22619:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1633,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22611:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22611:30:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1638,
                  "nodeType": "ExpressionStatement",
                  "src": "22611:30:12"
                },
                {
                  "assignments": [
                    1640
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1640,
                      "mutability": "mutable",
                      "name": "heroAmount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1654,
                      "src": "22699:18:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1639,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22699:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1649,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22758:1:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1641,
                            "name": "_roundElderSpawns",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 112,
                            "src": "22720:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                              "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                            }
                          },
                          "id": 1643,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1642,
                            "name": "round",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1622,
                            "src": "22738:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "22720:24:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 1645,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1644,
                          "name": "elderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1624,
                          "src": "22745:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "22720:33:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3091,
                      "src": "22720:37:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22720:40:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22699:61:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1651,
                        "name": "heroAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1640,
                        "src": "22792:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1650,
                      "name": "_priceFormula",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1703,
                      "src": "22778:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22778:25:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1632,
                  "id": 1653,
                  "nodeType": "Return",
                  "src": "22771:32:12"
                }
              ]
            },
            "documentation": {
              "id": 1620,
              "nodeType": "StructuredDocumentation",
              "src": "22185:240:12",
              "text": "@notice Gets the minting price of a hero based on specified elder spirit\n @param round The round of the hero to be minted\n @param elderId The elder id for which the hero will be based on\n @return The hero mint price"
            },
            "functionSelector": "f32c4974",
            "id": 1655,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1628,
                    "name": "elderId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1624,
                    "src": "22562:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1629,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1627,
                  "name": "isValidElderSpiritId",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 261,
                  "src": "22541:20:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "22541:29:12"
              }
            ],
            "name": "getHeroMintPrice",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1626,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "22524:8:12"
            },
            "parameters": {
              "id": 1625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1622,
                  "mutability": "mutable",
                  "name": "round",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1655,
                  "src": "22456:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1621,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22456:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1624,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1655,
                  "src": "22471:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1623,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22471:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22455:32:12"
            },
            "returnParameters": {
              "id": 1632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1631,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1655,
                  "src": "22588:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1630,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22588:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22587:9:12"
            },
            "scope": 2343,
            "src": "22430:380:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1702,
              "nodeType": "Block",
              "src": "23121:187:12",
              "statements": [
                {
                  "assignments": [
                    1664
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1664,
                      "mutability": "mutable",
                      "name": "price",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1702,
                      "src": "23131:13:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1663,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "23131:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1665,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23131:13:12"
                },
                {
                  "assignments": [
                    1667
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1667,
                      "mutability": "mutable",
                      "name": "base",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1702,
                      "src": "23154:12:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1666,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "23154:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1669,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "31",
                    "id": 1668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "23169:1:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23154:16:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1670,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1664,
                      "src": "23180:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 1681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23221:3:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1678,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23214:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "id": 1675,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3130",
                                    "id": 1673,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "23202:2:12",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3138",
                                    "id": 1674,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "23206:2:12",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_18_by_1",
                                      "typeString": "int_const 18"
                                    },
                                    "value": "18"
                                  },
                                  "src": "23202:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1671,
                                  "name": "newSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1658,
                                  "src": "23188:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1672,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3147,
                                "src": "23188:13:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1676,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23188:21:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3147,
                            "src": "23188:25:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23188:28:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3169,
                        "src": "23188:32:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23188:37:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23180:45:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1684,
                  "nodeType": "ExpressionStatement",
                  "src": "23180:45:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1685,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1664,
                      "src": "23235:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 1695,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23274:2:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "id": 1692,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3130",
                                    "id": 1690,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "23262:2:12",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3138",
                                    "id": 1691,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "23266:2:12",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_18_by_1",
                                      "typeString": "int_const 18"
                                    },
                                    "value": "18"
                                  },
                                  "src": "23262:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1688,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1667,
                                  "src": "23253:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1689,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3147,
                                "src": "23253:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1693,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23253:16:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3169,
                            "src": "23253:20:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23253:24:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1686,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1664,
                          "src": "23243:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3091,
                        "src": "23243:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23243:35:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23235:43:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1699,
                  "nodeType": "ExpressionStatement",
                  "src": "23235:43:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1700,
                    "name": "price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1664,
                    "src": "23296:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1662,
                  "id": 1701,
                  "nodeType": "Return",
                  "src": "23289:12:12"
                }
              ]
            },
            "documentation": {
              "id": 1656,
              "nodeType": "StructuredDocumentation",
              "src": "22816:226:12",
              "text": "@notice The bounding curve function that calculates price for the new supply\n @dev price = 0.02*(heroes minted) + 0.1\n @param newSupply The new supply after a burn or mint\n @return The calculated price"
            },
            "id": 1703,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_priceFormula",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1658,
                  "mutability": "mutable",
                  "name": "newSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1703,
                  "src": "23070:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1657,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23070:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23069:19:12"
            },
            "returnParameters": {
              "id": 1662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1661,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1703,
                  "src": "23112:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1660,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23112:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23111:9:12"
            },
            "scope": 2343,
            "src": "23047:261:12",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4111
            ],
            "body": {
              "id": 1785,
              "nodeType": "Block",
              "src": "23597:483:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1725,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1706,
                        "src": "23634:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1726,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1708,
                        "src": "23644:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1727,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1710,
                        "src": "23650:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1728,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1713,
                        "src": "23654:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1729,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1716,
                        "src": "23659:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1730,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1718,
                        "src": "23668:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1722,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "23607:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_CryptoChampions_$2343",
                          "typeString": "contract super CryptoChampions"
                        }
                      },
                      "id": 1724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4111,
                      "src": "23607:26:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 1731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23607:66:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1732,
                  "nodeType": "ExpressionStatement",
                  "src": "23607:66:12"
                },
                {
                  "body": {
                    "id": 1783,
                    "nodeType": "Block",
                    "src": "23725:349:12",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1744,
                                "name": "ids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1713,
                                "src": "23828:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 1746,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1745,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1734,
                                "src": "23832:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "23828:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1747,
                              "name": "IN_GAME_CURRENCY_ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63,
                              "src": "23837:19:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "23828:28:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1749,
                                "name": "ids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1713,
                                "src": "23860:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 1751,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1750,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1734,
                                "src": "23864:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "23860:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1752,
                              "name": "MAX_NUMBER_OF_ELDERS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84,
                              "src": "23870:20:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "23860:30:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "23828:62:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1767,
                        "nodeType": "IfStatement",
                        "src": "23824:135:12",
                        "trueBody": {
                          "id": 1766,
                          "nodeType": "Block",
                          "src": "23892:67:12",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1764,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1755,
                                    "name": "_elderOwners",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 91,
                                    "src": "23910:12:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                      "typeString": "mapping(uint256 => address)"
                                    }
                                  },
                                  "id": 1759,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1756,
                                      "name": "ids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1713,
                                      "src": "23923:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 1758,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1757,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1734,
                                      "src": "23927:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "23923:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "23910:20:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1762,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1710,
                                      "src": "23941:2:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1761,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "23933:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_payable_$",
                                      "typeString": "type(address payable)"
                                    },
                                    "typeName": {
                                      "id": 1760,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "23933:8:12",
                                      "stateMutability": "payable",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 1763,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "23933:11:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "23910:34:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1765,
                              "nodeType": "ExpressionStatement",
                              "src": "23910:34:12"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1768,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1713,
                              "src": "23976:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 1770,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1769,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1734,
                              "src": "23980:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "23976:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1771,
                            "name": "MAX_NUMBER_OF_ELDERS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "23985:20:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23976:29:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1782,
                        "nodeType": "IfStatement",
                        "src": "23972:92:12",
                        "trueBody": {
                          "id": 1781,
                          "nodeType": "Block",
                          "src": "24007:57:12",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1779,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1773,
                                    "name": "_heroOwners",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 102,
                                    "src": "24025:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                      "typeString": "mapping(uint256 => address)"
                                    }
                                  },
                                  "id": 1777,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1774,
                                      "name": "ids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1713,
                                      "src": "24037:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 1776,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1775,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1734,
                                      "src": "24041:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "24037:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "24025:19:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 1778,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1710,
                                  "src": "24047:2:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "24025:24:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1780,
                              "nodeType": "ExpressionStatement",
                              "src": "24025:24:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1737,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1734,
                      "src": "23704:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1738,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1713,
                        "src": "23708:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 1739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "23708:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23704:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1784,
                  "initializationExpression": {
                    "assignments": [
                      1734
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1734,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1784,
                        "src": "23689:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1733,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "23689:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1736,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23701:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "23689:13:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "23720:3:12",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1741,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1734,
                        "src": "23720:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1743,
                    "nodeType": "ExpressionStatement",
                    "src": "23720:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "23684:390:12"
                }
              ]
            },
            "documentation": {
              "id": 1704,
              "nodeType": "StructuredDocumentation",
              "src": "23314:57:12",
              "text": "@dev Hook function called before every token transfer"
            },
            "id": 1786,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1720,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23588:8:12"
            },
            "parameters": {
              "id": 1719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1706,
                  "mutability": "mutable",
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1786,
                  "src": "23415:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1705,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23415:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1708,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1786,
                  "src": "23441:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1707,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23441:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1710,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1786,
                  "src": "23463:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1709,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23463:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1713,
                  "mutability": "mutable",
                  "name": "ids",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1786,
                  "src": "23483:20:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1711,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "23483:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1712,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "23483:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1716,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1786,
                  "src": "23513:24:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1714,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "23513:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1715,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "23513:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1718,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1786,
                  "src": "23547:17:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1717,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "23547:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23405:165:12"
            },
            "returnParameters": {
              "id": 1721,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23597:0:12"
            },
            "scope": 2343,
            "src": "23376:704:12",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4672
            ],
            "body": {
              "id": 1812,
              "nodeType": "Block",
              "src": "24522:120:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1801,
                          "name": "round",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1789,
                          "src": "24540:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1802,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "24549:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "24540:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1800,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24532:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24532:30:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1805,
                  "nodeType": "ExpressionStatement",
                  "src": "24532:30:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1806,
                        "name": "_roundElderSpawns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "24602:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                        }
                      },
                      "id": 1808,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1807,
                        "name": "round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1789,
                        "src": "24620:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "24602:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 1810,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1809,
                      "name": "elderId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1791,
                      "src": "24627:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "24602:33:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1799,
                  "id": 1811,
                  "nodeType": "Return",
                  "src": "24595:40:12"
                }
              ]
            },
            "documentation": {
              "id": 1787,
              "nodeType": "StructuredDocumentation",
              "src": "24086:256:12",
              "text": "@notice Gets the amount of heroes spawn from the elder with the specified id during the specified round\n @param round The round the elder was created\n @param elderId The elder id\n @return The amount of heroes spawned from the elder"
            },
            "functionSelector": "59ca19d3",
            "id": 1813,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1795,
                    "name": "elderId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1791,
                    "src": "24483:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1796,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1794,
                  "name": "isValidElderSpiritId",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 261,
                  "src": "24462:20:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "24462:29:12"
              }
            ],
            "name": "getElderSpawnsAmount",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1793,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24445:8:12"
            },
            "parameters": {
              "id": 1792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1789,
                  "mutability": "mutable",
                  "name": "round",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1813,
                  "src": "24377:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1788,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24377:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1791,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1813,
                  "src": "24392:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24392:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24376:32:12"
            },
            "returnParameters": {
              "id": 1799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1798,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1813,
                  "src": "24509:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24509:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24508:9:12"
            },
            "scope": 2343,
            "src": "24347:295:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1846,
              "nodeType": "Block",
              "src": "24780:191:12",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1822,
                          "name": "cost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1816,
                          "src": "24808:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1819,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "24794:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "24794:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3113,
                        "src": "24794:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24794:19:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "24816:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "24794:23:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1845,
                  "nodeType": "IfStatement",
                  "src": "24790:175:12",
                  "trueBody": {
                    "id": 1844,
                    "nodeType": "Block",
                    "src": "24819:146:12",
                    "statements": [
                      {
                        "assignments": [
                          1827,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1827,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1844,
                            "src": "24834:12:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1826,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "24834:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 1839,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "",
                              "id": 1837,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "24898:2:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1828,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "24852:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1829,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "24852:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 1830,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "24852:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1834,
                                    "name": "cost",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1816,
                                    "src": "24890:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1831,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "24876:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1832,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "24876:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1833,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3113,
                                  "src": "24876:13:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1835,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "24876:19:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "24852:45:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24852:49:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "24833:68:12"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1841,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1827,
                              "src": "24923:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1840,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "24915:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24915:16:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1843,
                        "nodeType": "ExpressionStatement",
                        "src": "24915:16:12"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1814,
              "nodeType": "StructuredDocumentation",
              "src": "24648:81:12",
              "text": "@notice Refunds the sender if they sent too much\n @param cost The cost"
            },
            "id": 1847,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_refundSender",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1816,
                  "mutability": "mutable",
                  "name": "cost",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1847,
                  "src": "24757:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1815,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24757:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24756:14:12"
            },
            "returnParameters": {
              "id": 1818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24780:0:12"
            },
            "scope": 2343,
            "src": "24734:237:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4570
            ],
            "body": {
              "id": 1885,
              "nodeType": "Block",
              "src": "25458:268:12",
              "statements": [
                {
                  "assignments": [
                    1868
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1868,
                      "mutability": "mutable",
                      "name": "elderSpirit",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1885,
                      "src": "25468:30:12",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ElderSpirit_$4454_memory_ptr",
                        "typeString": "struct ElderSpirit"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1867,
                        "name": "ElderSpirit",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4454,
                        "src": "25468:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$4454_storage_ptr",
                          "typeString": "struct ElderSpirit"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1872,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1869,
                      "name": "_elderSpirits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "25501:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$4454_storage_$",
                        "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                      }
                    },
                    "id": 1871,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1870,
                      "name": "elderId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1850,
                      "src": "25515:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "25501:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ElderSpirit_$4454_storage",
                      "typeString": "struct ElderSpirit storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25468:55:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1873,
                          "name": "elderSpirit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1868,
                          "src": "25554:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ElderSpirit_$4454_memory_ptr",
                            "typeString": "struct ElderSpirit memory"
                          }
                        },
                        "id": 1874,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "valid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4445,
                        "src": "25554:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1875,
                          "name": "elderSpirit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1868,
                          "src": "25585:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ElderSpirit_$4454_memory_ptr",
                            "typeString": "struct ElderSpirit memory"
                          }
                        },
                        "id": 1876,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "raceId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4447,
                        "src": "25585:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1877,
                          "name": "elderSpirit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1868,
                          "src": "25617:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ElderSpirit_$4454_memory_ptr",
                            "typeString": "struct ElderSpirit memory"
                          }
                        },
                        "id": 1878,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "classId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4449,
                        "src": "25617:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1879,
                          "name": "elderSpirit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1868,
                          "src": "25650:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ElderSpirit_$4454_memory_ptr",
                            "typeString": "struct ElderSpirit memory"
                          }
                        },
                        "id": 1880,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "affinity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4451,
                        "src": "25650:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1881,
                          "name": "elderSpirit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1868,
                          "src": "25684:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ElderSpirit_$4454_memory_ptr",
                            "typeString": "struct ElderSpirit memory"
                          }
                        },
                        "id": 1882,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "affinityPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4453,
                        "src": "25684:25:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "id": 1883,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "25540:179:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_int256_$",
                      "typeString": "tuple(bool,uint256,uint256,string memory,int256)"
                    }
                  },
                  "functionReturnParameters": 1866,
                  "id": 1884,
                  "nodeType": "Return",
                  "src": "25533:186:12"
                }
              ]
            },
            "documentation": {
              "id": 1848,
              "nodeType": "StructuredDocumentation",
              "src": "24977:212:12",
              "text": "@notice Fetches the data of a single elder spirit\n @param elderId The id of the elder being searched for\n @return The elder's attributes in the following order (valid, raceId, classId, affinity)"
            },
            "functionSelector": "21c2f72a",
            "id": 1886,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1854,
                    "name": "elderId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1850,
                    "src": "25311:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1855,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1853,
                  "name": "isValidElderSpiritId",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 261,
                  "src": "25290:20:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "25290:29:12"
              }
            ],
            "name": "getElderSpirit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1852,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25273:8:12"
            },
            "parameters": {
              "id": 1851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1850,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1886,
                  "src": "25218:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1849,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25218:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25217:17:12"
            },
            "returnParameters": {
              "id": 1866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1857,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1886,
                  "src": "25350:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1856,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "25350:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1859,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1886,
                  "src": "25368:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1858,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25368:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1861,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1886,
                  "src": "25389:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1860,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25389:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1863,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1886,
                  "src": "25410:13:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1862,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "25410:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1865,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1886,
                  "src": "25437:6:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1864,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25437:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25336:117:12"
            },
            "scope": 2343,
            "src": "25194:532:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4585
            ],
            "body": {
              "id": 1928,
              "nodeType": "Block",
              "src": "26196:228:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1906,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "26227:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1908,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1907,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1889,
                            "src": "26235:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26227:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4509_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1909,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "valid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4456,
                        "src": "26227:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1910,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "26262:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1912,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1911,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1889,
                            "src": "26270:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26262:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4509_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1913,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "affinity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4460,
                        "src": "26262:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1914,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "26300:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1916,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1915,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1889,
                            "src": "26308:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26300:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4509_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1917,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "affinityPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4462,
                        "src": "26300:29:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1918,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "26343:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1920,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1919,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1889,
                            "src": "26351:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26343:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4509_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1921,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "roundMinted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4464,
                        "src": "26343:27:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1922,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "26384:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1924,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1923,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1889,
                            "src": "26392:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26384:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4509_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1925,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "elderId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4466,
                        "src": "26384:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1926,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "26213:204:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_string_storage_$_t_int256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(bool,string storage ref,int256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 1905,
                  "id": 1927,
                  "nodeType": "Return",
                  "src": "26206:211:12"
                }
              ]
            },
            "documentation": {
              "id": 1887,
              "nodeType": "StructuredDocumentation",
              "src": "25732:138:12",
              "text": "@notice Hero getter function\n @param heroId The hero id\n @return valid, affinity, affinity price, round minted, elder id"
            },
            "functionSelector": "2ee1f0a0",
            "id": 1929,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1893,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1889,
                    "src": "25983:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1894,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1892,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 280,
                  "src": "25971:11:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "25971:19:12"
              }
            ],
            "name": "getHeroGameData",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1891,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25954:8:12"
            },
            "parameters": {
              "id": 1890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1889,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1929,
                  "src": "25900:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1888,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25900:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25899:16:12"
            },
            "returnParameters": {
              "id": 1905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1896,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1929,
                  "src": "26021:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1895,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "26021:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1898,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1929,
                  "src": "26048:13:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1897,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "26048:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1900,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1929,
                  "src": "26087:6:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1899,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26087:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1902,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1929,
                  "src": "26125:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26125:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1904,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1929,
                  "src": "26162:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26162:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26007:184:12"
            },
            "scope": 2343,
            "src": "25875:549:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4598
            ],
            "body": {
              "id": 1965,
              "nodeType": "Block",
              "src": "26832:123:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1947,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "26850:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1949,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1948,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1932,
                            "src": "26858:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26850:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4509_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1950,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4458,
                        "src": "26850:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1951,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "26872:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1953,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1952,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1932,
                            "src": "26880:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26872:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4509_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1954,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "raceId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4468,
                        "src": "26872:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1955,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "26896:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1957,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1956,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1932,
                            "src": "26904:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26896:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4509_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1958,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "classId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4470,
                        "src": "26896:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1959,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "26921:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1961,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1960,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1932,
                            "src": "26929:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26921:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4509_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1962,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "appearance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4472,
                        "src": "26921:26:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 1963,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "26849:99:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_uint256_$_t_uint256_$_t_uint8_$",
                      "typeString": "tuple(string storage ref,uint256,uint256,uint8)"
                    }
                  },
                  "functionReturnParameters": 1946,
                  "id": 1964,
                  "nodeType": "Return",
                  "src": "26842:106:12"
                }
              ]
            },
            "documentation": {
              "id": 1930,
              "nodeType": "StructuredDocumentation",
              "src": "26430:118:12",
              "text": "@notice Hero getter function\n @param heroId The hero id\n @return name, race id, class id, appearance"
            },
            "functionSelector": "46e6f13d",
            "id": 1966,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1936,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1932,
                    "src": "26660:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1937,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1935,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 280,
                  "src": "26648:11:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "26648:19:12"
              }
            ],
            "name": "getHeroVisuals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1934,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "26631:8:12"
            },
            "parameters": {
              "id": 1933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1932,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1966,
                  "src": "26577:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26577:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26576:16:12"
            },
            "returnParameters": {
              "id": 1946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1939,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1966,
                  "src": "26698:13:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1938,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "26698:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1941,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1966,
                  "src": "26733:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1940,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26733:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1943,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1966,
                  "src": "26765:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1942,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26765:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1945,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1966,
                  "src": "26798:5:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1944,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "26798:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26684:143:12"
            },
            "scope": 2343,
            "src": "26553:402:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4611
            ],
            "body": {
              "id": 2002,
              "nodeType": "Block",
              "src": "27354:120:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1984,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "27372:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1986,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1985,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1969,
                            "src": "27380:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27372:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4509_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1987,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "trait1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4474,
                        "src": "27372:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1988,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "27396:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1990,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1989,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1969,
                            "src": "27404:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27396:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4509_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1991,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "trait2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4476,
                        "src": "27396:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1992,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "27420:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1994,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1993,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1969,
                            "src": "27428:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27420:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4509_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1995,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "skill1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4478,
                        "src": "27420:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1996,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "27444:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1998,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1997,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1969,
                            "src": "27452:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27444:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4509_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1999,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "skill2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4480,
                        "src": "27444:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 2000,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "27371:96:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(uint8,uint8,uint8,uint8)"
                    }
                  },
                  "functionReturnParameters": 1983,
                  "id": 2001,
                  "nodeType": "Return",
                  "src": "27364:103:12"
                }
              ]
            },
            "documentation": {
              "id": 1967,
              "nodeType": "StructuredDocumentation",
              "src": "26961:117:12",
              "text": "@notice Hero getter function\n @param heroId The hero id\n @return trait 1, trait 2, skill 1, skill 2"
            },
            "functionSelector": "8423b077",
            "id": 2003,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1973,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1969,
                    "src": "27195:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1974,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1972,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 280,
                  "src": "27183:11:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "27183:19:12"
              }
            ],
            "name": "getHeroTraitsSkills",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1971,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "27166:8:12"
            },
            "parameters": {
              "id": 1970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1969,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2003,
                  "src": "27112:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1968,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27112:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "27111:16:12"
            },
            "returnParameters": {
              "id": 1983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1976,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2003,
                  "src": "27233:5:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1975,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "27233:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1978,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2003,
                  "src": "27263:5:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1977,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "27263:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1980,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2003,
                  "src": "27293:5:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1979,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "27293:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1982,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2003,
                  "src": "27323:5:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1981,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "27323:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "27219:130:12"
            },
            "scope": 2343,
            "src": "27083:391:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4624
            ],
            "body": {
              "id": 2039,
              "nodeType": "Block",
              "src": "27877:188:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2021,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "27908:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 2023,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2022,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2006,
                            "src": "27916:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27908:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4509_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 2024,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "alignment",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4482,
                        "src": "27908:25:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2025,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "27947:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 2027,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2026,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2006,
                            "src": "27955:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27947:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4509_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 2028,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "background",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4484,
                        "src": "27947:26:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2029,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "27987:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 2031,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2030,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2006,
                            "src": "27995:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27987:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4509_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 2032,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hometown",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4486,
                        "src": "27987:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2033,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "28025:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 2035,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2034,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2006,
                            "src": "28033:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "28025:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4509_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 2036,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "weather",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4488,
                        "src": "28025:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 2037,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "27894:164:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(uint8,uint8,uint8,uint8)"
                    }
                  },
                  "functionReturnParameters": 2020,
                  "id": 2038,
                  "nodeType": "Return",
                  "src": "27887:171:12"
                }
              ]
            },
            "documentation": {
              "id": 2004,
              "nodeType": "StructuredDocumentation",
              "src": "27480:123:12",
              "text": "@notice Hero getter function\n @param heroId The hero id\n @return alignment, background, hometown, weather"
            },
            "functionSelector": "4c2ed018",
            "id": 2040,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2010,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2006,
                    "src": "27712:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2011,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2009,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 280,
                  "src": "27700:11:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "27700:19:12"
              }
            ],
            "name": "getHeroLore",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2008,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "27683:8:12"
            },
            "parameters": {
              "id": 2007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2006,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2040,
                  "src": "27629:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2005,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27629:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "27628:16:12"
            },
            "returnParameters": {
              "id": 2020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2013,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2040,
                  "src": "27750:5:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2012,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "27750:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2015,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2040,
                  "src": "27782:5:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2014,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "27782:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2017,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2040,
                  "src": "27815:5:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2016,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "27815:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2019,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2040,
                  "src": "27846:5:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2018,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "27846:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "27736:136:12"
            },
            "scope": 2343,
            "src": "27608:457:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4637
            ],
            "body": {
              "id": 2076,
              "nodeType": "Block",
              "src": "28429:114:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2058,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "28447:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 2060,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2059,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2043,
                            "src": "28455:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "28447:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4509_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 2061,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "level",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4490,
                        "src": "28447:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2062,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "28470:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 2064,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2063,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2043,
                            "src": "28478:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "28470:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4509_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 2065,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4492,
                        "src": "28470:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2066,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "28490:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 2068,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2067,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2043,
                            "src": "28498:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "28490:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4509_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 2069,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mana",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4494,
                        "src": "28490:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2070,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "28512:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 2072,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2071,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2043,
                            "src": "28520:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "28512:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4509_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 2073,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stamina",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4496,
                        "src": "28512:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 2074,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "28446:90:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(uint8,uint8,uint8,uint8)"
                    }
                  },
                  "functionReturnParameters": 2057,
                  "id": 2075,
                  "nodeType": "Return",
                  "src": "28439:97:12"
                }
              ]
            },
            "documentation": {
              "id": 2041,
              "nodeType": "StructuredDocumentation",
              "src": "28071:98:12",
              "text": "@notice Hero getter function\n @param heroId The hero id\n @return level, hp, mana"
            },
            "functionSelector": "48772d79",
            "id": 2077,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2047,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2043,
                    "src": "28280:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2048,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2046,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 280,
                  "src": "28268:11:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "28268:19:12"
              }
            ],
            "name": "getHeroVitals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2045,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "28251:8:12"
            },
            "parameters": {
              "id": 2044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2043,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2077,
                  "src": "28197:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2042,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28197:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "28196:16:12"
            },
            "returnParameters": {
              "id": 2057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2050,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2077,
                  "src": "28318:5:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2049,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "28318:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2052,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2077,
                  "src": "28346:5:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2051,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "28346:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2054,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2077,
                  "src": "28371:5:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2053,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "28371:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2056,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2077,
                  "src": "28398:5:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2055,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "28398:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "28304:120:12"
            },
            "scope": 2343,
            "src": "28174:369:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4654
            ],
            "body": {
              "id": 2125,
              "nodeType": "Block",
              "src": "29048:269:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2099,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "29079:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 2101,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2100,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2080,
                            "src": "29087:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "29079:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4509_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 2102,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "strength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4498,
                        "src": "29079:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2103,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "29117:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 2105,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2104,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2080,
                            "src": "29125:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "29117:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4509_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 2106,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "dexterity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4500,
                        "src": "29117:25:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2107,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "29156:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 2109,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2108,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2080,
                            "src": "29164:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "29156:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4509_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 2110,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "constitution",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4502,
                        "src": "29156:28:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2111,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "29198:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 2113,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2112,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2080,
                            "src": "29206:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "29198:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4509_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 2114,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "intelligence",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4504,
                        "src": "29198:28:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2115,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "29240:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 2117,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2116,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2080,
                            "src": "29248:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "29240:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4509_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 2118,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "wisdom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4506,
                        "src": "29240:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2119,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "29276:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 2121,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2120,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2080,
                            "src": "29284:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "29276:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4509_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 2122,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "charisma",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4508,
                        "src": "29276:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 2123,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "29065:245:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(uint8,uint8,uint8,uint8,uint8,uint8)"
                    }
                  },
                  "functionReturnParameters": 2098,
                  "id": 2124,
                  "nodeType": "Return",
                  "src": "29058:252:12"
                }
              ]
            },
            "documentation": {
              "id": 2078,
              "nodeType": "StructuredDocumentation",
              "src": "28549:157:12",
              "text": "@notice Hero getter function\n @param heroId The hero id\n @return stamina, strength, dexterity, constitution, intelligence, wisdom, charisma"
            },
            "functionSelector": "835a4398",
            "id": 2126,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2084,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2080,
                    "src": "28816:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2085,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2083,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 280,
                  "src": "28804:11:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "28804:19:12"
              }
            ],
            "name": "getHeroStats",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2082,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "28787:8:12"
            },
            "parameters": {
              "id": 2081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2080,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2126,
                  "src": "28733:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2079,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28733:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "28732:16:12"
            },
            "returnParameters": {
              "id": 2098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2087,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2126,
                  "src": "28854:5:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2086,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "28854:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2089,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2126,
                  "src": "28885:5:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2088,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "28885:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2091,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2126,
                  "src": "28917:5:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2090,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "28917:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2093,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2126,
                  "src": "28952:5:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2092,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "28952:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2095,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2126,
                  "src": "28987:5:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2094,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "28987:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2097,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2126,
                  "src": "29016:5:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2096,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "29016:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "28840:203:12"
            },
            "scope": 2343,
            "src": "28711:606:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4679
            ],
            "body": {
              "id": 2139,
              "nodeType": "Block",
              "src": "29599:45:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2135,
                      "name": "_affinities",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120,
                      "src": "29616:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 2137,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2136,
                      "name": "affinity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2129,
                      "src": "29628:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "29616:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2134,
                  "id": 2138,
                  "nodeType": "Return",
                  "src": "29609:28:12"
                }
              ]
            },
            "documentation": {
              "id": 2127,
              "nodeType": "StructuredDocumentation",
              "src": "29323:172:12",
              "text": "@notice Fetches the feed address for a given affinity\n @param affinity The affinity being searched for\n @return The address of the affinity's feed address"
            },
            "functionSelector": "26d4d15a",
            "id": 2140,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAffinityFeedAddress",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2131,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "29572:8:12"
            },
            "parameters": {
              "id": 2130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2129,
                  "mutability": "mutable",
                  "name": "affinity",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2140,
                  "src": "29532:24:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2128,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "29532:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "29531:26:12"
            },
            "returnParameters": {
              "id": 2134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2133,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2140,
                  "src": "29590:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29590:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "29589:9:12"
            },
            "scope": 2343,
            "src": "29500:144:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4694
            ],
            "body": {
              "id": 2149,
              "nodeType": "Block",
              "src": "29845:36:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2147,
                    "name": "eldersInGame",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 87,
                    "src": "29862:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2146,
                  "id": 2148,
                  "nodeType": "Return",
                  "src": "29855:19:12"
                }
              ]
            },
            "documentation": {
              "id": 2141,
              "nodeType": "StructuredDocumentation",
              "src": "29650:119:12",
              "text": "@notice Fetches the number of elders currently in the game\n @return The current number of elders in the game"
            },
            "functionSelector": "4c52b2a9",
            "id": 2150,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNumEldersInGame",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2143,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "29818:8:12"
            },
            "parameters": {
              "id": 2142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29801:2:12"
            },
            "returnParameters": {
              "id": 2146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2145,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2150,
                  "src": "29836:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29836:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "29835:9:12"
            },
            "scope": 2343,
            "src": "29774:107:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4684
            ],
            "body": {
              "id": 2169,
              "nodeType": "Block",
              "src": "30182:73:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2163,
                        "name": "winningAffinitiesByRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "30192:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 2165,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2164,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "30217:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "30192:38:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2166,
                      "name": "winningAffinity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2153,
                      "src": "30233:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "30192:56:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2168,
                  "nodeType": "ExpressionStatement",
                  "src": "30192:56:12"
                }
              ]
            },
            "documentation": {
              "id": 2151,
              "nodeType": "StructuredDocumentation",
              "src": "29887:175:12",
              "text": "@notice Declares a winning affinity for a round\n @dev This can only be called by a game admin contract\n @param winningAffinity The affinity that won the game"
            },
            "functionSelector": "9e315008",
            "id": 2170,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2157,
                      "name": "Phase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "30154:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Phase_$28_$",
                        "typeString": "type(enum CryptoChampions.Phase)"
                      }
                    },
                    "id": 2158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "ACTION",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "30154:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Phase_$28",
                      "typeString": "enum CryptoChampions.Phase"
                    }
                  }
                ],
                "id": 2159,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2156,
                  "name": "atPhase",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 308,
                  "src": "30146:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_enum$_Phase_$28_$",
                    "typeString": "modifier (enum CryptoChampions.Phase)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "30146:21:12"
              },
              {
                "arguments": null,
                "id": 2161,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2160,
                  "name": "onlyGameAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 288,
                  "src": "30168:13:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "30168:13:12"
              }
            ],
            "name": "declareRoundWinner",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2155,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "30137:8:12"
            },
            "parameters": {
              "id": 2154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2153,
                  "mutability": "mutable",
                  "name": "winningAffinity",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2170,
                  "src": "30095:31:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2152,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "30095:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "30094:33:12"
            },
            "returnParameters": {
              "id": 2162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30182:0:12"
            },
            "scope": 2343,
            "src": "30067:188:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4689
            ],
            "body": {
              "id": 2255,
              "nodeType": "Block",
              "src": "30527:719:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2185,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "30617:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 2187,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2186,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2173,
                              "src": "30625:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "30617:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4509_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 2188,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "roundMinted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4464,
                          "src": "30617:27:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2189,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "30648:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "30617:43:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2184,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "30609:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30609:52:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2192,
                  "nodeType": "ExpressionStatement",
                  "src": "30609:52:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 2211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2197,
                                      "name": "_heroes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 106,
                                      "src": "30735:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4509_storage_$",
                                        "typeString": "mapping(uint256 => struct Hero storage ref)"
                                      }
                                    },
                                    "id": 2199,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2198,
                                      "name": "heroId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2173,
                                      "src": "30743:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "30735:15:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Hero_$4509_storage",
                                      "typeString": "struct Hero storage ref"
                                    }
                                  },
                                  "id": 2200,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "affinity",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4460,
                                  "src": "30735:24:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                ],
                                "id": 2196,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "30729:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 2195,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "30729:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 2201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "30729:31:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes storage pointer"
                              }
                            ],
                            "id": 2194,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "30719:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 2202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "30719:42:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 2206,
                                    "name": "winningAffinitiesByRound",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 139,
                                    "src": "30781:24:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                      "typeString": "mapping(uint256 => string storage ref)"
                                    }
                                  },
                                  "id": 2208,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 2207,
                                    "name": "currentRound",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 116,
                                    "src": "30806:12:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "30781:38:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                ],
                                "id": 2205,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "30775:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 2204,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "30775:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 2209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "30775:45:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes storage pointer"
                              }
                            ],
                            "id": 2203,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "30765:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 2210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "30765:56:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "30719:102:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2193,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "30711:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30711:111:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2213,
                  "nodeType": "ExpressionStatement",
                  "src": "30711:111:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2215,
                              "name": "_heroRewardsClaimed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 145,
                              "src": "30889:19:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
                                "typeString": "mapping(uint256 => mapping(uint256 => bool))"
                              }
                            },
                            "id": 2217,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2216,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2173,
                              "src": "30909:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "30889:27:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 2219,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2218,
                            "name": "currentRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "30917:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "30889:41:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 2220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "30934:5:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "30889:50:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2214,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "30881:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30881:59:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2223,
                  "nodeType": "ExpressionStatement",
                  "src": "30881:59:12"
                },
                {
                  "assignments": [
                    2225,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2225,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2255,
                      "src": "30993:12:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2224,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "30993:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 2234,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 2232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31064:2:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2226,
                            "name": "_heroOwners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102,
                            "src": "31011:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 2228,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2227,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2173,
                            "src": "31023:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "31011:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "31011:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 2231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "argumentTypes": null,
                          "id": 2230,
                          "name": "_heroRewardsShare",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "31044:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "31011:52:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 2233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31011:56:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "30992:75:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2236,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2225,
                        "src": "31085:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5061796d656e74206661696c6564",
                        "id": 2237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31094:16:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87ec06ce2059ab3cf6fe4dd2fb1218712f1c693016c832faa431271492b69c3e",
                          "typeString": "literal_string \"Payment failed\""
                        },
                        "value": "Payment failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87ec06ce2059ab3cf6fe4dd2fb1218712f1c693016c832faa431271492b69c3e",
                          "typeString": "literal_string \"Payment failed\""
                        }
                      ],
                      "id": 2235,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "31077:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31077:34:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2239,
                  "nodeType": "ExpressionStatement",
                  "src": "31077:34:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2240,
                      "name": "rewardsPoolAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "31121:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2243,
                          "name": "_heroRewardsShare",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "31163:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2241,
                          "name": "rewardsPoolAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "31141:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3113,
                        "src": "31141:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "31141:40:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "31121:60:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2246,
                  "nodeType": "ExpressionStatement",
                  "src": "31121:60:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2247,
                          "name": "_heroRewardsClaimed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145,
                          "src": "31191:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => bool))"
                          }
                        },
                        "id": 2250,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2248,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2173,
                          "src": "31211:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "31191:27:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 2251,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2249,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "31219:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "31191:41:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "31235:4:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "31191:48:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2254,
                  "nodeType": "ExpressionStatement",
                  "src": "31191:48:12"
                }
              ]
            },
            "documentation": {
              "id": 2171,
              "nodeType": "StructuredDocumentation",
              "src": "30261:165:12",
              "text": "@notice Claims the rewards for the hero if eligible\n @dev Can only claim once and only for the round the hero was minted\n @param heroId The hero id"
            },
            "functionSelector": "ae169a50",
            "id": 2256,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2177,
                      "name": "Phase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "30494:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Phase_$28_$",
                        "typeString": "type(enum CryptoChampions.Phase)"
                      }
                    },
                    "id": 2178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "SETUP",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "30494:11:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Phase_$28",
                      "typeString": "enum CryptoChampions.Phase"
                    }
                  }
                ],
                "id": 2179,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2176,
                  "name": "atPhase",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 308,
                  "src": "30486:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_enum$_Phase_$28_$",
                    "typeString": "modifier (enum CryptoChampions.Phase)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "30486:20:12"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2181,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2173,
                    "src": "30519:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2182,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2180,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 280,
                  "src": "30507:11:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "30507:19:12"
              }
            ],
            "name": "claimReward",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2175,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "30477:8:12"
            },
            "parameters": {
              "id": 2174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2173,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2256,
                  "src": "30452:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "30452:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "30451:16:12"
            },
            "returnParameters": {
              "id": 2183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30527:0:12"
            },
            "scope": 2343,
            "src": "30431:815:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2296,
              "nodeType": "Block",
              "src": "31397:350:12",
              "statements": [
                {
                  "assignments": [
                    2261
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2261,
                      "mutability": "mutable",
                      "name": "priceWarsFactoryAddress",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2296,
                      "src": "31407:31:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2260,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "31407:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2266,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2264,
                        "name": "PRICE_WARS_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "31477:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2262,
                        "name": "_minigameFactoryRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 147,
                        "src": "31441:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMinigameFactoryRegistry_$4731",
                          "typeString": "contract IMinigameFactoryRegistry"
                        }
                      },
                      "id": 2263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getFactory",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4730,
                      "src": "31441:35:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) external returns (address)"
                      }
                    },
                    "id": 2265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31441:50:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31407:84:12"
                },
                {
                  "assignments": [
                    2268
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2268,
                      "mutability": "mutable",
                      "name": "priceWarsFactory",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2296,
                      "src": "31501:33:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceWarsFactory_$2491",
                        "typeString": "contract PriceWarsFactory"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2267,
                        "name": "PriceWarsFactory",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2491,
                        "src": "31501:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceWarsFactory_$2491",
                          "typeString": "contract PriceWarsFactory"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2272,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2270,
                        "name": "priceWarsFactoryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2261,
                        "src": "31554:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2269,
                      "name": "PriceWarsFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2491,
                      "src": "31537:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_PriceWarsFactory_$2491_$",
                        "typeString": "type(contract PriceWarsFactory)"
                      }
                    },
                    "id": 2271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31537:41:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceWarsFactory_$2491",
                      "typeString": "contract PriceWarsFactory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31501:77:12"
                },
                {
                  "assignments": [
                    2274
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2274,
                      "mutability": "mutable",
                      "name": "priceWar",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2296,
                      "src": "31588:18:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceWars_$2453",
                        "typeString": "contract PriceWars"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2273,
                        "name": "PriceWars",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2453,
                        "src": "31588:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceWars_$2453",
                          "typeString": "contract PriceWars"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2282,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2279,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "31649:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CryptoChampions_$2343",
                              "typeString": "contract CryptoChampions"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CryptoChampions_$2343",
                              "typeString": "contract CryptoChampions"
                            }
                          ],
                          "id": 2278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "31641:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2277,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "31641:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "31641:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2275,
                        "name": "priceWarsFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2268,
                        "src": "31609:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceWarsFactory_$2491",
                          "typeString": "contract PriceWarsFactory"
                        }
                      },
                      "id": 2276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createPriceWar",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2490,
                      "src": "31609:31:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_contract$_PriceWars_$2453_$",
                        "typeString": "function (address) external returns (contract PriceWars)"
                      }
                    },
                    "id": 2281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31609:46:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceWars_$2453",
                      "typeString": "contract PriceWars"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31588:67:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2284,
                        "name": "ROLE_GAME_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "31675:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2287,
                            "name": "priceWar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2274,
                            "src": "31700:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PriceWars_$2453",
                              "typeString": "contract PriceWars"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PriceWars_$2453",
                              "typeString": "contract PriceWars"
                            }
                          ],
                          "id": 2286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "31692:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2285,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "31692:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "31692:17:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2283,
                      "name": "grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2773,
                      "src": "31665:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 2289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31665:45:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2290,
                  "nodeType": "ExpressionStatement",
                  "src": "31665:45:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2291,
                        "name": "priceWar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2274,
                        "src": "31720:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceWars_$2453",
                          "typeString": "contract PriceWars"
                        }
                      },
                      "id": 2293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startGame",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5056,
                      "src": "31720:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 2294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31720:20:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2295,
                  "nodeType": "ExpressionStatement",
                  "src": "31720:20:12"
                }
              ]
            },
            "documentation": {
              "id": 2257,
              "nodeType": "StructuredDocumentation",
              "src": "31252:101:12",
              "text": "@notice Starts a new price game\n @dev This can only be called by the admin of the contract"
            },
            "id": 2297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_startNewPriceGame",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31385:2:12"
            },
            "returnParameters": {
              "id": 2259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31397:0:12"
            },
            "scope": 2343,
            "src": "31358:389:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4701
            ],
            "body": {
              "id": 2318,
              "nodeType": "Block",
              "src": "31992:111:12",
              "statements": [
                {
                  "assignments": [
                    2307
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2307,
                      "mutability": "mutable",
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2318,
                      "src": "32002:17:12",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2306,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "32002:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2308,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32002:17:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2310,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "32046:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "32046:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2312,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2300,
                        "src": "32058:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2313,
                        "name": "IN_GAME_CURRENCY_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "32062:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2314,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2302,
                        "src": "32083:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2315,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2307,
                        "src": "32091:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2309,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3589,
                      "src": "32029:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 2316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32029:67:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2317,
                  "nodeType": "ExpressionStatement",
                  "src": "32029:67:12"
                }
              ]
            },
            "documentation": {
              "id": 2298,
              "nodeType": "StructuredDocumentation",
              "src": "31753:158:12",
              "text": "@notice Transfers in game currency tokens from one address to another\n @param to The receiving address\n @param amount The amount to transfer"
            },
            "functionSelector": "26f7af4f",
            "id": 2319,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferInGameTokens",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2304,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "31983:8:12"
            },
            "parameters": {
              "id": 2303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2300,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2319,
                  "src": "31946:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "31946:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2302,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2319,
                  "src": "31958:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "31958:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "31945:28:12"
            },
            "returnParameters": {
              "id": 2305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31992:0:12"
            },
            "scope": 2343,
            "src": "31916:187:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4710
            ],
            "body": {
              "id": 2341,
              "nodeType": "Block",
              "src": "32552:105:12",
              "statements": [
                {
                  "assignments": [
                    2331
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2331,
                      "mutability": "mutable",
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2341,
                      "src": "32562:17:12",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2330,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "32562:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2332,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32562:17:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2334,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "32606:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2335,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2324,
                        "src": "32612:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2336,
                        "name": "IN_GAME_CURRENCY_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "32616:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2337,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2326,
                        "src": "32637:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2338,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2331,
                        "src": "32645:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2333,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3589,
                      "src": "32589:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 2339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32589:61:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2340,
                  "nodeType": "ExpressionStatement",
                  "src": "32589:61:12"
                }
              ]
            },
            "documentation": {
              "id": 2320,
              "nodeType": "StructuredDocumentation",
              "src": "32109:309:12",
              "text": "@notice Transfers in game currency tokens from one address to another.\n @param from The sending address.  Note that the sender must be authorized to transfer funds if the sender is different from the from address.\n @param to The receiving address\n @param amount The amount to transfer"
            },
            "functionSelector": "b9280067",
            "id": 2342,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegatedTransferInGameTokens",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2328,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "32543:8:12"
            },
            "parameters": {
              "id": 2327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2322,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2342,
                  "src": "32471:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2321,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "32471:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2324,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2342,
                  "src": "32493:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "32493:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2326,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2342,
                  "src": "32513:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "32513:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "32461:72:12"
            },
            "returnParameters": {
              "id": 2329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "32552:0:12"
            },
            "scope": 2343,
            "src": "32423:234:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2344,
        "src": "743:31916:12"
      }
    ],
    "src": "39:32621:12"
  },
  "bytecode": "60c0604052600260075560026008556000600a556000600b556000600c556000600d5560006010553480156200003457600080fd5b5060405162005d0938038062005d09833981810160405260808110156200005a57600080fd5b5080516020808301516040808501516060909501518151808301909252600382526275726960e81b938201939093529293909290919083908390620000a66301ffc9a760e01b620001fd565b620000b18162000285565b620000c3636cdb3d1360e11b620001fd565b620000d56303a24d0760e21b620001fd565b506001600160601b0319606092831b811660a052911b166080526200010a60008051602062005ce9833981519152806200029e565b6200013460008051602062005cc983398151915260008051602062005ce98339815191526200029e565b6200016f7fae0c232b87105e0a8134f8b92146dcd1d99373d32394be9d70f700f90b3a3db360008051602062005ce98339815191526200029e565b6200018a60008051602062005ce983398151915233620002f0565b620001a560008051602062005cc983398151915233620002fc565b6703c2c9106e21800060145560006015556006805460ff1916905542600955601893909355505067016345785d8a0000601955601e80546001600160a01b0319166001600160a01b039092169190911790556200053b565b6001600160e01b031980821614156200025d576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152600160208190526040909120805460ff19169091179055565b80516200029a9060049060208401906200049f565b5050565b600082815260208190526040808220600201549051839285917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a460009182526020829052604090912060020155565b6200029a828262000360565b60008281526020819052604090206002015462000323906200031d620003d9565b620003dd565b620002f05760405162461bcd60e51b815260040180806020018281038252602f81526020018062005c9a602f913960400191505060405180910390fd5b600082815260208181526040909120620003859183906200344e6200040a821b17901c565b156200029a5762000395620003d9565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b3390565b6000828152602081815260408220620004019184906200346362000421821b17901c565b90505b92915050565b600062000401836001600160a01b03841662000438565b600062000401836001600160a01b03841662000487565b600062000446838362000487565b6200047e5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000404565b50600062000404565b60009081526001919091016020526040902054151590565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620004e257805160ff191683800117855562000512565b8280016001018555821562000512579182015b8281111562000512578251825591602001919060010190620004f5565b506200052092915062000524565b5090565b5b8082111562000520576000815560010162000525565b60805160601c60a05160601c61572b6200056f60003980612b0752806142b5525080613c225280614286525061572b6000f3fe6080604052600436106102e35760003560e01c806379935fe011610190578063ae169a50116100dc578063d547741f11610095578063e5b0a9931161006f578063e5b0a99314611197578063e985e9c5146111c1578063f242432a146111fc578063f32c4974146112d2576102e3565b8063d547741f1461111f578063d6303cce14611158578063e3e983821461116d576102e3565b8063ae169a5014611031578063b92800671461105b578063bf61211f1461109e578063c03afb59146110b3578063ca15c873146110e0578063caab7ef81461110a576102e3565b806391d14854116101495780639e315008116101235780639e31500814610f515780639ff1103f14610fcc578063a217fddf14610fe1578063a22cb46514610ff6576102e3565b806391d1485414610e6457806394985ddd14610e9d5780639d5b82c014610ecd576102e3565b806379935fe014610d64578063835a439814610d795780638423b07714610de05780638a19c8bc14610e0a5780639010d07c14610e1f57806390ded47e14610e4f576102e3565b80632f2ff15d1161024f5780634c2ed0181161020857806356b4d760116101e257806356b4d76014610cb657806359ca19d314610ce05780636de5135314610d1057806372eda5bb14610d3a576102e3565b80634c2ed01814610af75780634c52b2a914610b215780634e1273f414610b36576102e3565b80632f2ff15d146108e957806336568abe146109225780634390d2a81461095b57806346e6f13d1461097057806348772d7914610a2a578063498e821914610a82576102e3565b806321c2f72a116102a157806321c2f72a146104df578063248a9ca31461059f57806326d4d15a146105c957806326f7af4f146106605780632eb2c2d61461069b5780632ee1f0a014610869576102e3565b8062fdd58e146102e8578063010a768e1461033357806301ffc9a714610348578063055ad42e146103905780630e89341c146103c65780630fbea84114610465575b600080fd5b3480156102f457600080fd5b506103216004803603604081101561030b57600080fd5b506001600160a01b038135169060200135611302565b60408051918252519081900360200190f35b34801561033f57600080fd5b50610321611374565b34801561035457600080fd5b5061037c6004803603602081101561036b57600080fd5b50356001600160e01b03191661137a565b604080519115158252519081900360200190f35b34801561039c57600080fd5b506103a561139d565b604051808260018111156103b557fe5b815260200191505060405180910390f35b3480156103d257600080fd5b506103f0600480360360208110156103e957600080fd5b50356113a6565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561042a578181015183820152602001610412565b50505050905090810190601f1680156104575780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103216004803603606081101561047b57600080fd5b813591602081013591810190606081016040820135600160201b8111156104a157600080fd5b8201836020820111156104b357600080fd5b803590602001918460018302840111600160201b831117156104d457600080fd5b50909250905061143e565b3480156104eb57600080fd5b506105096004803603602081101561050257600080fd5b5035611732565b60405180861515815260200185815260200184815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610560578181015183820152602001610548565b50505050905090810190601f16801561058d5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b3480156105ab57600080fd5b50610321600480360360208110156105c257600080fd5b5035611860565b3480156105d557600080fd5b50610644600480360360208110156105ec57600080fd5b810190602081018135600160201b81111561060657600080fd5b82018360208201111561061857600080fd5b803590602001918460018302840111600160201b8311171561063957600080fd5b509092509050611875565b604080516001600160a01b039092168252519081900360200190f35b34801561066c57600080fd5b506106996004803603604081101561068357600080fd5b506001600160a01b0381351690602001356118af565b005b3480156106a757600080fd5b50610699600480360360a08110156106be57600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b8111156106f157600080fd5b82018360208201111561070357600080fd5b803590602001918460208302840111600160201b8311171561072457600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561077357600080fd5b82018360208201111561078557600080fd5b803590602001918460208302840111600160201b831117156107a657600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156107f557600080fd5b82018360208201111561080757600080fd5b803590602001918460018302840111600160201b8311171561082857600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506118c4945050505050565b34801561087557600080fd5b506108936004803603602081101561088c57600080fd5b5035611bc7565b604051808615158152602001806020018581526020018481526020018381526020018281038252868181518152602001915080519060200190808383600083811015610560578181015183820152602001610548565b3480156108f557600080fd5b506106996004803603604081101561090c57600080fd5b50803590602001356001600160a01b0316611cc9565b34801561092e57600080fd5b506106996004803603604081101561094557600080fd5b50803590602001356001600160a01b0316611d35565b34801561096757600080fd5b50610321611d96565b34801561097c57600080fd5b5061099a6004803603602081101561099357600080fd5b5035611d9c565b60405180806020018581526020018481526020018360ff168152602001828103825286818151815260200191508051906020019080838360005b838110156109ec5781810151838201526020016109d4565b50505050905090810190601f168015610a195780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b348015610a3657600080fd5b50610a5460048036036020811015610a4d57600080fd5b5035611e99565b6040805160ff9586168152938516602085015291841683830152909216606082015290519081900360800190f35b61032160048036036040811015610a9857600080fd5b81359190810190604081016020820135600160201b811115610ab957600080fd5b820183602082011115610acb57600080fd5b803590602001918460018302840111600160201b83111715610aec57600080fd5b509092509050611f0b565b348015610b0357600080fd5b50610a5460048036036020811015610b1a57600080fd5b50356126a5565b348015610b2d57600080fd5b5061032161271c565b348015610b4257600080fd5b50610c6660048036036040811015610b5957600080fd5b810190602081018135600160201b811115610b7357600080fd5b820183602082011115610b8557600080fd5b803590602001918460208302840111600160201b83111715610ba657600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610bf557600080fd5b820183602082011115610c0757600080fd5b803590602001918460208302840111600160201b83111715610c2857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550612723945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610ca2578181015183820152602001610c8a565b505050509050019250505060405180910390f35b348015610cc257600080fd5b5061064460048036036020811015610cd957600080fd5b503561280f565b348015610cec57600080fd5b5061032160048036036040811015610d0357600080fd5b5080359060200135612878565b348015610d1c57600080fd5b506103f060048036036020811015610d3357600080fd5b50356128c3565b348015610d4657600080fd5b5061064460048036036020811015610d5d57600080fd5b503561295e565b348015610d7057600080fd5b506103216129b9565b348015610d8557600080fd5b50610da360048036036020811015610d9c57600080fd5b50356129bf565b6040805160ff978816815295871660208701529386168585015291851660608501528416608084015290921660a082015290519081900360c00190f35b348015610dec57600080fd5b50610a5460048036036020811015610e0357600080fd5b5035612a4b565b348015610e1657600080fd5b50610321612aba565b348015610e2b57600080fd5b5061064460048036036040811015610e4257600080fd5b5080359060200135612ac0565b348015610e5b57600080fd5b50610321612adf565b348015610e7057600080fd5b5061037c60048036036040811015610e8757600080fd5b50803590602001356001600160a01b0316612ae4565b348015610ea957600080fd5b5061069960048036036040811015610ec057600080fd5b5080359060200135612afc565b348015610ed957600080fd5b5061069960048036036040811015610ef057600080fd5b810190602081018135600160201b811115610f0a57600080fd5b820183602082011115610f1c57600080fd5b803590602001918460018302840111600160201b83111715610f3d57600080fd5b9193509150356001600160a01b0316612b83565b348015610f5d57600080fd5b5061069960048036036020811015610f7457600080fd5b810190602081018135600160201b811115610f8e57600080fd5b820183602082011115610fa057600080fd5b803590602001918460018302840111600160201b83111715610fc157600080fd5b509092509050612c37565b348015610fd857600080fd5b50610699612c9a565b348015610fed57600080fd5b50610321612d09565b34801561100257600080fd5b506106996004803603604081101561101957600080fd5b506001600160a01b0381351690602001351515612d0e565b34801561103d57600080fd5b506106996004803603602081101561105457600080fd5b5035612dfd565b34801561106757600080fd5b506106996004803603606081101561107e57600080fd5b506001600160a01b03813581169160208101359091169060400135613074565b3480156110aa57600080fd5b50610321613084565b3480156110bf57600080fd5b50610699600480360360208110156110d657600080fd5b503560ff1661308a565b3480156110ec57600080fd5b506103216004803603602081101561110357600080fd5b50356130d3565b34801561111657600080fd5b506103216130ea565b34801561112b57600080fd5b506106996004803603604081101561114257600080fd5b50803590602001356001600160a01b03166130f0565b34801561116457600080fd5b50610321613149565b34801561117957600080fd5b506106996004803603602081101561119057600080fd5b503561314f565b3480156111a357600080fd5b506103f0600480360360208110156111ba57600080fd5b503561317d565b3480156111cd57600080fd5b5061037c600480360360408110156111e457600080fd5b506001600160a01b03813581169160200135166131f0565b34801561120857600080fd5b50610699600480360360a081101561121f57600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a081016080820135600160201b81111561125e57600080fd5b82018360208201111561127057600080fd5b803590602001918460018302840111600160201b8311171561129157600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061321e945050505050565b3480156112de57600080fd5b50610321600480360360408110156112f557600080fd5b50803590602001356133e9565b60006001600160a01b0383166113495760405162461bcd60e51b815260040180806020018281038252602b8152602001806154bf602b913960400191505060405180910390fd5b5060008181526002602090815260408083206001600160a01b03861684529091529020545b92915050565b60095481565b6001600160e01b0319811660009081526001602052604090205460ff165b919050565b60065460ff1681565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156114325780601f1061140757610100808354040283529160200191611432565b820191906000526020600020905b81548152906001019060200180831161141557829003601f168201915b50505050509050919050565b6000808060065460ff16600181111561145357fe5b1461145d57600080fd5b6007600d541061146c57600080fd5b60145434101561147b57600080fd5b60006001600160a01b0316601685856040518083838082843791909101948552505060405192839003602001909220546001600160a01b0316929092141591506114c6905057600080fd5b600d546000906114d7906001613478565b6000818152600e60205260409020549091506001600160a01b0316156114f957fe5b6000818152600f602052604090205460ff161561151257fe5b600060168686604051808383808284379190910194855250506040805193849003602001842054633fabe5a360e21b855290516001600160a01b039091169363feaf968c93506004808201935060a09291829003018186803b15801561157757600080fd5b505afa15801561158b573d6000803e3d6000fd5b505050506040513d60a08110156115a157600080fd5b506020015190506115b0615157565b6001815260208082018a905260408083018a90528051601f890183900483028101830190915287815290889088908190840183828082843760009201919091525050505060608201526080810182905261162361160b6134d2565b846001604051806020016040528060008152506134d6565b61162b6134d2565b6000848152600e6020908152604080832080546001600160a01b0319166001600160a01b039590951694909417909355600f8152908290208351815460ff19169015151781558382015160018201559183015160028301556060830151805184939261169e926003850192910190615188565b5060809190910151600490910155600d546116ba906001613478565b600d556014546116c9906135de565b601454600b546116d891613478565b600b557f3560f0337e62819199860ba21b425b8bde9a01fa6e514dd58ab6edf7daf1d1f1836117056134d2565b604080519283526001600160a01b0390911660208301528051918290030190a15090979650505050505050565b6000806000606060008560008111801561174d575060078111155b61175657600080fd5b61175e615157565b6000888152600f6020908152604091829020825160a081018452815460ff1615158152600180830154828501526002808401548387015260038401805487516101009482161594909402600019011691909104601f8101869004860283018601909652858252919492936060860193919291908301828280156118225780601f106117f757610100808354040283529160200191611822565b820191906000526020600020905b81548152906001019060200180831161180557829003601f168201915b50505091835250506004919091015460209182015281519082015160408301516060840151608090940151929c919b50995091975095509350505050565b60009081526020819052604090206002015490565b6000601683836040518083838082843791909101948552505060405192839003602001909220546001600160a01b03169250505092915050565b60606118bf33846000858561321e565b505050565b81518351146119045760405162461bcd60e51b815260040180806020018281038252602881526020018061567e6028913960400191505060405180910390fd5b6001600160a01b0384166119495760405162461bcd60e51b81526004018080602001828103825260258152602001806155676025913960400191505060405180910390fd5b6119516134d2565b6001600160a01b0316856001600160a01b0316148061197c575061197c856119776134d2565b6131f0565b6119b75760405162461bcd60e51b815260040180806020018281038252603281526020018061558c6032913960400191505060405180910390fd5b60006119c16134d2565b90506119d181878787878761364c565b60005b8451811015611ad75760008582815181106119eb57fe5b602002602001015190506000858381518110611a0357fe5b60200260200101519050611a70816040518060600160405280602a81526020016155e1602a91396002600086815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020546137679092919063ffffffff16565b60008381526002602090815260408083206001600160a01b038e811685529252808320939093558a1681522054611aa79082613478565b60009283526002602090815260408085206001600160a01b038c16865290915290922091909155506001016119d4565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015611b5d578181015183820152602001611b45565b50505050905001838103825284818151815260200191508051906020019060200280838360005b83811015611b9c578181015183820152602001611b84565b5050505090500194505050505060405180910390a4611bbf8187878787876137fe565b505050505050565b6000606060008060008560078111611bde57600080fd5b60008181526012602052604090205460ff16611bf957600080fd5b60008781526012602090815260409182902080546003820154600483015460058401546002948501805488516101006001831615026000190190911696909604601f810188900488028701880190985287865260ff909416969395929491939092869190830182828015611cae5780601f10611c8357610100808354040283529160200191611cae565b820191906000526020600020905b815481529060010190602001808311611c9157829003601f168201915b50505050509350955095509550955095505091939590929450565b600082815260208190526040902060020154611cec90611ce76134d2565b612ae4565b611d275760405162461bcd60e51b815260040180806020018281038252602f815260200180615490602f913960400191505060405180910390fd5b611d318282613a74565b5050565b611d3d6134d2565b6001600160a01b0316816001600160a01b031614611d8c5760405162461bcd60e51b815260040180806020018281038252602f8152602001806156c7602f913960400191505060405180910390fd5b611d318282613add565b600b5481565b606060008060008460078111611db157600080fd5b60008181526012602052604090205460ff16611dcc57600080fd5b600086815260126020908152604091829020600681015460078201546008830154600193840180548751600261010097831615979097026000190190911695909504601f8101879004870286018701909752868552959294919360ff909116929091869190830182828015611e825780601f10611e5757610100808354040283529160200191611e82565b820191906000526020600020905b815481529060010190602001808311611e6557829003601f168201915b505050505093509450945094509450509193509193565b6000806000808460078111611ead57600080fd5b60008181526012602052604090205460ff16611ec857600080fd5b505050600092835250506012602052604090206008015460ff600160481b8204811692600160501b8304821692600160581b8104831692600160601b9091041690565b600083600081118015611f1f575060078111155b611f2857600080fd5b60018060065460ff166001811115611f3c57fe5b14611f4657600080fd5b6000868152600f602052604090205460ff16611f6157600080fd5b611f6a86613b46565b611f7357600080fd5b6000611f81601554886133e9565b905080341015611f9057600080fd5b60006007611faa600160105461347890919063ffffffff16565b016000818152601160205260409020549091506001600160a01b031615611fcd57fe5b60008181526012602052604090205460ff1615611fe657fe5b611fee615206565b60018152604080516020601f8a01819004810282018101909252888152908990899081908401838280828437600081840152601f19601f820116905080830192505050505050508160200181905250601554816080018181525050888160a0018181525050600f60008a8152602001908152602001600020600101548160c0018181525050600f60008a8152602001908152602001600020600201548160e0018181525050600f60008a81526020019081526020016000206003018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561213d5780601f106121125761010080835404028352916020019161213d565b820191906000526020600020905b81548152906001019060200180831161212057829003601f168201915b50505050506040828101919091526000838152601260209081529190208251815460ff19169015151781558183015180518493612181926001850192910190615188565b506040820151805161219d916002840191602090910190615188565b50606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080160006101000a81548160ff021916908360ff1602179055506101208201518160080160016101000a81548160ff021916908360ff1602179055506101408201518160080160026101000a81548160ff021916908360ff1602179055506101608201518160080160036101000a81548160ff021916908360ff1602179055506101808201518160080160046101000a81548160ff021916908360ff1602179055506101a08201518160080160056101000a81548160ff021916908360ff1602179055506101c08201518160080160066101000a81548160ff021916908360ff1602179055506101e08201518160080160076101000a81548160ff021916908360ff1602179055506102008201518160080160086101000a81548160ff021916908360ff1602179055506102208201518160080160096101000a81548160ff021916908360ff16021790555061024082015181600801600a6101000a81548160ff021916908360ff16021790555061026082015181600801600b6101000a81548160ff021916908360ff16021790555061028082015181600801600c6101000a81548160ff021916908360ff1602179055506102a082015181600801600d6101000a81548160ff021916908360ff1602179055506102c082015181600801600e6101000a81548160ff021916908360ff1602179055506102e082015181600801600f6101000a81548160ff021916908360ff1602179055506103008201518160080160106101000a81548160ff021916908360ff1602179055506103208201518160080160116101000a81548160ff021916908360ff1602179055506103408201518160080160126101000a81548160ff021916908360ff160217905550905050600061246483613c1b565b6000818152601a60205260409020849055905061248261160b6134d2565b6124ae61248d6134d2565b6000681b1ae4d6e2ef500000604051806020016040528060008152506134d6565b6124b66134d2565b600084815260116020526040902080546001600160a01b0319166001600160a01b03929092169190911790556010546124f0906001613478565b60105560155460009081526013602090815260408083208d845290915290205461251b906001613478565b60155460009081526013602090815260408083208e8452909152812091909155612551606461254b876019613cd3565b90613d2c565b60008c8152600e60205260408082205490519293506001600160a01b031691829084908381818185875af1925050503d80600081146125ac576040519150601f19603f3d011682016040523d82523d6000602084013e6125b1565b606091505b50509050806125f8576040805162461bcd60e51b815260206004820152600e60248201526d14185e5b595b9d0819985a5b195960921b604482015290519081900360640190fd5b600061260a606461254b8a6019613cd3565b600b5490915061261a9082613478565b600b5561263d6126348261262e8b88613d93565b90613d93565b600a5490613478565b600a55612649886135de565b7ff34a510082f5a02e39555458564800fc1fe73bfd8d3aa07cbf063fe662e7657e876126736134d2565b604080519283526001600160a01b0390911660208301528051918290030190a150949c9b505050505050505050505050565b60008060008084600781116126b957600080fd5b60008181526012602052604090205460ff166126d457600080fd5b505050600092835250506012602052604090206008015460ff65010000000000820481169266010000000000008304821692600160381b8104831692600160401b9091041690565b600d545b90565b606081518351146127655760405162461bcd60e51b81526004018080602001828103825260298152602001806156556029913960400191505060405180910390fd5b6060835167ffffffffffffffff8111801561277f57600080fd5b506040519080825280602002602001820160405280156127a9578160200160208202803683370190505b50905060005b8451811015612807576127e88582815181106127c757fe5b60200260200101518583815181106127db57fe5b6020026020010151611302565b8282815181106127f457fe5b60209081029190910101526001016127af565b509392505050565b6000816007811161281f57600080fd5b60008181526012602052604090205460ff1661283a57600080fd5b6000838152601160205260409020546001600160a01b031661285b57600080fd5b50506000908152601160205260409020546001600160a01b031690565b60008160008111801561288c575060078111155b61289557600080fd5b6015548411156128a457600080fd5b5050600091825260136020908152604080842092845291905290205490565b601c6020908152600091825260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845290918301828280156129565780601f1061292b57610100808354040283529160200191612956565b820191906000526020600020905b81548152906001019060200180831161293957829003601f168201915b505050505081565b600081600081118015612972575060078111155b61297b57600080fd5b6000838152600e60205260409020546001600160a01b031661299c57600080fd5b50506000908152600e60205260409020546001600160a01b031690565b60145481565b60008060008060008086600781116129d657600080fd5b60008181526012602052604090205460ff166129f157600080fd5b5050506000948552505060126020525050604090206008015460ff600160681b8204811692600160701b8304821692600160781b8104831692600160801b8204811692600160881b8304821692600160901b900490911690565b6000806000808460078111612a5f57600080fd5b60008181526012602052604090205460ff16612a7a57600080fd5b505050600092835250506012602052604090206008015460ff610100820481169262010000830482169263010000008104831692600160201b9091041690565b60155481565b6000828152602081905260408120612ad89083613df0565b9392505050565b600781565b6000828152602081905260408120612ad89083613463565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614612b79576040805162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00604482015290519081900360640190fd5b611d318282613dfc565b612bac7f2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096613e16565b8060168484604051808383808284379190910194855250506040519283900360200190922080546001600160a01b03949094166001600160a01b031990941693909317909255505060178054600181018255600091909152612c31907fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c150184846152e3565b50505050565b60018060065460ff166001811115612c4b57fe5b14612c5557600080fd5b612c7e7fae0c232b87105e0a8134f8b92146dcd1d99373d32394be9d70f700f90b3a3db3613e16565b6015546000908152601c60205260409020612c319084846152e3565b60008060065460ff166001811115612cae57fe5b148015612cc15750600754600954014210155b15612cd357612cce613e29565b612d06565b600160065460ff166001811115612ce657fe5b148015612cf95750600854600954014210155b15612d0657612d06613e29565b50565b600081565b816001600160a01b0316612d206134d2565b6001600160a01b03161415612d665760405162461bcd60e51b815260040180806020018281038252602981526020018061562c6029913960400191505060405180910390fd5b8060036000612d736134d2565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155612db76134d2565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b60008060065460ff166001811115612e1157fe5b14612e1b57600080fd5b8160078111612e2957600080fd5b60008181526012602052604090205460ff16612e4457600080fd5b60155460008481526012602052604090206004015414612e6357600080fd5b601c600060155481526020019081526020016000206040518082805460018160011615610100020316600290048015612ed35780601f10612eb1576101008083540402835291820191612ed3565b820191906000526020600020905b815481529060010190602001808311612ebf575b50509150506040518091039020601260008581526020019081526020016000206002016040518082805460018160011615610100020316600290048015612f515780601f10612f2f576101008083540402835291820191612f51565b820191906000526020600020905b815481529060010190602001808311612f3d575b5050915050604051809103902014612f6857600080fd5b6000838152601d60209081526040808320601554845290915290205460ff1615612f9157600080fd5b60008381526011602052604080822054600c5491516001600160a01b0390911691908381818185875af1925050503d8060008114612feb576040519150601f19603f3d011682016040523d82523d6000602084013e612ff0565b606091505b5050905080613037576040805162461bcd60e51b815260206004820152600e60248201526d14185e5b595b9d0819985a5b195960921b604482015290519081900360640190fd5b600c54600a5461304691613d93565b600a555050506000908152601d6020908152604080832060155484529091529020805460ff19166001179055565b6060612c3184846000858561321e565b600d5481565b6130b37f2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096613e16565b6006805482919060ff1916600183818111156130cb57fe5b021790555050565b600081815260208190526040812061136e90613ff3565b60105481565b60008281526020819052604090206002015461310e90611ce76134d2565b611d8c5760405162461bcd60e51b81526004018080602001828103825260308152602001806155376030913960400191505060405180910390fd5b600a5481565b6131787f2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096613e16565b601455565b6017818154811061318a57fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152935090918301828280156129565780601f1061292b57610100808354040283529160200191612956565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205460ff1690565b6001600160a01b0384166132635760405162461bcd60e51b81526004018080602001828103825260258152602001806155676025913960400191505060405180910390fd5b61326b6134d2565b6001600160a01b0316856001600160a01b031614806132915750613291856119776134d2565b6132cc5760405162461bcd60e51b815260040180806020018281038252602981526020018061550e6029913960400191505060405180910390fd5b60006132d66134d2565b90506132f68187876132e788613ffe565b6132f088613ffe565b8761364c565b61333d836040518060600160405280602a81526020016155e1602a913960008781526002602090815260408083206001600160a01b038d1684529091529020549190613767565b60008581526002602090815260408083206001600160a01b038b811685529252808320939093558716815220546133749084613478565b60008581526002602090815260408083206001600160a01b03808b168086529184529382902094909455805188815291820187905280518a8416938616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a4611bbf818787878787614042565b6000816000811180156133fd575060078111155b61340657600080fd5b60155484111561341557600080fd5b600084815260136020908152604080832086845290915281205461343a906001613478565b9050613445816141b3565b95945050505050565b6000612ad8836001600160a01b038416614205565b6000612ad8836001600160a01b03841661424f565b600082820183811015612ad8576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b3390565b6001600160a01b03841661351b5760405162461bcd60e51b81526004018080602001828103825260218152602001806156a66021913960400191505060405180910390fd5b60006135256134d2565b9050613537816000876132e788613ffe565b60008481526002602090815260408083206001600160a01b03891684529091529020546135649084613478565b60008581526002602090815260408083206001600160a01b03808b16808652918452828520959095558151898152928301889052815190948616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a46135d781600087878787614042565b5050505050565b60006135ea3483613d93565b1115612d06576000336135fd3484613d93565b604051600081818185875af1925050503d8060008114613639576040519150601f19603f3d011682016040523d82523d6000602084013e61363e565b606091505b5050905080611d3157600080fd5b61365a868686868686611bbf565b60005b835181101561375e57600084828151811061367457fe5b602002602001015111801561369d5750600784828151811061369257fe5b602002602001015111155b156136ee5784600e60008684815181106136b357fe5b6020026020010151815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b60078482815181106136fc57fe5b6020026020010151111561375657846011600086848151811061371b57fe5b6020026020010151815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b60010161365d565b50505050505050565b600081848411156137f65760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156137bb5781810151838201526020016137a3565b50505050905090810190601f1680156137e85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b613810846001600160a01b0316614267565b15611bbf57836001600160a01b031663bc197c8187878686866040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b8381101561389e578181015183820152602001613886565b50505050905001848103835286818151815260200191508051906020019060200280838360005b838110156138dd5781810151838201526020016138c5565b50505050905001848103825285818151815260200191508051906020019080838360005b83811015613919578181015183820152602001613901565b50505050905090810190601f1680156139465780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b15801561396b57600080fd5b505af192505050801561399057506040513d602081101561398b57600080fd5b505160015b613a255761399c61536c565b806139a757506139ee565b60405162461bcd60e51b81526020600482018181528351602484015283518493919283926044019190850190808383600083156137bb5781810151838201526020016137a3565b60405162461bcd60e51b81526004018080602001828103825260348152602001806154126034913960400191505060405180910390fd5b6001600160e01b0319811663bc197c8160e01b1461375e5760405162461bcd60e51b81526004018080602001828103825260288152602001806154686028913960400191505060405180910390fd5b6000828152602081905260409020613a8c908261344e565b15611d3157613a996134d2565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152602081905260409020613af5908261426d565b15611d3157613b026134d2565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b601554600090815260136020908152604080832084845290915281205460041115613b7357506001611398565b601554600090815260136020908152604080832085845290915290205460015b600d548111613be8576015546000908152601360209081526040808320848452909152902054821115613be057601554600090815260136020908152604080832084845290915290205491505b600101613b93565b50613bf4816002613cd3565b60155460009081526013602090815260408083208784529091529020541115915050919050565b60006019547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015613c8d57600080fd5b505afa158015613ca1573d6000803e3d6000fd5b505050506040513d6020811015613cb757600080fd5b50511015613cc457600080fd5b61136e60185460195484614282565b600082613ce25750600061136e565b82820282848281613cef57fe5b0414612ad85760405162461bcd60e51b815260040180806020018281038252602181526020018061560b6021913960400191505060405180910390fd5b6000808211613d82576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b818381613d8b57fe5b049392505050565b600082821115613dea576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000612ad8838361442c565b6000828152601b60205260409020819055611d3182614490565b613e208133612ae4565b612d0657600080fd5b600060065460ff166001811115613e3c57fe5b1415613e6f576000600a819055600c55601554613e5a906001613478565b6015556006805460ff19166001179055613fed565b600160065460ff166001811115613e8257fe5b1415613fed57613e90614b67565b60015b600d548111613fd957601c600060155481526020019081526020016000206040518082805460018160011615610100020316600290048015613f0c5780601f10613eea576101008083540402835291820191613f0c565b820191906000526020600020905b815481529060010190602001808311613ef8575b50509150506040518091039020600f60008381526020019081526020016000206003016040518082805460018160011615610100020316600290048015613f8a5780601f10613f68576101008083540402835291820191613f8a565b820191906000526020600020905b815481529060010190602001808311613f76575b505091505060405180910390201415613fd1576000613fab60155483612878565b1115613fd157613fc9613fc060155483612878565b600a5490613d2c565b600c55613fd9565b600101613e93565b613fe1614d54565b506006805460ff191690555b42600955565b600061136e82614db3565b60408051600180825281830190925260609182919060208083019080368337019050509050828160008151811061403157fe5b602090810291909101015292915050565b614054846001600160a01b0316614267565b15611bbf57836001600160a01b031663f23a6e6187878686866040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156140e35781810151838201526020016140cb565b50505050905090810190601f1680156141105780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b15801561413357600080fd5b505af192505050801561415857506040513d602081101561415357600080fd5b505160015b6141645761399c61536c565b6001600160e01b0319811663f23a6e6160e01b1461375e5760405162461bcd60e51b81526004018080602001828103825260288152602001806154686028913960400191505060405180910390fd5b60008060016141da606461254b60026141d488670de0b6b3a7640000613cd3565b90613cd3565b91506141fd6141f6600a61254b84670de0b6b3a7640000613cd3565b8390613478565b949350505050565b6000614211838361424f565b6142475750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561136e565b50600061136e565b60009081526001919091016020526040902054151590565b3b151590565b6000612ad8836001600160a01b038416614db7565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000085878660405160200180838152602001828152602001925050506040516020818303038152906040526040518463ffffffff1660e01b815260040180846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561435e578181015183820152602001614346565b50505050905090810190601f16801561438b5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b1580156143ac57600080fd5b505af11580156143c0573d6000803e3d6000fd5b505050506040513d60208110156143d657600080fd5b50506000848152600560205260408120546143f690869085903090614e7d565b600086815260056020526040902054909150614413906001613478565b6000868152600560205260409020556134458582614ec4565b8154600090821061446e5760405162461bcd60e51b81526004018080602001828103825260228152602001806154466022913960400191505060405180910390fd5b82600001828154811061447d57fe5b9060005260206000200154905092915050565b6000818152601a6020526040902054600781116144ac57600080fd5b60008181526012602052604090205460ff166144c757600080fd5b6000828152601a6020908152604080832054601b8352818420548185526012909352908320600801805469ff0000000000000000001916600160481b17905591614512600283614ef0565b6000858152601260205260409020600801805460ff191660ff93909316929092179091559050614543600482614ef0565b6000858152601260205260409020600801805460ff9093166101000261ff001990931692909217909155905061457a600482614ef0565b6000858152601260205260409020600801805460ff909316620100000262ff0000199093169290921790915590506145b3600482614ef0565b6000858152601260205260409020600801805460ff90931663010000000263ff000000199093169290921790915590506145ee600482614ef0565b6000858152601260205260409020600801805460ff909316600160201b0264ff000000001990931692909217909155905061462a600982614ef0565b6000858152601260205260409020600801805460ff909316650100000000000265ff000000000019909316929092179091559050614669601e82614ef0565b6000858152601260205260409020600801805460ff90931666010000000000000266ff000000000000199093169290921790915590506146aa601882614ef0565b6000858152601260205260409020600801805460ff909316600160381b0267ff00000000000000199093169290921790915590506146e9600782614ef0565b6000858152601260205260409020600801805460ff909316600160401b0268ff000000000000000019909316929092179091559050614729601582614ef0565b6000858152601260205260409020600801805460ff60501b1916600160501b60ff9485168102919091179182905591935061476992919004166009613478565b6000848152601260205260409020600801805460ff92909216600160501b0260ff60501b199092169190911790556147a2601582614ef0565b6000858152601260205260409020600801805460ff60581b1916600160581b60ff948516810291909117918290559193506147e292919004166009613478565b6000848152601260205260409020600801805460ff92909216600160581b0260ff60581b1990921691909117905561481b601f82614ef0565b6000858152601260205260409020600801805460ff60601b1916600160601b60ff9485168102919091179182905591935061485b92919004166009613478565b6000848152601260205260409020600801805460ff92909216600160601b0260ff60601b19909216919091179055614894601082614ef0565b6000858152601260205260409020600801805460ff60681b1916600160681b60ff948516810291909117918290559193506148d492919004166002613478565b6000848152601260205260409020600801805460ff92909216600160681b0260ff60681b1990921691909117905561490d601082614ef0565b6000858152601260205260409020600801805460ff60701b1916600160701b60ff9485168102919091179182905591935061494d92919004166002613478565b6000848152601260205260409020600801805460ff92909216600160701b0260ff60701b19909216919091179055614986601082614ef0565b6000858152601260205260409020600801805460ff60781b1916600160781b60ff948516810291909117918290559193506149c692919004166002613478565b6000848152601260205260409020600801805460ff92909216600160781b0260ff60781b199092169190911790556149ff601082614ef0565b6000858152601260205260409020600801805460ff60801b1916600160801b60ff94851681029190911791829055919350614a3f92919004166002613478565b6000848152601260205260409020600801805460ff92909216600160801b0260ff60801b19909216919091179055614a78601082614ef0565b6000858152601260205260409020600801805460ff60881b1916600160881b60ff94851681029190911791829055919350614ab892919004166002613478565b6000848152601260205260409020600801805460ff92909216600160881b0260ff60881b19909216919091179055614af1601082614ef0565b6000858152601260205260409020600801805460ff60901b1916600160901b60ff94851681029190911791829055919350614b3192919004166002613478565b600093845260126020526040909320600801805460ff94909416600160901b0260ff60901b199094169390931790925550505050565b601e54604080518082018252600a81526950524943455f5741525360b01b60208083019182529251636cadcd7960e11b8152600481019384528251602482015282516000956001600160a01b03169463d95b9af2949390928392604490910191908083838b5b83811015614be5578181015183820152602001614bcd565b50505050905090810190601f168015614c125780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015614c3157600080fd5b505af1158015614c45573d6000803e3d6000fd5b505050506040513d6020811015614c5b57600080fd5b5051604080516372d7f66560e11b8152306004820152905191925082916000916001600160a01b0384169163e5afecca9160248082019260209290919082900301818787803b158015614cad57600080fd5b505af1158015614cc1573d6000803e3d6000fd5b505050506040513d6020811015614cd757600080fd5b50519050614d057fae0c232b87105e0a8134f8b92146dcd1d99373d32394be9d70f700f90b3a3db382611cc9565b806001600160a01b031663d65ab5f26040518163ffffffff1660e01b8152600401600060405180830381600087803b158015614d4057600080fd5b505af115801561375e573d6000803e3d6000fd5b60015b60078111614d87576000818152600f602052604090205460ff1615614d7f57614d7f81614f21565b600101614d57565b506040517f0143b2c36fac98f86168603d28d499bde9ce0367d41e111cef9f2ecbc9eeabfc90600090a1565b5490565b60008181526001830160205260408120548015614e735783546000198083019190810190600090879083908110614dea57fe5b9060005260206000200154905080876000018481548110614e0757fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080614e3757fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061136e565b600091505061136e565b60408051602080820196909652808201949094526001600160a01b039290921660608401526080808401919091528151808403909101815260a09092019052805191012090565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b600080614f0b6001614f058560ff8816614fbd565b90613478565b614f1684600a613d2c565b915091509250929050565b80600081118015614f33575060078111155b614f3c57600080fd5b6000828152600f602052604090205460ff16614f5757600080fd5b6000828152600e6020526040902054614f7b906001600160a01b0316836001615024565b600d54614f89906001613d93565b600d55506000908152600e6020908152604080832080546001600160a01b0319169055600f9091529020805460ff19169055565b6000808211615013576040805162461bcd60e51b815260206004820152601860248201527f536166654d6174683a206d6f64756c6f206279207a65726f0000000000000000604482015290519081900360640190fd5b81838161501c57fe5b069392505050565b6001600160a01b0383166150695760405162461bcd60e51b81526004018080602001828103825260238152602001806155be6023913960400191505060405180910390fd5b60006150736134d2565b90506150a38185600061508587613ffe565b61508e87613ffe565b6040518060200160405280600081525061364c565b6150ea826040518060600160405280602481526020016154ea6024913960008681526002602090815260408083206001600160a01b038b1684529091529020549190613767565b60008481526002602090815260408083206001600160a01b03808a16808652918452828520959095558151888152928301879052815193949093908616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a450505050565b6040518060a00160405280600015158152602001600081526020016000815260200160608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106151c957805160ff19168380011785556151f6565b828001600101855582156151f6579182015b828111156151f65782518255916020019190600101906151db565b50615202929150615351565b5090565b604080516103608101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081018290526101c081018290526101e08101829052610200810182905261022081018290526102408101829052610260810182905261028081018290526102a081018290526102c081018290526102e081018290526103008101829052610320810182905261034081019190915290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106153245782800160ff198235161785556151f6565b828001600101855582156151f6579182015b828111156151f6578235825591602001919060010190615336565b5b808211156152025760008155600101615352565b60e01c90565b600060443d101561537c57612720565b600481823e6308c379a06153908251615366565b1461539a57612720565b6040513d600319016004823e80513d67ffffffffffffffff81602484011181841117156153ca5750505050612720565b828401925082519150808211156153e45750505050612720565b503d830160208284010111156153fc57505050612720565b601f01601f191681016020016040529150509056fe455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368455243313135353a206d696e7420746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a26469706673582212203858d10b73e97d0b22d1b146e447d0063e767df6b8be5ec0f269333b1fab844564736f6c634300060c0033416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e742172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca0250969f4e1c871d5fdd0aee1cd182666698a4492b24c6832aac230d07b11046af5a89",
  "bytecodeSha1": "7d418721770dae80723008b7fffacd434095f083",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "CryptoChampions",
  "coverageMap": {
    "branches": {
      "0": {
        "AccessControl._grantRole": {
          "273": [
            7098,
            7131,
            false
          ]
        },
        "AccessControl._revokeRole": {
          "274": [
            7289,
            7325,
            false
          ]
        },
        "AccessControl.grantRole": {
          "270": [
            4727,
            4772,
            true
          ]
        },
        "AccessControl.renounceRole": {
          "271": [
            5904,
            5927,
            true
          ]
        },
        "AccessControl.revokeRole": {
          "272": [
            5185,
            5230,
            true
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {
        "EnumerableSet._add": {
          "291": [
            1724,
            1745,
            false
          ]
        },
        "EnumerableSet._at": {
          "292": [
            4546,
            4572,
            true
          ]
        },
        "EnumerableSet._remove": {
          "293": [
            2449,
            2464,
            false
          ]
        }
      },
      "12": {
        "CryptoChampions._beforeTokenTransfer": {
          "255": [
            23828,
            23856,
            false
          ],
          "256": [
            23860,
            23890,
            false
          ],
          "257": [
            23976,
            24005,
            false
          ]
        },
        "CryptoChampions._burnElder": {
          "268": [
            6470,
            6501,
            true
          ],
          "269": [
            21867,
            21895,
            true
          ]
        },
        "CryptoChampions._burnElders": {
          "267": [
            21505,
            21527,
            false
          ]
        },
        "CryptoChampions._canMintHero": {
          "258": [
            17406,
            17462,
            false
          ]
        },
        "CryptoChampions._getRandomNumber": {
          "259": [
            9810,
            9847,
            true
          ]
        },
        "CryptoChampions._hasRole": {
          "260": [
            10455,
            10480,
            true
          ]
        },
        "CryptoChampions._refundSender": {
          "253": [
            24794,
            24817,
            false
          ],
          "254": [
            24923,
            24930,
            true
          ]
        },
        "CryptoChampions._trainHero": {
          "265": [
            6612,
            6641,
            true
          ],
          "266": [
            6691,
            6712,
            true
          ]
        },
        "CryptoChampions._transitionNextPhase": {
          "261": [
            7268,
            7295,
            false
          ],
          "262": [
            7740,
            7768,
            false
          ],
          "263": [
            8105,
            8228,
            false
          ],
          "264": [
            8273,
            8314,
            false
          ]
        },
        "CryptoChampions.claimReward": {
          "247": [
            7081,
            7102,
            true
          ],
          "248": [
            30617,
            30660,
            true
          ],
          "249": [
            30719,
            30821,
            true
          ],
          "250": [
            30889,
            30939,
            true
          ],
          "251": [
            31085,
            31092,
            true
          ]
        },
        "CryptoChampions.getElderSpawnsAmount": {
          "242": [
            24540,
            24561,
            true
          ]
        },
        "CryptoChampions.getHeroMintPrice": {
          "252": [
            22619,
            22640,
            true
          ]
        },
        "CryptoChampions.mintElderSpirit": {
          "235": [
            11908,
            11943,
            true
          ],
          "236": [
            12007,
            12034,
            true
          ],
          "237": [
            12083,
            12118,
            true
          ]
        },
        "CryptoChampions.mintHero": {
          "238": [
            14269,
            14297,
            true
          ],
          "239": [
            14368,
            14389,
            true
          ],
          "240": [
            14537,
            14559,
            true
          ],
          "241": [
            16194,
            16201,
            true
          ]
        },
        "CryptoChampions.refreshPhase": {
          "243": [
            9183,
            9210,
            false
          ],
          "244": [
            9214,
            9265,
            false
          ],
          "245": [
            9324,
            9352,
            false
          ],
          "246": [
            9356,
            9408,
            false
          ]
        }
      },
      "13": {},
      "14": {},
      "15": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "301": [
            9592,
            9620,
            true
          ]
        }
      },
      "16": {},
      "17": {},
      "18": {},
      "19": {},
      "2": {},
      "21": {},
      "22": {},
      "3": {
        "SafeMath.add": {
          "294": [
            2802,
            2808,
            true
          ]
        },
        "SafeMath.div": {
          "298": [
            4302,
            4307,
            true
          ]
        },
        "SafeMath.mod": {
          "300": [
            4905,
            4910,
            true
          ]
        },
        "SafeMath.mul": {
          "296": [
            3619,
            3625,
            false
          ],
          "297": [
            3680,
            3690,
            true
          ]
        },
        "SafeMath.sub": {
          "295": [
            5545,
            5551,
            true
          ],
          "299": [
            3221,
            3227,
            true
          ]
        }
      },
      "4": {},
      "5": {
        "ERC1155._burn": {
          "290": [
            9976,
            9997,
            true
          ]
        },
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "286": [
            13484,
            13499,
            false
          ],
          "287": [
            13647,
            13711,
            false
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "288": [
            12712,
            12727,
            false
          ],
          "289": [
            12868,
            12927,
            false
          ]
        },
        "ERC1155._mint": {
          "285": [
            8129,
            8150,
            true
          ]
        },
        "ERC1155.balanceOf": {
          "275": [
            3089,
            3110,
            true
          ]
        },
        "ERC1155.balanceOfBatch": {
          "280": [
            3574,
            3603,
            true
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "276": [
            5774,
            5802,
            true
          ],
          "277": [
            5865,
            5881,
            true
          ],
          "278": [
            5954,
            5974,
            true
          ],
          "279": [
            5978,
            6014,
            true
          ]
        },
        "ERC1155.safeTransferFrom": {
          "282": [
            4780,
            4796,
            true
          ],
          "283": [
            4869,
            4889,
            true
          ],
          "284": [
            4893,
            4929,
            true
          ]
        },
        "ERC1155.setApprovalForAll": {
          "281": [
            4061,
            4085,
            true
          ]
        }
      },
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "AccessControl._grantRole": {
          "134": [
            7147,
            7192
          ]
        },
        "AccessControl._revokeRole": {
          "135": [
            7341,
            7386
          ]
        },
        "AccessControl.getRoleAdmin": {
          "24": [
            4358,
            4387
          ]
        },
        "AccessControl.getRoleMember": {
          "82": [
            4057,
            4094
          ]
        },
        "AccessControl.getRoleMemberCount": {
          "102": [
            3337,
            3373
          ]
        },
        "AccessControl.grantRole": {
          "37": [
            4719,
            4824
          ],
          "38": [
            4835,
            4860
          ]
        },
        "AccessControl.hasRole": {
          "83": [
            3035,
            3080
          ]
        },
        "AccessControl.renounceRole": {
          "39": [
            5896,
            5979
          ],
          "40": [
            5990,
            6016
          ]
        },
        "AccessControl.revokeRole": {
          "103": [
            5177,
            5283
          ]
        }
      },
      "1": {
        "ERC165.supportsInterface": {
          "2": [
            1066,
            1106
          ]
        }
      },
      "10": {
        "Context._msgSender": {
          "118": [
            678,
            695
          ]
        }
      },
      "11": {
        "EnumerableSet._add": {
          "169": [
            1761,
            1784
          ],
          "170": [
            1919,
            1959
          ],
          "171": [
            1973,
            1984
          ],
          "172": [
            2015,
            2027
          ]
        },
        "EnumerableSet._at": {
          "179": [
            4538,
            4611
          ],
          "180": [
            4621,
            4646
          ]
        },
        "EnumerableSet._contains": {
          "173": [
            3894,
            3925
          ]
        },
        "EnumerableSet._length": {
          "214": [
            4088,
            4113
          ]
        },
        "EnumerableSet._remove": {
          "215": [
            3274,
            3312
          ],
          "216": [
            3378,
            3421
          ],
          "217": [
            3527,
            3544
          ],
          "218": [
            3612,
            3638
          ],
          "219": [
            3653,
            3664
          ],
          "220": [
            3695,
            3707
          ]
        },
        "EnumerableSet.add": {
          "115": [
            6515,
            6572
          ]
        },
        "EnumerableSet.at": {
          "148": [
            7770,
            7826
          ]
        },
        "EnumerableSet.contains": {
          "116": [
            7080,
            7142
          ]
        },
        "EnumerableSet.length": {
          "163": [
            7312,
            7338
          ]
        },
        "EnumerableSet.remove": {
          "175": [
            6836,
            6896
          ]
        }
      },
      "12": {
        "CryptoChampions._beforeTokenTransfer": {
          "125": [
            23607,
            23673
          ],
          "126": [
            23910,
            23944
          ],
          "127": [
            24025,
            24049
          ],
          "128": [
            23720,
            23723
          ]
        },
        "CryptoChampions._burnElder": {
          "224": [
            21859,
            21896
          ],
          "225": [
            21954,
            21994
          ],
          "226": [
            22048,
            22082
          ],
          "227": [
            22092,
            22126
          ],
          "228": [
            22136,
            22172
          ]
        },
        "CryptoChampions._burnElders": {
          "211": [
            21547,
            21560
          ],
          "212": [
            21482,
            21485
          ],
          "213": [
            21595,
            21620
          ]
        },
        "CryptoChampions._canMintHero": {
          "136": [
            17167,
            17178
          ],
          "137": [
            17482,
            17538
          ],
          "138": [
            17383,
            17386
          ],
          "139": [
            17573,
            17650
          ]
        },
        "CryptoChampions._getRandomNumber": {
          "140": [
            9802,
            9848
          ],
          "141": [
            9910,
            9968
          ]
        },
        "CryptoChampions._hasRole": {
          "151": [
            10447,
            10481
          ]
        },
        "CryptoChampions._priceFormula": {
          "167": [
            23180,
            23225
          ],
          "168": [
            23235,
            23278
          ]
        },
        "CryptoChampions._refundSender": {
          "124": [
            24915,
            24931
          ]
        },
        "CryptoChampions._rollDice": {
          "223": [
            20889,
            20961
          ]
        },
        "CryptoChampions._startNewPriceGame": {
          "209": [
            31665,
            31710
          ],
          "210": [
            31720,
            31740
          ]
        },
        "CryptoChampions._trainHero": {
          "181": [
            18021,
            18046
          ],
          "182": [
            18072,
            18146
          ],
          "183": [
            18171,
            18244
          ],
          "184": [
            18268,
            18341
          ],
          "185": [
            18365,
            18438
          ],
          "186": [
            18462,
            18535
          ],
          "187": [
            18560,
            18636
          ],
          "188": [
            18660,
            18738
          ],
          "189": [
            18763,
            18839
          ],
          "190": [
            18864,
            18938
          ],
          "191": [
            18963,
            19033
          ],
          "192": [
            19057,
            19110
          ],
          "193": [
            19120,
            19192
          ],
          "194": [
            19216,
            19273
          ],
          "195": [
            19283,
            19358
          ],
          "196": [
            19382,
            19445
          ],
          "197": [
            19456,
            19532
          ],
          "198": [
            19555,
            19620
          ],
          "199": [
            19630,
            19707
          ],
          "200": [
            19730,
            19797
          ],
          "201": [
            19807,
            19887
          ],
          "202": [
            19910,
            19983
          ],
          "203": [
            19993,
            20073
          ],
          "204": [
            20096,
            20169
          ],
          "205": [
            20179,
            20253
          ],
          "206": [
            20276,
            20337
          ],
          "207": [
            20347,
            20423
          ],
          "208": [
            20446,
            20511
          ]
        },
        "CryptoChampions._transitionNextPhase": {
          "152": [
            7394,
            7415
          ],
          "153": [
            7474,
            7495
          ],
          "154": [
            7609,
            7643
          ],
          "155": [
            7692,
            7719
          ],
          "156": [
            7861,
            7881
          ],
          "157": [
            8342,
            8422
          ],
          "158": [
            8448,
            8453
          ],
          "159": [
            8057,
            8060
          ],
          "160": [
            8553,
            8566
          ],
          "161": [
            8615,
            8641
          ],
          "162": [
            8662,
            8689
          ]
        },
        "CryptoChampions.claimReward": {
          "94": [
            30609,
            30661
          ],
          "95": [
            30711,
            30822
          ],
          "96": [
            30881,
            30940
          ],
          "97": [
            31077,
            31111
          ],
          "98": [
            31121,
            31181
          ],
          "99": [
            31191,
            31239
          ]
        },
        "CryptoChampions.createAffinity": {
          "86": [
            10943,
            10981
          ],
          "87": [
            10991,
            11019
          ]
        },
        "CryptoChampions.declareRoundWinner": {
          "88": [
            30192,
            30248
          ]
        },
        "CryptoChampions.delegatedTransferInGameTokens": {
          "100": [
            32589,
            32650
          ]
        },
        "CryptoChampions.fulfillRandomness": {
          "149": [
            10218,
            10259
          ],
          "150": [
            10269,
            10290
          ]
        },
        "CryptoChampions.getAffinityFeedAddress": {
          "25": [
            29609,
            29637
          ]
        },
        "CryptoChampions.getElderOwner": {
          "78": [
            13748,
            13792
          ],
          "79": [
            13847,
            13875
          ]
        },
        "CryptoChampions.getElderSpawnsAmount": {
          "76": [
            24532,
            24562
          ],
          "77": [
            24595,
            24635
          ]
        },
        "CryptoChampions.getElderSpirit": {
          "23": [
            25533,
            25719
          ]
        },
        "CryptoChampions.getHeroGameData": {
          "36": [
            26206,
            26417
          ]
        },
        "CryptoChampions.getHeroLore": {
          "68": [
            27887,
            28058
          ]
        },
        "CryptoChampions.getHeroMintPrice": {
          "113": [
            22611,
            22641
          ],
          "114": [
            22771,
            22803
          ]
        },
        "CryptoChampions.getHeroOwner": {
          "74": [
            21206,
            21248
          ],
          "75": [
            21302,
            21328
          ]
        },
        "CryptoChampions.getHeroStats": {
          "80": [
            29058,
            29310
          ]
        },
        "CryptoChampions.getHeroTraitsSkills": {
          "81": [
            27364,
            27467
          ]
        },
        "CryptoChampions.getHeroVisuals": {
          "41": [
            26842,
            26948
          ]
        },
        "CryptoChampions.getHeroVitals": {
          "42": [
            28439,
            28536
          ]
        },
        "CryptoChampions.getNumEldersInGame": {
          "69": [
            29855,
            29874
          ]
        },
        "CryptoChampions.mintElderSpirit": {
          "4": [
            11900,
            11944
          ],
          "5": [
            11999,
            12035
          ],
          "6": [
            12075,
            12119
          ],
          "7": [
            12282,
            12325
          ],
          "8": [
            12376,
            12421
          ],
          "9": [
            12561,
            12649
          ],
          "10": [
            12729,
            12747
          ],
          "11": [
            12757,
            12778
          ],
          "12": [
            12788,
            12811
          ],
          "13": [
            12821,
            12846
          ],
          "14": [
            12856,
            12891
          ],
          "15": [
            12926,
            12961
          ],
          "16": [
            13055,
            13091
          ],
          "17": [
            13101,
            13131
          ],
          "18": [
            13177,
            13211
          ],
          "19": [
            13262,
            13291
          ],
          "20": [
            13363,
            13400
          ],
          "21": [
            13411,
            13456
          ],
          "22": [
            13467,
            13481
          ]
        },
        "CryptoChampions.mintHero": {
          "43": [
            14261,
            14298
          ],
          "44": [
            14360,
            14390
          ],
          "45": [
            14529,
            14560
          ],
          "46": [
            14702,
            14743
          ],
          "47": [
            14796,
            14834
          ],
          "48": [
            14947,
            14964
          ],
          "49": [
            14974,
            14994
          ],
          "50": [
            15004,
            15035
          ],
          "51": [
            15045,
            15067
          ],
          "52": [
            15077,
            15120
          ],
          "53": [
            15130,
            15175
          ],
          "54": [
            15185,
            15232
          ],
          "55": [
            15242,
            15264
          ],
          "56": [
            15390,
            15428
          ],
          "57": [
            15463,
            15497
          ],
          "58": [
            15570,
            15633
          ],
          "59": [
            15707,
            15741
          ],
          "60": [
            15812,
            15846
          ],
          "61": [
            15856,
            15946
          ],
          "62": [
            16186,
            16220
          ],
          "63": [
            16352,
            16381
          ],
          "64": [
            16391,
            16471
          ],
          "65": [
            16522,
            16546
          ],
          "66": [
            16557,
            16594
          ],
          "67": [
            16605,
            16618
          ]
        },
        "CryptoChampions.refreshPhase": {
          "89": [
            9281,
            9303
          ],
          "90": [
            9424,
            9446
          ]
        },
        "CryptoChampions.setElderMintPrice": {
          "104": [
            11252,
            11274
          ]
        },
        "CryptoChampions.setPhase": {
          "101": [
            8939,
            8959
          ]
        },
        "CryptoChampions.transferInGameTokens": {
          "26": [
            32029,
            32096
          ]
        }
      },
      "13": {},
      "14": {},
      "15": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "84": [
            9584,
            9656
          ],
          "85": [
            9666,
            9706
          ]
        },
        "VRFConsumerBase.requestRandomness": {
          "176": [
            7678,
            7749
          ],
          "177": [
            8519,
            8561
          ],
          "178": [
            8571,
            8610
          ]
        }
      },
      "16": {
        "VRFRequestIDBase.makeRequestId": {
          "222": [
            1596,
            1655
          ]
        },
        "VRFRequestIDBase.makeVRFInputSeed": {
          "221": [
            1005,
            1083
          ]
        }
      },
      "17": {},
      "18": {},
      "19": {},
      "2": {},
      "21": {},
      "22": {},
      "3": {
        "SafeMath.add": {
          "117": [
            2794,
            2840
          ]
        },
        "SafeMath.div": {
          "144": [
            4294,
            4338
          ],
          "145": [
            4348,
            4360
          ]
        },
        "SafeMath.mod": {
          "229": [
            4897,
            4939
          ],
          "230": [
            4949,
            4961
          ]
        },
        "SafeMath.mul": {
          "142": [
            3627,
            3635
          ],
          "143": [
            3672,
            3728
          ]
        },
        "SafeMath.sub": {
          "129": [
            5537,
            5566
          ],
          "130": [
            5576,
            5588
          ],
          "146": [
            3213,
            3262
          ],
          "147": [
            3272,
            3284
          ]
        }
      },
      "4": {},
      "5": {
        "ERC1155._asSingletonArray": {
          "164": [
            14169,
            14187
          ],
          "165": [
            14198,
            14210
          ]
        },
        "ERC1155._burn": {
          "231": [
            9968,
            10037
          ],
          "232": [
            10090,
            10195
          ],
          "233": [
            10206,
            10339
          ],
          "234": [
            10350,
            10412
          ]
        },
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "131": [
            13871,
            13885
          ],
          "132": [
            13925,
            13987
          ],
          "133": [
            13735,
            13785
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "166": [
            12951,
            13001
          ]
        },
        "ERC1155._mint": {
          "119": [
            8121,
            8188
          ],
          "120": [
            8241,
            8348
          ],
          "121": [
            8359,
            8418
          ],
          "122": [
            8428,
            8490
          ],
          "123": [
            8501,
            8580
          ]
        },
        "ERC1155.balanceOf": {
          "0": [
            3081,
            3158
          ],
          "1": [
            3168,
            3197
          ]
        },
        "ERC1155.balanceOfBatch": {
          "70": [
            3566,
            3649
          ],
          "71": [
            3794,
            3843
          ],
          "72": [
            3775,
            3778
          ],
          "73": [
            3864,
            3884
          ]
        },
        "ERC1155.isApprovedForAll": {
          "105": [
            4447,
            4491
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "27": [
            5766,
            5847
          ],
          "28": [
            5857,
            5923
          ],
          "29": [
            5933,
            6090
          ],
          "30": [
            6143,
            6203
          ],
          "31": [
            6344,
            6489
          ],
          "32": [
            6503,
            6552
          ],
          "33": [
            6250,
            6253
          ],
          "34": [
            6573,
            6625
          ],
          "35": [
            6636,
            6711
          ]
        },
        "ERC1155.safeTransferFrom": {
          "106": [
            4772,
            4838
          ],
          "107": [
            4848,
            4996
          ],
          "108": [
            5049,
            5145
          ],
          "109": [
            5156,
            5255
          ],
          "110": [
            5265,
            5314
          ],
          "111": [
            5325,
            5376
          ],
          "112": [
            5387,
            5455
          ]
        },
        "ERC1155.setApprovalForAll": {
          "91": [
            4053,
            4131
          ],
          "92": [
            4142,
            4195
          ],
          "93": [
            4205,
            4258
          ]
        },
        "ERC1155.uri": {
          "3": [
            2816,
            2827
          ]
        }
      },
      "6": {},
      "7": {},
      "8": {},
      "9": {
        "Address.isContract": {
          "174": [
            1117,
            1132
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.4.0/AccessControl",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Address",
    "AggregatorV3Interface",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Context",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ERC1155",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/EnumerableSet",
    "ICryptoChampions",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC1155",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC1155MetadataURI",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC1155Receiver",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC165",
    "IMinigameFactoryRegistry",
    "LinkTokenInterface",
    "Minigame",
    "PriceWars",
    "PriceWarsFactory",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeMath",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SignedSafeMath",
    "VRFConsumerBase",
    "VRFRequestIDBase"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "743:31916:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2976:228:5;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2976:228:5;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1456:36:12;;;;;;;;;;;;;:::i;965:148:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;965:148:1;-1:-1:-1;;;;;;965:148:1;;:::i;:::-;;;;;;;;;;;;;;;;;;1109:25:12;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;2729:105:5;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2729:105:5;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11711:1777:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11711:1777:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11711:1777:12;;;;;;;;;;-1:-1:-1;11711:1777:12;;-1:-1:-1;11711:1777:12;-1:-1:-1;11711:1777:12;:::i;25194:532::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25194:532:12;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4282:112:0;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4282:112:0;;:::i;29500:144:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;29500:144:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;29500:144:12;;;;;;;;;;-1:-1:-1;29500:144:12;;-1:-1:-1;29500:144:12;-1:-1:-1;29500:144:12;:::i;:::-;;;;-1:-1:-1;;;;;29500:144:12;;;;;;;;;;;;;;31916:187;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;31916:187:12;;;;;;;;:::i;:::-;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5534:1184:5;;;;;;;;-1:-1:-1;5534:1184:5;;-1:-1:-1;;;;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5534:1184:5;;;;;;;;-1:-1:-1;5534:1184:5;;-1:-1:-1;;;;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5534:1184:5;;-1:-1:-1;5534:1184:5;;-1:-1:-1;;;;;5534:1184:5:i;25875:549:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25875:549:12;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4644:223:0;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4644:223:0;;;;;;-1:-1:-1;;;;;4644:223:0;;:::i;5818:205::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5818:205:0;;;;;;-1:-1:-1;;;;;5818:205:0;;:::i;2373:26:12:-;;;;;;;;;;;;;:::i;26553:402::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26553:402:12;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28174:369;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28174:369:12;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14042:2583;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;14042:2583:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;14042:2583:12;;;;;;;;;;-1:-1:-1;14042:2583:12;;-1:-1:-1;14042:2583:12;-1:-1:-1;14042:2583:12;:::i;27608:457::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27608:457:12;;:::i;29774:107::-;;;;;;;;;;;;;:::i;3361:530:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3361:530:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3361:530:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3361:530:5;;;;;;;;-1:-1:-1;3361:530:5;;-1:-1:-1;;;;;3361:530:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3361:530:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3361:530:5;;-1:-1:-1;3361:530:5;;-1:-1:-1;;;;;3361:530:5:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21099:236:12;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21099:236:12;;:::i;24347:295::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24347:295:12;;;;;;;:::i;4369:58::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4369:58:12;;:::i;13629:253::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13629:253:12;;:::i;3692:29::-;;;;;;;;;;;;;:::i;28711:606::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28711:606:12;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27083:391;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27083:391:12;;:::i;3759:27::-;;;;;;;;;;;;;:::i;3965:136:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3965:136:0;;;;;;;:::i;2711:48:12:-;;;;;;;;;;;;;:::i;2950:137:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2950:137:0;;;;;;-1:-1:-1;;;;;2950:137:0;;:::i;9496:217:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9496:217:15;;;;;;;:::i;10831:195:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10831:195:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10831:195:12;;;;;;;;;;;;-1:-1:-1;10831:195:12;-1:-1:-1;10831:195:12;-1:-1:-1;;;;;10831:195:12;;:::i;30067:188::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;30067:188:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;30067:188:12;;;;;;;;;;-1:-1:-1;30067:188:12;;-1:-1:-1;30067:188:12;-1:-1:-1;30067:188:12;:::i;9091:449::-;;;;;;;;;;;;;:::i;1727:49:0:-;;;;;;;;;;;;;:::i;3959:306:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3959:306:5;;;;;;;;;;:::i;30431:815:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;30431:815:12;;:::i;32423:234::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;32423:234:12;;;;;;;;;;;;;;;;;:::i;2864:31::-;;;;;;;;;;;;;:::i;8879:87::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8879:87:12;;;;:::i;3255:125:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3255:125:0;;:::i;3209:31:12:-;;;;;;;;;;;;;:::i;5101:226:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5101:226:0;;;;;;-1:-1:-1;;;;;5101:226:0;;:::i;2279:36:12:-;;;;;;;;;;;;;:::i;11172:109::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11172:109:12;;:::i;3953:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3953:26:12;;:::i;4332:166:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4332:166:5;;;;;;;;;;:::i;4565:897::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4565:897:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4565:897:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4565:897:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4565:897:5;;-1:-1:-1;4565:897:5;;-1:-1:-1;;;;;4565:897:5:i;22430:380:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22430:380:12;;;;;;;:::i;2976:228:5:-;3062:7;-1:-1:-1;;;;;3089:21:5;;3081:77;;;;-1:-1:-1;;;3081:77:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3175:13:5;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;3175:22:5;;;;;;;;;;2976:228;;;;;:::o;1456:36:12:-;;;;:::o;965:148:1:-;-1:-1:-1;;;;;;1073:33:1;;1050:4;1073:33;;;:20;:33;;;;;;;;965:148;;;;:::o;1109:25:12:-;;;;;;:::o;2729:105:5:-;2823:4;2816:11;;;;;;;;-1:-1:-1;;2816:11:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2791:13;;2816:11;;2823:4;;2816:11;;2823:4;2816:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2729:105;;;:::o;11711:1777:12:-;11881:7;;;7081:12;;;;;:21;;;;;;;;7073:30;;;;;;2758:1:::1;11908:12;;:35;11900:44;;;::::0;::::1;;12020:14;;12007:9;:27;;11999:36;;;::::0;::::1;;12116:1;-1:-1:-1::0;;;;;12083:35:12::1;:11;12095:8;;12083:21;;;;;;;;;::::0;;;::::1;::::0;;;-1:-1:-1;;12083:21:12::1;::::0;;;;;::::1;::::0;;;;;-1:-1:-1;;;;;12083:21:12::1;:35:::0;;;::::1;;::::0;-1:-1:-1;12075:44:12::1;::::0;-1:-1:-1;12075:44:12::1;;::::0;::::1;;12253:12;::::0;12235:15:::1;::::0;12253:19:::1;::::0;12270:1:::1;12253:16;:19::i;:::-;12322:1;12289:21:::0;;;:12:::1;:21;::::0;;;;;12235:37;;-1:-1:-1;;;;;;12289:21:12::1;:35:::0;12282:43:::1;;;;12383:22;::::0;;;:13:::1;:22;::::0;;;;:28;::::1;;:37;12376:45;;;;12531:20;12609:11;12621:8;;12609:21;;;;;;;;;::::0;;;::::1;::::0;;;-1:-1:-1;;12609:21:12::1;::::0;;;;;;::::1;::::0;;;;-1:-1:-1;;;12587:62:12;;;;-1:-1:-1;;;;;12609:21:12;;::::1;::::0;12587:60:::1;::::0;-1:-1:-1;12587:62:12::1;::::0;;::::1;::::0;-1:-1:-1;12587:62:12::1;::::0;;;;;;;12609:21;12587:62;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;12587:62:12::1;;::::0;;-1:-1:-1;12695:24:12::1;;:::i;:::-;12743:4;12729:18:::0;;12757:12:::1;::::0;;::::1;:21:::0;;;12788:13:::1;::::0;;::::1;:23:::0;;;12821:25;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;12838:8;;;;;;12821:25;::::1;12838:8:::0;;;;12821:25;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;;;;12821:14:12::1;::::0;::::1;:25:::0;12856:19:::1;::::0;::::1;:35:::0;;;12926::::1;12932:12;:10;:12::i;:::-;12946:7;12955:1;12926:35;;;;;;;;;;;::::0;:5:::1;:35::i;:::-;13079:12;:10;:12::i;:::-;13055:21;::::0;;;:12:::1;:21;::::0;;;;;;;:36;;-1:-1:-1;;;;;;13055:36:12::1;-1:-1:-1::0;;;;;13055:36:12;;;::::1;::::0;;;::::1;::::0;;;13101:13:::1;:22:::0;;;;;;:30;;;;-1:-1:-1;;13101:30:12::1;::::0;::::1;;;::::0;;;;::::1;::::0;-1:-1:-1;13101:30:12;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;;;:22;:30:::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;13101:30:12::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;13192:12:::1;::::0;:19:::1;::::0;13209:1:::1;13192:16;:19::i;:::-;13177:12;:34:::0;13276:14:::1;::::0;13262:29:::1;::::0;:13:::1;:29::i;:::-;13385:14;::::0;13373:7:::1;::::0;:27:::1;::::0;:11:::1;:27::i;:::-;13363:7;:37:::0;13416:40:::1;13434:7:::0;13443:12:::1;:10;:12::i;:::-;13416:40;::::0;;;;;-1:-1:-1;;;;;13416:40:12;;::::1;;::::0;::::1;::::0;;;;;;;;;::::1;-1:-1:-1::0;13474:7:12;;11711:1777;-1:-1:-1;;;;;;;11711:1777:12:o;25194:532::-;25350:4;25368:7;25389;25410:13;25437:6;25311:7;1991:1;6437:7;:29;:64;;;;;2758:1;6470:7;:31;;6437:64;6429:73;;;;;;25468:30:::1;;:::i;:::-;25501:22;::::0;;;:13:::1;:22;::::0;;;;;;;;25468:55;;::::1;::::0;::::1;::::0;;;;::::1;;;;::::0;;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;::::1;;::::0;;;::::1;-1:-1:-1::0;;25468:55:12;::::1;::::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;25501:22;;25468:55;;;;;;;;;::::1;::::0;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;25468:55:12;;;-1:-1:-1;;25468:55:12::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;25554:17;;25585:18;;::::1;::::0;25617:19:::1;::::0;::::1;::::0;25650:20:::1;::::0;::::1;::::0;25684:25:::1;::::0;;::::1;::::0;25554:17;;25585:18;;-1:-1:-1;25617:19:12;-1:-1:-1;25650:20:12;;-1:-1:-1;25684:25:12;-1:-1:-1;25194:532:12;-1:-1:-1;;;;25194:532:12:o;4282:112:0:-;4339:7;4365:12;;;;;;;;;;:22;;;;4282:112::o;29500:144:12:-;29590:7;29616:11;29628:8;;29616:21;;;;;;;;;;;;;;;;-1:-1:-1;;29616:21:12;;;;;;;;;;;;-1:-1:-1;;;;;29616:21:12;;-1:-1:-1;;;29500:144:12;;;;:::o;31916:187::-;32002:17;32029:67;32046:10;32058:2;1991:1;32083:6;32091:4;32029:16;:67::i;:::-;31916:187;;;:::o;5534:1184:5:-;5788:7;:14;5774:3;:10;:28;5766:81;;;;-1:-1:-1;;;5766:81:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5865:16:5;;5857:66;;;;-1:-1:-1;;;5857:66:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5962:12;:10;:12::i;:::-;-1:-1:-1;;;;;5954:20:5;:4;-1:-1:-1;;;;;5954:20:5;;:60;;;;5978:36;5995:4;6001:12;:10;:12::i;:::-;5978:16;:36::i;:::-;5933:157;;;;-1:-1:-1;;;5933:157:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6101:16;6120:12;:10;:12::i;:::-;6101:31;;6143:60;6164:8;6174:4;6180:2;6184:3;6189:7;6198:4;6143:20;:60::i;:::-;6219:9;6214:349;6238:3;:10;6234:1;:14;6214:349;;;6269:10;6282:3;6286:1;6282:6;;;;;;;;;;;;;;6269:19;;6302:14;6319:7;6327:1;6319:10;;;;;;;;;;;;;;6302:27;;6366:123;6407:6;6366:123;;;;;;;;;;;;;;;;;:9;:13;6376:2;6366:13;;;;;;;;;;;:19;6380:4;-1:-1:-1;;;;;6366:19:5;-1:-1:-1;;;;;6366:19:5;;;;;;;;;;;;;:23;;:123;;;;;:::i;:::-;6344:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;6344:19:5;;;;;;;;;;:145;;;;6523:17;;;;;;:29;;6545:6;6523:21;:29::i;:::-;6503:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;6503:17:5;;;;;;;;;;:49;;;;-1:-1:-1;6250:3:5;;6214:349;;;;6608:2;-1:-1:-1;;;;;6578:47:5;6602:4;-1:-1:-1;;;;;6578:47:5;6592:8;-1:-1:-1;;;;;6578:47:5;;6612:3;6617:7;6578:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6636:75;6672:8;6682:4;6688:2;6692:3;6697:7;6706:4;6636:35;:75::i;:::-;5534:1184;;;;;;:::o;25875:549:12:-;26021:4;26048:13;26087:6;26125:7;26162;25983:6;2758:1;6612:6;:29;6604:38;;;;;;6691:15;;;;:7;:15;;;;;:21;;;6683:30;;;;;;26227:15:::1;::::0;;;:7:::1;:15;::::0;;;;;;;;:21;;26300:29:::1;::::0;::::1;::::0;26343:27:::1;::::0;::::1;::::0;26384:23:::1;::::0;::::1;::::0;26262:24:::1;::::0;;::::1;26206:211:::0;;;;26227:21:::1;::::0;26206:211;::::1;;;-1:-1:-1::0;;26206:211:12;;;::::1;::::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;26227:21:::1;::::0;;::::1;::::0;26262:24;;26300:29;;26343:27;;26384:23;;26262:24;;26206:211;;::::1;26262:24:::0;26206:211;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25875:549:::0;;;;;;;;:::o;4644:223:0:-;4735:6;:12;;;;;;;;;;:22;;;4727:45;;4759:12;:10;:12::i;:::-;4727:7;:45::i;:::-;4719:105;;;;-1:-1:-1;;;4719:105:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4835:25;4846:4;4852:7;4835:10;:25::i;:::-;4644:223;;:::o;5818:205::-;5915:12;:10;:12::i;:::-;-1:-1:-1;;;;;5904:23:0;:7;-1:-1:-1;;;;;5904:23:0;;5896:83;;;;-1:-1:-1;;;5896:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5990:26;6002:4;6008:7;5990:11;:26::i;2373::12:-;;;;:::o;26553:402::-;26698:13;26733:7;26765;26798:5;26660:6;2758:1;6612:6;:29;6604:38;;;;;;6691:15;;;;:7;:15;;;;;:21;;;6683:30;;;;;;26850:15:::1;::::0;;;:7:::1;:15;::::0;;;;;;;;26872:22:::1;::::0;::::1;::::0;26896:23:::1;::::0;::::1;::::0;26921:26:::1;::::0;::::1;::::0;26850:20:::1;::::0;;::::1;26842:106:::0;;;;::::1;26921:26;26842:106:::0;;::::1;;::::0;;;::::1;-1:-1:-1::0;;26842:106:12;;;::::1;::::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;26850:20;26872:22;;26896:23;;26921:26:::1;::::0;;::::1;::::0;26842:106;;26850:20;;26842:106;;::::1;26850:20:::0;26842:106;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26553:402:::0;;;;;;:::o;28174:369::-;28318:5;28346;28371;28398;28280:6;2758:1;6612:6;:29;6604:38;;;;;;6691:15;;;;:7;:15;;;;;:21;;;6683:30;;;;;;-1:-1:-1;;;28447:15:12::1;::::0;;;-1:-1:-1;;28447:7:12::1;:15;::::0;;;;:21:::1;;::::0;::::1;-1:-1:-1::0;;;28447:21:12;::::1;::::0;::::1;::::0;-1:-1:-1;;;28470:18:12;::::1;::::0;::::1;::::0;-1:-1:-1;;;28490:20:12;::::1;::::0;::::1;::::0;-1:-1:-1;;;28512:23:12;;::::1;;::::0;28174:369::o;14042:2583::-;14238:7;14182;1991:1;6437:7;:29;:64;;;;;2758:1;6470:7;:31;;6437:64;6429:73;;;;;;14207:12:::1;::::0;7081::::1;::::0;::::1;;::::0;:21;::::1;;;;;;;7073:30;;;::::0;::::1;;14269:22:::2;::::0;;;:13:::2;:22;::::0;;;;:28;::::2;;14261:37;;;::::0;::::2;;14368:21;14381:7;14368:12;:21::i;:::-;14360:30;;;::::0;::::2;;14460:17;14480:39;14497:12;;14511:7;14480:16;:39::i;:::-;14460:59;;14550:9;14537;:22;;14529:31;;;::::0;::::2;;14633:14;2758:1;14650:19;14667:1;14650:12;;:16;;:19;;;;:::i;:::-;:42;14740:1;14709:19:::0;;;:11:::2;:19;::::0;;;;;14650:42;;-1:-1:-1;;;;;;14709:19:12::2;:33:::0;14702:41:::2;;;;14803:15;::::0;;;:7:::2;:15;::::0;;;;:21;::::2;;:30;14796:38;;;;14921:16;;:::i;:::-;14960:4;14947:17:::0;;14974:20:::2;::::0;;::::2;;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;;;14986:8;;;;;;14974:20;::::2;14986:8:::0;;;;14974:20;::::2;;;;;;;;;;;;;;;;;;;;;;;;;:4;:9;;:20;;;;15023:12;;15004:4;:16;;:31;;;::::0;::::2;15060:7;15045:4;:12;;:22;;;::::0;::::2;15091:13;:22;15105:7;15091:22;;;;;;;;;;;:29;;;15077:4;:11;;:43;;;::::0;::::2;15145:13;:22;15159:7;15145:22;;;;;;;;;;;:30;;;15130:4;:12;;:45;;;::::0;::::2;15201:13;:22;15215:7;15201:22;;;;;;;;;;;:31;;15185:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;15185:13:12::2;::::0;;::::2;:47:::0;;;;15242:15:::2;::::0;;;:7:::2;:15;::::0;;;;;;:22;;;;-1:-1:-1;;15242:22:12::2;::::0;::::2;;;::::0;;;;::::2;::::0;;;15185:13;;15242:22:::2;::::0;-1:-1:-1;15242:22:12;::::2;::::0;;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;15242:22:12::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;:::ii;:::-;15390:29;::::0;;;:18:::2;:29;::::0;;;;:38;;;15336:44;-1:-1:-1;15463:34:12::2;15469:12;:10;:12::i;15463:34::-;15570:63;15576:12;:10;:12::i;:::-;1991:1;1247:12;15570:63;;;;;;;;;;;::::0;:5:::2;:63::i;:::-;15729:12;:10;:12::i;:::-;15707:19;::::0;;;:11:::2;:19;::::0;;;;:34;;-1:-1:-1;;;;;;15707:34:12::2;-1:-1:-1::0;;;;;15707:34:12;;;::::2;::::0;;;::::2;::::0;;15827:12:::2;::::0;:19:::2;::::0;-1:-1:-1;15827:16:12::2;:19::i;:::-;15812:12;:34:::0;15917:12:::2;::::0;15899:31:::2;::::0;;;:17:::2;:31;::::0;;;;;;;:40;;;;;;;;;:47:::2;::::0;15944:1:::2;15899:44;:47::i;:::-;15874:12;::::0;15856:31:::2;::::0;;;:17:::2;:31;::::0;;;;;;;:40;;;;;;;;:90;;;;16008:49:::2;16053:3;16008:40;:9:::0;2159:2:::2;16008:13;:40::i;:::-;:44:::0;::::2;:49::i;:::-;16067:17;16087:21:::0;;;:12:::2;:21;::::0;;;;;;16137:39;;15987:70;;-1:-1:-1;;;;;;16087:21:12::2;::::0;;;15987:70;;16067:17;16137:39;16067:17;16137:39;15987:70;16087:21;16137:39:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16118:58;;;16194:7;16186:34;;;::::0;;-1:-1:-1;;;16186:34:12;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;16186:34:12;;;;;;;;;;;;;::::2;;16280:14;16297:45;16338:3;16297:36;:9:::0;2215:2:::2;16297:13;:36::i;:45::-;16362:7;::::0;16280:62;;-1:-1:-1;16362:19:12::2;::::0;16280:62;16362:11:::2;:19::i;:::-;16352:7;:29:::0;16411:60:::2;16433:37;16463:6:::0;16433:25:::2;:9:::0;16447:10;16433:13:::2;:25::i;:::-;:29:::0;::::2;:37::i;:::-;16411:17;::::0;;:21:::2;:60::i;:::-;16391:17;:80:::0;16522:24:::2;16536:9:::0;16522:13:::2;:24::i;:::-;16562:32;16573:6;16581:12;:10;:12::i;:::-;16562:32;::::0;;;;;-1:-1:-1;;;;;16562:32:12;;::::2;;::::0;::::2;::::0;;;;;;;;;::::2;-1:-1:-1::0;16612:6:12;;14042:2583;-1:-1:-1;;;;;;;;;;;;14042:2583:12:o;27608:457::-;27750:5;27782;27815;27846;27712:6;2758:1;6612:6;:29;6604:38;;;;;;6691:15;;;;:7;:15;;;;;:21;;;6683:30;;;;;;-1:-1:-1;;;27908:15:12::1;::::0;;;-1:-1:-1;;27908:7:12::1;:15;::::0;;;;:25:::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;27947:26;;::::1;::::0;::::1;::::0;-1:-1:-1;;;27987:24:12;::::1;::::0;::::1;::::0;-1:-1:-1;;;28025:23:12;;::::1;;::::0;27608:457::o;29774:107::-;29862:12;;29774:107;;:::o;3361:530:5:-;3534:16;3593:3;:10;3574:8;:15;:29;3566:83;;;;-1:-1:-1;;;3566:83:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3660:30;3707:8;:15;3693:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3693:30:5;;3660:63;;3739:9;3734:120;3758:8;:15;3754:1;:19;3734:120;;;3813:30;3823:8;3832:1;3823:11;;;;;;;;;;;;;;3836:3;3840:1;3836:6;;;;;;;;;;;;;;3813:9;:30::i;:::-;3794:13;3808:1;3794:16;;;;;;;;;;;;;;;;;:49;3775:3;;3734:120;;;-1:-1:-1;3871:13:5;3361:530;-1:-1:-1;;;3361:530:5:o;21099:236:12:-;21187:7;21170:6;2758:1;6612:6;:29;6604:38;;;;;;6691:15;;;;:7;:15;;;;;:21;;;6683:30;;;;;;21245:1:::1;21214:19:::0;;;:11:::1;:19;::::0;;;;;-1:-1:-1;;;;;21214:19:12::1;21206:42;;;::::0;::::1;;-1:-1:-1::0;;21309:19:12::1;::::0;;;:11:::1;:19;::::0;;;;;-1:-1:-1;;;;;21309:19:12::1;::::0;21099:236::o;24347:295::-;24509:7;24483;1991:1;6437:7;:29;:64;;;;;2758:1;6470:7;:31;;6437:64;6429:73;;;;;;24549:12:::1;;24540:5;:21;;24532:30;;;::::0;::::1;;-1:-1:-1::0;;24602:24:12::1;::::0;;;:17:::1;:24;::::0;;;;;;;:33;;;;;;;;;;24347:295::o;4369:58::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4369:58:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;13629:253::-;13729:7;13711;1991:1;6437:7;:29;:64;;;;;2758:1;6470:7;:31;;6437:64;6429:73;;;;;;13789:1:::1;13756:21:::0;;;:12:::1;:21;::::0;;;;;-1:-1:-1;;;;;13756:21:12::1;13748:44;;;::::0;::::1;;-1:-1:-1::0;;13854:21:12::1;::::0;;;:12:::1;:21;::::0;;;;;-1:-1:-1;;;;;13854:21:12::1;::::0;13629:253::o;3692:29::-;;;;:::o;28711:606::-;28854:5;28885;28917;28952;28987;29016;28816:6;2758:1;6612:6;:29;6604:38;;;;;;6691:15;;;;:7;:15;;;;;:21;;;6683:30;;;;;;-1:-1:-1;;;29079:15:12::1;::::0;;;-1:-1:-1;;29079:7:12::1;:15;::::0;-1:-1:-1;;29079:15:12;;;:24:::1;;::::0;::::1;-1:-1:-1::0;;;29079:24:12;::::1;::::0;::::1;::::0;-1:-1:-1;;;29117:25:12;::::1;::::0;::::1;::::0;-1:-1:-1;;;29156:28:12;::::1;::::0;::::1;::::0;-1:-1:-1;;;29198:28:12;::::1;::::0;::::1;::::0;-1:-1:-1;;;29240:22:12;::::1;::::0;::::1;::::0;-1:-1:-1;;;29276:24:12;::::1;::::0;;::::1;::::0;28711:606::o;27083:391::-;27233:5;27263;27293;27323;27195:6;2758:1;6612:6;:29;6604:38;;;;;;6691:15;;;;:7;:15;;;;;:21;;;6683:30;;;;;;-1:-1:-1;;;27372:15:12::1;::::0;;;-1:-1:-1;;27372:7:12::1;:15;::::0;;;;:22:::1;;::::0;::::1;;::::0;::::1;::::0;::::1;::::0;27396;;::::1;::::0;::::1;::::0;27420;;::::1;::::0;::::1;::::0;-1:-1:-1;;;27444:22:12;;::::1;;::::0;27083:391::o;3759:27::-;;;;:::o;3965:136:0:-;4038:7;4064:12;;;;;;;;;;:30;;4088:5;4064:23;:30::i;:::-;4057:37;3965:136;-1:-1:-1;;;3965:136:0:o;2711:48:12:-;2758:1;2711:48;:::o;2950:137:0:-;3019:4;3042:12;;;;;;;;;;:38;;3072:7;3042:29;:38::i;9496:217:15:-;9592:10;-1:-1:-1;;;;;9606:14:15;9592:28;;9584:72;;;;;-1:-1:-1;;;9584:72:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;9666:40;9684:9;9695:10;9666:17;:40::i;10831:195:12:-;6950:20;1749:23;6950:8;:20::i;:::-;10970:11:::1;10943;10955;;10943:24;;;;;;;;;::::0;;;::::1;::::0;;;-1:-1:-1;;10943:24:12::1;::::0;;;;;::::1;::::0;;;;:38;;-1:-1:-1;;;;;10943:38:12;;;::::1;-1:-1:-1::0;;;;;;10943:38:12;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;10991:10:12::1;:28:::0;;10943:38;10991:28;::::1;::::0;;10943:24:::1;10991:28:::0;;;;::::1;::::0;;::::1;11007:11:::0;;10991:28:::1;:::i;:::-;;10831:195:::0;;;:::o;30067:188::-;30154:12;;7081;;;;;:21;;;;;;;;7073:30;;;;;;6841:25:::1;1864:28;6841:8;:25::i;:::-;30217:12:::2;::::0;30192:38:::2;::::0;;;:24:::2;:38;::::0;;;;:56:::2;::::0;30233:15;;30192:56:::2;:::i;9091:449::-:0;9143:17;;9183:12;;;;;:27;;;;;;;;:82;;;;;9245:20;;9221:21;;:44;9214:3;:51;;9183:82;9179:278;;;9281:22;:20;:22::i;:::-;9179:278;;;9340:12;9324;;;;;:28;;;;;;;;:84;;;;;9387:21;;9363;;:45;9356:3;:52;;9324:84;9320:137;;;9424:22;:20;:22::i;:::-;9091:449;:::o;1727:49:0:-;1772:4;1727:49;:::o;3959:306:5:-;4077:8;-1:-1:-1;;;;;4061:24:5;:12;:10;:12::i;:::-;-1:-1:-1;;;;;4061:24:5;;;4053:78;;;;-1:-1:-1;;;4053:78:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4187:8;4142:18;:32;4161:12;:10;:12::i;:::-;-1:-1:-1;;;;;4142:32:5;;;;;;;;;;;;;;;;;-1:-1:-1;4142:32:5;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;4142:53:5;;;;;;;;;;;4225:12;:10;:12::i;:::-;-1:-1:-1;;;;;4210:48:5;;4249:8;4210:48;;;;;;;;;;;;;;;;;;;;3959:306;;:::o;30431:815:12:-;30494:11;;7081:12;;;;;:21;;;;;;;;7073:30;;;;;;30519:6:::1;2758:1;6612:6;:29;6604:38;;;::::0;::::1;;6691:15;::::0;;;:7:::1;:15;::::0;;;;:21;::::1;;6683:30;;;::::0;::::1;;30648:12:::2;::::0;30617:15:::2;::::0;;;:7:::2;:15;::::0;;;;:27:::2;;::::0;:43:::2;30609:52;;;::::0;::::2;;30781:24;:38;30806:12;;30781:38;;;;;;;;;;;30765:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30735:7;:15;30743:6;30735:15;;;;;;;;;;;:24;;30719:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:102;30711:111;;;::::0;::::2;;30889:27;::::0;;;:19:::2;:27;::::0;;;;;;;30917:12:::2;::::0;30889:41;;;;;;;;::::2;;:50;30881:59;;;::::0;::::2;;30993:12;31011:19:::0;;;:11:::2;:19;::::0;;;;;;31044:17:::2;::::0;31011:56;;-1:-1:-1;;;;;31011:19:12;;::::2;::::0;31044:17;30993:12;31011:56;30993:12;31011:56;31044:17;31011:19;:56:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30992:75;;;31085:7;31077:34;;;::::0;;-1:-1:-1;;;31077:34:12;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;31077:34:12;;;;;;;;;;;;;::::2;;31163:17;::::0;31141::::2;::::0;:40:::2;::::0;:21:::2;:40::i;:::-;31121:17;:60:::0;-1:-1:-1;;;31191:27:12::2;::::0;;;:19:::2;:27;::::0;;;;;;;31219:12:::2;::::0;31191:41;;;;;;;:48;;-1:-1:-1;;31191:48:12::2;31235:4;31191:48;::::0;;30431:815::o;32423:234::-;32562:17;32589:61;32606:4;32612:2;1991:1;32637:6;32645:4;32589:16;:61::i;2864:31::-;;;;:::o;8879:87::-;6950:20;1749:23;6950:8;:20::i;:::-;8939:12:::1;:20:::0;;8954:5;;8939:12;-1:-1:-1;;8939:20:12::1;::::0;8954:5;8939:20;;::::1;;;;;;;;;;;8879:87:::0;:::o;3255:125:0:-;3318:7;3344:12;;;;;;;;;;:29;;:27;:29::i;3209:31:12:-;;;;:::o;5101:226:0:-;5193:6;:12;;;;;;;;;;:22;;;5185:45;;5217:12;:10;:12::i;5185:45::-;5177:106;;;;-1:-1:-1;;;5177:106:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2279:36:12;;;;:::o;11172:109::-;6950:20;1749:23;6950:8;:20::i;:::-;11252:14:::1;:22:::0;11172:109::o;3953:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3953:26:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3953:26:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4332:166:5;-1:-1:-1;;;;;4454:27:5;;;4431:4;4454:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;4332:166::o;4565:897::-;-1:-1:-1;;;;;4780:16:5;;4772:66;;;;-1:-1:-1;;;4772:66:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4877:12;:10;:12::i;:::-;-1:-1:-1;;;;;4869:20:5;:4;-1:-1:-1;;;;;4869:20:5;;:60;;;;4893:36;4910:4;4916:12;:10;:12::i;4893:36::-;4848:148;;;;-1:-1:-1;;;4848:148:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5007:16;5026:12;:10;:12::i;:::-;5007:31;;5049:96;5070:8;5080:4;5086:2;5090:21;5108:2;5090:17;:21::i;:::-;5113:25;5131:6;5113:17;:25::i;:::-;5140:4;5049:20;:96::i;:::-;5178:77;5202:6;5178:77;;;;;;;;;;;;;;;;;:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5178:19:5;;;;;;;;;;;:77;:23;:77::i;:::-;5156:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5156:19:5;;;;;;;;;;:99;;;;5285:17;;;;;;:29;;5307:6;5285:21;:29::i;:::-;5265:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5265:17:5;;;;;;;;;;;;;:49;;;;5330:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5387:68;5418:8;5428:4;5434:2;5438;5442:6;5450:4;5387:30;:68::i;22430:380:12:-;22588:7;22562;1991:1;6437:7;:29;:64;;;;;2758:1;6470:7;:31;;6437:64;6429:73;;;;;;22628:12:::1;;22619:5;:21;;22611:30;;;::::0;::::1;;22699:18;22720:24:::0;;;:17:::1;:24;::::0;;;;;;;:33;;;;;;;;;:40:::1;::::0;22758:1:::1;22720:37;:40::i;:::-;22699:61;;22778:25;22792:10;22778:13;:25::i;:::-;22771:32:::0;22430:380;-1:-1:-1;;;;;22430:380:12:o;6429:150:11:-;6499:4;6522:50;6527:3;-1:-1:-1;;;;;6547:23:11;;6522:4;:50::i;6984:165::-;7064:4;7087:55;7097:3;-1:-1:-1;;;;;7117:23:11;;7087:9;:55::i;2690:175:3:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;598:104:10;685:10;598:104;:::o;8015:572:5:-;-1:-1:-1;;;;;8129:21:5;;8121:67;;;;-1:-1:-1;;;8121:67:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8199:16;8218:12;:10;:12::i;:::-;8199:31;;8241:107;8262:8;8280:1;8284:7;8293:21;8311:2;8293:17;:21::i;8241:107::-;8384:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;8384:22:5;;;;;;;;;;:34;;8411:6;8384:26;:34::i;:::-;8359:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;8359:22:5;;;;;;;;;;;;:59;;;;8433:57;;;;;;;;;;;;;8359:22;;8433:57;;;;;;;;;;;;8501:79;8532:8;8550:1;8554:7;8563:2;8567:6;8575:4;8501:30;:79::i;:::-;8015:572;;;;;:::o;24734:237:12:-;24816:1;24794:19;:9;24808:4;24794:13;:19::i;:::-;:23;24790:175;;;24834:12;24852:10;24876:19;:9;24890:4;24876:13;:19::i;:::-;24852:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24833:68;;;24923:7;24915:16;;;;;23376:704;23607:66;23634:8;23644:4;23650:2;23654:3;23659:7;23668:4;23607:26;:66::i;:::-;23689:9;23684:390;23708:3;:10;23704:1;:14;23684:390;;;1991:1;23828:3;23832:1;23828:6;;;;;;;;;;;;;;:28;:62;;;;;2758:1;23860:3;23864:1;23860:6;;;;;;;;;;;;;;:30;;23828:62;23824:135;;;23941:2;23910:12;:20;23923:3;23927:1;23923:6;;;;;;;;;;;;;;23910:20;;;;;;;;;;;;:34;;;;;-1:-1:-1;;;;;23910:34:12;;;;;-1:-1:-1;;;;;23910:34:12;;;;;;23824:135;2758:1;23976:3;23980:1;23976:6;;;;;;;;;;;;;;:29;23972:92;;;24047:2;24025:11;:19;24037:3;24041:1;24037:6;;;;;;;;;;;;;;24025:19;;;;;;;;;;;;:24;;;;;-1:-1:-1;;;;;24025:24:12;;;;;-1:-1:-1;;;;;24025:24:12;;;;;;23972:92;23720:3;;23684:390;;;;23376:704;;;;;;:::o;5432:163:3:-;5518:7;5553:12;5545:6;;;;5537:29;;;;-1:-1:-1;;;5537:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5583:5:3;;;5432:163::o;13240:778:5:-;13484:15;:2;-1:-1:-1;;;;;13484:13:5;;:15::i;:::-;13480:532;;;13536:2;-1:-1:-1;;;;;13519:43:5;;13563:8;13573:4;13579:3;13584:7;13593:4;13519:79;;;;;;;;;;;;;-1:-1:-1;;;;;13519:79:5;;;;;;-1:-1:-1;;;;;13519:79:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13519:79:5;;;13515:487;;;;:::i;:::-;;;;;;;;13871:14;;-1:-1:-1;;;13871:14:5;;;;;;;;;;;;;;;;;13878:6;;13871:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13515:487;13925:62;;-1:-1:-1;;;13925:62:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13515:487;-1:-1:-1;;;;;;13647:64:5;;-1:-1:-1;;;13647:64:5;13643:161;;13735:50;;-1:-1:-1;;;13735:50:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7025:184:0;7098:6;:12;;;;;;;;;;:33;;7123:7;7098:24;:33::i;:::-;7094:109;;;7179:12;:10;:12::i;:::-;-1:-1:-1;;;;;7152:40:0;7170:7;-1:-1:-1;;;;;7152:40:0;7164:4;7152:40;;;;;;;;;;7025:184;;:::o;7215:188::-;7289:6;:12;;;;;;;;;;:36;;7317:7;7289:27;:36::i;:::-;7285:112;;;7373:12;:10;:12::i;:::-;-1:-1:-1;;;;;7346:40:0;7364:7;-1:-1:-1;;;;;7346:40:0;7358:4;7346:40;;;;;;;;;;7215:188;;:::o;16991:666:12:-;17125:12;;17053:4;17107:31;;;:17;:31;;;;;;;;:40;;;;;;;;;17150:1;-1:-1:-1;17103:86:12;;;-1:-1:-1;17174:4:12;17167:11;;17103:86;17312:12;;17264:27;17294:31;;;:17;:31;;;;;;;;:40;;;;;;;;;17361:1;17344:219;17369:12;;17364:1;:17;17344:219;;17424:12;;17406:31;;;;:17;:31;;;;;;;;:34;;;;;;;;;:56;-1:-1:-1;17402:151:12;;;17522:12;;17504:31;;;;:17;:31;;;;;;;;:34;;;;;;;;;;-1:-1:-1;17402:151:12;17383:3;;17344:219;;;-1:-1:-1;17624:26:12;:19;17648:1;17624:23;:26::i;:::-;17598:12;;17580:31;;;;:17;:31;;;;;;;;:40;;;;;;;;;:70;;;-1:-1:-1;;16991:666:12;;;:::o;9703:272::-;9773:17;9843:4;;9810;-1:-1:-1;;;;;9810:14:12;;9833:4;9810:29;;;;;;;;;;;;;-1:-1:-1;;;;;9810:29:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9810:29:12;:37;;9802:46;;;;;;9917:51;9935:8;;9945:4;;9951:16;9917:17;:51::i;3538:215:3:-;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:3;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4217:150;4275:7;4306:1;4302;:5;4294:44;;;;;-1:-1:-1;;;4294:44:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;;4217:150;-1:-1:-1;;;4217:150:3:o;3136:155::-;3194:7;3226:1;3221;:6;;3213:49;;;;;-1:-1:-1;;;3213:49:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3279:5:3;;;3136:155::o;7677:156:11:-;7751:7;7801:22;7805:3;7817:5;7801:3;:22::i;10124:173:12:-;10218:28;;;;:17;:28;;;;;:41;;;10269:21;10236:9;10269:10;:21::i;10391:120::-;10455:25;10463:4;10469:10;10455:7;:25::i;:::-;10447:34;;;;;7213:1483;7284:11;7268:12;;;;;:27;;;;;;;;7264:1388;;;7414:1;7394:17;:21;;;7474:17;:21;7624:12;;:19;;7641:1;7624:16;:19::i;:::-;7609:12;:34;7692:12;:27;;-1:-1:-1;;7692:27:12;7707:12;7692:27;;;7264:1388;;;7756:12;7740;;;;;:28;;;;;;;;7736:916;;;7861:20;:18;:20::i;:::-;8016:1;8031:477;8043:12;;8038:1;:17;8031:477;;8188:24;:38;8213:12;;8188:38;;;;;;;;;;;8172:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8121:13;:16;8135:1;8121:16;;;;;;;;;;;:25;;8105:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:123;8080:414;;;8313:1;8273:37;8294:12;;8308:1;8273:20;:37::i;:::-;:41;8269:207;;;8362:60;8384:37;8405:12;;8419:1;8384:20;:37::i;:::-;8362:17;;;:21;:60::i;:::-;8342:17;:80;8448:5;;8269:207;8057:3;;8031:477;;;8553:13;:11;:13::i;:::-;-1:-1:-1;8615:12:12;:26;;-1:-1:-1;;8615:26:12;;;7736:916;8686:3;8662:21;:27;7213:1483::o;7230:115:11:-;7293:7;7319:19;7327:3;7319:7;:19::i;14024:193:5:-;14143:16;;;14157:1;14143:16;;;;;;;;;14090;;;;14143;;;;;;;;;;;;-1:-1:-1;14143:16:5;14118:41;;14180:7;14169:5;14175:1;14169:8;;;;;;;;;;;;;;;;;:18;14205:5;14024:193;-1:-1:-1;;14024:193:5:o;12493:741::-;12712:15;:2;-1:-1:-1;;;;;12712:13:5;;:15::i;:::-;12708:520;;;12764:2;-1:-1:-1;;;;;12747:38:5;;12786:8;12796:4;12802:2;12806:6;12814:4;12747:72;;;;;;;;;;;;;-1:-1:-1;;;;;12747:72:5;;;;;;-1:-1:-1;;;;;12747:72:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12747:72:5;;;12743:475;;;;:::i;:::-;-1:-1:-1;;;;;;12868:59:5;;-1:-1:-1;;;12868:59:5;12864:156;;12951:50;;-1:-1:-1;;;12951:50:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23047:261:12;23112:7;;23169:1;23188:37;23221:3;23188:28;23214:1;23188:21;:9;23202:6;23188:13;:21::i;:::-;:25;;:28::i;:37::-;23180:45;-1:-1:-1;23243:35:12;23253:24;23274:2;23253:16;:4;23262:6;23253:8;:16::i;:24::-;23243:5;;:9;:35::i;:::-;23235:43;23047:261;-1:-1:-1;;;;23047:261:12:o;1640:404:11:-;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;-1:-1:-1;1761:23:11;;;;;;;;:11;:23;;;;;;;;;;;;;1941:18;;1919:19;;;:12;;;:19;;;;;;:40;;;;1973:11;;1719:319;-1:-1:-1;2022:5:11;2015:12;;3805:127;3878:4;3901:19;;;:12;;;;;:19;;;;;;:24;;;3805:127::o;726:413:9:-;1086:20;1124:8;;;726:413::o;6747:156:11:-;6820:4;6843:53;6851:3;-1:-1:-1;;;;;6871:23:11;;6843:7;:53::i;7527:1090:15:-;7649:17;7678:4;-1:-1:-1;;;;;7678:20:15;;7699:14;7715:4;7732:8;7742:5;7721:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7678:71;;;;;;;;;;;;;-1:-1:-1;;;;;7678:71:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7996:15:15;8063:16;;;:6;7678:71;8063:16;;;;;8014:66;;8031:8;;8041:5;;8056:4;;8014:16;:66::i;:::-;8538:16;;;;:6;:16;;;;;;7996:84;;-1:-1:-1;8538:23:15;;8559:1;8538:20;:23::i;:::-;8519:16;;;;:6;:16;;;;;:42;8578:32;8526:8;8602:7;8578:13;:32::i;4452:201:11:-;4546:18;;4519:7;;4546:26;-1:-1:-1;4538:73:11;;;;-1:-1:-1;;;4538:73:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;17769:2749:12:-;17829:29;;;;:18;:29;;;;;;2758:1;6612:29;;6604:38;;;;;;6691:15;;;;:7;:15;;;;;:21;;;6683:30;;;;;;17870:14:::1;17887:29:::0;;;:18:::1;:29;::::0;;;;;;;;17949:17:::1;:28:::0;;;;;;18021:15;;;:7:::1;:15:::0;;;;;;:21:::1;;:25:::0;;-1:-1:-1;;18021:25:12::1;-1:-1:-1::0;;;18021:25:12::1;::::0;;17887:29;18120:26:::1;18130:1;17949:28:::0;18120:9:::1;:26::i;:::-;18073:15;::::0;;;:7:::1;:15;::::0;;;;:26:::1;;18072:74:::0;;-1:-1:-1;;18072:74:12::1;;::::0;;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;18215:29:12::1;18225:1;18072:74:::0;18215:9:::1;:29::i;:::-;18172:15;::::0;;;:7:::1;:15;::::0;;;;:22:::1;;18171:73:::0;;::::1;::::0;;::::1;;;-1:-1:-1::0;;18171:73:12;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;18312:29:12::1;18322:1;18171:73:::0;18312:9:::1;:29::i;:::-;18269:15;::::0;;;:7:::1;:15;::::0;;;;:22:::1;;18268:73:::0;;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;18268:73:12;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;18409:29:12::1;18419:1;18268:73:::0;18409:9:::1;:29::i;:::-;18366:15;::::0;;;:7:::1;:15;::::0;;;;:22:::1;;18365:73:::0;;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;18365:73:12;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;18506:29:12::1;18516:1;18365:73:::0;18506:9:::1;:29::i;:::-;18463:15;::::0;;;:7:::1;:15;::::0;;;;:22:::1;;18462:73:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;18462:73:12::1;-1:-1:-1::0;;18462:73:12;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;18607:29:12::1;18617:1;18462:73:::0;18607:9:::1;:29::i;:::-;18561:15;::::0;;;:7:::1;:15;::::0;;;;:25:::1;;18560:76:::0;;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;18560:76:12;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;18708:30:12::1;18718:2;18560:76:::0;18708:9:::1;:30::i;:::-;18661:15;::::0;;;:7:::1;:15;::::0;;;;:26:::1;;18660:78:::0;;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;18660:78:12;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;18809:30:12::1;18819:2;18660:78:::0;18809:9:::1;:30::i;:::-;18764:15;::::0;;;:7:::1;:15;::::0;;;;:24:::1;;18763:76:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;18763:76:12::1;-1:-1:-1::0;;18763:76:12;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;18909:29:12::1;18764:24;18763:76:::0;18909:9:::1;:29::i;:::-;18865:15;::::0;;;:7:::1;:15;::::0;;;;:23:::1;;18864:74:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;18864:74:12::1;-1:-1:-1::0;;18864:74:12;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;19003:30:12::1;19013:2;18864:74:::0;19003:9:::1;:30::i;:::-;18964:15;::::0;;;:7:::1;:15;::::0;;;;:18:::1;;18963:70:::0;;-1:-1:-1;;;;18963:70:12::1;-1:-1:-1::0;;;18963:70:12::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;19084:25:12::1;::::0;:18;;::::1;;19107:1;19084:22;:25::i;:::-;19057:15;::::0;;;:7:::1;:15;::::0;;;;:18:::1;;:53:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;19057:53:12::1;-1:-1:-1::0;;;;19057:53:12;;::::1;::::0;;;::::1;::::0;;19162:30:::1;19172:2;19176:15:::0;19162:9:::1;:30::i;:::-;19121:15;::::0;;;:7:::1;:15;::::0;;;;:20:::1;;19120:72:::0;;-1:-1:-1;;;;19120:72:12::1;-1:-1:-1::0;;;19120:72:12::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;19245:27:12::1;::::0;:20;;::::1;;19270:1;19245:24;:27::i;:::-;19216:15;::::0;;;:7:::1;:15;::::0;;;;:20:::1;;:57:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;19216:57:12::1;-1:-1:-1::0;;;;19216:57:12;;::::1;::::0;;;::::1;::::0;;19328:30:::1;19338:2;19342:15:::0;19328:9:::1;:30::i;:::-;19284:15;::::0;;;:7:::1;:15;::::0;;;;:23:::1;;19283:75:::0;;-1:-1:-1;;;;19283:75:12::1;-1:-1:-1::0;;;19283:75:12::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;19414:30:12::1;::::0;:23;;::::1;;19442:1;19414:27;:30::i;:::-;19382:15;::::0;;;:7:::1;:15;::::0;;;;:23:::1;;:63:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;19382:63:12::1;-1:-1:-1::0;;;;19382:63:12;;::::1;::::0;;;::::1;::::0;;19502:30:::1;19512:2;19516:15:::0;19502:9:::1;:30::i;:::-;19457:15;::::0;;;:7:::1;:15;::::0;;;;:24:::1;;19456:76:::0;;-1:-1:-1;;;;19456:76:12::1;-1:-1:-1::0;;;19456:76:12::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;19588:31:12::1;::::0;:24;;::::1;;19617:1;19588:28;:31::i;:::-;19555:15;::::0;;;:7:::1;:15;::::0;;;;:24:::1;;:65:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;19555:65:12::1;-1:-1:-1::0;;;;19555:65:12;;::::1;::::0;;;::::1;::::0;;19677:30:::1;19687:2;19691:15:::0;19677:9:::1;:30::i;:::-;19631:15;::::0;;;:7:::1;:15;::::0;;;;:25:::1;;19630:77:::0;;-1:-1:-1;;;;19630:77:12::1;-1:-1:-1::0;;;19630:77:12::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;19764:32:12::1;::::0;:25;;::::1;;19794:1;19764:29;:32::i;:::-;19730:15;::::0;;;:7:::1;:15;::::0;;;;:25:::1;;:67:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;19730:67:12::1;-1:-1:-1::0;;;;19730:67:12;;::::1;::::0;;;::::1;::::0;;19857:30:::1;19867:2;19871:15:::0;19857:9:::1;:30::i;:::-;19808:15;::::0;;;:7:::1;:15;::::0;;;;:28:::1;;19807:80:::0;;-1:-1:-1;;;;19807:80:12::1;-1:-1:-1::0;;;19807:80:12::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;19947:35:12::1;::::0;:28;;::::1;;19980:1;19947:32;:35::i;:::-;19910:15;::::0;;;:7:::1;:15;::::0;;;;:28:::1;;:73:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;19910:73:12::1;-1:-1:-1::0;;;;19910:73:12;;::::1;::::0;;;::::1;::::0;;20043:30:::1;20053:2;20057:15:::0;20043:9:::1;:30::i;:::-;19994:15;::::0;;;:7:::1;:15;::::0;;;;:28:::1;;19993:80:::0;;-1:-1:-1;;;;19993:80:12::1;-1:-1:-1::0;;;19993:80:12::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;20133:35:12::1;::::0;:28;;::::1;;20166:1;20133:32;:35::i;:::-;20096:15;::::0;;;:7:::1;:15;::::0;;;;:28:::1;;:73:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;20096:73:12::1;-1:-1:-1::0;;;;20096:73:12;;::::1;::::0;;;::::1;::::0;;20223:30:::1;20096:28;20237:15:::0;20223:9:::1;:30::i;:::-;20180:15;::::0;;;:7:::1;:15;::::0;;;;:22:::1;;20179:74:::0;;-1:-1:-1;;;;20179:74:12::1;-1:-1:-1::0;;;20179:74:12::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;20307:29:12::1;::::0;:22;;::::1;;20334:1;20307:26;:29::i;:::-;20276:15;::::0;;;:7:::1;:15;::::0;;;;:22:::1;;:61:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;20276:61:12::1;-1:-1:-1::0;;;;20276:61:12;;::::1;::::0;;;::::1;::::0;;20393:30:::1;20403:2;20407:15:::0;20393:9:::1;:30::i;:::-;20348:15;::::0;;;:7:::1;:15;::::0;;;;:24:::1;;20347:76:::0;;-1:-1:-1;;;;20347:76:12::1;-1:-1:-1::0;;;20347:76:12::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;20479:31:12::1;::::0;:24;;::::1;;20508:1;20479:28;:31::i;:::-;20446:15;::::0;;;:7:::1;:15;::::0;;;;;:24:::1;;:65:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;20446:65:12::1;-1:-1:-1::0;;;;20446:65:12;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;;;17769:2749:12:o;31358:389::-;31441:24;;31477:13;;;;;;;;;;;-1:-1:-1;;;31477:13:12;;;;;;;31441:50;;-1:-1:-1;;;31441:50:12;;;;;;;;;;;;;;;;31407:31;;-1:-1:-1;;;;;31441:24:12;;:35;;31477:13;31441:50;;;;;;;;;31477:13;31441:50;;31477:13;31407:31;31441:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;31441:50:12;31609:46;;;-1:-1:-1;;;31609:46:12;;31649:4;31609:46;;;;;;31441:50;;-1:-1:-1;31441:50:12;;31501:33;;-1:-1:-1;;;;;31609:31:12;;;;;:46;;;;;31441:50;;31609:46;;;;;;;;31501:33;31609:31;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;31609:46:12;;-1:-1:-1;31665:45:12;1864:28;31609:46;31665:9;:45::i;:::-;31720:8;-1:-1:-1;;;;;31720:18:12;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21393:234;21452:1;21435:150;2758:1;21455;:25;21435:150;;21505:16;;;;:13;:16;;;;;:22;;;21501:74;;;21547:13;21558:1;21547:10;:13::i;:::-;21482:3;;21435:150;;;-1:-1:-1;21600:20:12;;;;;;;21393:234::o;4013:107:11:-;4095:18;;4013:107::o;2212:1512::-;2278:4;2415:19;;;:12;;;:19;;;;;;2449:15;;2445:1273;;2878:18;;-1:-1:-1;;2830:14:11;;;;2878:22;;;;2806:21;;2878:3;;:22;;3160;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;;;;;:38;;;;3378:23;;;3420:1;3378:12;;;:23;;;;;;3404:17;;;3378:43;;3527:17;;3378:3;;3527:17;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;;;826:264:16;1030:51;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1030:51:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1020:62;;;;;;826:264::o;1490:172::-;1613:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1603:52;;;;;;1490:172::o;20782:186:12:-;20863:5;;20903:34;20935:1;20903:27;:12;:27;;;:16;:27::i;:::-;:31;;:34::i;:::-;20940:20;:12;20957:2;20940:16;:20::i;:::-;20889:72;;;;20782:186;;;;;:::o;21773:406::-;21840:7;1991:1;6437:7;:29;:64;;;;;2758:1;6470:7;:31;;6437:64;6429:73;;;;;;21867:22:::1;::::0;;;:13:::1;:22;::::0;;;;:28;::::1;;21859:37;;;::::0;::::1;;21960:21;::::0;;;:12:::1;:21;::::0;;;;;21954:40:::1;::::0;-1:-1:-1;;;;;21960:21:12::1;21973:7:::0;21960:21;21954:5:::1;:40::i;:::-;22063:12;::::0;:19:::1;::::0;22080:1:::1;22063:16;:19::i;:::-;22048:12;:34:::0;-1:-1:-1;22124:1:12::1;22092:21:::0;;;:12:::1;:21;::::0;;;;;;;:34;;-1:-1:-1;;;;;;22092:34:12::1;::::0;;22136:13:::1;:22:::0;;;;;:36;;-1:-1:-1;;22136:36:12::1;::::0;;21773:406::o;4820:148:3:-;4878:7;4909:1;4905;:5;4897:42;;;;;-1:-1:-1;;;4897:42:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;4960:1;4956;:5;;;;;;;4820:148;-1:-1:-1;;;4820:148:3:o;9881:538:5:-;-1:-1:-1;;;;;9976:21:5;;9968:69;;;;-1:-1:-1;;;9968:69:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10048:16;10067:12;:10;:12::i;:::-;10048:31;;10090:105;10111:8;10121:7;10138:1;10142:21;10160:2;10142:17;:21::i;:::-;10165:25;10183:6;10165:17;:25::i;:::-;10090:105;;;;;;;;;;;;:20;:105::i;:::-;10231:108;10271:6;10231:108;;;;;;;;;;;;;;;;;:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;10231:22:5;;;;;;;;;;;:108;:26;:108::i;:::-;10206:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;10206:22:5;;;;;;;;;;;;:133;;;;10355:57;;;;;;;;;;;;;10206:13;;:22;;10355:57;;;;;;;;;;;;;9881:538;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;110:106;195:3;191:15;;163:53::o;224:739::-;;297:4;279:16;276:26;273:2;;;305:5;;273:2;339:1;-1:-1;;318:23;414:10;357:34;-1:-1;382:8;357:34;:::i;:::-;406:19;396:2;;429:5;;396:2;460;454:9;496:16;-1:-1;;492:24;339:1;454:9;468:49;543:4;537:11;624:16;576:18;624:16;617:4;609:6;605:17;602:39;576:18;568:6;565:30;556:91;553:2;;;655:5;;;;;;553:2;693:6;687:4;683:17;672:28;;725:3;719:10;705:24;;576:18;740:6;737:30;734:2;;;770:5;;;;;;734:2;;847:16;841:4;837:27;807:4;814:6;802:3;794:27;;829:36;826:2;;;868:5;;;;;826:2;89:7;73:14;-1:-1;;69:28;892:50;;807:4;892:50;460:2;881:62;900:3;-1:-1;;267:696;:::o",
  "language": "Solidity",
  "natspec": {
    "author": "Oozyx",
    "events": {
      "ElderSpiritMinted(uint256,address)": {
        "params": {
          "elderId": "The elder id belonging to the minted elder",
          "owner": "The address of the owner"
        }
      },
      "HeroMinted(uint256,address)": {
        "params": {
          "heroId": "The hero id belonging to the hero that was minted",
          "owner": "The address of the owner"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "balanceOf(address,uint256)": {
        "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
      },
      "claimReward(uint256)": {
        "details": "Can only claim once and only for the round the hero was minted",
        "notice": "Claims the rewards for the hero if eligible",
        "params": {
          "heroId": "The hero id"
        }
      },
      "createAffinity(string,address)": {
        "details": "This will be called by a priviledged address. It will allow to create new affinities. May need to add a remove affinity function as well.",
        "notice": "Creates a new token affinity",
        "params": {
          "feedAddress": "The price feed address",
          "tokenTicker": "The token ticker of the affinity"
        }
      },
      "declareRoundWinner(string)": {
        "details": "This can only be called by a game admin contract",
        "notice": "Declares a winning affinity for a round",
        "params": {
          "winningAffinity": "The affinity that won the game"
        }
      },
      "delegatedTransferInGameTokens(address,address,uint256)": {
        "notice": "Transfers in game currency tokens from one address to another.",
        "params": {
          "amount": "The amount to transfer",
          "from": "The sending address.  Note that the sender must be authorized to transfer funds if the sender is different from the from address.",
          "to": "The receiving address"
        }
      },
      "getAffinityFeedAddress(string)": {
        "notice": "Fetches the feed address for a given affinity",
        "params": {
          "affinity": "The affinity being searched for"
        },
        "returns": {
          "_0": "The address of the affinity's feed address"
        }
      },
      "getElderOwner(uint256)": {
        "notice": "Gets the elder owner for the given elder id",
        "params": {
          "elderId": "The elder id"
        },
        "returns": {
          "_0": "The owner of the elder"
        }
      },
      "getElderSpawnsAmount(uint256,uint256)": {
        "notice": "Gets the amount of heroes spawn from the elder with the specified id during the specified round",
        "params": {
          "elderId": "The elder id",
          "round": "The round the elder was created"
        },
        "returns": {
          "_0": "The amount of heroes spawned from the elder"
        }
      },
      "getElderSpirit(uint256)": {
        "notice": "Fetches the data of a single elder spirit",
        "params": {
          "elderId": "The id of the elder being searched for"
        },
        "returns": {
          "_0": "The elder's attributes in the following order (valid, raceId, classId, affinity)"
        }
      },
      "getHeroGameData(uint256)": {
        "notice": "Hero getter function",
        "params": {
          "heroId": "The hero id"
        },
        "returns": {
          "_0": "valid, affinity, affinity price, round minted, elder id"
        }
      },
      "getHeroLore(uint256)": {
        "notice": "Hero getter function",
        "params": {
          "heroId": "The hero id"
        },
        "returns": {
          "_0": "alignment, background, hometown, weather"
        }
      },
      "getHeroMintPrice(uint256,uint256)": {
        "notice": "Gets the minting price of a hero based on specified elder spirit",
        "params": {
          "elderId": "The elder id for which the hero will be based on",
          "round": "The round of the hero to be minted"
        },
        "returns": {
          "_0": "The hero mint price"
        }
      },
      "getHeroOwner(uint256)": {
        "notice": "Get the hero owner for the given hero id",
        "params": {
          "heroId": "The hero id"
        },
        "returns": {
          "_0": "The owner address"
        }
      },
      "getHeroStats(uint256)": {
        "notice": "Hero getter function",
        "params": {
          "heroId": "The hero id"
        },
        "returns": {
          "_0": "stamina, strength, dexterity, constitution, intelligence, wisdom, charisma"
        }
      },
      "getHeroTraitsSkills(uint256)": {
        "notice": "Hero getter function",
        "params": {
          "heroId": "The hero id"
        },
        "returns": {
          "_0": "trait 1, trait 2, skill 1, skill 2"
        }
      },
      "getHeroVisuals(uint256)": {
        "notice": "Hero getter function",
        "params": {
          "heroId": "The hero id"
        },
        "returns": {
          "_0": "name, race id, class id, appearance"
        }
      },
      "getHeroVitals(uint256)": {
        "notice": "Hero getter function",
        "params": {
          "heroId": "The hero id"
        },
        "returns": {
          "_0": "level, hp, mana"
        }
      },
      "getNumEldersInGame()": {
        "notice": "Fetches the number of elders currently in the game",
        "returns": {
          "_0": "The current number of elders in the game"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC1155-isApprovedForAll}."
      },
      "mintElderSpirit(uint256,uint256,string)": {
        "details": "For now only race, class, and token (affinity) are needed. This will change. The race and class ids will probably be public constants defined in the crypto champions contract, this is subject to change.",
        "notice": "Mints an elder spirit",
        "params": {
          "affinity": "The affinity of the minted hero",
          "classId": "The class id",
          "raceId": "The race id"
        },
        "returns": {
          "_0": "The elder spirit id"
        }
      },
      "mintHero(uint256,string)": {
        "notice": "Mints a hero based on an elder spirit",
        "params": {
          "elderId": "The id of the elder spirit this hero is based on"
        },
        "returns": {
          "_0": "The hero id"
        }
      },
      "refreshPhase()": {
        "notice": "Transitions to next phase if the condition is met and rewards caller for a successful phase transition"
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "See {IERC1155-safeBatchTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "See {IERC1155-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC1155-setApprovalForAll}."
      },
      "setElderMintPrice(uint256)": {
        "details": "Can only be called by an admin address",
        "notice": "Sets the elder mint price",
        "params": {
          "price": "The new elder mint price"
        }
      },
      "setPhase(uint8)": {
        "details": "May delete function and keep only the refresh phase function",
        "notice": "Sets the contract's phase",
        "params": {
          "phase": "The phase the contract should be set to"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "transferInGameTokens(address,uint256)": {
        "notice": "Transfers in game currency tokens from one address to another",
        "params": {
          "amount": "The amount to transfer",
          "to": "The receiving address"
        }
      },
      "uri(uint256)": {
        "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
      }
    },
    "notice": "This is the crypto champions class",
    "title": "Crypto Champions Interface",
    "version": 1
  },
  "offset": [
    743,
    32659
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2E3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79935FE0 GT PUSH2 0x190 JUMPI DUP1 PUSH4 0xAE169A50 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE5B0A993 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE5B0A993 EQ PUSH2 0x1197 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x11C1 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x11FC JUMPI DUP1 PUSH4 0xF32C4974 EQ PUSH2 0x12D2 JUMPI PUSH2 0x2E3 JUMP JUMPDEST DUP1 PUSH4 0xD547741F EQ PUSH2 0x111F JUMPI DUP1 PUSH4 0xD6303CCE EQ PUSH2 0x1158 JUMPI DUP1 PUSH4 0xE3E98382 EQ PUSH2 0x116D JUMPI PUSH2 0x2E3 JUMP JUMPDEST DUP1 PUSH4 0xAE169A50 EQ PUSH2 0x1031 JUMPI DUP1 PUSH4 0xB9280067 EQ PUSH2 0x105B JUMPI DUP1 PUSH4 0xBF61211F EQ PUSH2 0x109E JUMPI DUP1 PUSH4 0xC03AFB59 EQ PUSH2 0x10B3 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x10E0 JUMPI DUP1 PUSH4 0xCAAB7EF8 EQ PUSH2 0x110A JUMPI PUSH2 0x2E3 JUMP JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x9E315008 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x9E315008 EQ PUSH2 0xF51 JUMPI DUP1 PUSH4 0x9FF1103F EQ PUSH2 0xFCC JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0xFE1 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xFF6 JUMPI PUSH2 0x2E3 JUMP JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0xE64 JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0xE9D JUMPI DUP1 PUSH4 0x9D5B82C0 EQ PUSH2 0xECD JUMPI PUSH2 0x2E3 JUMP JUMPDEST DUP1 PUSH4 0x79935FE0 EQ PUSH2 0xD64 JUMPI DUP1 PUSH4 0x835A4398 EQ PUSH2 0xD79 JUMPI DUP1 PUSH4 0x8423B077 EQ PUSH2 0xDE0 JUMPI DUP1 PUSH4 0x8A19C8BC EQ PUSH2 0xE0A JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0xE1F JUMPI DUP1 PUSH4 0x90DED47E EQ PUSH2 0xE4F JUMPI PUSH2 0x2E3 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x24F JUMPI DUP1 PUSH4 0x4C2ED018 GT PUSH2 0x208 JUMPI DUP1 PUSH4 0x56B4D760 GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x56B4D760 EQ PUSH2 0xCB6 JUMPI DUP1 PUSH4 0x59CA19D3 EQ PUSH2 0xCE0 JUMPI DUP1 PUSH4 0x6DE51353 EQ PUSH2 0xD10 JUMPI DUP1 PUSH4 0x72EDA5BB EQ PUSH2 0xD3A JUMPI PUSH2 0x2E3 JUMP JUMPDEST DUP1 PUSH4 0x4C2ED018 EQ PUSH2 0xAF7 JUMPI DUP1 PUSH4 0x4C52B2A9 EQ PUSH2 0xB21 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0xB36 JUMPI PUSH2 0x2E3 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x8E9 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x922 JUMPI DUP1 PUSH4 0x4390D2A8 EQ PUSH2 0x95B JUMPI DUP1 PUSH4 0x46E6F13D EQ PUSH2 0x970 JUMPI DUP1 PUSH4 0x48772D79 EQ PUSH2 0xA2A JUMPI DUP1 PUSH4 0x498E8219 EQ PUSH2 0xA82 JUMPI PUSH2 0x2E3 JUMP JUMPDEST DUP1 PUSH4 0x21C2F72A GT PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x21C2F72A EQ PUSH2 0x4DF JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x59F JUMPI DUP1 PUSH4 0x26D4D15A EQ PUSH2 0x5C9 JUMPI DUP1 PUSH4 0x26F7AF4F EQ PUSH2 0x660 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x69B JUMPI DUP1 PUSH4 0x2EE1F0A0 EQ PUSH2 0x869 JUMPI PUSH2 0x2E3 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x10A768E EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x55AD42E EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xFBEA841 EQ PUSH2 0x465 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x321 PUSH2 0x1374 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x137A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A5 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3B5 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x13A6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x42A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x412 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x457 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x4D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x143E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x509 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1732 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x560 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x548 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x58D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1860 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x644 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x639 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x699 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x18AF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x699 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x6BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x6F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x724 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x773 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x7A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x7F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x828 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x18C4 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x875 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x893 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x88C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1BC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 DUP2 LT ISZERO PUSH2 0x560 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x548 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x699 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x90C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1CC9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x699 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x945 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D35 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x967 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x321 PUSH2 0x1D96 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x99A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x993 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9EC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9D4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xA19 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA54 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1E99 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP6 DUP7 AND DUP2 MSTORE SWAP4 DUP6 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP5 AND DUP4 DUP4 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0x60 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 RETURN JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xAB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xACB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xAEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1F0B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA54 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x26A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x321 PUSH2 0x271C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC66 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xB59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xB73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xB85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xBA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xC07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xC28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x2723 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCA2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC8A JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x644 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x280F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xD03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2878 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x28C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x644 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x295E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x321 PUSH2 0x29B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x29BF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP8 DUP9 AND DUP2 MSTORE SWAP6 DUP8 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP4 DUP7 AND DUP6 DUP6 ADD MSTORE SWAP2 DUP6 AND PUSH1 0x60 DUP6 ADD MSTORE DUP5 AND PUSH1 0x80 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA54 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2A4B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x321 PUSH2 0x2ABA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x644 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xE42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2AC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x321 PUSH2 0x2ADF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xE87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2AE4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x699 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xEC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2AFC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xED9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x699 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xEF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xF0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xF1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xF3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 POP SWAP2 POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2B83 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x699 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xF8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xFA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xFC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x2C37 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x699 PUSH2 0x2C9A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x321 PUSH2 0x2D09 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1002 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x699 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1019 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x2D0E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x699 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1054 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2DFD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1067 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x699 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x107E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x3074 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x321 PUSH2 0x3084 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x699 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0xFF AND PUSH2 0x308A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x30D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x321 PUSH2 0x30EA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x112B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x699 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x30F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x321 PUSH2 0x3149 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x699 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x314F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x317D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x11E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x31F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x699 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x121F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0xA0 DUP2 ADD PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x125E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x1291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x321E SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x12F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x33E9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1349 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x54BF PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1432 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1407 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1432 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1415 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1453 JUMPI INVALID JUMPDEST EQ PUSH2 0x145D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0xD SLOAD LT PUSH2 0x146C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x14 SLOAD CALLVALUE LT ISZERO PUSH2 0x147B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x16 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD SWAP5 DUP6 MSTORE POP POP PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP1 SUB PUSH1 0x20 ADD SWAP1 SWAP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP1 SWAP3 EQ ISZERO SWAP2 POP PUSH2 0x14C6 SWAP1 POP JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x14D7 SWAP1 PUSH1 0x1 PUSH2 0x3478 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x14F9 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1512 JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH1 0x16 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD SWAP5 DUP6 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 SWAP1 SUB PUSH1 0x20 ADD DUP5 KECCAK256 SLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP6 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 PUSH4 0xFEAF968C SWAP4 POP PUSH1 0x4 DUP1 DUP3 ADD SWAP4 POP PUSH1 0xA0 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1577 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x158B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x15A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH2 0x15B0 PUSH2 0x5157 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP11 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 ADD DUP11 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x1F DUP10 ADD DUP4 SWAP1 DIV DUP4 MUL DUP2 ADD DUP4 ADD SWAP1 SWAP2 MSTORE DUP8 DUP2 MSTORE SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP POP PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1623 PUSH2 0x160B PUSH2 0x34D2 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x34D6 JUMP JUMPDEST PUSH2 0x162B PUSH2 0x34D2 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0xF DUP2 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO OR DUP2 SSTORE DUP4 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD DUP1 MLOAD DUP5 SWAP4 SWAP3 PUSH2 0x169E SWAP3 PUSH1 0x3 DUP6 ADD SWAP3 SWAP2 ADD SWAP1 PUSH2 0x5188 JUMP JUMPDEST POP PUSH1 0x80 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE PUSH1 0xD SLOAD PUSH2 0x16BA SWAP1 PUSH1 0x1 PUSH2 0x3478 JUMP JUMPDEST PUSH1 0xD SSTORE PUSH1 0x14 SLOAD PUSH2 0x16C9 SWAP1 PUSH2 0x35DE JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0xB SLOAD PUSH2 0x16D8 SWAP2 PUSH2 0x3478 JUMP JUMPDEST PUSH1 0xB SSTORE PUSH32 0x3560F0337E62819199860BA21B425B8BDE9A01FA6E514DD58AB6EDF7DAF1D1F1 DUP4 PUSH2 0x1705 PUSH2 0x34D2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP6 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x174D JUMPI POP PUSH1 0x7 DUP2 GT ISZERO JUMPDEST PUSH2 0x1756 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x175E PUSH2 0x5157 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD DUP3 DUP6 ADD MSTORE PUSH1 0x2 DUP1 DUP5 ADD SLOAD DUP4 DUP8 ADD MSTORE PUSH1 0x3 DUP5 ADD DUP1 SLOAD DUP8 MLOAD PUSH2 0x100 SWAP5 DUP3 AND ISZERO SWAP5 SWAP1 SWAP5 MUL PUSH1 0x0 NOT ADD AND SWAP2 SWAP1 SWAP2 DIV PUSH1 0x1F DUP2 ADD DUP7 SWAP1 DIV DUP7 MUL DUP4 ADD DUP7 ADD SWAP1 SWAP7 MSTORE DUP6 DUP3 MSTORE SWAP2 SWAP5 SWAP3 SWAP4 PUSH1 0x60 DUP7 ADD SWAP4 SWAP2 SWAP3 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1822 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1822 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1805 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD SWAP1 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 SWAP1 SWAP5 ADD MLOAD SWAP3 SWAP13 SWAP2 SWAP12 POP SWAP10 POP SWAP2 SWAP8 POP SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x16 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD SWAP5 DUP6 MSTORE POP POP PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP1 SUB PUSH1 0x20 ADD SWAP1 SWAP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x18BF CALLER DUP5 PUSH1 0x0 DUP6 DUP6 PUSH2 0x321E JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x1904 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x567E PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1949 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5567 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1951 PUSH2 0x34D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x197C JUMPI POP PUSH2 0x197C DUP6 PUSH2 0x1977 PUSH2 0x34D2 JUMP JUMPDEST PUSH2 0x31F0 JUMP JUMPDEST PUSH2 0x19B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x558C PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19C1 PUSH2 0x34D2 JUMP JUMPDEST SWAP1 POP PUSH2 0x19D1 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x364C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1AD7 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x19EB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1A03 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x1A70 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x55E1 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3767 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1AA7 SWAP1 DUP3 PUSH2 0x3478 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP PUSH1 0x1 ADD PUSH2 0x19D4 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B5D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B45 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B9C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B84 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1BBF DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x37FE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH1 0x7 DUP2 GT PUSH2 0x1BDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1BF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x2 SWAP5 DUP6 ADD DUP1 SLOAD DUP9 MLOAD PUSH2 0x100 PUSH1 0x1 DUP4 AND ISZERO MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP7 SWAP1 SWAP7 DIV PUSH1 0x1F DUP2 ADD DUP9 SWAP1 DIV DUP9 MUL DUP8 ADD DUP9 ADD SWAP1 SWAP9 MSTORE DUP8 DUP7 MSTORE PUSH1 0xFF SWAP1 SWAP5 AND SWAP7 SWAP4 SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 DUP7 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1CAE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C83 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1CAE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C91 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP4 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1CEC SWAP1 PUSH2 0x1CE7 PUSH2 0x34D2 JUMP JUMPDEST PUSH2 0x2AE4 JUMP JUMPDEST PUSH2 0x1D27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5490 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D31 DUP3 DUP3 PUSH2 0x3A74 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1D3D PUSH2 0x34D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1D8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x56C7 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D31 DUP3 DUP3 PUSH2 0x3ADD JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x7 DUP2 GT PUSH2 0x1DB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1DCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0x8 DUP4 ADD SLOAD PUSH1 0x1 SWAP4 DUP5 ADD DUP1 SLOAD DUP8 MLOAD PUSH1 0x2 PUSH2 0x100 SWAP8 DUP4 AND ISZERO SWAP8 SWAP1 SWAP8 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP6 SWAP1 SWAP6 DIV PUSH1 0x1F DUP2 ADD DUP8 SWAP1 DIV DUP8 MUL DUP7 ADD DUP8 ADD SWAP1 SWAP8 MSTORE DUP7 DUP6 MSTORE SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 PUSH1 0xFF SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 DUP7 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1E82 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E57 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E82 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E65 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP4 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH1 0x7 DUP2 GT PUSH2 0x1EAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1EC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP3 DUP4 MSTORE POP POP PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF PUSH1 0x1 PUSH1 0x48 SHL DUP3 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0x50 SHL DUP4 DIV DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x58 SHL DUP2 DIV DUP4 AND SWAP3 PUSH1 0x1 PUSH1 0x60 SHL SWAP1 SWAP2 DIV AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x1F1F JUMPI POP PUSH1 0x7 DUP2 GT ISZERO JUMPDEST PUSH2 0x1F28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1F3C JUMPI INVALID JUMPDEST EQ PUSH2 0x1F46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1F61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F6A DUP7 PUSH2 0x3B46 JUMP JUMPDEST PUSH2 0x1F73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F81 PUSH1 0x15 SLOAD DUP9 PUSH2 0x33E9 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x1F90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH2 0x1FAA PUSH1 0x1 PUSH1 0x10 SLOAD PUSH2 0x3478 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1FCD JUMPI INVALID JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1FE6 JUMPI INVALID JUMPDEST PUSH2 0x1FEE PUSH2 0x5206 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 PUSH1 0x20 ADD DUP2 SWAP1 MSTORE POP PUSH1 0x15 SLOAD DUP2 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP9 DUP2 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0xF PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 PUSH1 0xC0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0xF PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 PUSH1 0xE0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0xF PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x213D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2112 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x213D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2120 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH1 0x40 DUP3 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP2 SWAP1 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO OR DUP2 SSTORE DUP2 DUP4 ADD MLOAD DUP1 MLOAD DUP5 SWAP4 PUSH2 0x2181 SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 SWAP2 ADD SWAP1 PUSH2 0x5188 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x219D SWAP2 PUSH1 0x2 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x5188 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x180 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1A0 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1C0 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1E0 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x200 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x220 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x9 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x240 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0xA PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x260 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0xB PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x280 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x2A0 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0xD PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x2C0 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0xE PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x2E0 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0xF PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x300 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x320 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x11 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x340 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x12 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x0 PUSH2 0x2464 DUP4 PUSH2 0x3C1B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE SWAP1 POP PUSH2 0x2482 PUSH2 0x160B PUSH2 0x34D2 JUMP JUMPDEST PUSH2 0x24AE PUSH2 0x248D PUSH2 0x34D2 JUMP JUMPDEST PUSH1 0x0 PUSH9 0x1B1AE4D6E2EF500000 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x34D6 JUMP JUMPDEST PUSH2 0x24B6 PUSH2 0x34D2 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x10 SLOAD PUSH2 0x24F0 SWAP1 PUSH1 0x1 PUSH2 0x3478 JUMP JUMPDEST PUSH1 0x10 SSTORE PUSH1 0x15 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP14 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x251B SWAP1 PUSH1 0x1 PUSH2 0x3478 JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP15 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x2551 PUSH1 0x64 PUSH2 0x254B DUP8 PUSH1 0x19 PUSH2 0x3CD3 JUMP JUMPDEST SWAP1 PUSH2 0x3D2C JUMP JUMPDEST PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x25AC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x25B1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x25F8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x14185E5B595B9D0819985A5B1959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x260A PUSH1 0x64 PUSH2 0x254B DUP11 PUSH1 0x19 PUSH2 0x3CD3 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP2 POP PUSH2 0x261A SWAP1 DUP3 PUSH2 0x3478 JUMP JUMPDEST PUSH1 0xB SSTORE PUSH2 0x263D PUSH2 0x2634 DUP3 PUSH2 0x262E DUP12 DUP9 PUSH2 0x3D93 JUMP JUMPDEST SWAP1 PUSH2 0x3D93 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 PUSH2 0x3478 JUMP JUMPDEST PUSH1 0xA SSTORE PUSH2 0x2649 DUP9 PUSH2 0x35DE JUMP JUMPDEST PUSH32 0xF34A510082F5A02E39555458564800FC1FE73BFD8D3AA07CBF063FE662E7657E DUP8 PUSH2 0x2673 PUSH2 0x34D2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 POP SWAP5 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH1 0x7 DUP2 GT PUSH2 0x26B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x26D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP3 DUP4 MSTORE POP POP PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF PUSH6 0x10000000000 DUP3 DIV DUP2 AND SWAP3 PUSH7 0x1000000000000 DUP4 DIV DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x38 SHL DUP2 DIV DUP4 AND SWAP3 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 SWAP2 DIV AND SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x2765 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5655 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x277F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x27A9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x2807 JUMPI PUSH2 0x27E8 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x27C7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x27DB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1302 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x27F4 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x27AF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x7 DUP2 GT PUSH2 0x281F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x283A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x285B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x288C JUMPI POP PUSH1 0x7 DUP2 GT ISZERO JUMPDEST PUSH2 0x2895 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x15 SLOAD DUP5 GT ISZERO PUSH2 0x28A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP7 AND ISZERO MUL ADD SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 DIV SWAP2 DUP3 ADD DUP5 SWAP1 DIV DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2956 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x292B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2956 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2939 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x2972 JUMPI POP PUSH1 0x7 DUP2 GT ISZERO JUMPDEST PUSH2 0x297B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x299C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP7 PUSH1 0x7 DUP2 GT PUSH2 0x29D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x29F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP5 DUP6 MSTORE POP POP PUSH1 0x12 PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF PUSH1 0x1 PUSH1 0x68 SHL DUP3 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0x70 SHL DUP4 DIV DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x78 SHL DUP2 DIV DUP4 AND SWAP3 PUSH1 0x1 PUSH1 0x80 SHL DUP3 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0x88 SHL DUP4 DIV DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV SWAP1 SWAP2 AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH1 0x7 DUP2 GT PUSH2 0x2A5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2A7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP3 DUP4 MSTORE POP POP PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP3 PUSH3 0x10000 DUP4 DIV DUP3 AND SWAP3 PUSH4 0x1000000 DUP2 DIV DUP4 AND SWAP3 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP2 DIV AND SWAP1 JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x2AD8 SWAP1 DUP4 PUSH2 0x3DF0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x2AD8 SWAP1 DUP4 PUSH2 0x3463 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x2B79 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1D31 DUP3 DUP3 PUSH2 0x3DFC JUMP JUMPDEST PUSH2 0x2BAC PUSH32 0x2172861495E7B85EDAC73E3CD5FBB42DD675BAADF627720E687BCFDACA025096 PUSH2 0x3E16 JUMP JUMPDEST DUP1 PUSH1 0x16 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD SWAP5 DUP6 MSTORE POP POP PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP1 SUB PUSH1 0x20 ADD SWAP1 SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE POP POP PUSH1 0x17 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x2C31 SWAP1 PUSH32 0xC624B66CC0138B8FABC209247F72D758E1CF3343756D543BADBF24212BED8C15 ADD DUP5 DUP5 PUSH2 0x52E3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2C4B JUMPI INVALID JUMPDEST EQ PUSH2 0x2C55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C7E PUSH32 0xAE0C232B87105E0A8134F8B92146DCD1D99373D32394BE9D70F700F90B3A3DB3 PUSH2 0x3E16 JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x2C31 SWAP1 DUP5 DUP5 PUSH2 0x52E3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2CAE JUMPI INVALID JUMPDEST EQ DUP1 ISZERO PUSH2 0x2CC1 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x9 SLOAD ADD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0x2CD3 JUMPI PUSH2 0x2CCE PUSH2 0x3E29 JUMP JUMPDEST PUSH2 0x2D06 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2CE6 JUMPI INVALID JUMPDEST EQ DUP1 ISZERO PUSH2 0x2CF9 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD ADD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0x2D06 JUMPI PUSH2 0x2D06 PUSH2 0x3E29 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2D20 PUSH2 0x34D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2D66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x562C PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x2D73 PUSH2 0x34D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0x2DB7 PUSH2 0x34D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2E11 JUMPI INVALID JUMPDEST EQ PUSH2 0x2E1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x7 DUP2 GT PUSH2 0x2E29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2E44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD EQ PUSH2 0x2E63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1C PUSH1 0x0 PUSH1 0x15 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x2ED3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2EB1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 DUP3 ADD SWAP2 PUSH2 0x2ED3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2EBF JUMPI JUMPDEST POP POP SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x12 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x2F51 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F2F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 DUP3 ADD SWAP2 PUSH2 0x2F51 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2F3D JUMPI JUMPDEST POP POP SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ PUSH2 0x2F68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1D PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x15 SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2F91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH1 0xC SLOAD SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2FEB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2FF0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x3037 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x14185E5B595B9D0819985A5B1959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0xA SLOAD PUSH2 0x3046 SWAP2 PUSH2 0x3D93 JUMP JUMPDEST PUSH1 0xA SSTORE POP POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1D PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x15 SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2C31 DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 PUSH2 0x321E JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH2 0x30B3 PUSH32 0x2172861495E7B85EDAC73E3CD5FBB42DD675BAADF627720E687BCFDACA025096 PUSH2 0x3E16 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 DUP2 DUP2 GT ISZERO PUSH2 0x30CB JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x136E SWAP1 PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x310E SWAP1 PUSH2 0x1CE7 PUSH2 0x34D2 JUMP JUMPDEST PUSH2 0x1D8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5537 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3178 PUSH32 0x2172861495E7B85EDAC73E3CD5FBB42DD675BAADF627720E687BCFDACA025096 PUSH2 0x3E16 JUMP JUMPDEST PUSH1 0x14 SSTORE JUMP JUMPDEST PUSH1 0x17 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x318A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP8 AND ISZERO MUL ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV SWAP3 DUP4 ADD DUP6 SWAP1 DIV DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP2 MSTORE DUP2 DUP2 MSTORE SWAP4 POP SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2956 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x292B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2956 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3263 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5567 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x326B PUSH2 0x34D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x3291 JUMPI POP PUSH2 0x3291 DUP6 PUSH2 0x1977 PUSH2 0x34D2 JUMP JUMPDEST PUSH2 0x32CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x550E PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x32D6 PUSH2 0x34D2 JUMP JUMPDEST SWAP1 POP PUSH2 0x32F6 DUP2 DUP8 DUP8 PUSH2 0x32E7 DUP9 PUSH2 0x3FFE JUMP JUMPDEST PUSH2 0x32F0 DUP9 PUSH2 0x3FFE JUMP JUMPDEST DUP8 PUSH2 0x364C JUMP JUMPDEST PUSH2 0x333D DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x55E1 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x3767 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x3374 SWAP1 DUP5 PUSH2 0x3478 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP9 DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE DUP1 MLOAD DUP11 DUP5 AND SWAP4 DUP7 AND SWAP3 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG4 PUSH2 0x1BBF DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x4042 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x33FD JUMPI POP PUSH1 0x7 DUP2 GT ISZERO JUMPDEST PUSH2 0x3406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x15 SLOAD DUP5 GT ISZERO PUSH2 0x3415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH2 0x343A SWAP1 PUSH1 0x1 PUSH2 0x3478 JUMP JUMPDEST SWAP1 POP PUSH2 0x3445 DUP2 PUSH2 0x41B3 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD8 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x4205 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD8 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x424F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x2AD8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x351B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x56A6 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3525 PUSH2 0x34D2 JUMP JUMPDEST SWAP1 POP PUSH2 0x3537 DUP2 PUSH1 0x0 DUP8 PUSH2 0x32E7 DUP9 PUSH2 0x3FFE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x3564 SWAP1 DUP5 PUSH2 0x3478 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP2 MLOAD DUP10 DUP2 MSTORE SWAP3 DUP4 ADD DUP9 SWAP1 MSTORE DUP2 MLOAD SWAP1 SWAP5 DUP7 AND SWAP3 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG4 PUSH2 0x35D7 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x4042 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35EA CALLVALUE DUP4 PUSH2 0x3D93 JUMP JUMPDEST GT ISZERO PUSH2 0x2D06 JUMPI PUSH1 0x0 CALLER PUSH2 0x35FD CALLVALUE DUP5 PUSH2 0x3D93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3639 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x363E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1D31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x365A DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1BBF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x375E JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3674 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT DUP1 ISZERO PUSH2 0x369D JUMPI POP PUSH1 0x7 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3692 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0x36EE JUMPI DUP5 PUSH1 0xE PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x36B3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x7 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x36FC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x3756 JUMPI DUP5 PUSH1 0x11 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x371B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x365D JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x37F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x37BB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x37A3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x37E8 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x3810 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4267 JUMP JUMPDEST ISZERO PUSH2 0x1BBF JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x389E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3886 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x38DD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x38C5 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3919 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3901 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3946 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x396B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3990 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x398B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 JUMPDEST PUSH2 0x3A25 JUMPI PUSH2 0x399C PUSH2 0x536C JUMP JUMPDEST DUP1 PUSH2 0x39A7 JUMPI POP PUSH2 0x39EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD DUP5 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x37BB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x37A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5412 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x375E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5468 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x3A8C SWAP1 DUP3 PUSH2 0x344E JUMP JUMPDEST ISZERO PUSH2 0x1D31 JUMPI PUSH2 0x3A99 PUSH2 0x34D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x3AF5 SWAP1 DUP3 PUSH2 0x426D JUMP JUMPDEST ISZERO PUSH2 0x1D31 JUMPI PUSH2 0x3B02 PUSH2 0x34D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x4 GT ISZERO PUSH2 0x3B73 JUMPI POP PUSH1 0x1 PUSH2 0x1398 JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 JUMPDEST PUSH1 0xD SLOAD DUP2 GT PUSH2 0x3BE8 JUMPI PUSH1 0x15 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x3BE0 JUMPI PUSH1 0x15 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x3B93 JUMP JUMPDEST POP PUSH2 0x3BF4 DUP2 PUSH1 0x2 PUSH2 0x3CD3 JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD GT ISZERO SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x19 SLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3C8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3CA1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3CB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT ISZERO PUSH2 0x3CC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x136E PUSH1 0x18 SLOAD PUSH1 0x19 SLOAD DUP5 PUSH2 0x4282 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3CE2 JUMPI POP PUSH1 0x0 PUSH2 0x136E JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x3CEF JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2AD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x560B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x3D82 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x3D8B JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x3DEA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD8 DUP4 DUP4 PUSH2 0x442C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x1D31 DUP3 PUSH2 0x4490 JUMP JUMPDEST PUSH2 0x3E20 DUP2 CALLER PUSH2 0x2AE4 JUMP JUMPDEST PUSH2 0x2D06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3E3C JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x3E6F JUMPI PUSH1 0x0 PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0xC SSTORE PUSH1 0x15 SLOAD PUSH2 0x3E5A SWAP1 PUSH1 0x1 PUSH2 0x3478 JUMP JUMPDEST PUSH1 0x15 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x3FED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3E82 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x3FED JUMPI PUSH2 0x3E90 PUSH2 0x4B67 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xD SLOAD DUP2 GT PUSH2 0x3FD9 JUMPI PUSH1 0x1C PUSH1 0x0 PUSH1 0x15 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x3F0C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EEA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 DUP3 ADD SWAP2 PUSH2 0x3F0C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3EF8 JUMPI JUMPDEST POP POP SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x3F8A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F68 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 DUP3 ADD SWAP2 PUSH2 0x3F8A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F76 JUMPI JUMPDEST POP POP SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ ISZERO PUSH2 0x3FD1 JUMPI PUSH1 0x0 PUSH2 0x3FAB PUSH1 0x15 SLOAD DUP4 PUSH2 0x2878 JUMP JUMPDEST GT ISZERO PUSH2 0x3FD1 JUMPI PUSH2 0x3FC9 PUSH2 0x3FC0 PUSH1 0x15 SLOAD DUP4 PUSH2 0x2878 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 PUSH2 0x3D2C JUMP JUMPDEST PUSH1 0xC SSTORE PUSH2 0x3FD9 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x3E93 JUMP JUMPDEST PUSH2 0x3FE1 PUSH2 0x4D54 JUMP JUMPDEST POP PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST TIMESTAMP PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x136E DUP3 PUSH2 0x4DB3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x4031 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4054 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4267 JUMP JUMPDEST ISZERO PUSH2 0x1BBF JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x40E3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x40CB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4110 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x4158 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 JUMPDEST PUSH2 0x4164 JUMPI PUSH2 0x399C PUSH2 0x536C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x375E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5468 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x41DA PUSH1 0x64 PUSH2 0x254B PUSH1 0x2 PUSH2 0x41D4 DUP9 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3CD3 JUMP JUMPDEST SWAP1 PUSH2 0x3CD3 JUMP JUMPDEST SWAP2 POP PUSH2 0x41FD PUSH2 0x41F6 PUSH1 0xA PUSH2 0x254B DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3CD3 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x3478 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4211 DUP4 DUP4 PUSH2 0x424F JUMP JUMPDEST PUSH2 0x4247 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x136E JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x136E JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD8 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x4DB7 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP6 DUP8 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x435E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4346 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x438B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x43AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x43D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x43F6 SWAP1 DUP7 SWAP1 DUP6 SWAP1 ADDRESS SWAP1 PUSH2 0x4E7D JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x4413 SWAP1 PUSH1 0x1 PUSH2 0x3478 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x3445 DUP6 DUP3 PUSH2 0x4EC4 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x446E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5446 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x447D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x7 DUP2 GT PUSH2 0x44AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x44C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1B DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP2 DUP6 MSTORE PUSH1 0x12 SWAP1 SWAP4 MSTORE SWAP1 DUP4 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH10 0xFF000000000000000000 NOT AND PUSH1 0x1 PUSH1 0x48 SHL OR SWAP1 SSTORE SWAP2 PUSH2 0x4512 PUSH1 0x2 DUP4 PUSH2 0x4EF0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x4543 PUSH1 0x4 DUP3 PUSH2 0x4EF0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP4 AND PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x457A PUSH1 0x4 DUP3 PUSH2 0x4EF0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP4 AND PUSH3 0x10000 MUL PUSH3 0xFF0000 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x45B3 PUSH1 0x4 DUP3 PUSH2 0x4EF0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP4 AND PUSH4 0x1000000 MUL PUSH4 0xFF000000 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x45EE PUSH1 0x4 DUP3 PUSH2 0x4EF0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x20 SHL MUL PUSH5 0xFF00000000 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x462A PUSH1 0x9 DUP3 PUSH2 0x4EF0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP4 AND PUSH6 0x10000000000 MUL PUSH6 0xFF0000000000 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x4669 PUSH1 0x1E DUP3 PUSH2 0x4EF0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP4 AND PUSH7 0x1000000000000 MUL PUSH7 0xFF000000000000 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x46AA PUSH1 0x18 DUP3 PUSH2 0x4EF0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x38 SHL MUL PUSH8 0xFF00000000000000 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x46E9 PUSH1 0x7 DUP3 PUSH2 0x4EF0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x40 SHL MUL PUSH9 0xFF0000000000000000 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x4729 PUSH1 0x15 DUP3 PUSH2 0x4EF0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x50 SHL NOT AND PUSH1 0x1 PUSH1 0x50 SHL PUSH1 0xFF SWAP5 DUP6 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP2 SWAP4 POP PUSH2 0x4769 SWAP3 SWAP2 SWAP1 DIV AND PUSH1 0x9 PUSH2 0x3478 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x50 SHL MUL PUSH1 0xFF PUSH1 0x50 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x47A2 PUSH1 0x15 DUP3 PUSH2 0x4EF0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x58 SHL NOT AND PUSH1 0x1 PUSH1 0x58 SHL PUSH1 0xFF SWAP5 DUP6 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP2 SWAP4 POP PUSH2 0x47E2 SWAP3 SWAP2 SWAP1 DIV AND PUSH1 0x9 PUSH2 0x3478 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x58 SHL MUL PUSH1 0xFF PUSH1 0x58 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x481B PUSH1 0x1F DUP3 PUSH2 0x4EF0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x60 SHL NOT AND PUSH1 0x1 PUSH1 0x60 SHL PUSH1 0xFF SWAP5 DUP6 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP2 SWAP4 POP PUSH2 0x485B SWAP3 SWAP2 SWAP1 DIV AND PUSH1 0x9 PUSH2 0x3478 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x60 SHL MUL PUSH1 0xFF PUSH1 0x60 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x4894 PUSH1 0x10 DUP3 PUSH2 0x4EF0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x68 SHL NOT AND PUSH1 0x1 PUSH1 0x68 SHL PUSH1 0xFF SWAP5 DUP6 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP2 SWAP4 POP PUSH2 0x48D4 SWAP3 SWAP2 SWAP1 DIV AND PUSH1 0x2 PUSH2 0x3478 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x68 SHL MUL PUSH1 0xFF PUSH1 0x68 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x490D PUSH1 0x10 DUP3 PUSH2 0x4EF0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x70 SHL NOT AND PUSH1 0x1 PUSH1 0x70 SHL PUSH1 0xFF SWAP5 DUP6 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP2 SWAP4 POP PUSH2 0x494D SWAP3 SWAP2 SWAP1 DIV AND PUSH1 0x2 PUSH2 0x3478 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x70 SHL MUL PUSH1 0xFF PUSH1 0x70 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x4986 PUSH1 0x10 DUP3 PUSH2 0x4EF0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x78 SHL NOT AND PUSH1 0x1 PUSH1 0x78 SHL PUSH1 0xFF SWAP5 DUP6 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP2 SWAP4 POP PUSH2 0x49C6 SWAP3 SWAP2 SWAP1 DIV AND PUSH1 0x2 PUSH2 0x3478 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x78 SHL MUL PUSH1 0xFF PUSH1 0x78 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x49FF PUSH1 0x10 DUP3 PUSH2 0x4EF0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL PUSH1 0xFF SWAP5 DUP6 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP2 SWAP4 POP PUSH2 0x4A3F SWAP3 SWAP2 SWAP1 DIV AND PUSH1 0x2 PUSH2 0x3478 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x80 SHL MUL PUSH1 0xFF PUSH1 0x80 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x4A78 PUSH1 0x10 DUP3 PUSH2 0x4EF0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x88 SHL NOT AND PUSH1 0x1 PUSH1 0x88 SHL PUSH1 0xFF SWAP5 DUP6 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP2 SWAP4 POP PUSH2 0x4AB8 SWAP3 SWAP2 SWAP1 DIV AND PUSH1 0x2 PUSH2 0x3478 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x88 SHL MUL PUSH1 0xFF PUSH1 0x88 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x4AF1 PUSH1 0x10 DUP3 PUSH2 0x4EF0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x90 SHL NOT AND PUSH1 0x1 PUSH1 0x90 SHL PUSH1 0xFF SWAP5 DUP6 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP2 SWAP4 POP PUSH2 0x4B31 SWAP3 SWAP2 SWAP1 DIV AND PUSH1 0x2 PUSH2 0x3478 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP4 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x90 SHL MUL PUSH1 0xFF PUSH1 0x90 SHL NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1E SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x50524943455F57415253 PUSH1 0xB0 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE SWAP3 MLOAD PUSH4 0x6CADCD79 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 DUP5 MSTORE DUP3 MLOAD PUSH1 0x24 DUP3 ADD MSTORE DUP3 MLOAD PUSH1 0x0 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 PUSH4 0xD95B9AF2 SWAP5 SWAP4 SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP1 DUP4 DUP4 DUP12 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4BE5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4BCD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4C12 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4C45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4C5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x72D7F665 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0xE5AFECCA SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4CAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4CC1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4CD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x4D05 PUSH32 0xAE0C232B87105E0A8134F8B92146DCD1D99373D32394BE9D70F700F90B3A3DB3 DUP3 PUSH2 0x1CC9 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD65AB5F2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4D40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x375E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x7 DUP2 GT PUSH2 0x4D87 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4D7F JUMPI PUSH2 0x4D7F DUP2 PUSH2 0x4F21 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x4D57 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x143B2C36FAC98F86168603D28D499BDE9CE0367D41E111CEF9F2ECBC9EEABFC SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x4E73 JUMPI DUP4 SLOAD PUSH1 0x0 NOT DUP1 DUP4 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x4DEA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x4E07 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0x4E37 JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x136E JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x136E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4F0B PUSH1 0x1 PUSH2 0x4F05 DUP6 PUSH1 0xFF DUP9 AND PUSH2 0x4FBD JUMP JUMPDEST SWAP1 PUSH2 0x3478 JUMP JUMPDEST PUSH2 0x4F16 DUP5 PUSH1 0xA PUSH2 0x3D2C JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x4F33 JUMPI POP PUSH1 0x7 DUP2 GT ISZERO JUMPDEST PUSH2 0x4F3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x4F57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x4F7B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH2 0x5024 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x4F89 SWAP1 PUSH1 0x1 PUSH2 0x3D93 JUMP JUMPDEST PUSH1 0xD SSTORE POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0xF SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x5013 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D6F64756C6F206279207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x501C JUMPI INVALID JUMPDEST MOD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5069 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x55BE PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5073 PUSH2 0x34D2 JUMP JUMPDEST SWAP1 POP PUSH2 0x50A3 DUP2 DUP6 PUSH1 0x0 PUSH2 0x5085 DUP8 PUSH2 0x3FFE JUMP JUMPDEST PUSH2 0x508E DUP8 PUSH2 0x3FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x364C JUMP JUMPDEST PUSH2 0x50EA DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x54EA PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x3767 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP2 MLOAD DUP9 DUP2 MSTORE SWAP3 DUP4 ADD DUP8 SWAP1 MSTORE DUP2 MLOAD SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 DUP7 AND SWAP3 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x51C9 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x51F6 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x51F6 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x51F6 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x51DB JUMP JUMPDEST POP PUSH2 0x5202 SWAP3 SWAP2 POP PUSH2 0x5351 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x360 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x60 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD DUP4 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x140 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x160 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x180 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1A0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1C0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1E0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x200 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x220 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x240 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x260 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x280 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2A0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2C0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2E0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x300 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x320 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x340 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x5324 JUMPI DUP3 DUP1 ADD PUSH1 0xFF NOT DUP3 CALLDATALOAD AND OR DUP6 SSTORE PUSH2 0x51F6 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x51F6 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x51F6 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x5336 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x5202 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x5352 JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x537C JUMPI PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY PUSH4 0x8C379A0 PUSH2 0x5390 DUP3 MLOAD PUSH2 0x5366 JUMP JUMPDEST EQ PUSH2 0x539A JUMPI PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x3 NOT ADD PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x53CA JUMPI POP POP POP POP PUSH2 0x2720 JUMP JUMPDEST DUP3 DUP5 ADD SWAP3 POP DUP3 MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x53E4 JUMPI POP POP POP POP PUSH2 0x2720 JUMP JUMPDEST POP RETURNDATASIZE DUP4 ADD PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x53FC JUMPI POP POP POP PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F206E6F6E20455243313135 CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH10 0x6D706C656D656E746572 GASLIMIT PUSH15 0x756D657261626C655365743A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E6473455243313135353A204552 NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH19 0x656A656374656420746F6B656E734163636573 PUSH20 0x436F6E74726F6C3A2073656E646572206D757374 KECCAK256 PUSH3 0x652061 PUSH15 0x2061646D696E20746F206772616E74 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH3 0x616C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x657373455243313135353A206275726E20616D PUSH16 0x756E7420657863656564732062616C61 PUSH15 0x6365455243313135353A2063616C6C PUSH6 0x72206973206E PUSH16 0x74206F776E6572206E6F722061707072 PUSH16 0x766564416363657373436F6E74726F6C GASPRICE KECCAK256 PUSH20 0x656E646572206D75737420626520616E2061646D PUSH10 0x6E20746F207265766F6B PUSH6 0x455243313135 CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E736665722063616C6C6572206973206E6F74 KECCAK256 PUSH16 0x776E6572206E6F7220617070726F7665 PUSH5 0x4552433131 CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F2061646472657373455243313135353A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F72207472616E73666572 MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77455243313135353A20 PUSH20 0x657474696E6720617070726F76616C2073746174 PUSH22 0x7320666F722073656C66455243313135353A20616363 PUSH16 0x756E747320616E6420696473206C656E PUSH8 0x7468206D69736D61 PUSH21 0x6368455243313135353A2069647320616E6420616D PUSH16 0x756E7473206C656E677468206D69736D PUSH2 0x7463 PUSH9 0x455243313135353A20 PUSH14 0x696E7420746F20746865207A6572 PUSH16 0x2061646472657373416363657373436F PUSH15 0x74726F6C3A2063616E206F6E6C7920 PUSH19 0x656E6F756E636520726F6C657320666F722073 PUSH6 0x6C66A2646970 PUSH7 0x73582212203858 0xD1 SIGNEXTEND PUSH20 0xE97D0B22D1B146E447D0063E767DF6B8BE5EC0F2 PUSH10 0x333B1FAB844564736F6C PUSH4 0x4300060C STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        743,
        32659
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "8": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "LT",
      "path": "12"
    },
    "9": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E3"
    },
    "12": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "16": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "SHR",
      "path": "12"
    },
    "19": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "20": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x79935FE0"
    },
    "25": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "GT",
      "path": "12"
    },
    "26": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x190"
    },
    "29": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "30": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "31": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xAE169A50"
    },
    "36": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "GT",
      "path": "12"
    },
    "37": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDC"
    },
    "40": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "41": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "42": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xD547741F"
    },
    "47": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "GT",
      "path": "12"
    },
    "48": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x95"
    },
    "51": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "52": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "53": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xE5B0A993"
    },
    "58": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "GT",
      "path": "12"
    },
    "59": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6F"
    },
    "62": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "63": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "64": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xE5B0A993"
    },
    "69": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "70": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1197"
    },
    "73": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "74": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "75": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xE985E9C5"
    },
    "80": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "81": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11C1"
    },
    "84": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "85": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "86": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xF242432A"
    },
    "91": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "92": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11FC"
    },
    "95": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "96": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "97": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xF32C4974"
    },
    "102": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "103": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12D2"
    },
    "106": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "107": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E3"
    },
    "110": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMP",
      "path": "12"
    },
    "111": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "112": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "113": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xD547741F"
    },
    "118": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "119": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x111F"
    },
    "122": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "123": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "124": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xD6303CCE"
    },
    "129": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "130": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1158"
    },
    "133": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "134": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "135": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xE3E98382"
    },
    "140": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "141": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x116D"
    },
    "144": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "145": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E3"
    },
    "148": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMP",
      "path": "12"
    },
    "149": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "150": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "151": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xAE169A50"
    },
    "156": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "157": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1031"
    },
    "160": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "161": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "162": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xB9280067"
    },
    "167": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "168": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x105B"
    },
    "171": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "172": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "173": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xBF61211F"
    },
    "178": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "179": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x109E"
    },
    "182": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "183": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "184": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xC03AFB59"
    },
    "189": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "190": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10B3"
    },
    "193": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "194": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "195": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xCA15C873"
    },
    "200": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "201": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10E0"
    },
    "204": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "205": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "206": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xCAAB7EF8"
    },
    "211": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "212": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x110A"
    },
    "215": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "216": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E3"
    },
    "219": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMP",
      "path": "12"
    },
    "220": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "221": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "222": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x91D14854"
    },
    "227": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "GT",
      "path": "12"
    },
    "228": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x149"
    },
    "231": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "232": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "233": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x9E315008"
    },
    "238": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "GT",
      "path": "12"
    },
    "239": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x123"
    },
    "242": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "243": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "244": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x9E315008"
    },
    "249": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "250": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF51"
    },
    "253": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "254": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "255": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x9FF1103F"
    },
    "260": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "261": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFCC"
    },
    "264": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "265": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "266": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA217FDDF"
    },
    "271": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "272": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFE1"
    },
    "275": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "276": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "277": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA22CB465"
    },
    "282": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "283": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFF6"
    },
    "286": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "287": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E3"
    },
    "290": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMP",
      "path": "12"
    },
    "291": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "292": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "293": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x91D14854"
    },
    "298": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "299": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE64"
    },
    "302": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "303": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "304": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x94985DDD"
    },
    "309": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "310": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE9D"
    },
    "313": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "314": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "315": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x9D5B82C0"
    },
    "320": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "321": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xECD"
    },
    "324": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "325": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E3"
    },
    "328": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMP",
      "path": "12"
    },
    "329": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "330": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "331": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x79935FE0"
    },
    "336": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "337": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD64"
    },
    "340": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "341": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "342": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x835A4398"
    },
    "347": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "348": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD79"
    },
    "351": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "352": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "353": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x8423B077"
    },
    "358": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "359": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDE0"
    },
    "362": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "363": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "364": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x8A19C8BC"
    },
    "369": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "370": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE0A"
    },
    "373": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "374": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "375": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x9010D07C"
    },
    "380": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "381": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE1F"
    },
    "384": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "385": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "386": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x90DED47E"
    },
    "391": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "392": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE4F"
    },
    "395": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "396": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E3"
    },
    "399": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMP",
      "path": "12"
    },
    "400": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "401": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "402": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x2F2FF15D"
    },
    "407": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "GT",
      "path": "12"
    },
    "408": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F"
    },
    "411": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "412": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "413": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x4C2ED018"
    },
    "418": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "GT",
      "path": "12"
    },
    "419": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x208"
    },
    "422": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "423": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "424": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x56B4D760"
    },
    "429": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "GT",
      "path": "12"
    },
    "430": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E2"
    },
    "433": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "434": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "435": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x56B4D760"
    },
    "440": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "441": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCB6"
    },
    "444": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "445": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "446": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x59CA19D3"
    },
    "451": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "452": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCE0"
    },
    "455": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "456": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "457": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x6DE51353"
    },
    "462": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "463": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD10"
    },
    "466": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "467": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "468": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x72EDA5BB"
    },
    "473": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "474": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD3A"
    },
    "477": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "478": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E3"
    },
    "481": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMP",
      "path": "12"
    },
    "482": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "483": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "484": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x4C2ED018"
    },
    "489": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "490": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xAF7"
    },
    "493": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "494": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "495": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x4C52B2A9"
    },
    "500": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "501": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB21"
    },
    "504": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "505": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "506": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x4E1273F4"
    },
    "511": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "512": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB36"
    },
    "515": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "516": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E3"
    },
    "519": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMP",
      "path": "12"
    },
    "520": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "521": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "522": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x2F2FF15D"
    },
    "527": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "528": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8E9"
    },
    "531": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "532": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "533": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x36568ABE"
    },
    "538": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "539": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x922"
    },
    "542": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "543": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "544": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x4390D2A8"
    },
    "549": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "550": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x95B"
    },
    "553": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "554": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "555": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x46E6F13D"
    },
    "560": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "561": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x970"
    },
    "564": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "565": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "566": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x48772D79"
    },
    "571": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "572": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA2A"
    },
    "575": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "576": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "577": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x498E8219"
    },
    "582": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "583": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA82"
    },
    "586": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "587": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E3"
    },
    "590": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMP",
      "path": "12"
    },
    "591": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "592": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "593": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x21C2F72A"
    },
    "598": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "GT",
      "path": "12"
    },
    "599": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A1"
    },
    "602": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "603": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "604": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x21C2F72A"
    },
    "609": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "610": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4DF"
    },
    "613": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "614": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "615": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x248A9CA3"
    },
    "620": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "621": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x59F"
    },
    "624": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "625": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "626": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x26D4D15A"
    },
    "631": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "632": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5C9"
    },
    "635": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "636": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "637": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x26F7AF4F"
    },
    "642": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "643": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x660"
    },
    "646": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "647": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "648": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x2EB2C2D6"
    },
    "653": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "654": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x69B"
    },
    "657": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "658": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "659": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x2EE1F0A0"
    },
    "664": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "665": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x869"
    },
    "668": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "669": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E3"
    },
    "672": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMP",
      "path": "12"
    },
    "673": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "674": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "675": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH3",
      "path": "12",
      "value": "0xFDD58E"
    },
    "679": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "680": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E8"
    },
    "683": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "684": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "685": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x10A768E"
    },
    "690": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "691": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x333"
    },
    "694": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "695": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "696": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x1FFC9A7"
    },
    "701": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "702": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x348"
    },
    "705": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "706": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "707": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x55AD42E"
    },
    "712": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "713": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x390"
    },
    "716": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "717": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "718": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xE89341C"
    },
    "723": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "724": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3C6"
    },
    "727": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "728": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "729": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFBEA841"
    },
    "734": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "EQ",
      "path": "12"
    },
    "735": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x465"
    },
    "738": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "739": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "740": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "742": {
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "743": {
      "first_revert": true,
      "fn": null,
      "offset": [
        743,
        32659
      ],
      "op": "REVERT",
      "path": "12"
    },
    "744": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "745": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "746": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP1",
      "path": "5"
    },
    "747": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "748": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2F4"
    },
    "751": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "752": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "754": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP1",
      "path": "5"
    },
    "755": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "REVERT",
      "path": "5"
    },
    "756": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "757": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "POP",
      "path": "5"
    },
    "758": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x321"
    },
    "761": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "763": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP1",
      "path": "5"
    },
    "764": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "765": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SUB",
      "path": "5"
    },
    "766": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "768": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP2",
      "path": "5"
    },
    "769": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "LT",
      "path": "5"
    },
    "770": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "771": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30B"
    },
    "774": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "775": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "777": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP1",
      "path": "5"
    },
    "778": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "REVERT",
      "path": "5"
    },
    "779": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "780": {
      "op": "POP"
    },
    "781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "785": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "787": {
      "op": "SHL"
    },
    "788": {
      "op": "SUB"
    },
    "789": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP2",
      "path": "5"
    },
    "790": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "791": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "AND",
      "path": "5"
    },
    "792": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "793": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "795": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "ADD",
      "path": "5"
    },
    "796": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "797": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1302"
    },
    "800": {
      "fn": "ERC1155.balanceOf",
      "jump": "i",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMP",
      "path": "5"
    },
    "801": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "802": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "804": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP1",
      "path": "5"
    },
    "805": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "806": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "807": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP3",
      "path": "5"
    },
    "808": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "809": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "810": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "811": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP2",
      "path": "5"
    },
    "812": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "813": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SUB",
      "path": "5"
    },
    "814": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "816": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "ADD",
      "path": "5"
    },
    "817": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "818": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "RETURN",
      "path": "5"
    },
    "819": {
      "offset": [
        1456,
        1492
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "820": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        1456,
        1492
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "821": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        1456,
        1492
      ],
      "op": "DUP1",
      "path": "12"
    },
    "822": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        1456,
        1492
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "823": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        1456,
        1492
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x33F"
    },
    "826": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        1456,
        1492
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "827": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        1456,
        1492
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "829": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        1456,
        1492
      ],
      "op": "DUP1",
      "path": "12"
    },
    "830": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        1456,
        1492
      ],
      "op": "REVERT",
      "path": "12"
    },
    "831": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        1456,
        1492
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "832": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        1456,
        1492
      ],
      "op": "POP",
      "path": "12"
    },
    "833": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        1456,
        1492
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x321"
    },
    "836": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        1456,
        1492
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1374"
    },
    "839": {
      "fn": "ERC1155.balanceOf",
      "jump": "i",
      "offset": [
        1456,
        1492
      ],
      "op": "JUMP",
      "path": "12"
    },
    "840": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "841": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "842": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "1"
    },
    "843": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "844": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x354"
    },
    "847": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "848": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "850": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "1"
    },
    "851": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "REVERT",
      "path": "1"
    },
    "852": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "853": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "POP",
      "path": "1"
    },
    "854": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x37C"
    },
    "857": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "859": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "1"
    },
    "860": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "861": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SUB",
      "path": "1"
    },
    "862": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "864": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP2",
      "path": "1"
    },
    "865": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "LT",
      "path": "1"
    },
    "866": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "867": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36B"
    },
    "870": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "871": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "873": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "1"
    },
    "874": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "REVERT",
      "path": "1"
    },
    "875": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "876": {
      "op": "POP"
    },
    "877": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "882": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "884": {
      "op": "SHL"
    },
    "885": {
      "op": "SUB"
    },
    "886": {
      "op": "NOT"
    },
    "887": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "AND",
      "path": "1"
    },
    "888": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x137A"
    },
    "891": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        965,
        1113
      ],
      "op": "JUMP",
      "path": "1"
    },
    "892": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "893": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "895": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "1"
    },
    "896": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "897": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "898": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "899": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "900": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP3",
      "path": "1"
    },
    "901": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "902": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "903": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "904": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP2",
      "path": "1"
    },
    "905": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "906": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SUB",
      "path": "1"
    },
    "907": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "909": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ADD",
      "path": "1"
    },
    "910": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "911": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "RETURN",
      "path": "1"
    },
    "912": {
      "offset": [
        1109,
        1134
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "913": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "914": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "DUP1",
      "path": "12"
    },
    "915": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "916": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x39C"
    },
    "919": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "920": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "922": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "DUP1",
      "path": "12"
    },
    "923": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "REVERT",
      "path": "12"
    },
    "924": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "925": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "POP",
      "path": "12"
    },
    "926": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A5"
    },
    "929": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x139D"
    },
    "932": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        1109,
        1134
      ],
      "op": "JUMP",
      "path": "12"
    },
    "933": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "934": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "936": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "937": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "DUP1",
      "path": "12"
    },
    "938": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "DUP3",
      "path": "12"
    },
    "939": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "941": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "DUP2",
      "path": "12"
    },
    "942": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "GT",
      "path": "12"
    },
    "943": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "944": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3B5"
    },
    "947": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "948": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "INVALID",
      "path": "12"
    },
    "949": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "950": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "DUP2",
      "path": "12"
    },
    "951": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "952": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "954": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "ADD",
      "path": "12"
    },
    "955": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "956": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "POP",
      "path": "12"
    },
    "957": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "POP",
      "path": "12"
    },
    "958": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "960": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "961": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "DUP1",
      "path": "12"
    },
    "962": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "963": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "SUB",
      "path": "12"
    },
    "964": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "965": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "RETURN",
      "path": "12"
    },
    "966": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "967": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "968": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "969": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "970": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3D2"
    },
    "973": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "974": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "976": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "977": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "REVERT",
      "path": "5"
    },
    "978": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "979": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "980": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3F0"
    },
    "983": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "985": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "986": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "987": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SUB",
      "path": "5"
    },
    "988": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "990": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "991": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "LT",
      "path": "5"
    },
    "992": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "993": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3E9"
    },
    "996": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "997": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "999": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1000": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1001": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1002": {
      "op": "POP"
    },
    "1003": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1004": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13A6"
    },
    "1007": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1008": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1009": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1011": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1012": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1013": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1015": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1016": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1017": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1018": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1019": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1020": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1021": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1022": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "1023": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1024": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1025": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1026": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1027": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1028": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1029": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1030": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1031": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1032": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "1033": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1034": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1035": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "1036": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1037": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1038": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1039": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1040": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1042": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1043": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1044": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1045": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "LT",
      "path": "5"
    },
    "1046": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1047": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x42A"
    },
    "1050": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1051": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1052": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1053": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "1054": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1055": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1056": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1057": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "1058": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1059": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1061": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "1062": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x412"
    },
    "1065": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1066": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1067": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1068": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1069": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1070": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1071": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1072": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1073": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1074": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1075": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "1076": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1077": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1079": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "AND",
      "path": "5"
    },
    "1080": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1081": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1082": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x457"
    },
    "1085": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1086": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1087": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1088": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SUB",
      "path": "5"
    },
    "1089": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1090": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1091": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1093": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1094": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1096": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SUB",
      "path": "5"
    },
    "1097": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "1100": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "EXP",
      "path": "5"
    },
    "1101": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SUB",
      "path": "5"
    },
    "1102": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "NOT",
      "path": "5"
    },
    "1103": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "AND",
      "path": "5"
    },
    "1104": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1105": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1106": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1108": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "1109": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1110": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1111": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1112": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1113": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1114": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1115": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1116": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1117": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1119": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1120": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1121": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1122": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SUB",
      "path": "5"
    },
    "1123": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1124": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "RETURN",
      "path": "5"
    },
    "1125": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1126": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x321"
    },
    "1129": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1131": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1132": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1133": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "SUB",
      "path": "12"
    },
    "1134": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "1136": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1137": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "LT",
      "path": "12"
    },
    "1138": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1139": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x47B"
    },
    "1142": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1143": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1145": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1146": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1147": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1148": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1149": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "1150": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1151": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1153": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1154": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "ADD",
      "path": "12"
    },
    "1155": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "1156": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1157": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1158": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "ADD",
      "path": "12"
    },
    "1159": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1160": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "1162": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1163": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "ADD",
      "path": "12"
    },
    "1164": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1166": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1167": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "ADD",
      "path": "12"
    },
    "1168": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1173": {
      "op": "SHL"
    },
    "1174": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1175": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "GT",
      "path": "12"
    },
    "1176": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1177": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4A1"
    },
    "1180": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1181": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1183": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1184": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1185": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1186": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1187": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "ADD",
      "path": "12"
    },
    "1188": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1189": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1191": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1192": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "ADD",
      "path": "12"
    },
    "1193": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "GT",
      "path": "12"
    },
    "1194": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1195": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4B3"
    },
    "1198": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1199": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1201": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1202": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1203": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1204": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1205": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "1206": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1207": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1209": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "ADD",
      "path": "12"
    },
    "1210": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1211": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1212": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "1214": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1215": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "MUL",
      "path": "12"
    },
    "1216": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1217": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "ADD",
      "path": "12"
    },
    "1218": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "GT",
      "path": "12"
    },
    "1219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1223": {
      "op": "SHL"
    },
    "1224": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1225": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "GT",
      "path": "12"
    },
    "1226": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "OR",
      "path": "12"
    },
    "1227": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1228": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4D4"
    },
    "1231": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1232": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1234": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1235": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1236": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1237": {
      "op": "POP"
    },
    "1238": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1239": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1240": {
      "op": "POP"
    },
    "1241": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1242": {
      "op": "POP"
    },
    "1243": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x143E"
    },
    "1246": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        11711,
        13488
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1247": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1248": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1249": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1250": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1251": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4EB"
    },
    "1254": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1255": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1257": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1258": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1259": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1260": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "POP",
      "path": "12"
    },
    "1261": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x509"
    },
    "1264": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1266": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1267": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1268": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "SUB",
      "path": "12"
    },
    "1269": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1271": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1272": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "LT",
      "path": "12"
    },
    "1273": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1274": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x502"
    },
    "1277": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1278": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1280": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1281": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1282": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1283": {
      "op": "POP"
    },
    "1284": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "1285": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1732"
    },
    "1288": {
      "fn": "CryptoChampions.getElderSpirit",
      "jump": "i",
      "offset": [
        25194,
        25726
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1289": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1290": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1292": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1293": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1294": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP7",
      "path": "12"
    },
    "1295": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1296": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1297": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1298": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1299": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1301": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "ADD",
      "path": "12"
    },
    "1302": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP6",
      "path": "12"
    },
    "1303": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1304": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1305": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1307": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "ADD",
      "path": "12"
    },
    "1308": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1309": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1310": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1311": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1313": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "ADD",
      "path": "12"
    },
    "1314": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1315": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1317": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "ADD",
      "path": "12"
    },
    "1318": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1319": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1320": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1321": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1323": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "ADD",
      "path": "12"
    },
    "1324": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1325": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1326": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "SUB",
      "path": "12"
    },
    "1327": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1328": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1329": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1330": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1331": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1332": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1333": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1334": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1335": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1337": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "ADD",
      "path": "12"
    },
    "1338": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1339": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "POP",
      "path": "12"
    },
    "1340": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1341": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1342": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1343": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1345": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "ADD",
      "path": "12"
    },
    "1346": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1347": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1348": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1349": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1350": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1352": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1353": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1354": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1355": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "LT",
      "path": "12"
    },
    "1356": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1357": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x560"
    },
    "1360": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1361": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1362": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1363": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "ADD",
      "path": "12"
    },
    "1364": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1365": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1366": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1367": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "ADD",
      "path": "12"
    },
    "1368": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1369": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1371": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "ADD",
      "path": "12"
    },
    "1372": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x548"
    },
    "1375": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1376": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1377": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "POP",
      "path": "12"
    },
    "1378": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "POP",
      "path": "12"
    },
    "1379": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "POP",
      "path": "12"
    },
    "1380": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "POP",
      "path": "12"
    },
    "1381": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1382": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "POP",
      "path": "12"
    },
    "1383": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1384": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1385": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "ADD",
      "path": "12"
    },
    "1386": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1387": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "1389": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "AND",
      "path": "12"
    },
    "1390": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1391": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1392": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x58D"
    },
    "1395": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1396": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1397": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1398": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "SUB",
      "path": "12"
    },
    "1399": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1400": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1401": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "1403": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1404": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1406": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "SUB",
      "path": "12"
    },
    "1407": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "1410": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "EXP",
      "path": "12"
    },
    "1411": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "SUB",
      "path": "12"
    },
    "1412": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "NOT",
      "path": "12"
    },
    "1413": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "AND",
      "path": "12"
    },
    "1414": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1415": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1416": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1418": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "ADD",
      "path": "12"
    },
    "1419": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1420": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "POP",
      "path": "12"
    },
    "1421": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1422": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "POP",
      "path": "12"
    },
    "1423": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "1424": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "POP",
      "path": "12"
    },
    "1425": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "POP",
      "path": "12"
    },
    "1426": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "POP",
      "path": "12"
    },
    "1427": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "POP",
      "path": "12"
    },
    "1428": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "POP",
      "path": "12"
    },
    "1429": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "POP",
      "path": "12"
    },
    "1430": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "POP",
      "path": "12"
    },
    "1431": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1433": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1434": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1435": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1436": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "SUB",
      "path": "12"
    },
    "1437": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1438": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "RETURN",
      "path": "12"
    },
    "1439": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1440": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1441": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1442": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1443": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5AB"
    },
    "1446": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1447": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1449": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1450": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1451": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1452": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "POP",
      "path": "0"
    },
    "1453": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x321"
    },
    "1456": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1458": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1459": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1460": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "SUB",
      "path": "0"
    },
    "1461": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1463": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1464": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "LT",
      "path": "0"
    },
    "1465": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1466": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C2"
    },
    "1469": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1470": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1472": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1473": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1474": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1475": {
      "op": "POP"
    },
    "1476": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1477": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1860"
    },
    "1480": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "i",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1481": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1482": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1483": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1484": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1485": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5D5"
    },
    "1488": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1489": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1491": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1492": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1493": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1494": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "POP",
      "path": "12"
    },
    "1495": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x644"
    },
    "1498": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1500": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1501": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1502": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "SUB",
      "path": "12"
    },
    "1503": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1505": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1506": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "LT",
      "path": "12"
    },
    "1507": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1508": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5EC"
    },
    "1511": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1512": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1514": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1515": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1516": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1517": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1518": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "ADD",
      "path": "12"
    },
    "1519": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1520": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1522": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1523": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "ADD",
      "path": "12"
    },
    "1524": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1525": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "1526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1528": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1530": {
      "op": "SHL"
    },
    "1531": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1532": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "GT",
      "path": "12"
    },
    "1533": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1534": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x606"
    },
    "1537": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1538": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1540": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1541": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1542": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1543": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1544": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "ADD",
      "path": "12"
    },
    "1545": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1546": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1548": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1549": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "ADD",
      "path": "12"
    },
    "1550": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "GT",
      "path": "12"
    },
    "1551": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1552": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x618"
    },
    "1555": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1556": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1558": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1559": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1560": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1561": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1562": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "1563": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1564": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1566": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "ADD",
      "path": "12"
    },
    "1567": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1568": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1569": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "1571": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1572": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "MUL",
      "path": "12"
    },
    "1573": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1574": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "ADD",
      "path": "12"
    },
    "1575": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "GT",
      "path": "12"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1578": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1580": {
      "op": "SHL"
    },
    "1581": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1582": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "GT",
      "path": "12"
    },
    "1583": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "OR",
      "path": "12"
    },
    "1584": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1585": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x639"
    },
    "1588": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1589": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1591": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1592": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1593": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1594": {
      "op": "POP"
    },
    "1595": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1596": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1597": {
      "op": "POP"
    },
    "1598": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1599": {
      "op": "POP"
    },
    "1600": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1875"
    },
    "1603": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "jump": "i",
      "offset": [
        29500,
        29644
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1604": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1605": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1607": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1608": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1615": {
      "op": "SHL"
    },
    "1616": {
      "op": "SUB"
    },
    "1617": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1618": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1619": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "AND",
      "path": "12"
    },
    "1620": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1621": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1622": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1623": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1624": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1625": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1626": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "SUB",
      "path": "12"
    },
    "1627": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1629": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "ADD",
      "path": "12"
    },
    "1630": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1631": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "RETURN",
      "path": "12"
    },
    "1632": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1633": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1634": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1635": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1636": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x66C"
    },
    "1639": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1640": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1642": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1643": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1644": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1645": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "POP",
      "path": "12"
    },
    "1646": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x699"
    },
    "1649": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1651": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1652": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1653": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "SUB",
      "path": "12"
    },
    "1654": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1656": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1657": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "LT",
      "path": "12"
    },
    "1658": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1659": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x683"
    },
    "1662": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1663": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1665": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1666": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1667": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1668": {
      "op": "POP"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1675": {
      "op": "SHL"
    },
    "1676": {
      "op": "SUB"
    },
    "1677": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1678": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "1679": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "AND",
      "path": "12"
    },
    "1680": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1681": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1683": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "ADD",
      "path": "12"
    },
    "1684": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "1685": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x18AF"
    },
    "1688": {
      "fn": "CryptoChampions.transferInGameTokens",
      "jump": "i",
      "offset": [
        31916,
        32103
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1689": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1690": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "STOP",
      "path": "12"
    },
    "1691": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1692": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1693": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1694": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1695": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6A7"
    },
    "1698": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1699": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1701": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1702": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1703": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1704": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "POP",
      "path": "5"
    },
    "1705": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x699"
    },
    "1708": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1710": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1711": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1712": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SUB",
      "path": "5"
    },
    "1713": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA0"
    },
    "1715": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1716": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "LT",
      "path": "5"
    },
    "1717": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1718": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6BE"
    },
    "1721": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1722": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1724": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1725": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1726": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1733": {
      "op": "SHL"
    },
    "1734": {
      "op": "SUB"
    },
    "1735": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1736": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1737": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1738": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "AND",
      "path": "5"
    },
    "1739": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1740": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1742": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1743": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1744": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1745": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1746": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1747": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "AND",
      "path": "5"
    },
    "1748": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1749": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1750": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1751": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1752": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1754": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1755": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1756": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1758": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1759": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1760": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1765": {
      "op": "SHL"
    },
    "1766": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1767": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1768": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1769": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6F1"
    },
    "1772": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1773": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1775": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1776": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1777": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1778": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1779": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1780": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1781": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1783": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1784": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1785": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1786": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1787": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x703"
    },
    "1790": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1791": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1793": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1794": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1795": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1796": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1797": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1798": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1799": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1801": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1802": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1803": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1804": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1806": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1807": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "1808": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1809": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1810": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1813": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1815": {
      "op": "SHL"
    },
    "1816": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1817": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1818": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "OR",
      "path": "5"
    },
    "1819": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1820": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x724"
    },
    "1823": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1824": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1826": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1827": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1828": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1829": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1830": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1831": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1832": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1833": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1835": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "1836": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1838": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1839": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1841": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1842": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1843": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1844": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1845": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1847": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1848": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1849": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1850": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1851": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1852": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1853": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1854": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1855": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1856": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1858": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1859": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1860": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1861": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1863": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "1864": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1865": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1866": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1867": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "1868": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1870": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1871": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1872": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1873": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1874": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1875": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1876": {
      "op": "POP"
    },
    "1877": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1878": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "1879": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1880": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1881": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1883": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1884": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1885": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1886": {
      "op": "POP"
    },
    "1887": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1888": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1889": {
      "op": "POP"
    },
    "1890": {
      "op": "POP"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1895": {
      "op": "SHL"
    },
    "1896": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1897": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1898": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1899": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x773"
    },
    "1902": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1903": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1905": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1906": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1907": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1908": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1909": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1910": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1911": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1913": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1914": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1915": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1916": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1917": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x785"
    },
    "1920": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1921": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1923": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1924": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1925": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1926": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1927": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1928": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1929": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1931": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1932": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1933": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1934": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1936": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1937": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "1938": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1939": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1940": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1945": {
      "op": "SHL"
    },
    "1946": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1947": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1948": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "OR",
      "path": "5"
    },
    "1949": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1950": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7A6"
    },
    "1953": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1954": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1956": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1957": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1958": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1959": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1960": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1961": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1962": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1963": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1965": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "1966": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1968": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1969": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1971": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1972": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1973": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1974": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1975": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1977": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1978": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1979": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1980": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1981": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1982": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1983": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1984": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1985": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1986": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1988": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1989": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1990": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1991": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1993": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "1994": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1995": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1996": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1997": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "1998": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2000": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2001": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2002": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2003": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2004": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2005": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2006": {
      "op": "POP"
    },
    "2007": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2008": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "2009": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2010": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2011": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2013": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2014": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2015": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2016": {
      "op": "POP"
    },
    "2017": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "2018": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2019": {
      "op": "POP"
    },
    "2020": {
      "op": "POP"
    },
    "2021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2023": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2025": {
      "op": "SHL"
    },
    "2026": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2027": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "2028": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2029": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7F5"
    },
    "2032": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2033": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2035": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2036": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2037": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2038": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2039": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2040": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2041": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2043": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2044": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2045": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "2046": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2047": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x807"
    },
    "2050": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2051": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2053": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2054": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2055": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2056": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2057": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "2058": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2059": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2061": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2062": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2063": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2064": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2066": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2067": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "2068": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2069": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2070": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2075": {
      "op": "SHL"
    },
    "2076": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2077": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "2078": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "OR",
      "path": "5"
    },
    "2079": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2080": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x828"
    },
    "2083": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2084": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2086": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2087": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2088": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2089": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2090": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2091": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2092": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2093": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2095": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2096": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2098": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2099": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2100": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DIV",
      "path": "5"
    },
    "2101": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "2102": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2104": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2105": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2107": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2108": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2109": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2110": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2111": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2113": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2114": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2115": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2116": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2117": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2118": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2119": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2120": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2121": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2122": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2124": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2125": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2126": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2127": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2128": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2129": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2130": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "2131": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2133": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2134": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2135": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2136": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2137": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2138": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2139": {
      "op": "POP"
    },
    "2140": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2141": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "2142": {
      "op": "POP"
    },
    "2143": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18C4"
    },
    "2146": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2147": {
      "op": "POP"
    },
    "2148": {
      "op": "POP"
    },
    "2149": {
      "op": "POP"
    },
    "2150": {
      "op": "POP"
    },
    "2151": {
      "op": "POP"
    },
    "2152": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2153": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2154": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "2155": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2156": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2157": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x875"
    },
    "2160": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2161": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2163": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2164": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2165": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2166": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "POP",
      "path": "12"
    },
    "2167": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x893"
    },
    "2170": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2172": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2173": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "2174": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "SUB",
      "path": "12"
    },
    "2175": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2177": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2178": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "LT",
      "path": "12"
    },
    "2179": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2180": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x88C"
    },
    "2183": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2184": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2186": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2187": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2188": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2189": {
      "op": "POP"
    },
    "2190": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "2191": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1BC7"
    },
    "2194": {
      "fn": "CryptoChampions.getHeroGameData",
      "jump": "i",
      "offset": [
        25875,
        26424
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2195": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2196": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2198": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2199": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2200": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP7",
      "path": "12"
    },
    "2201": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2202": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2203": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2204": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2205": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2207": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "ADD",
      "path": "12"
    },
    "2208": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2209": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2211": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "ADD",
      "path": "12"
    },
    "2212": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2213": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2214": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2215": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2217": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "ADD",
      "path": "12"
    },
    "2218": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2219": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2220": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2221": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2223": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "ADD",
      "path": "12"
    },
    "2224": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2225": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2226": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2227": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2229": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "ADD",
      "path": "12"
    },
    "2230": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2231": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2232": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "SUB",
      "path": "12"
    },
    "2233": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2234": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2235": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP7",
      "path": "12"
    },
    "2236": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2237": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2238": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2239": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2240": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2241": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2243": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "ADD",
      "path": "12"
    },
    "2244": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2245": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "POP",
      "path": "12"
    },
    "2246": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2247": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2248": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2249": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2251": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "ADD",
      "path": "12"
    },
    "2252": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2253": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2254": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2255": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2256": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2258": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2259": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2260": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "LT",
      "path": "12"
    },
    "2261": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2262": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x560"
    },
    "2265": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2266": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2267": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2268": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "ADD",
      "path": "12"
    },
    "2269": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2270": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2271": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2272": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "ADD",
      "path": "12"
    },
    "2273": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2274": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2276": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "ADD",
      "path": "12"
    },
    "2277": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x548"
    },
    "2280": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2281": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2282": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2283": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2284": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2285": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F5"
    },
    "2288": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2289": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2291": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2292": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2293": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2294": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "POP",
      "path": "0"
    },
    "2295": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x699"
    },
    "2298": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2300": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2301": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2302": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "SUB",
      "path": "0"
    },
    "2303": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2305": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2306": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "LT",
      "path": "0"
    },
    "2307": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2308": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x90C"
    },
    "2311": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2312": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2314": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2315": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2316": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2317": {
      "op": "POP"
    },
    "2318": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2319": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "2320": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2321": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2323": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "ADD",
      "path": "0"
    },
    "2324": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "2325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2331": {
      "op": "SHL"
    },
    "2332": {
      "op": "SUB"
    },
    "2333": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "AND",
      "path": "0"
    },
    "2334": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CC9"
    },
    "2337": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2338": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2339": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2340": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2341": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2342": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92E"
    },
    "2345": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2346": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2348": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2349": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2350": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2351": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "POP",
      "path": "0"
    },
    "2352": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x699"
    },
    "2355": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2357": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2358": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2359": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "SUB",
      "path": "0"
    },
    "2360": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2362": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2363": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "LT",
      "path": "0"
    },
    "2364": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2365": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x945"
    },
    "2368": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2369": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2371": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2372": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2373": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2374": {
      "op": "POP"
    },
    "2375": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2376": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "2377": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2378": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2380": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "ADD",
      "path": "0"
    },
    "2381": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "2382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2388": {
      "op": "SHL"
    },
    "2389": {
      "op": "SUB"
    },
    "2390": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "AND",
      "path": "0"
    },
    "2391": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D35"
    },
    "2394": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2395": {
      "offset": [
        2373,
        2399
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2396": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        2373,
        2399
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "2397": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        2373,
        2399
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2398": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        2373,
        2399
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2399": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        2373,
        2399
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x967"
    },
    "2402": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        2373,
        2399
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2403": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        2373,
        2399
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2405": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        2373,
        2399
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2406": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        2373,
        2399
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2407": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        2373,
        2399
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2408": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        2373,
        2399
      ],
      "op": "POP",
      "path": "12"
    },
    "2409": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        2373,
        2399
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x321"
    },
    "2412": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        2373,
        2399
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D96"
    },
    "2415": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        2373,
        2399
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2416": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2417": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "2418": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2419": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2420": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x97C"
    },
    "2423": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2424": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2426": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2427": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2428": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2429": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "POP",
      "path": "12"
    },
    "2430": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x99A"
    },
    "2433": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2435": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2436": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "2437": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "SUB",
      "path": "12"
    },
    "2438": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2440": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2441": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "LT",
      "path": "12"
    },
    "2442": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2443": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x993"
    },
    "2446": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2447": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2449": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2450": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2451": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2452": {
      "op": "POP"
    },
    "2453": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "2454": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D9C"
    },
    "2457": {
      "fn": "CryptoChampions.getHeroVisuals",
      "jump": "i",
      "offset": [
        26553,
        26955
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2458": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2459": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2461": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2462": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2463": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2464": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2466": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "ADD",
      "path": "12"
    },
    "2467": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2468": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2469": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2470": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2472": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "ADD",
      "path": "12"
    },
    "2473": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2474": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2475": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2476": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2478": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "ADD",
      "path": "12"
    },
    "2479": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2480": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "2482": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "AND",
      "path": "12"
    },
    "2483": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2484": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2485": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2487": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "ADD",
      "path": "12"
    },
    "2488": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2489": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2490": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "SUB",
      "path": "12"
    },
    "2491": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2492": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2493": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP7",
      "path": "12"
    },
    "2494": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2495": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2496": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2497": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2498": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2499": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2501": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "ADD",
      "path": "12"
    },
    "2502": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2503": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "POP",
      "path": "12"
    },
    "2504": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2505": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2506": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2507": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2509": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "ADD",
      "path": "12"
    },
    "2510": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2511": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2512": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2513": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2514": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2516": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2517": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2518": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2519": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "LT",
      "path": "12"
    },
    "2520": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2521": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9EC"
    },
    "2524": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2525": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2526": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2527": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "ADD",
      "path": "12"
    },
    "2528": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2529": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2530": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2531": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "ADD",
      "path": "12"
    },
    "2532": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2533": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2535": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "ADD",
      "path": "12"
    },
    "2536": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9D4"
    },
    "2539": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2540": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2541": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "POP",
      "path": "12"
    },
    "2542": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "POP",
      "path": "12"
    },
    "2543": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "POP",
      "path": "12"
    },
    "2544": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "POP",
      "path": "12"
    },
    "2545": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2546": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "POP",
      "path": "12"
    },
    "2547": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2548": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2549": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "ADD",
      "path": "12"
    },
    "2550": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2551": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "2553": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "AND",
      "path": "12"
    },
    "2554": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2555": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2556": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA19"
    },
    "2559": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2560": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2561": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2562": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "SUB",
      "path": "12"
    },
    "2563": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2564": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2565": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "2567": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2568": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2570": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "SUB",
      "path": "12"
    },
    "2571": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "2574": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "EXP",
      "path": "12"
    },
    "2575": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "SUB",
      "path": "12"
    },
    "2576": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "NOT",
      "path": "12"
    },
    "2577": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "AND",
      "path": "12"
    },
    "2578": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2579": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2580": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2582": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "ADD",
      "path": "12"
    },
    "2583": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2584": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "POP",
      "path": "12"
    },
    "2585": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2586": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "POP",
      "path": "12"
    },
    "2587": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "2588": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "POP",
      "path": "12"
    },
    "2589": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "POP",
      "path": "12"
    },
    "2590": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "POP",
      "path": "12"
    },
    "2591": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "POP",
      "path": "12"
    },
    "2592": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "POP",
      "path": "12"
    },
    "2593": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "POP",
      "path": "12"
    },
    "2594": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2596": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2597": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2598": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2599": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "SUB",
      "path": "12"
    },
    "2600": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2601": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "RETURN",
      "path": "12"
    },
    "2602": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2603": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "2604": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2605": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2606": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA36"
    },
    "2609": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2610": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2612": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2613": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2614": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2615": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "POP",
      "path": "12"
    },
    "2616": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA54"
    },
    "2619": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2621": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2622": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "2623": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "SUB",
      "path": "12"
    },
    "2624": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2626": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2627": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "LT",
      "path": "12"
    },
    "2628": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2629": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA4D"
    },
    "2632": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2633": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2635": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2636": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2637": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2638": {
      "op": "POP"
    },
    "2639": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "2640": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E99"
    },
    "2643": {
      "fn": "CryptoChampions.getHeroVitals",
      "jump": "i",
      "offset": [
        28174,
        28543
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2644": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2645": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2647": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2648": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2649": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "2651": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "2652": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "DUP7",
      "path": "12"
    },
    "2653": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "AND",
      "path": "12"
    },
    "2654": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2655": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2656": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "2657": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2658": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "AND",
      "path": "12"
    },
    "2659": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2661": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2662": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "ADD",
      "path": "12"
    },
    "2663": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2664": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2665": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2666": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "AND",
      "path": "12"
    },
    "2667": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2668": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2669": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "ADD",
      "path": "12"
    },
    "2670": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2671": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2672": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2673": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "AND",
      "path": "12"
    },
    "2674": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "2676": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2677": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "ADD",
      "path": "12"
    },
    "2678": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2679": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2680": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2681": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2682": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2683": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2684": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "SUB",
      "path": "12"
    },
    "2685": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "2687": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "ADD",
      "path": "12"
    },
    "2688": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2689": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "RETURN",
      "path": "12"
    },
    "2690": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2691": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x321"
    },
    "2694": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2696": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2697": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "2698": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "SUB",
      "path": "12"
    },
    "2699": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2701": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2702": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "LT",
      "path": "12"
    },
    "2703": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2704": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA98"
    },
    "2707": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2708": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2710": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2711": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2712": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2713": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2714": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "2715": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2716": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2717": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2718": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "ADD",
      "path": "12"
    },
    "2719": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2720": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2722": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2723": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "ADD",
      "path": "12"
    },
    "2724": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2726": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2727": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "ADD",
      "path": "12"
    },
    "2728": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "2729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2731": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2733": {
      "op": "SHL"
    },
    "2734": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2735": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "GT",
      "path": "12"
    },
    "2736": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2737": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xAB9"
    },
    "2740": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2741": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2743": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2744": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2745": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2746": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2747": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "ADD",
      "path": "12"
    },
    "2748": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2749": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2751": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2752": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "ADD",
      "path": "12"
    },
    "2753": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "GT",
      "path": "12"
    },
    "2754": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2755": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xACB"
    },
    "2758": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2759": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2761": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2762": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2763": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2764": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2765": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "2766": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2767": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2769": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "ADD",
      "path": "12"
    },
    "2770": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2771": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2772": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "2774": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2775": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "MUL",
      "path": "12"
    },
    "2776": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2777": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "ADD",
      "path": "12"
    },
    "2778": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "GT",
      "path": "12"
    },
    "2779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2781": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2783": {
      "op": "SHL"
    },
    "2784": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2785": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "GT",
      "path": "12"
    },
    "2786": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "OR",
      "path": "12"
    },
    "2787": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2788": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xAEC"
    },
    "2791": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2792": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2794": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2795": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2796": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2797": {
      "op": "POP"
    },
    "2798": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2799": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2800": {
      "op": "POP"
    },
    "2801": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2802": {
      "op": "POP"
    },
    "2803": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F0B"
    },
    "2806": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        14042,
        16625
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2807": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27608,
        28065
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2808": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27608,
        28065
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "2809": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27608,
        28065
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2810": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27608,
        28065
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2811": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27608,
        28065
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB03"
    },
    "2814": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27608,
        28065
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2815": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27608,
        28065
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2817": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27608,
        28065
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2818": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27608,
        28065
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2819": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27608,
        28065
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2820": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27608,
        28065
      ],
      "op": "POP",
      "path": "12"
    },
    "2821": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27608,
        28065
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA54"
    },
    "2824": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27608,
        28065
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2826": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27608,
        28065
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2827": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27608,
        28065
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "2828": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27608,
        28065
      ],
      "op": "SUB",
      "path": "12"
    },
    "2829": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27608,
        28065
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2831": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27608,
        28065
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2832": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27608,
        28065
      ],
      "op": "LT",
      "path": "12"
    },
    "2833": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27608,
        28065
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2834": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27608,
        28065
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB1A"
    },
    "2837": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27608,
        28065
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2838": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27608,
        28065
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2840": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27608,
        28065
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2841": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27608,
        28065
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2842": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27608,
        28065
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2843": {
      "op": "POP"
    },
    "2844": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27608,
        28065
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "2845": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27608,
        28065
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x26A5"
    },
    "2848": {
      "fn": "CryptoChampions.getHeroLore",
      "jump": "i",
      "offset": [
        27608,
        28065
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2849": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        29774,
        29881
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2850": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        29774,
        29881
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "2851": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        29774,
        29881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2852": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        29774,
        29881
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2853": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        29774,
        29881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB2D"
    },
    "2856": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        29774,
        29881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2857": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        29774,
        29881
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2859": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        29774,
        29881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2860": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        29774,
        29881
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2861": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        29774,
        29881
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2862": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        29774,
        29881
      ],
      "op": "POP",
      "path": "12"
    },
    "2863": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        29774,
        29881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x321"
    },
    "2866": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        29774,
        29881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x271C"
    },
    "2869": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "jump": "i",
      "offset": [
        29774,
        29881
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2870": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2871": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "2872": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2873": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2874": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB42"
    },
    "2877": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2878": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2880": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2881": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2882": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2883": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "2884": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC66"
    },
    "2887": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2889": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2890": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "2891": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SUB",
      "path": "5"
    },
    "2892": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2894": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2895": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "LT",
      "path": "5"
    },
    "2896": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2897": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB59"
    },
    "2900": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2901": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2903": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2904": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2905": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2906": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2907": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "2908": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2909": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2911": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2912": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "2913": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2914": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2917": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2919": {
      "op": "SHL"
    },
    "2920": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2921": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "2922": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2923": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB73"
    },
    "2926": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2927": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2929": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2930": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2931": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2932": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2933": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "2934": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2935": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2937": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2938": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "2939": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "2940": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2941": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB85"
    },
    "2944": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2945": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2947": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2948": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2949": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2950": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2951": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "2952": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2953": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2955": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "2956": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2957": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2958": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2960": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2961": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MUL",
      "path": "5"
    },
    "2962": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2963": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "2964": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "2965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2967": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2969": {
      "op": "SHL"
    },
    "2970": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2971": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "2972": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "OR",
      "path": "5"
    },
    "2973": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2974": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBA6"
    },
    "2977": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2978": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2980": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2981": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2982": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2983": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2984": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2985": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2986": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2987": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2989": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MUL",
      "path": "5"
    },
    "2990": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2992": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "2993": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2995": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2996": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2997": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2998": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "2999": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3001": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3002": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3003": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3004": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3005": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3006": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3007": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3008": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3009": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3010": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3012": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3013": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3014": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3015": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3017": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MUL",
      "path": "5"
    },
    "3018": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3019": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3020": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3021": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "3022": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3024": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3025": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3026": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3027": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3028": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3029": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3030": {
      "op": "POP"
    },
    "3031": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3032": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "3033": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "3034": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3035": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3037": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3038": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3039": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3040": {
      "op": "POP"
    },
    "3041": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "3042": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3043": {
      "op": "POP"
    },
    "3044": {
      "op": "POP"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3047": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3049": {
      "op": "SHL"
    },
    "3050": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3051": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "3052": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3053": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBF5"
    },
    "3056": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3057": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3059": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3060": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3061": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3062": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3063": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3064": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3065": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3067": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3068": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3069": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "3070": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3071": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC07"
    },
    "3074": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3075": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3077": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3078": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3079": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3080": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3081": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "3082": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3083": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3085": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3086": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3087": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3088": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3090": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3091": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MUL",
      "path": "5"
    },
    "3092": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3093": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3094": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "3095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3099": {
      "op": "SHL"
    },
    "3100": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3101": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "3102": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "OR",
      "path": "5"
    },
    "3103": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3104": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC28"
    },
    "3107": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3108": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3110": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3111": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3112": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3113": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3114": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3115": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3116": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3117": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3119": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MUL",
      "path": "5"
    },
    "3120": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3122": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3123": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3125": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3126": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3127": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3128": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3129": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3131": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3132": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3133": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3134": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3135": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3136": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3137": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3138": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3139": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3140": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3142": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3143": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3144": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3145": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3147": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MUL",
      "path": "5"
    },
    "3148": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3149": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3150": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3151": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "3152": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3154": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3155": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3156": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3157": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3158": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3159": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3160": {
      "op": "POP"
    },
    "3161": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3162": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "3163": {
      "op": "POP"
    },
    "3164": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2723"
    },
    "3167": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "3168": {
      "op": "POP"
    },
    "3169": {
      "op": "POP"
    },
    "3170": {
      "op": "POP"
    },
    "3171": {
      "op": "POP"
    },
    "3172": {
      "op": "POP"
    },
    "3173": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3174": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3175": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3177": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3178": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3179": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3181": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3182": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3183": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3184": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3185": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3186": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3187": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3188": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3189": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3190": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3191": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3192": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3193": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3194": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3195": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3196": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3197": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3198": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3199": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3200": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3201": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3202": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3203": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3204": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MUL",
      "path": "5"
    },
    "3205": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3206": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3207": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3208": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3210": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3211": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3212": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3213": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "LT",
      "path": "5"
    },
    "3214": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3215": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCA2"
    },
    "3218": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3219": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3220": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3221": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3222": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3223": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3224": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3225": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3226": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3227": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3229": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3230": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC8A"
    },
    "3233": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3234": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3235": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3236": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3237": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3238": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3239": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3240": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3241": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3242": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3243": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3244": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3245": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3246": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3248": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3249": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3250": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3251": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SUB",
      "path": "5"
    },
    "3252": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3253": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "RETURN",
      "path": "5"
    },
    "3254": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21099,
        21335
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3255": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21099,
        21335
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "3256": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21099,
        21335
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3257": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21099,
        21335
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3258": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21099,
        21335
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCC2"
    },
    "3261": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21099,
        21335
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3262": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21099,
        21335
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3264": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21099,
        21335
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3265": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21099,
        21335
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3266": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21099,
        21335
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3267": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21099,
        21335
      ],
      "op": "POP",
      "path": "12"
    },
    "3268": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21099,
        21335
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x644"
    },
    "3271": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21099,
        21335
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3273": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21099,
        21335
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3274": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21099,
        21335
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "3275": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21099,
        21335
      ],
      "op": "SUB",
      "path": "12"
    },
    "3276": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21099,
        21335
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3278": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21099,
        21335
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3279": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21099,
        21335
      ],
      "op": "LT",
      "path": "12"
    },
    "3280": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21099,
        21335
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3281": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21099,
        21335
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCD9"
    },
    "3284": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21099,
        21335
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3285": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21099,
        21335
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3287": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21099,
        21335
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3288": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21099,
        21335
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3289": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21099,
        21335
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3290": {
      "op": "POP"
    },
    "3291": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21099,
        21335
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "3292": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21099,
        21335
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x280F"
    },
    "3295": {
      "fn": "CryptoChampions.getHeroOwner",
      "jump": "i",
      "offset": [
        21099,
        21335
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3296": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3297": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "3298": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3299": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3300": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCEC"
    },
    "3303": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3304": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3306": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3307": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3308": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3309": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "POP",
      "path": "12"
    },
    "3310": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x321"
    },
    "3313": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3315": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3316": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "3317": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "SUB",
      "path": "12"
    },
    "3318": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3320": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3321": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "LT",
      "path": "12"
    },
    "3322": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3323": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD03"
    },
    "3326": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3327": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3329": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3330": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3331": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3332": {
      "op": "POP"
    },
    "3333": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3334": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "3335": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3336": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3338": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "ADD",
      "path": "12"
    },
    "3339": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "3340": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2878"
    },
    "3343": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "jump": "i",
      "offset": [
        24347,
        24642
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3344": {
      "offset": [
        4369,
        4427
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3345": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "3346": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3347": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3348": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD1C"
    },
    "3351": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3352": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3354": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3355": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3356": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3357": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "POP",
      "path": "12"
    },
    "3358": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3F0"
    },
    "3361": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3363": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3364": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "3365": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "SUB",
      "path": "12"
    },
    "3366": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3368": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3369": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "LT",
      "path": "12"
    },
    "3370": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3371": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD33"
    },
    "3374": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3375": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3377": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3378": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3379": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3380": {
      "op": "POP"
    },
    "3381": {
      "offset": [
        4369,
        4427
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "3382": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28C3"
    },
    "3385": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "jump": "i",
      "offset": [
        4369,
        4427
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3386": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13629,
        13882
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3387": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13629,
        13882
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "3388": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13629,
        13882
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3389": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13629,
        13882
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3390": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13629,
        13882
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD46"
    },
    "3393": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13629,
        13882
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3394": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13629,
        13882
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3396": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13629,
        13882
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3397": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13629,
        13882
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3398": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13629,
        13882
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3399": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13629,
        13882
      ],
      "op": "POP",
      "path": "12"
    },
    "3400": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13629,
        13882
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x644"
    },
    "3403": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13629,
        13882
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3405": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13629,
        13882
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3406": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13629,
        13882
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "3407": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13629,
        13882
      ],
      "op": "SUB",
      "path": "12"
    },
    "3408": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13629,
        13882
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3410": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13629,
        13882
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3411": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13629,
        13882
      ],
      "op": "LT",
      "path": "12"
    },
    "3412": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13629,
        13882
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3413": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13629,
        13882
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD5D"
    },
    "3416": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13629,
        13882
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3417": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13629,
        13882
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3419": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13629,
        13882
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3420": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13629,
        13882
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3421": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13629,
        13882
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3422": {
      "op": "POP"
    },
    "3423": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13629,
        13882
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "3424": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13629,
        13882
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x295E"
    },
    "3427": {
      "fn": "CryptoChampions.getElderOwner",
      "jump": "i",
      "offset": [
        13629,
        13882
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3428": {
      "offset": [
        3692,
        3721
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3429": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3692,
        3721
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "3430": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3692,
        3721
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3431": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3692,
        3721
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3432": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3692,
        3721
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD70"
    },
    "3435": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3692,
        3721
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3436": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3692,
        3721
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3438": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3692,
        3721
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3439": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3692,
        3721
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3440": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3692,
        3721
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3441": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3692,
        3721
      ],
      "op": "POP",
      "path": "12"
    },
    "3442": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3692,
        3721
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x321"
    },
    "3445": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3692,
        3721
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x29B9"
    },
    "3448": {
      "fn": "CryptoChampions.getElderOwner",
      "jump": "i",
      "offset": [
        3692,
        3721
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3449": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3450": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "3451": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3452": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3453": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD85"
    },
    "3456": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3457": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3459": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3460": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3461": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3462": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "POP",
      "path": "12"
    },
    "3463": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDA3"
    },
    "3466": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3468": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3469": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "3470": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "SUB",
      "path": "12"
    },
    "3471": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3473": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3474": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "LT",
      "path": "12"
    },
    "3475": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3476": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD9C"
    },
    "3479": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3480": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3482": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3483": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3484": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3485": {
      "op": "POP"
    },
    "3486": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "3487": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x29BF"
    },
    "3490": {
      "fn": "CryptoChampions.getHeroStats",
      "jump": "i",
      "offset": [
        28711,
        29317
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3491": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3492": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3494": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3495": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3496": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "3498": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "SWAP8",
      "path": "12"
    },
    "3499": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "DUP9",
      "path": "12"
    },
    "3500": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "AND",
      "path": "12"
    },
    "3501": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3502": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3503": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "3504": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "DUP8",
      "path": "12"
    },
    "3505": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "AND",
      "path": "12"
    },
    "3506": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3508": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "DUP8",
      "path": "12"
    },
    "3509": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "ADD",
      "path": "12"
    },
    "3510": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3511": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "3512": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "DUP7",
      "path": "12"
    },
    "3513": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "AND",
      "path": "12"
    },
    "3514": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "DUP6",
      "path": "12"
    },
    "3515": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "DUP6",
      "path": "12"
    },
    "3516": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "ADD",
      "path": "12"
    },
    "3517": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3518": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3519": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "DUP6",
      "path": "12"
    },
    "3520": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "AND",
      "path": "12"
    },
    "3521": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "3523": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "DUP6",
      "path": "12"
    },
    "3524": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "ADD",
      "path": "12"
    },
    "3525": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3526": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3527": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "AND",
      "path": "12"
    },
    "3528": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "3530": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3531": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "ADD",
      "path": "12"
    },
    "3532": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3533": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3534": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3535": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "AND",
      "path": "12"
    },
    "3536": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA0"
    },
    "3538": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3539": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "ADD",
      "path": "12"
    },
    "3540": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3541": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3542": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3543": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3544": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3545": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3546": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "SUB",
      "path": "12"
    },
    "3547": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC0"
    },
    "3549": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "ADD",
      "path": "12"
    },
    "3550": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3551": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "RETURN",
      "path": "12"
    },
    "3552": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27083,
        27474
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3553": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27083,
        27474
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "3554": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27083,
        27474
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3555": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27083,
        27474
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3556": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27083,
        27474
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDEC"
    },
    "3559": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27083,
        27474
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3560": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27083,
        27474
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3562": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27083,
        27474
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3563": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27083,
        27474
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3564": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27083,
        27474
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3565": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27083,
        27474
      ],
      "op": "POP",
      "path": "12"
    },
    "3566": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27083,
        27474
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA54"
    },
    "3569": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27083,
        27474
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3571": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27083,
        27474
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3572": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27083,
        27474
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "3573": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27083,
        27474
      ],
      "op": "SUB",
      "path": "12"
    },
    "3574": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27083,
        27474
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3576": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27083,
        27474
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3577": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27083,
        27474
      ],
      "op": "LT",
      "path": "12"
    },
    "3578": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27083,
        27474
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3579": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27083,
        27474
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE03"
    },
    "3582": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27083,
        27474
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3583": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27083,
        27474
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3585": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27083,
        27474
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3586": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27083,
        27474
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3587": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27083,
        27474
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3588": {
      "op": "POP"
    },
    "3589": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27083,
        27474
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "3590": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27083,
        27474
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A4B"
    },
    "3593": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "jump": "i",
      "offset": [
        27083,
        27474
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3594": {
      "offset": [
        3759,
        3786
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3595": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3759,
        3786
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "3596": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3759,
        3786
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3597": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3759,
        3786
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3598": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3759,
        3786
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE16"
    },
    "3601": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3759,
        3786
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3602": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3759,
        3786
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3604": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3759,
        3786
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3605": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3759,
        3786
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3606": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3759,
        3786
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3607": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3759,
        3786
      ],
      "op": "POP",
      "path": "12"
    },
    "3608": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3759,
        3786
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x321"
    },
    "3611": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3759,
        3786
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2ABA"
    },
    "3614": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "jump": "i",
      "offset": [
        3759,
        3786
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3615": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3616": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "3617": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3618": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3619": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE2B"
    },
    "3622": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3623": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3625": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3626": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3627": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3628": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "POP",
      "path": "0"
    },
    "3629": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x644"
    },
    "3632": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3634": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3635": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "3636": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "SUB",
      "path": "0"
    },
    "3637": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3639": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3640": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "LT",
      "path": "0"
    },
    "3641": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3642": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE42"
    },
    "3645": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3646": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3648": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3649": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3650": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3651": {
      "op": "POP"
    },
    "3652": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3653": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "3654": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3655": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3657": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "ADD",
      "path": "0"
    },
    "3658": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "3659": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AC0"
    },
    "3662": {
      "fn": "AccessControl.getRoleMember",
      "jump": "i",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3663": {
      "offset": [
        2711,
        2759
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3664": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2711,
        2759
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "3665": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2711,
        2759
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3666": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2711,
        2759
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3667": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2711,
        2759
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE5B"
    },
    "3670": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2711,
        2759
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3671": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2711,
        2759
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3673": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2711,
        2759
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3674": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2711,
        2759
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3675": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2711,
        2759
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3676": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2711,
        2759
      ],
      "op": "POP",
      "path": "12"
    },
    "3677": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2711,
        2759
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x321"
    },
    "3680": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2711,
        2759
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2ADF"
    },
    "3683": {
      "fn": "AccessControl.getRoleMember",
      "jump": "i",
      "offset": [
        2711,
        2759
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3684": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3685": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "3686": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3687": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3688": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE70"
    },
    "3691": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3692": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3694": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3695": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3696": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3697": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "POP",
      "path": "0"
    },
    "3698": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37C"
    },
    "3701": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3703": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3704": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "3705": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "SUB",
      "path": "0"
    },
    "3706": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3708": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3709": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "LT",
      "path": "0"
    },
    "3710": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3711": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE87"
    },
    "3714": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3715": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3717": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3718": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3719": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3720": {
      "op": "POP"
    },
    "3721": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3722": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "3723": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3724": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3726": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "ADD",
      "path": "0"
    },
    "3727": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "3728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3734": {
      "op": "SHL"
    },
    "3735": {
      "op": "SUB"
    },
    "3736": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "AND",
      "path": "0"
    },
    "3737": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AE4"
    },
    "3740": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3741": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3742": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "3743": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3744": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3745": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xEA9"
    },
    "3748": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3749": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3751": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3752": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "REVERT",
      "path": "15"
    },
    "3753": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3754": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "POP",
      "path": "15"
    },
    "3755": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x699"
    },
    "3758": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3760": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3761": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "3762": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "SUB",
      "path": "15"
    },
    "3763": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3765": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3766": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "LT",
      "path": "15"
    },
    "3767": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3768": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xEC0"
    },
    "3771": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3772": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3774": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3775": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "REVERT",
      "path": "15"
    },
    "3776": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3777": {
      "op": "POP"
    },
    "3778": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3779": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "3780": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3781": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3783": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "ADD",
      "path": "15"
    },
    "3784": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "3785": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AFC"
    },
    "3788": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9496,
        9713
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3789": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3790": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "3791": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3792": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3793": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xED9"
    },
    "3796": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3797": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3799": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3800": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3801": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3802": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "POP",
      "path": "12"
    },
    "3803": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x699"
    },
    "3806": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3808": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3809": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "3810": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "SUB",
      "path": "12"
    },
    "3811": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3813": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3814": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "LT",
      "path": "12"
    },
    "3815": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3816": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xEF0"
    },
    "3819": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3820": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3822": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3823": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3824": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3825": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3826": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "ADD",
      "path": "12"
    },
    "3827": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3828": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3830": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3831": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "ADD",
      "path": "12"
    },
    "3832": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3833": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3836": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3838": {
      "op": "SHL"
    },
    "3839": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3840": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "GT",
      "path": "12"
    },
    "3841": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3842": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF0A"
    },
    "3845": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3846": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3848": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3849": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3850": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3851": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3852": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "ADD",
      "path": "12"
    },
    "3853": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3854": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3856": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3857": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "ADD",
      "path": "12"
    },
    "3858": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "GT",
      "path": "12"
    },
    "3859": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3860": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF1C"
    },
    "3863": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3864": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3866": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3867": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3868": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3869": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3870": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "3871": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3872": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3874": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "ADD",
      "path": "12"
    },
    "3875": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3876": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3877": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "3879": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3880": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "MUL",
      "path": "12"
    },
    "3881": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3882": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "ADD",
      "path": "12"
    },
    "3883": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "GT",
      "path": "12"
    },
    "3884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3886": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3888": {
      "op": "SHL"
    },
    "3889": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3890": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "GT",
      "path": "12"
    },
    "3891": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "OR",
      "path": "12"
    },
    "3892": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3893": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF3D"
    },
    "3896": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3897": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3899": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3900": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3901": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3902": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3903": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "3904": {
      "op": "POP"
    },
    "3905": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3906": {
      "op": "POP"
    },
    "3907": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3914": {
      "op": "SHL"
    },
    "3915": {
      "op": "SUB"
    },
    "3916": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "AND",
      "path": "12"
    },
    "3917": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2B83"
    },
    "3920": {
      "fn": "CryptoChampions.createAffinity",
      "jump": "i",
      "offset": [
        10831,
        11026
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3921": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3922": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "3923": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3924": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3925": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF5D"
    },
    "3928": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3929": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3931": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3932": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3933": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3934": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "POP",
      "path": "12"
    },
    "3935": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x699"
    },
    "3938": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3940": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3941": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "3942": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "SUB",
      "path": "12"
    },
    "3943": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3945": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3946": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "LT",
      "path": "12"
    },
    "3947": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3948": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF74"
    },
    "3951": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3952": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3954": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3955": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3956": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3957": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3958": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "ADD",
      "path": "12"
    },
    "3959": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3960": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3962": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3963": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "ADD",
      "path": "12"
    },
    "3964": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3965": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "3966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3968": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3970": {
      "op": "SHL"
    },
    "3971": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3972": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "GT",
      "path": "12"
    },
    "3973": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3974": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF8E"
    },
    "3977": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3978": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3980": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3981": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3982": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3983": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3984": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "ADD",
      "path": "12"
    },
    "3985": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3986": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3988": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3989": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "ADD",
      "path": "12"
    },
    "3990": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "GT",
      "path": "12"
    },
    "3991": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3992": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFA0"
    },
    "3995": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3996": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3998": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3999": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4000": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4001": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4002": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "4003": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4004": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4006": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "ADD",
      "path": "12"
    },
    "4007": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4008": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4009": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "4011": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4012": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "MUL",
      "path": "12"
    },
    "4013": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4014": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "ADD",
      "path": "12"
    },
    "4015": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "GT",
      "path": "12"
    },
    "4016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4018": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4020": {
      "op": "SHL"
    },
    "4021": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4022": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "GT",
      "path": "12"
    },
    "4023": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "OR",
      "path": "12"
    },
    "4024": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4025": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFC1"
    },
    "4028": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4029": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4031": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4032": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4033": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4034": {
      "op": "POP"
    },
    "4035": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4036": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4037": {
      "op": "POP"
    },
    "4038": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4039": {
      "op": "POP"
    },
    "4040": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C37"
    },
    "4043": {
      "fn": "CryptoChampions.declareRoundWinner",
      "jump": "i",
      "offset": [
        30067,
        30255
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4044": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9091,
        9540
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4045": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9091,
        9540
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "4046": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9091,
        9540
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4047": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9091,
        9540
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4048": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9091,
        9540
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFD8"
    },
    "4051": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9091,
        9540
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4052": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9091,
        9540
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4054": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9091,
        9540
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4055": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9091,
        9540
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4056": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9091,
        9540
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4057": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9091,
        9540
      ],
      "op": "POP",
      "path": "12"
    },
    "4058": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9091,
        9540
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x699"
    },
    "4061": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9091,
        9540
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C9A"
    },
    "4064": {
      "fn": "CryptoChampions.refreshPhase",
      "jump": "i",
      "offset": [
        9091,
        9540
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4065": {
      "offset": [
        1727,
        1776
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4066": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        1727,
        1776
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "4067": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        1727,
        1776
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4068": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        1727,
        1776
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4069": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        1727,
        1776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFED"
    },
    "4072": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        1727,
        1776
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4073": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        1727,
        1776
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4075": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        1727,
        1776
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4076": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        1727,
        1776
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4077": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        1727,
        1776
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4078": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        1727,
        1776
      ],
      "op": "POP",
      "path": "0"
    },
    "4079": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        1727,
        1776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x321"
    },
    "4082": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        1727,
        1776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D09"
    },
    "4085": {
      "fn": "CryptoChampions.refreshPhase",
      "jump": "i",
      "offset": [
        1727,
        1776
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4086": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4087": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "4088": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4089": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4090": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1002"
    },
    "4093": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4094": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4096": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4097": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4098": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4099": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "POP",
      "path": "5"
    },
    "4100": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x699"
    },
    "4103": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4105": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4106": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "4107": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "SUB",
      "path": "5"
    },
    "4108": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4110": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4111": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "LT",
      "path": "5"
    },
    "4112": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4113": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1019"
    },
    "4116": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4117": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4119": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4120": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4121": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4122": {
      "op": "POP"
    },
    "4123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4129": {
      "op": "SHL"
    },
    "4130": {
      "op": "SUB"
    },
    "4131": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4132": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4133": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "AND",
      "path": "5"
    },
    "4134": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4135": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4137": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "ADD",
      "path": "5"
    },
    "4138": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4139": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4140": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4141": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D0E"
    },
    "4144": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4145": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30431,
        31246
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4146": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30431,
        31246
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "4147": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30431,
        31246
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4148": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30431,
        31246
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4149": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30431,
        31246
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x103D"
    },
    "4152": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30431,
        31246
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4153": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30431,
        31246
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4155": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30431,
        31246
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4156": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30431,
        31246
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4157": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30431,
        31246
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4158": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30431,
        31246
      ],
      "op": "POP",
      "path": "12"
    },
    "4159": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30431,
        31246
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x699"
    },
    "4162": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30431,
        31246
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4164": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30431,
        31246
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4165": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30431,
        31246
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "4166": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30431,
        31246
      ],
      "op": "SUB",
      "path": "12"
    },
    "4167": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30431,
        31246
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4169": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30431,
        31246
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4170": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30431,
        31246
      ],
      "op": "LT",
      "path": "12"
    },
    "4171": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30431,
        31246
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4172": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30431,
        31246
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1054"
    },
    "4175": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30431,
        31246
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4176": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30431,
        31246
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4178": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30431,
        31246
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4179": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30431,
        31246
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4180": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30431,
        31246
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4181": {
      "op": "POP"
    },
    "4182": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30431,
        31246
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "4183": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30431,
        31246
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2DFD"
    },
    "4186": {
      "fn": "CryptoChampions.claimReward",
      "jump": "i",
      "offset": [
        30431,
        31246
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4187": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4188": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "4189": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4190": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4191": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1067"
    },
    "4194": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4195": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4197": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4198": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4199": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4200": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "POP",
      "path": "12"
    },
    "4201": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x699"
    },
    "4204": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4206": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4207": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "4208": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "SUB",
      "path": "12"
    },
    "4209": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "4211": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4212": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "LT",
      "path": "12"
    },
    "4213": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4214": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x107E"
    },
    "4217": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4218": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4220": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4221": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4222": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4223": {
      "op": "POP"
    },
    "4224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4228": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4230": {
      "op": "SHL"
    },
    "4231": {
      "op": "SUB"
    },
    "4232": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4233": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "4234": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4235": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "AND",
      "path": "12"
    },
    "4236": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4237": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4239": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4240": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "ADD",
      "path": "12"
    },
    "4241": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "4242": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4243": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4244": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "AND",
      "path": "12"
    },
    "4245": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4246": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4248": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "ADD",
      "path": "12"
    },
    "4249": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "4250": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3074"
    },
    "4253": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "jump": "i",
      "offset": [
        32423,
        32657
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4254": {
      "offset": [
        2864,
        2895
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4255": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2864,
        2895
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "4256": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2864,
        2895
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4257": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2864,
        2895
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4258": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2864,
        2895
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10AA"
    },
    "4261": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2864,
        2895
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4262": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2864,
        2895
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4264": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2864,
        2895
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4265": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2864,
        2895
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4266": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2864,
        2895
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4267": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2864,
        2895
      ],
      "op": "POP",
      "path": "12"
    },
    "4268": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2864,
        2895
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x321"
    },
    "4271": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2864,
        2895
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3084"
    },
    "4274": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "jump": "i",
      "offset": [
        2864,
        2895
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4275": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4276": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "4277": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4278": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4279": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10BF"
    },
    "4282": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4283": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4285": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4286": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4287": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4288": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "POP",
      "path": "12"
    },
    "4289": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x699"
    },
    "4292": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4294": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4295": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "4296": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "SUB",
      "path": "12"
    },
    "4297": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4299": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4300": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "LT",
      "path": "12"
    },
    "4301": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4302": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10D6"
    },
    "4305": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4306": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4308": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4309": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4310": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4311": {
      "op": "POP"
    },
    "4312": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "4313": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "4315": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "AND",
      "path": "12"
    },
    "4316": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x308A"
    },
    "4319": {
      "fn": "CryptoChampions.setPhase",
      "jump": "i",
      "offset": [
        8879,
        8966
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4320": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4321": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "4322": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4323": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4324": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10EC"
    },
    "4327": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4328": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4330": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4331": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4332": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4333": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "POP",
      "path": "0"
    },
    "4334": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x321"
    },
    "4337": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4339": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4340": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "4341": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "SUB",
      "path": "0"
    },
    "4342": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4344": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4345": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "LT",
      "path": "0"
    },
    "4346": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4347": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1103"
    },
    "4350": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4351": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4353": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4354": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4355": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4356": {
      "op": "POP"
    },
    "4357": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "4358": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30D3"
    },
    "4361": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "i",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4362": {
      "offset": [
        3209,
        3240
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4363": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3209,
        3240
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "4364": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3209,
        3240
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4365": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3209,
        3240
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4366": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3209,
        3240
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1116"
    },
    "4369": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3209,
        3240
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4370": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3209,
        3240
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4372": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3209,
        3240
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4373": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3209,
        3240
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4374": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3209,
        3240
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4375": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3209,
        3240
      ],
      "op": "POP",
      "path": "12"
    },
    "4376": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3209,
        3240
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x321"
    },
    "4379": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3209,
        3240
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x30EA"
    },
    "4382": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "i",
      "offset": [
        3209,
        3240
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4383": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4384": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "4385": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4386": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4387": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x112B"
    },
    "4390": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4391": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4393": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4394": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4395": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4396": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "POP",
      "path": "0"
    },
    "4397": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x699"
    },
    "4400": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4402": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4403": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "4404": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "SUB",
      "path": "0"
    },
    "4405": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4407": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4408": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "LT",
      "path": "0"
    },
    "4409": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4410": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1142"
    },
    "4413": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4414": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4416": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4417": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4418": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4419": {
      "op": "POP"
    },
    "4420": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4421": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "4422": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4423": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4425": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "ADD",
      "path": "0"
    },
    "4426": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "4427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4433": {
      "op": "SHL"
    },
    "4434": {
      "op": "SUB"
    },
    "4435": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "AND",
      "path": "0"
    },
    "4436": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30F0"
    },
    "4439": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4440": {
      "offset": [
        2279,
        2315
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4441": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        2279,
        2315
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "4442": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        2279,
        2315
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4443": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        2279,
        2315
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4444": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        2279,
        2315
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1164"
    },
    "4447": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        2279,
        2315
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4448": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        2279,
        2315
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4450": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        2279,
        2315
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4451": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        2279,
        2315
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4452": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        2279,
        2315
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4453": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        2279,
        2315
      ],
      "op": "POP",
      "path": "12"
    },
    "4454": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        2279,
        2315
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x321"
    },
    "4457": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        2279,
        2315
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3149"
    },
    "4460": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        2279,
        2315
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4461": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11172,
        11281
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4462": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11172,
        11281
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "4463": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11172,
        11281
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4464": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11172,
        11281
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4465": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11172,
        11281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1179"
    },
    "4468": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11172,
        11281
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4469": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11172,
        11281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4471": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11172,
        11281
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4472": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11172,
        11281
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4473": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11172,
        11281
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4474": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11172,
        11281
      ],
      "op": "POP",
      "path": "12"
    },
    "4475": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11172,
        11281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x699"
    },
    "4478": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11172,
        11281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4480": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11172,
        11281
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4481": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11172,
        11281
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "4482": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11172,
        11281
      ],
      "op": "SUB",
      "path": "12"
    },
    "4483": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11172,
        11281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4485": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11172,
        11281
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4486": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11172,
        11281
      ],
      "op": "LT",
      "path": "12"
    },
    "4487": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11172,
        11281
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4488": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11172,
        11281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1190"
    },
    "4491": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11172,
        11281
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4492": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11172,
        11281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4494": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11172,
        11281
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4495": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11172,
        11281
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4496": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11172,
        11281
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4497": {
      "op": "POP"
    },
    "4498": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11172,
        11281
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "4499": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11172,
        11281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x314F"
    },
    "4502": {
      "fn": "CryptoChampions.setElderMintPrice",
      "jump": "i",
      "offset": [
        11172,
        11281
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4503": {
      "offset": [
        3953,
        3979
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4504": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "4505": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4506": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4507": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11A3"
    },
    "4510": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4511": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4513": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4514": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4515": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4516": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "POP",
      "path": "12"
    },
    "4517": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3F0"
    },
    "4520": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4522": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4523": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "4524": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "SUB",
      "path": "12"
    },
    "4525": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4527": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4528": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "LT",
      "path": "12"
    },
    "4529": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4530": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11BA"
    },
    "4533": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4534": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4536": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4537": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4538": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4539": {
      "op": "POP"
    },
    "4540": {
      "offset": [
        3953,
        3979
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "4541": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x317D"
    },
    "4544": {
      "fn": "CryptoChampions.setElderMintPrice",
      "jump": "i",
      "offset": [
        3953,
        3979
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4545": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4546": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "4547": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4548": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4549": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11CD"
    },
    "4552": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4553": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4555": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4556": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4557": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4558": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "POP",
      "path": "5"
    },
    "4559": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x37C"
    },
    "4562": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4564": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4565": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "4566": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "SUB",
      "path": "5"
    },
    "4567": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4569": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4570": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "LT",
      "path": "5"
    },
    "4571": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4572": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11E4"
    },
    "4575": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4576": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4578": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4579": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4580": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4581": {
      "op": "POP"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4586": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4588": {
      "op": "SHL"
    },
    "4589": {
      "op": "SUB"
    },
    "4590": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4591": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4592": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4593": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "AND",
      "path": "5"
    },
    "4594": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4595": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4597": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "ADD",
      "path": "5"
    },
    "4598": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4599": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "AND",
      "path": "5"
    },
    "4600": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x31F0"
    },
    "4603": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4604": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4605": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "4606": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4607": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4608": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1208"
    },
    "4611": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4612": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4614": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4615": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4616": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4617": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "POP",
      "path": "5"
    },
    "4618": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x699"
    },
    "4621": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4623": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4624": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "4625": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SUB",
      "path": "5"
    },
    "4626": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA0"
    },
    "4628": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4629": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "LT",
      "path": "5"
    },
    "4630": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4631": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x121F"
    },
    "4634": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4635": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4637": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4638": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4639": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4646": {
      "op": "SHL"
    },
    "4647": {
      "op": "SUB"
    },
    "4648": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4649": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4650": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4651": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "AND",
      "path": "5"
    },
    "4652": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4653": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4655": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4656": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4657": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4658": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4659": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4660": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "AND",
      "path": "5"
    },
    "4661": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4662": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4664": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4665": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4666": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4667": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4668": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "4670": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4671": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4672": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4673": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4674": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4675": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4676": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4677": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA0"
    },
    "4679": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4680": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4681": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "4683": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4684": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4685": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4688": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4690": {
      "op": "SHL"
    },
    "4691": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4692": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "GT",
      "path": "5"
    },
    "4693": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4694": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x125E"
    },
    "4697": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4698": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4700": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4701": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4702": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4703": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4704": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4705": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4706": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4708": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4709": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4710": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "GT",
      "path": "5"
    },
    "4711": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4712": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1270"
    },
    "4715": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4716": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4718": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4719": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4720": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4721": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4722": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4723": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4724": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4726": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4727": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4728": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4729": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4731": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4732": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "MUL",
      "path": "5"
    },
    "4733": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4734": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4735": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "GT",
      "path": "5"
    },
    "4736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4740": {
      "op": "SHL"
    },
    "4741": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4742": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "GT",
      "path": "5"
    },
    "4743": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "OR",
      "path": "5"
    },
    "4744": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4745": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1291"
    },
    "4748": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4749": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4751": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4752": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4753": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4754": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4755": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4756": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4757": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4758": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "4760": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4761": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4763": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4764": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4765": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DIV",
      "path": "5"
    },
    "4766": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "MUL",
      "path": "5"
    },
    "4767": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4769": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4770": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4772": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4773": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4774": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4775": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4776": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4778": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4779": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4780": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "4781": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4782": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4783": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4784": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4785": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4786": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4787": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4789": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4790": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4791": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4792": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4793": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4794": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4795": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "4796": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4798": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4799": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4800": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4801": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4802": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4803": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4804": {
      "op": "POP"
    },
    "4805": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4806": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "4807": {
      "op": "POP"
    },
    "4808": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x321E"
    },
    "4811": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "4812": {
      "op": "POP"
    },
    "4813": {
      "op": "POP"
    },
    "4814": {
      "op": "POP"
    },
    "4815": {
      "op": "POP"
    },
    "4816": {
      "op": "POP"
    },
    "4817": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4818": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4819": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "4820": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4821": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4822": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12DE"
    },
    "4825": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4826": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4828": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4829": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4830": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4831": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "POP",
      "path": "12"
    },
    "4832": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x321"
    },
    "4835": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4837": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4838": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "4839": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "SUB",
      "path": "12"
    },
    "4840": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4842": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4843": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "LT",
      "path": "12"
    },
    "4844": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4845": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12F5"
    },
    "4848": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4849": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4851": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4852": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4853": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4854": {
      "op": "POP"
    },
    "4855": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4856": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "4857": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4858": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4860": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "ADD",
      "path": "12"
    },
    "4861": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "4862": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x33E9"
    },
    "4865": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "jump": "i",
      "offset": [
        22430,
        22810
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4866": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4867": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3062,
        3069
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4873": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4875": {
      "op": "SHL"
    },
    "4876": {
      "op": "SUB"
    },
    "4877": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3089,
        3110
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 0
    },
    "4878": {
      "branch": 275,
      "fn": "ERC1155.balanceOf",
      "offset": [
        3089,
        3110
      ],
      "op": "AND",
      "path": "5"
    },
    "4879": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1349"
    },
    "4882": {
      "branch": 275,
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4883": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4885": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4886": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4890": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4892": {
      "op": "SHL"
    },
    "4893": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4894": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4895": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4897": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "ADD",
      "path": "5"
    },
    "4898": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4899": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4900": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4902": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "ADD",
      "path": "5"
    },
    "4903": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4904": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4905": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "SUB",
      "path": "5"
    },
    "4906": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4907": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4908": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2B"
    },
    "4910": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4911": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4912": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4914": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "ADD",
      "path": "5"
    },
    "4915": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4916": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x54BF"
    },
    "4919": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2B"
    },
    "4921": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4922": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "4923": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4925": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "ADD",
      "path": "5"
    },
    "4926": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4927": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "POP",
      "path": "5"
    },
    "4928": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "POP",
      "path": "5"
    },
    "4929": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4931": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4932": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4933": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4934": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "SUB",
      "path": "5"
    },
    "4935": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4936": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4937": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4938": {
      "op": "POP"
    },
    "4939": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 1,
      "value": "0x0"
    },
    "4941": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4942": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4943": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4944": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3184
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4946": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4948": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4949": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4950": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4951": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4953": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4954": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4955": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4962": {
      "op": "SHL"
    },
    "4963": {
      "op": "SUB"
    },
    "4964": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "DUP7",
      "path": "5"
    },
    "4965": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "AND",
      "path": "5"
    },
    "4966": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4967": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4968": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4969": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4970": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4971": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4972": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4973": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4974": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4975": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4976": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4977": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "POP",
      "path": "5"
    },
    "4978": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "POP",
      "path": "5"
    },
    "4979": {
      "fn": "ERC1155.balanceOf",
      "jump": "o",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4980": {
      "offset": [
        1456,
        1492
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4981": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        1456,
        1492
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "4983": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        1456,
        1492
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4984": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        1456,
        1492
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4985": {
      "fn": "ERC1155.balanceOf",
      "jump": "o",
      "offset": [
        1456,
        1492
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4986": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4991": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4993": {
      "op": "SHL"
    },
    "4994": {
      "op": "SUB"
    },
    "4995": {
      "op": "NOT"
    },
    "4996": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 2
    },
    "4997": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "AND",
      "path": "1"
    },
    "4998": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1050,
        1054
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5000": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5001": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5002": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5003": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1093
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5005": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5007": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5008": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5010": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5011": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5012": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5013": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "5015": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "AND",
      "path": "1"
    },
    "5016": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5017": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5018": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5019": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "POP",
      "path": "1"
    },
    "5020": {
      "fn": "ERC165.supportsInterface",
      "jump": "o",
      "offset": [
        965,
        1113
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5021": {
      "offset": [
        1109,
        1134
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5022": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "5024": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5025": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "5027": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "AND",
      "path": "12"
    },
    "5028": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1109,
        1134
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5029": {
      "fn": "ERC165.supportsInterface",
      "jump": "o",
      "offset": [
        1109,
        1134
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5030": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5031": {
      "fn": "ERC1155.uri",
      "offset": [
        2823,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 3,
      "value": "0x4"
    },
    "5033": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5034": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5035": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5037": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5038": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5039": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5041": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "5043": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "5045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5047": {
      "op": "NOT"
    },
    "5048": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "5051": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "5053": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP9",
      "path": "5"
    },
    "5054": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "AND",
      "path": "5"
    },
    "5055": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5056": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MUL",
      "path": "5"
    },
    "5057": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5058": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5059": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "5060": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "AND",
      "path": "5"
    },
    "5061": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "5062": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5063": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "5064": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DIV",
      "path": "5"
    },
    "5065": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "5066": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5067": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5068": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5069": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5070": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DIV",
      "path": "5"
    },
    "5071": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5072": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MUL",
      "path": "5"
    },
    "5073": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5074": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5075": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5076": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5077": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5078": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5079": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5080": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5081": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5082": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5083": {
      "fn": "ERC1155.uri",
      "offset": [
        2791,
        2804
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "5085": {
      "fn": "ERC1155.uri",
      "offset": [
        2791,
        2804
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "5086": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5087": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5088": {
      "fn": "ERC1155.uri",
      "offset": [
        2823,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5089": {
      "fn": "ERC1155.uri",
      "offset": [
        2823,
        2827
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5090": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5091": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5092": {
      "fn": "ERC1155.uri",
      "offset": [
        2823,
        2827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5093": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5094": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5095": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5096": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1432"
    },
    "5099": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5100": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5101": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "5103": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "LT",
      "path": "5"
    },
    "5104": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1407"
    },
    "5107": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5108": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "5111": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5112": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5113": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5114": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DIV",
      "path": "5"
    },
    "5115": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MUL",
      "path": "5"
    },
    "5116": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5117": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5118": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5119": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5121": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5122": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5123": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1432"
    },
    "5126": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5127": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5128": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5129": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5130": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5131": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5132": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5134": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5135": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5137": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5139": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5140": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5141": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5142": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5143": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5144": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5145": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5146": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5147": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "5149": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5150": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5151": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5153": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5154": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5155": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5156": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "GT",
      "path": "5"
    },
    "5157": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1415"
    },
    "5160": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5161": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5162": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5163": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SUB",
      "path": "5"
    },
    "5164": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "5166": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "AND",
      "path": "5"
    },
    "5167": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5168": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5169": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5170": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5171": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "POP",
      "path": "5"
    },
    "5172": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "POP",
      "path": "5"
    },
    "5173": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "POP",
      "path": "5"
    },
    "5174": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "POP",
      "path": "5"
    },
    "5175": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "POP",
      "path": "5"
    },
    "5176": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5177": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "POP",
      "path": "5"
    },
    "5178": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5179": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5180": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "5181": {
      "fn": "ERC1155.uri",
      "jump": "o",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5182": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5183": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11881,
        11888
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5185": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11881,
        11888
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5186": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11881,
        11888
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5187": {
      "offset": [
        7081,
        7093
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "5189": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        7081,
        7093
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5190": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        7081,
        7093
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "5192": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        7081,
        7093
      ],
      "op": "AND",
      "path": "12"
    },
    "5193": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        7081,
        7093
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5195": {
      "offset": [
        7081,
        7102
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5196": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        7081,
        7102
      ],
      "op": "GT",
      "path": "12"
    },
    "5197": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        7081,
        7102
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5198": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        7081,
        7102
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1453"
    },
    "5201": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        7081,
        7102
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5202": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        7081,
        7102
      ],
      "op": "INVALID",
      "path": "12"
    },
    "5203": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        7081,
        7102
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5204": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        7081,
        7102
      ],
      "op": "EQ",
      "path": "12"
    },
    "5205": {
      "offset": [
        7073,
        7103
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x145D"
    },
    "5208": {
      "offset": [
        7073,
        7103
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5209": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        7073,
        7103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5211": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        7073,
        7103
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5212": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        7073,
        7103
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5213": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        7073,
        7103
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5214": {
      "offset": [
        2758,
        2759
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "5216": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11908,
        11920
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 4,
      "value": "0xD"
    },
    "5218": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11908,
        11920
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5219": {
      "branch": 235,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11908,
        11943
      ],
      "op": "LT",
      "path": "12"
    },
    "5220": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11900,
        11944
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x146C"
    },
    "5223": {
      "branch": 235,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11900,
        11944
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5224": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11900,
        11944
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5226": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11900,
        11944
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5227": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11900,
        11944
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5228": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11900,
        11944
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5229": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12020,
        12034
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 5,
      "value": "0x14"
    },
    "5231": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12020,
        12034
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5232": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12007,
        12016
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "5233": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12007,
        12034
      ],
      "op": "LT",
      "path": "12"
    },
    "5234": {
      "branch": 236,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12007,
        12034
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5235": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11999,
        12035
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x147B"
    },
    "5238": {
      "branch": 236,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11999,
        12035
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5239": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11999,
        12035
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5241": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11999,
        12035
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5242": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11999,
        12035
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5243": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11999,
        12035
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5244": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12116,
        12117
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 6,
      "value": "0x0"
    },
    "5246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5252": {
      "op": "SHL"
    },
    "5253": {
      "op": "SUB"
    },
    "5254": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12118
      ],
      "op": "AND",
      "path": "12"
    },
    "5255": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12094
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x16"
    },
    "5257": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12095,
        12103
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5258": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12095,
        12103
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5259": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12104
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5261": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12104
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5262": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12104
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5263": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12104
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5264": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12104
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5265": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12104
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5266": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12104
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5267": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12104
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5268": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12104
      ],
      "op": "CALLDATACOPY",
      "path": "12"
    },
    "5269": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12104
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5270": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12104
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5271": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12104
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5272": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12104
      ],
      "op": "ADD",
      "path": "12"
    },
    "5273": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12104
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "5274": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12104
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5275": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12104
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5276": {
      "op": "POP"
    },
    "5277": {
      "op": "POP"
    },
    "5278": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12104
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5280": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12104
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5281": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12104
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5282": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12104
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5283": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12104
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5284": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12104
      ],
      "op": "SUB",
      "path": "12"
    },
    "5285": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12104
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5287": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12104
      ],
      "op": "ADD",
      "path": "12"
    },
    "5288": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12104
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5289": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12104
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5290": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12104
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5291": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12104
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5296": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5298": {
      "op": "SHL"
    },
    "5299": {
      "op": "SUB"
    },
    "5300": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12104
      ],
      "op": "AND",
      "path": "12"
    },
    "5301": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12118
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5302": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12118
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5303": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12118
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5304": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12118
      ],
      "op": "EQ",
      "path": "12"
    },
    "5305": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12118
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5306": {
      "branch": 237,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12083,
        12118
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5307": {
      "op": "POP"
    },
    "5308": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12075,
        12119
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14C6"
    },
    "5311": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12075,
        12119
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5312": {
      "op": "POP"
    },
    "5313": {
      "branch": 237,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12075,
        12119
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5314": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12075,
        12119
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5316": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12075,
        12119
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5317": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12075,
        12119
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5318": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12075,
        12119
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5319": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12253,
        12265
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xD"
    },
    "5321": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12253,
        12265
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5322": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12235,
        12250
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5324": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12235,
        12250
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5325": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12253,
        12272
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14D7"
    },
    "5328": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12253,
        12272
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5329": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12270,
        12271
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5331": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12253,
        12269
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3478"
    },
    "5334": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        12253,
        12272
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5335": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12253,
        12272
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5336": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12322,
        12323
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 7,
      "value": "0x0"
    },
    "5338": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12289,
        12310
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5339": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12289,
        12310
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5340": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12289,
        12310
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5341": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12289,
        12301
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE"
    },
    "5343": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12289,
        12310
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5345": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12289,
        12310
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5346": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12289,
        12310
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5348": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12289,
        12310
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5349": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12289,
        12310
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5350": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12289,
        12310
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5351": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12235,
        12272
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5352": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12235,
        12272
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5353": {
      "op": "POP"
    },
    "5354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5360": {
      "op": "SHL"
    },
    "5361": {
      "op": "SUB"
    },
    "5362": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12289,
        12310
      ],
      "op": "AND",
      "path": "12"
    },
    "5363": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12289,
        12324
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5364": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12282,
        12325
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14F9"
    },
    "5367": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12282,
        12325
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5368": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12282,
        12325
      ],
      "op": "INVALID",
      "path": "12"
    },
    "5369": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12282,
        12325
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5370": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12383,
        12405
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 8,
      "value": "0x0"
    },
    "5372": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12383,
        12405
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5373": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12383,
        12405
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5374": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12383,
        12405
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5375": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12383,
        12396
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF"
    },
    "5377": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12383,
        12405
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5379": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12383,
        12405
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5380": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12383,
        12405
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5382": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12383,
        12405
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5383": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12383,
        12405
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5384": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12383,
        12411
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5385": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12383,
        12411
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "5387": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12383,
        12411
      ],
      "op": "AND",
      "path": "12"
    },
    "5388": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12383,
        12420
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5389": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12376,
        12421
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1512"
    },
    "5392": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12376,
        12421
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5393": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12376,
        12421
      ],
      "op": "INVALID",
      "path": "12"
    },
    "5394": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12376,
        12421
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5395": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12531,
        12551
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5397": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12620
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 9,
      "value": "0x16"
    },
    "5399": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12621,
        12629
      ],
      "op": "DUP7",
      "path": "12"
    },
    "5400": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12621,
        12629
      ],
      "op": "DUP7",
      "path": "12"
    },
    "5401": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5403": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5404": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5405": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5406": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5407": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5408": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5409": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5410": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "CALLDATACOPY",
      "path": "12"
    },
    "5411": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5412": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5413": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5414": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "ADD",
      "path": "12"
    },
    "5415": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "5416": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5417": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5418": {
      "op": "POP"
    },
    "5419": {
      "op": "POP"
    },
    "5420": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5422": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5423": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5424": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "5425": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5426": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5427": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "SUB",
      "path": "12"
    },
    "5428": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5430": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "ADD",
      "path": "12"
    },
    "5431": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5432": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5433": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5434": {
      "op": "PUSH4",
      "value": "0x3FABE5A3"
    },
    "5439": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "5441": {
      "op": "SHL"
    },
    "5442": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5443": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5444": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5445": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5452": {
      "op": "SHL"
    },
    "5453": {
      "op": "SUB"
    },
    "5454": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5455": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5456": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "AND",
      "path": "12"
    },
    "5457": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "5458": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12647
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFEAF968C"
    },
    "5463": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12647
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "5464": {
      "op": "POP"
    },
    "5465": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5467": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5468": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5469": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "ADD",
      "path": "12"
    },
    "5470": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "5471": {
      "op": "POP"
    },
    "5472": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA0"
    },
    "5474": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5475": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5476": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5477": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5478": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "SUB",
      "path": "12"
    },
    "5479": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "ADD",
      "path": "12"
    },
    "5480": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5481": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12609,
        12630
      ],
      "op": "DUP7",
      "path": "12"
    },
    "5482": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5483": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "5484": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5485": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5486": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5487": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1577"
    },
    "5490": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5491": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5493": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5494": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5495": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5496": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "POP",
      "path": "12"
    },
    "5497": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "GAS",
      "path": "12"
    },
    "5498": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "5499": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5500": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5501": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5502": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x158B"
    },
    "5505": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5506": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "5507": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5509": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5510": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "5511": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "5512": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5514": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5515": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5516": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "POP",
      "path": "12"
    },
    "5517": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "POP",
      "path": "12"
    },
    "5518": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "POP",
      "path": "12"
    },
    "5519": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "POP",
      "path": "12"
    },
    "5520": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5522": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5523": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "5524": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA0"
    },
    "5526": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5527": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "LT",
      "path": "12"
    },
    "5528": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5529": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x15A1"
    },
    "5532": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5533": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5535": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5536": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5537": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5538": {
      "op": "POP"
    },
    "5539": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5541": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "ADD",
      "path": "12"
    },
    "5542": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5543": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12587,
        12649
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5544": {
      "op": "POP"
    },
    "5545": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12695,
        12719
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x15B0"
    },
    "5548": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12695,
        12719
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5157"
    },
    "5551": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        12695,
        12719
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5552": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12695,
        12719
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5553": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12743,
        12747
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 10,
      "value": "0x1"
    },
    "5555": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12729,
        12747
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5556": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12729,
        12747
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5557": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12757,
        12769
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 11,
      "value": "0x20"
    },
    "5559": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12757,
        12769
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5560": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12757,
        12769
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5561": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12757,
        12769
      ],
      "op": "ADD",
      "path": "12"
    },
    "5562": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12757,
        12778
      ],
      "op": "DUP11",
      "path": "12"
    },
    "5563": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12757,
        12778
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5564": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12757,
        12778
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5565": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12788,
        12801
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 12,
      "value": "0x40"
    },
    "5567": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12788,
        12801
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5568": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12788,
        12801
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5569": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12788,
        12801
      ],
      "op": "ADD",
      "path": "12"
    },
    "5570": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12788,
        12811
      ],
      "op": "DUP11",
      "path": "12"
    },
    "5571": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12788,
        12811
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5572": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12788,
        12811
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5573": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 13
    },
    "5574": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5575": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "5577": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "DUP10",
      "path": "12"
    },
    "5578": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "ADD",
      "path": "12"
    },
    "5579": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5580": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5581": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "DIV",
      "path": "12"
    },
    "5582": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5583": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "MUL",
      "path": "12"
    },
    "5584": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5585": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "ADD",
      "path": "12"
    },
    "5586": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5587": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "ADD",
      "path": "12"
    },
    "5588": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5589": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5590": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5591": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "DUP8",
      "path": "12"
    },
    "5592": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5593": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5594": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5595": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12838,
        12846
      ],
      "op": "DUP9",
      "path": "12"
    },
    "5596": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12838,
        12846
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5597": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12838,
        12846
      ],
      "op": "DUP9",
      "path": "12"
    },
    "5598": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12838,
        12846
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5599": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12838,
        12846
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5600": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12838,
        12846
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5601": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5602": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "ADD",
      "path": "12"
    },
    "5603": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12838,
        12846
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5604": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12838,
        12846
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5605": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12838,
        12846
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5606": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12838,
        12846
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5607": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5608": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "CALLDATACOPY",
      "path": "12"
    },
    "5609": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5611": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5612": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "ADD",
      "path": "12"
    },
    "5613": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5614": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5615": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5616": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5617": {
      "op": "POP"
    },
    "5618": {
      "op": "POP"
    },
    "5619": {
      "op": "POP"
    },
    "5620": {
      "op": "POP"
    },
    "5621": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12835
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "5623": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12835
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5624": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12835
      ],
      "op": "ADD",
      "path": "12"
    },
    "5625": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12821,
        12846
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5626": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12856,
        12875
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 14,
      "value": "0x80"
    },
    "5628": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12856,
        12875
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5629": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12856,
        12875
      ],
      "op": "ADD",
      "path": "12"
    },
    "5630": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12856,
        12891
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5631": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12856,
        12891
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5632": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12856,
        12891
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5633": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12926,
        12961
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 15,
      "value": "0x1623"
    },
    "5636": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12932,
        12944
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x160B"
    },
    "5639": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12932,
        12942
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34D2"
    },
    "5642": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        12932,
        12944
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5643": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12932,
        12944
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5644": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12946,
        12953
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5645": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12955,
        12956
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5647": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12926,
        12961
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5649": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12926,
        12961
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5650": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12926,
        12961
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5651": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12926,
        12961
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5653": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12926,
        12961
      ],
      "op": "ADD",
      "path": "12"
    },
    "5654": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12926,
        12961
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5656": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12926,
        12961
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5657": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12926,
        12961
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5658": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12926,
        12961
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5660": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12926,
        12961
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5661": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12926,
        12961
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5662": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12926,
        12961
      ],
      "op": "POP",
      "path": "12"
    },
    "5663": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12926,
        12931
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34D6"
    },
    "5666": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        12926,
        12961
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5667": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        12926,
        12961
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5668": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13079,
        13091
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 16,
      "value": "0x162B"
    },
    "5671": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13079,
        13089
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34D2"
    },
    "5674": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        13079,
        13091
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5675": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13079,
        13091
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5676": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13055,
        13076
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5678": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13055,
        13076
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5679": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13055,
        13076
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5680": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13055,
        13076
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5681": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13055,
        13067
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE"
    },
    "5683": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13055,
        13076
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5685": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13055,
        13076
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5686": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13055,
        13076
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5687": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13055,
        13076
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5688": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13055,
        13076
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5690": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13055,
        13076
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5691": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13055,
        13076
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5692": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13055,
        13076
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5693": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13055,
        13091
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5694": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13055,
        13091
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5699": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5701": {
      "op": "SHL"
    },
    "5702": {
      "op": "SUB"
    },
    "5703": {
      "op": "NOT"
    },
    "5704": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13055,
        13091
      ],
      "op": "AND",
      "path": "12"
    },
    "5705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5709": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5711": {
      "op": "SHL"
    },
    "5712": {
      "op": "SUB"
    },
    "5713": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13055,
        13091
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "5714": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13055,
        13091
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5715": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13055,
        13091
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "5716": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13055,
        13091
      ],
      "op": "AND",
      "path": "12"
    },
    "5717": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13055,
        13091
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "5718": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13055,
        13091
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5719": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13055,
        13091
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "5720": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13055,
        13091
      ],
      "op": "OR",
      "path": "12"
    },
    "5721": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13055,
        13091
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5722": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13055,
        13091
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "5723": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13055,
        13091
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5724": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13114
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 17,
      "value": "0xF"
    },
    "5726": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13123
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5727": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13123
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5728": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13123
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5729": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13123
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5730": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13123
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5731": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13123
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5732": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5733": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5734": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5735": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5736": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5738": {
      "op": "NOT"
    },
    "5739": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "AND",
      "path": "12"
    },
    "5740": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5741": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5742": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5743": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "OR",
      "path": "12"
    },
    "5744": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5745": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5746": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5747": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5748": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "ADD",
      "path": "12"
    },
    "5749": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5752": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5753": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "ADD",
      "path": "12"
    },
    "5754": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5755": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5756": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5757": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "ADD",
      "path": "12"
    },
    "5758": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5759": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "5761": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5762": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "ADD",
      "path": "12"
    },
    "5763": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5764": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "5766": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5767": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "ADD",
      "path": "12"
    },
    "5768": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5769": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5770": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5771": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5772": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "5773": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13123
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5774": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x169E"
    },
    "5777": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5778": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "5780": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5781": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "ADD",
      "path": "12"
    },
    "5782": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5783": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5784": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "ADD",
      "path": "12"
    },
    "5785": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5786": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5188"
    },
    "5789": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        13101,
        13131
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5790": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5791": {
      "op": "POP"
    },
    "5792": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "5794": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5795": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5796": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5797": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "ADD",
      "path": "12"
    },
    "5798": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5799": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5801": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5802": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5803": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "ADD",
      "path": "12"
    },
    "5804": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13101,
        13131
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5805": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13192,
        13204
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 18,
      "value": "0xD"
    },
    "5807": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13192,
        13204
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5808": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13192,
        13211
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16BA"
    },
    "5811": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13192,
        13211
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5812": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13209,
        13210
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5814": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13192,
        13208
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3478"
    },
    "5817": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        13192,
        13211
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5818": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13192,
        13211
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5819": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13177,
        13189
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xD"
    },
    "5821": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13177,
        13211
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5822": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13276,
        13290
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 19,
      "value": "0x14"
    },
    "5824": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13276,
        13290
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5825": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13262,
        13291
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16C9"
    },
    "5828": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13262,
        13291
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5829": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13262,
        13275
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35DE"
    },
    "5832": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        13262,
        13291
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5833": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13262,
        13291
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5834": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13385,
        13399
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 20,
      "value": "0x14"
    },
    "5836": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13385,
        13399
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5837": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13373,
        13380
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "5839": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13373,
        13380
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5840": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13373,
        13400
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16D8"
    },
    "5843": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13373,
        13400
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5844": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13373,
        13384
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3478"
    },
    "5847": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        13373,
        13400
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5848": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13373,
        13400
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5849": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13363,
        13370
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "5851": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13363,
        13400
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5852": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13416,
        13456
      ],
      "op": "PUSH32",
      "path": "12",
      "statement": 21,
      "value": "0x3560F0337E62819199860BA21B425B8BDE9A01FA6E514DD58AB6EDF7DAF1D1F1"
    },
    "5885": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13434,
        13441
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5886": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13443,
        13455
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1705"
    },
    "5889": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13443,
        13453
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34D2"
    },
    "5892": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        13443,
        13455
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5893": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13443,
        13455
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5894": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13416,
        13456
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5896": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13416,
        13456
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5897": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13416,
        13456
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5898": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13416,
        13456
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5899": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13416,
        13456
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5900": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13416,
        13456
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5905": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5907": {
      "op": "SHL"
    },
    "5908": {
      "op": "SUB"
    },
    "5909": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13416,
        13456
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5910": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13416,
        13456
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5911": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13416,
        13456
      ],
      "op": "AND",
      "path": "12"
    },
    "5912": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13416,
        13456
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5914": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13416,
        13456
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5915": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13416,
        13456
      ],
      "op": "ADD",
      "path": "12"
    },
    "5916": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13416,
        13456
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5917": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13416,
        13456
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5918": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13416,
        13456
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5919": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13416,
        13456
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5920": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13416,
        13456
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5921": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13416,
        13456
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5922": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13416,
        13456
      ],
      "op": "SUB",
      "path": "12"
    },
    "5923": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13416,
        13456
      ],
      "op": "ADD",
      "path": "12"
    },
    "5924": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13416,
        13456
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5925": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13416,
        13456
      ],
      "op": "LOG1",
      "path": "12"
    },
    "5926": {
      "op": "POP"
    },
    "5927": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13474,
        13481
      ],
      "op": "SWAP1",
      "path": "12",
      "statement": 22
    },
    "5928": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        13474,
        13481
      ],
      "op": "SWAP8",
      "path": "12"
    },
    "5929": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        11711,
        13488
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "5930": {
      "op": "POP"
    },
    "5931": {
      "op": "POP"
    },
    "5932": {
      "op": "POP"
    },
    "5933": {
      "op": "POP"
    },
    "5934": {
      "op": "POP"
    },
    "5935": {
      "op": "POP"
    },
    "5936": {
      "op": "POP"
    },
    "5937": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "o",
      "offset": [
        11711,
        13488
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5938": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5939": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25350,
        25354
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5941": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25368,
        25375
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5942": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25389,
        25396
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5944": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25410,
        25423
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "5946": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25437,
        25443
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5948": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25311,
        25318
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5949": {
      "offset": [
        1991,
        1992
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5951": {
      "offset": [
        6437,
        6444
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5952": {
      "offset": [
        6437,
        6466
      ],
      "op": "GT",
      "path": "12"
    },
    "5953": {
      "offset": [
        6437,
        6501
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5954": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        6437,
        6501
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5955": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        6437,
        6501
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x174D"
    },
    "5958": {
      "offset": [
        6437,
        6501
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5959": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        6437,
        6501
      ],
      "op": "POP",
      "path": "12"
    },
    "5960": {
      "offset": [
        2758,
        2759
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "5962": {
      "offset": [
        6470,
        6477
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5963": {
      "offset": [
        6470,
        6501
      ],
      "op": "GT",
      "path": "12"
    },
    "5964": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        6470,
        6501
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5965": {
      "offset": [
        6437,
        6501
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5966": {
      "offset": [
        6429,
        6502
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1756"
    },
    "5969": {
      "offset": [
        6429,
        6502
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5970": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        6429,
        6502
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5972": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        6429,
        6502
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5973": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        6429,
        6502
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5974": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        6429,
        6502
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5975": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25498
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x175E"
    },
    "5978": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25498
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5157"
    },
    "5981": {
      "fn": "CryptoChampions.getElderSpirit",
      "jump": "i",
      "offset": [
        25468,
        25498
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5982": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25498
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5983": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25501,
        25523
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5985": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25501,
        25523
      ],
      "op": "DUP9",
      "path": "12"
    },
    "5986": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25501,
        25523
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5987": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25501,
        25523
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5988": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25501,
        25514
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF"
    },
    "5990": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25501,
        25523
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5992": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25501,
        25523
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5993": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25501,
        25523
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5994": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25501,
        25523
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5995": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25501,
        25523
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5997": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25501,
        25523
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5998": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25501,
        25523
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5999": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25501,
        25523
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6000": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25501,
        25523
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "6001": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6002": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6003": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA0"
    },
    "6005": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6006": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "ADD",
      "path": "12"
    },
    "6007": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP5",
      "path": "12"
    },
    "6008": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6009": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6010": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6011": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "6013": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "AND",
      "path": "12"
    },
    "6014": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "6015": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "6016": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6017": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6018": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "6020": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6021": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6022": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "ADD",
      "path": "12"
    },
    "6023": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6024": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6025": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP6",
      "path": "12"
    },
    "6026": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "ADD",
      "path": "12"
    },
    "6027": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6028": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "6030": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6031": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP5",
      "path": "12"
    },
    "6032": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "ADD",
      "path": "12"
    },
    "6033": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6034": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6035": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP8",
      "path": "12"
    },
    "6036": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "ADD",
      "path": "12"
    },
    "6037": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6038": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "6040": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP5",
      "path": "12"
    },
    "6041": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "ADD",
      "path": "12"
    },
    "6042": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6043": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6044": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP8",
      "path": "12"
    },
    "6045": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6046": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "6049": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "6050": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6051": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "AND",
      "path": "12"
    },
    "6052": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "6053": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "6054": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6055": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "6056": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "MUL",
      "path": "12"
    },
    "6057": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6059": {
      "op": "NOT"
    },
    "6060": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "ADD",
      "path": "12"
    },
    "6061": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "AND",
      "path": "12"
    },
    "6062": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6063": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6064": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6065": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DIV",
      "path": "12"
    },
    "6066": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "6068": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6069": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "ADD",
      "path": "12"
    },
    "6070": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP7",
      "path": "12"
    },
    "6071": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6072": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DIV",
      "path": "12"
    },
    "6073": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP7",
      "path": "12"
    },
    "6074": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "MUL",
      "path": "12"
    },
    "6075": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6076": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "ADD",
      "path": "12"
    },
    "6077": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP7",
      "path": "12"
    },
    "6078": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "ADD",
      "path": "12"
    },
    "6079": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6080": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "6081": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6082": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP6",
      "path": "12"
    },
    "6083": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6084": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6085": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6086": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "6087": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25501,
        25523
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "6088": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25501,
        25523
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "6089": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "6091": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP7",
      "path": "12"
    },
    "6092": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "ADD",
      "path": "12"
    },
    "6093": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "6094": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6095": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "6096": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6097": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6098": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6099": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "ADD",
      "path": "12"
    },
    "6100": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6101": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6102": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6103": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "6104": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1822"
    },
    "6107": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6108": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6109": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "6111": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "LT",
      "path": "12"
    },
    "6112": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x17F7"
    },
    "6115": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6116": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "6119": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6120": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6121": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6122": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DIV",
      "path": "12"
    },
    "6123": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "MUL",
      "path": "12"
    },
    "6124": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6125": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6126": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6127": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6129": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "ADD",
      "path": "12"
    },
    "6130": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6131": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1822"
    },
    "6134": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6135": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6136": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6137": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "ADD",
      "path": "12"
    },
    "6138": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6139": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6140": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6142": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6143": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6145": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6147": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "6148": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6149": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6150": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6151": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6152": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6153": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6154": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6155": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "6157": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "ADD",
      "path": "12"
    },
    "6158": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6159": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6161": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "ADD",
      "path": "12"
    },
    "6162": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6163": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6164": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "GT",
      "path": "12"
    },
    "6165": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1805"
    },
    "6168": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6169": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6170": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6171": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SUB",
      "path": "12"
    },
    "6172": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "6174": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "AND",
      "path": "12"
    },
    "6175": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6176": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "ADD",
      "path": "12"
    },
    "6177": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6178": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6179": {
      "op": "POP"
    },
    "6180": {
      "op": "POP"
    },
    "6181": {
      "op": "POP"
    },
    "6182": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6183": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6184": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6185": {
      "op": "POP"
    },
    "6186": {
      "op": "POP"
    },
    "6187": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "6189": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6190": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6191": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6192": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "ADD",
      "path": "12"
    },
    "6193": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6194": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6196": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6197": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6198": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "ADD",
      "path": "12"
    },
    "6199": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25468,
        25523
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6200": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25554,
        25571
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 23
    },
    "6201": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25554,
        25571
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6202": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25585,
        25603
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6203": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25585,
        25603
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6204": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25585,
        25603
      ],
      "op": "ADD",
      "path": "12"
    },
    "6205": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25585,
        25603
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6206": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25617,
        25636
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6208": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25617,
        25636
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6209": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25617,
        25636
      ],
      "op": "ADD",
      "path": "12"
    },
    "6210": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25617,
        25636
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6211": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25650,
        25670
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "6213": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25650,
        25670
      ],
      "op": "DUP5",
      "path": "12"
    },
    "6214": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25650,
        25670
      ],
      "op": "ADD",
      "path": "12"
    },
    "6215": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25650,
        25670
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6216": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25684,
        25709
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "6218": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25684,
        25709
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6219": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25684,
        25709
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "6220": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25684,
        25709
      ],
      "op": "ADD",
      "path": "12"
    },
    "6221": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25684,
        25709
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6222": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25554,
        25571
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "6223": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25554,
        25571
      ],
      "op": "SWAP13",
      "path": "12"
    },
    "6224": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25585,
        25603
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6225": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25585,
        25603
      ],
      "op": "SWAP12",
      "path": "12"
    },
    "6226": {
      "op": "POP"
    },
    "6227": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25617,
        25636
      ],
      "op": "SWAP10",
      "path": "12"
    },
    "6228": {
      "op": "POP"
    },
    "6229": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25650,
        25670
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6230": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25650,
        25670
      ],
      "op": "SWAP8",
      "path": "12"
    },
    "6231": {
      "op": "POP"
    },
    "6232": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25684,
        25709
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "6233": {
      "op": "POP"
    },
    "6234": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        25194,
        25726
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "6235": {
      "op": "POP"
    },
    "6236": {
      "op": "POP"
    },
    "6237": {
      "op": "POP"
    },
    "6238": {
      "op": "POP"
    },
    "6239": {
      "fn": "CryptoChampions.getElderSpirit",
      "jump": "o",
      "offset": [
        25194,
        25726
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6240": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6241": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4339,
        4346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6243": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 24
    },
    "6244": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6245": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6246": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6248": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6249": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6250": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6251": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6253": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6254": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6255": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4387
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "6257": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4387
      ],
      "op": "ADD",
      "path": "0"
    },
    "6258": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4387
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6259": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4387
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6260": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "o",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6261": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6262": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29590,
        29597
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6264": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29627
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 25,
      "value": "0x16"
    },
    "6266": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29628,
        29636
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6267": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29628,
        29636
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6268": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6270": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6271": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6272": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6273": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6274": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6275": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6276": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "DUP5",
      "path": "12"
    },
    "6277": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "CALLDATACOPY",
      "path": "12"
    },
    "6278": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6279": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6280": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6281": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "ADD",
      "path": "12"
    },
    "6282": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "6283": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "DUP6",
      "path": "12"
    },
    "6284": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6285": {
      "op": "POP"
    },
    "6286": {
      "op": "POP"
    },
    "6287": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6289": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6290": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "6291": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6292": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6293": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "SUB",
      "path": "12"
    },
    "6294": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6296": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "ADD",
      "path": "12"
    },
    "6297": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6298": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "6299": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "6300": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6305": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6307": {
      "op": "SHL"
    },
    "6308": {
      "op": "SUB"
    },
    "6309": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "AND",
      "path": "12"
    },
    "6310": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29616,
        29637
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "6311": {
      "op": "POP"
    },
    "6312": {
      "op": "POP"
    },
    "6313": {
      "op": "POP"
    },
    "6314": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "6315": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6316": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "POP",
      "path": "12"
    },
    "6317": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        29500,
        29644
      ],
      "op": "POP",
      "path": "12"
    },
    "6318": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "jump": "o",
      "offset": [
        29500,
        29644
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6319": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6320": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        32002,
        32019
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "6322": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        32029,
        32096
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 26,
      "value": "0x18BF"
    },
    "6325": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        32046,
        32056
      ],
      "op": "CALLER",
      "path": "12"
    },
    "6326": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        32058,
        32060
      ],
      "op": "DUP5",
      "path": "12"
    },
    "6327": {
      "offset": [
        1991,
        1992
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6329": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        32083,
        32089
      ],
      "op": "DUP6",
      "path": "12"
    },
    "6330": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        32091,
        32095
      ],
      "op": "DUP6",
      "path": "12"
    },
    "6331": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        32029,
        32045
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x321E"
    },
    "6334": {
      "fn": "CryptoChampions.transferInGameTokens",
      "jump": "i",
      "offset": [
        32029,
        32096
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6335": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        32029,
        32096
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6336": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "POP",
      "path": "12"
    },
    "6337": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "POP",
      "path": "12"
    },
    "6338": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        31916,
        32103
      ],
      "op": "POP",
      "path": "12"
    },
    "6339": {
      "fn": "CryptoChampions.transferInGameTokens",
      "jump": "o",
      "offset": [
        31916,
        32103
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6340": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6341": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5788,
        5795
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 27
    },
    "6342": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5788,
        5802
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6343": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5774,
        5777
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6344": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5774,
        5784
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6345": {
      "branch": 276,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5774,
        5802
      ],
      "op": "EQ",
      "path": "5"
    },
    "6346": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1904"
    },
    "6349": {
      "branch": 276,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6350": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6352": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6353": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6357": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6359": {
      "op": "SHL"
    },
    "6360": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6361": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6362": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6364": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "ADD",
      "path": "5"
    },
    "6365": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6366": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6367": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6369": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "ADD",
      "path": "5"
    },
    "6370": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6371": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6372": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "SUB",
      "path": "5"
    },
    "6373": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6374": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6375": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x28"
    },
    "6377": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6378": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6379": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6381": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "ADD",
      "path": "5"
    },
    "6382": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6383": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x567E"
    },
    "6386": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x28"
    },
    "6388": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6389": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "6390": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6392": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "ADD",
      "path": "5"
    },
    "6393": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6394": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "POP",
      "path": "5"
    },
    "6395": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "POP",
      "path": "5"
    },
    "6396": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6398": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6399": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6400": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6401": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "SUB",
      "path": "5"
    },
    "6402": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6403": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6404": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6411": {
      "op": "SHL"
    },
    "6412": {
      "op": "SUB"
    },
    "6413": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5865,
        5881
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 28
    },
    "6414": {
      "branch": 277,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5865,
        5881
      ],
      "op": "AND",
      "path": "5"
    },
    "6415": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1949"
    },
    "6418": {
      "branch": 277,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6419": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6421": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6422": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6426": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6428": {
      "op": "SHL"
    },
    "6429": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6430": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6431": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6433": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "ADD",
      "path": "5"
    },
    "6434": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6435": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6436": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6438": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "ADD",
      "path": "5"
    },
    "6439": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6440": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6441": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "SUB",
      "path": "5"
    },
    "6442": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6443": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6444": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x25"
    },
    "6446": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6447": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6448": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6450": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "ADD",
      "path": "5"
    },
    "6451": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6452": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5567"
    },
    "6455": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x25"
    },
    "6457": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6458": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "6459": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6461": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "ADD",
      "path": "5"
    },
    "6462": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6463": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "POP",
      "path": "5"
    },
    "6464": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "POP",
      "path": "5"
    },
    "6465": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6467": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6468": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6469": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6470": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "SUB",
      "path": "5"
    },
    "6471": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6472": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6473": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6474": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5962,
        5974
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 29,
      "value": "0x1951"
    },
    "6477": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5962,
        5972
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34D2"
    },
    "6480": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        5962,
        5974
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6481": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5962,
        5974
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6486": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6488": {
      "op": "SHL"
    },
    "6489": {
      "op": "SUB"
    },
    "6490": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        5974
      ],
      "op": "AND",
      "path": "5"
    },
    "6491": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        5958
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6498": {
      "op": "SHL"
    },
    "6499": {
      "op": "SUB"
    },
    "6500": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        5974
      ],
      "op": "AND",
      "path": "5"
    },
    "6501": {
      "branch": 278,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        5974
      ],
      "op": "EQ",
      "path": "5"
    },
    "6502": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        6014
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6503": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        6014
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x197C"
    },
    "6506": {
      "branch": 278,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        6014
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6507": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        6014
      ],
      "op": "POP",
      "path": "5"
    },
    "6508": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5978,
        6014
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x197C"
    },
    "6511": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5995,
        5999
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6512": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6001,
        6013
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1977"
    },
    "6515": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6001,
        6011
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34D2"
    },
    "6518": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6001,
        6013
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6519": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6001,
        6013
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6520": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5978,
        5994
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x31F0"
    },
    "6523": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        5978,
        6014
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6524": {
      "branch": 279,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5978,
        6014
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6525": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19B7"
    },
    "6528": {
      "branch": 279,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6529": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6531": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6532": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6536": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6538": {
      "op": "SHL"
    },
    "6539": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6540": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6541": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6543": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "ADD",
      "path": "5"
    },
    "6544": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6545": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6546": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6548": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "ADD",
      "path": "5"
    },
    "6549": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6550": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6551": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "SUB",
      "path": "5"
    },
    "6552": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6553": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6554": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x32"
    },
    "6556": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6557": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6558": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6560": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "ADD",
      "path": "5"
    },
    "6561": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6562": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x558C"
    },
    "6565": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x32"
    },
    "6567": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6568": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "6569": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6571": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "ADD",
      "path": "5"
    },
    "6572": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6573": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "POP",
      "path": "5"
    },
    "6574": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "POP",
      "path": "5"
    },
    "6575": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6577": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6578": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6579": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6580": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "SUB",
      "path": "5"
    },
    "6581": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6582": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6583": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6584": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6101,
        6117
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6586": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6120,
        6132
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19C1"
    },
    "6589": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6120,
        6130
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34D2"
    },
    "6592": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6120,
        6132
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6593": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6120,
        6132
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6594": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6101,
        6132
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6595": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6101,
        6132
      ],
      "op": "POP",
      "path": "5"
    },
    "6596": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6143,
        6203
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 30,
      "value": "0x19D1"
    },
    "6599": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6164,
        6172
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6600": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6174,
        6178
      ],
      "op": "DUP8",
      "path": "5"
    },
    "6601": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6180,
        6182
      ],
      "op": "DUP8",
      "path": "5"
    },
    "6602": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6184,
        6187
      ],
      "op": "DUP8",
      "path": "5"
    },
    "6603": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6189,
        6196
      ],
      "op": "DUP8",
      "path": "5"
    },
    "6604": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6198,
        6202
      ],
      "op": "DUP8",
      "path": "5"
    },
    "6605": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6143,
        6163
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x364C"
    },
    "6608": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6143,
        6203
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6609": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6143,
        6203
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6610": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6219,
        6228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6612": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6613": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6238,
        6241
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6614": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6238,
        6248
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6615": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6234,
        6235
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6616": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6234,
        6248
      ],
      "op": "LT",
      "path": "5"
    },
    "6617": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6618": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AD7"
    },
    "6621": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6622": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6269,
        6279
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6624": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6285
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6625": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6286,
        6287
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6626": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6627": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6628": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6629": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "LT",
      "path": "5"
    },
    "6630": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19EB"
    },
    "6633": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6634": {
      "dev": "Index out of range",
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "INVALID",
      "path": "5"
    },
    "6635": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6636": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6638": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "MUL",
      "path": "5"
    },
    "6639": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6641": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "ADD",
      "path": "5"
    },
    "6642": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "ADD",
      "path": "5"
    },
    "6643": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6644": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6269,
        6288
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6645": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6269,
        6288
      ],
      "op": "POP",
      "path": "5"
    },
    "6646": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6302,
        6316
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6648": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6326
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6649": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6327,
        6328
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6650": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6651": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6652": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6653": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "LT",
      "path": "5"
    },
    "6654": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A03"
    },
    "6657": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6658": {
      "dev": "Index out of range",
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "INVALID",
      "path": "5"
    },
    "6659": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6660": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6662": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "MUL",
      "path": "5"
    },
    "6663": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6665": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "ADD",
      "path": "5"
    },
    "6666": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "ADD",
      "path": "5"
    },
    "6667": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6668": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6302,
        6329
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6669": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6302,
        6329
      ],
      "op": "POP",
      "path": "5"
    },
    "6670": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 31,
      "value": "0x1A70"
    },
    "6673": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6407,
        6413
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6674": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6676": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6677": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6678": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "6680": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "ADD",
      "path": "5"
    },
    "6681": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6683": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6684": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6685": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2A"
    },
    "6687": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6688": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6689": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6691": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "ADD",
      "path": "5"
    },
    "6692": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x55E1"
    },
    "6695": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2A"
    },
    "6697": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6698": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "6699": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6375
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6701": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6703": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6376,
        6378
      ],
      "op": "DUP7",
      "path": "5"
    },
    "6704": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6705": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6706": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6708": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "ADD",
      "path": "5"
    },
    "6709": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6710": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6711": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6712": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6714": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "ADD",
      "path": "5"
    },
    "6715": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6717": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6718": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6720": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6380,
        6384
      ],
      "op": "DUP14",
      "path": "5"
    },
    "6721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6725": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6727": {
      "op": "SHL"
    },
    "6728": {
      "op": "SUB"
    },
    "6729": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "AND",
      "path": "5"
    },
    "6730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6734": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6736": {
      "op": "SHL"
    },
    "6737": {
      "op": "SUB"
    },
    "6738": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "AND",
      "path": "5"
    },
    "6739": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6740": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6741": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6743": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "ADD",
      "path": "5"
    },
    "6744": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6745": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6746": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6747": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6749": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "ADD",
      "path": "5"
    },
    "6750": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6752": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6753": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6754": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6389
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3767"
    },
    "6757": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6389
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6758": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6759": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6760": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6761": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "6766": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "AND",
      "path": "5"
    },
    "6767": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6366,
        6489
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6768": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6769": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6771": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6772": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6773": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6774": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6353
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6776": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6778": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6779": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6780": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6781": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6783": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6784": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6785": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6792": {
      "op": "SHL"
    },
    "6793": {
      "op": "SUB"
    },
    "6794": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "DUP15",
      "path": "5"
    },
    "6795": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6796": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "AND",
      "path": "5"
    },
    "6797": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6798": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6799": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6800": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6801": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6802": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6803": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6804": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6489
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "6805": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6489
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6806": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6489
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "6807": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6489
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "6808": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6540
      ],
      "op": "DUP11",
      "path": "5",
      "statement": 32
    },
    "6809": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6540
      ],
      "op": "AND",
      "path": "5"
    },
    "6810": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6540
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6811": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6540
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6812": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6540
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6813": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6540
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6814": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6552
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AA7"
    },
    "6817": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6552
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6818": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6545,
        6551
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6819": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6544
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3478"
    },
    "6822": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6523,
        6552
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6823": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6552
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6824": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6826": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6827": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6828": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6829": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6512
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6831": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6833": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6834": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6835": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6836": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6838": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6839": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6840": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6845": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6847": {
      "op": "SHL"
    },
    "6848": {
      "op": "SUB"
    },
    "6849": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "DUP13",
      "path": "5"
    },
    "6850": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "AND",
      "path": "5"
    },
    "6851": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "DUP7",
      "path": "5"
    },
    "6852": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6853": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6854": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6855": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6856": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6857": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6858": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6859": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6552
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6860": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6552
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6861": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6552
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6862": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6552
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "6863": {
      "op": "POP"
    },
    "6864": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6250,
        6253
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 33,
      "value": "0x1"
    },
    "6866": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6250,
        6253
      ],
      "op": "ADD",
      "path": "5"
    },
    "6867": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19D4"
    },
    "6870": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6871": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6872": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "POP",
      "path": "5"
    },
    "6873": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6608,
        6610
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 34
    },
    "6874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6878": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6880": {
      "op": "SHL"
    },
    "6881": {
      "op": "SUB"
    },
    "6882": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "AND",
      "path": "5"
    },
    "6883": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6602,
        6606
      ],
      "op": "DUP7",
      "path": "5"
    },
    "6884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6888": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6890": {
      "op": "SHL"
    },
    "6891": {
      "op": "SUB"
    },
    "6892": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "AND",
      "path": "5"
    },
    "6893": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6592,
        6600
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6900": {
      "op": "SHL"
    },
    "6901": {
      "op": "SUB"
    },
    "6902": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "AND",
      "path": "5"
    },
    "6903": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
    },
    "6936": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6612,
        6615
      ],
      "op": "DUP8",
      "path": "5"
    },
    "6937": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6617,
        6624
      ],
      "op": "DUP8",
      "path": "5"
    },
    "6938": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6940": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6941": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6942": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6943": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6945": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "6946": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6947": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6949": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "6950": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6951": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6952": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SUB",
      "path": "5"
    },
    "6953": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6954": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6955": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6956": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6957": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6958": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6959": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6960": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6961": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6963": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "6964": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6965": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "6966": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6967": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6968": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6969": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6971": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "6972": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6973": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6975": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MUL",
      "path": "5"
    },
    "6976": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6977": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6978": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6979": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6981": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6982": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6983": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6984": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "LT",
      "path": "5"
    },
    "6985": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6986": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B5D"
    },
    "6989": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6990": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6991": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6992": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "6993": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6994": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6995": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6996": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "6997": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6998": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7000": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7001": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B45"
    },
    "7004": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7005": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7006": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7007": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7008": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7009": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7010": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7011": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7012": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7013": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7014": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7015": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SUB",
      "path": "5"
    },
    "7016": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7017": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7018": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7019": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7020": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7021": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7022": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7023": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7024": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7026": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7027": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7028": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7029": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7030": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7031": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7032": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7034": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7035": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7036": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7038": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MUL",
      "path": "5"
    },
    "7039": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7040": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7041": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7042": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7044": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7045": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7046": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7047": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "LT",
      "path": "5"
    },
    "7048": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7049": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B9C"
    },
    "7052": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7053": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7054": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7055": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7056": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7057": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7058": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7059": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7060": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7061": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7063": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7064": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B84"
    },
    "7067": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7068": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7069": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7070": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7071": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7072": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7073": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7074": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7075": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7076": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "7077": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7078": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7079": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7080": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7081": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7082": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7084": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7085": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7086": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7087": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SUB",
      "path": "5"
    },
    "7088": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7089": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "LOG4",
      "path": "5"
    },
    "7090": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6636,
        6711
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 35,
      "value": "0x1BBF"
    },
    "7093": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6672,
        6680
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7094": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6682,
        6686
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7095": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6688,
        6690
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7096": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6692,
        6695
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7097": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6697,
        6704
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7098": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6706,
        6710
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7099": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6636,
        6671
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x37FE"
    },
    "7102": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6636,
        6711
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7103": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6636,
        6711
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7104": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "POP",
      "path": "5"
    },
    "7105": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "POP",
      "path": "5"
    },
    "7106": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "POP",
      "path": "5"
    },
    "7107": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "POP",
      "path": "5"
    },
    "7108": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "POP",
      "path": "5"
    },
    "7109": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "POP",
      "path": "5"
    },
    "7110": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "o",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7111": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7112": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26021,
        26025
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7114": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26048,
        26061
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "7116": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26087,
        26093
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7118": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26125,
        26132
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7119": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26162,
        26169
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7121": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25983,
        25989
      ],
      "op": "DUP6",
      "path": "12"
    },
    "7122": {
      "offset": [
        2758,
        2759
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "7124": {
      "offset": [
        6612,
        6618
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7125": {
      "offset": [
        6612,
        6641
      ],
      "op": "GT",
      "path": "12"
    },
    "7126": {
      "offset": [
        6604,
        6642
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1BDE"
    },
    "7129": {
      "offset": [
        6604,
        6642
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7130": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        6604,
        6642
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7132": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        6604,
        6642
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7133": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        6604,
        6642
      ],
      "op": "REVERT",
      "path": "12"
    },
    "7134": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        6604,
        6642
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7135": {
      "offset": [
        6691,
        6706
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7137": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        6691,
        6706
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7138": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        6691,
        6706
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7139": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        6691,
        6706
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7140": {
      "offset": [
        6691,
        6698
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "7142": {
      "offset": [
        6691,
        6706
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7144": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        6691,
        6706
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7145": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        6691,
        6706
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7147": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        6691,
        6706
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7148": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        6691,
        6706
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "7149": {
      "offset": [
        6691,
        6712
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7150": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        6691,
        6712
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "7152": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        6691,
        6712
      ],
      "op": "AND",
      "path": "12"
    },
    "7153": {
      "offset": [
        6683,
        6713
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1BF9"
    },
    "7156": {
      "offset": [
        6683,
        6713
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7157": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        6683,
        6713
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7159": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        6683,
        6713
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7160": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        6683,
        6713
      ],
      "op": "REVERT",
      "path": "12"
    },
    "7161": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        6683,
        6713
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7162": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26227,
        26242
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 36,
      "value": "0x0"
    },
    "7164": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26227,
        26242
      ],
      "op": "DUP8",
      "path": "12"
    },
    "7165": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26227,
        26242
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7166": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26227,
        26242
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7167": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26227,
        26234
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "7169": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26227,
        26242
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7171": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26227,
        26242
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7172": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26227,
        26242
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7173": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26227,
        26242
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7174": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26227,
        26242
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7176": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26227,
        26242
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7177": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26227,
        26242
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7178": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26227,
        26242
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7179": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26227,
        26242
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "7180": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26227,
        26248
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7181": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26227,
        26248
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7182": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26300,
        26329
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "7184": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26300,
        26329
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7185": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26300,
        26329
      ],
      "op": "ADD",
      "path": "12"
    },
    "7186": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26300,
        26329
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7187": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26343,
        26370
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7189": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26343,
        26370
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7190": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26343,
        26370
      ],
      "op": "ADD",
      "path": "12"
    },
    "7191": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26343,
        26370
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7192": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26384,
        26407
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "7194": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26384,
        26407
      ],
      "op": "DUP5",
      "path": "12"
    },
    "7195": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26384,
        26407
      ],
      "op": "ADD",
      "path": "12"
    },
    "7196": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26384,
        26407
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7197": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26262,
        26286
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "7199": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26262,
        26286
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "7200": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26262,
        26286
      ],
      "op": "DUP6",
      "path": "12"
    },
    "7201": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26262,
        26286
      ],
      "op": "ADD",
      "path": "12"
    },
    "7202": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7203": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7204": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "DUP9",
      "path": "12"
    },
    "7205": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7206": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26227,
        26248
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "7209": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26227,
        26248
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "7211": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7212": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "AND",
      "path": "12"
    },
    "7213": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7214": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "MUL",
      "path": "12"
    },
    "7215": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7217": {
      "op": "NOT"
    },
    "7218": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "ADD",
      "path": "12"
    },
    "7219": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7220": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7221": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "AND",
      "path": "12"
    },
    "7222": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "7223": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7224": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "7225": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "DIV",
      "path": "12"
    },
    "7226": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "7228": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7229": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "ADD",
      "path": "12"
    },
    "7230": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "DUP9",
      "path": "12"
    },
    "7231": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7232": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "DIV",
      "path": "12"
    },
    "7233": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "DUP9",
      "path": "12"
    },
    "7234": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "MUL",
      "path": "12"
    },
    "7235": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "DUP8",
      "path": "12"
    },
    "7236": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "ADD",
      "path": "12"
    },
    "7237": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "DUP9",
      "path": "12"
    },
    "7238": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "ADD",
      "path": "12"
    },
    "7239": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7240": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "SWAP9",
      "path": "12"
    },
    "7241": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7242": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "DUP8",
      "path": "12"
    },
    "7243": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "DUP7",
      "path": "12"
    },
    "7244": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7245": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26227,
        26248
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "7247": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26227,
        26248
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7248": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26227,
        26248
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "7249": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26227,
        26248
      ],
      "op": "AND",
      "path": "12"
    },
    "7250": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26227,
        26248
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "7251": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26262,
        26286
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "7252": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26262,
        26286
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "7253": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26300,
        26329
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "7254": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26300,
        26329
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "7255": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26343,
        26370
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7256": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26343,
        26370
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "7257": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26384,
        26407
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7258": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26384,
        26407
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "7259": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26262,
        26286
      ],
      "op": "DUP7",
      "path": "12"
    },
    "7260": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26262,
        26286
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7261": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7262": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7263": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "ADD",
      "path": "12"
    },
    "7264": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26262,
        26286
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7265": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7266": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7267": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7268": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1CAE"
    },
    "7271": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7272": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7273": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "7275": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "LT",
      "path": "12"
    },
    "7276": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1C83"
    },
    "7279": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7280": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "7283": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7284": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7285": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7286": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "DIV",
      "path": "12"
    },
    "7287": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "MUL",
      "path": "12"
    },
    "7288": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7289": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7290": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7291": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7293": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "ADD",
      "path": "12"
    },
    "7294": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7295": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1CAE"
    },
    "7298": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7299": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7300": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7301": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "ADD",
      "path": "12"
    },
    "7302": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7303": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7304": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7306": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7307": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7309": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7311": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "7312": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7313": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7314": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7315": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7316": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7317": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7318": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7319": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "7321": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "ADD",
      "path": "12"
    },
    "7322": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7323": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7325": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "ADD",
      "path": "12"
    },
    "7326": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7327": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7328": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "GT",
      "path": "12"
    },
    "7329": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1C91"
    },
    "7332": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7333": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7334": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7335": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "SUB",
      "path": "12"
    },
    "7336": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "7338": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "AND",
      "path": "12"
    },
    "7339": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7340": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "ADD",
      "path": "12"
    },
    "7341": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7342": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7343": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "POP",
      "path": "12"
    },
    "7344": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "POP",
      "path": "12"
    },
    "7345": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "POP",
      "path": "12"
    },
    "7346": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "POP",
      "path": "12"
    },
    "7347": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "POP",
      "path": "12"
    },
    "7348": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "7349": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "POP",
      "path": "12"
    },
    "7350": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "7351": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "POP",
      "path": "12"
    },
    "7352": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "7353": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "POP",
      "path": "12"
    },
    "7354": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "7355": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "POP",
      "path": "12"
    },
    "7356": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "7357": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "POP",
      "path": "12"
    },
    "7358": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "7359": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        26206,
        26417
      ],
      "op": "POP",
      "path": "12"
    },
    "7360": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "POP",
      "path": "12"
    },
    "7361": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7362": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "7363": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "7364": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7365": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "7366": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "7367": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        25875,
        26424
      ],
      "op": "POP",
      "path": "12"
    },
    "7368": {
      "fn": "CryptoChampions.getHeroGameData",
      "jump": "o",
      "offset": [
        25875,
        26424
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7369": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7370": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4741
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 37,
      "value": "0x0"
    },
    "7372": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7373": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7374": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7375": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7377": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7378": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7379": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7380": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7382": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7383": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "7384": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4757
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "7386": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4757
      ],
      "op": "ADD",
      "path": "0"
    },
    "7387": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4757
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7388": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4727,
        4772
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CEC"
    },
    "7391": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4727,
        4772
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7392": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4759,
        4771
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CE7"
    },
    "7395": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4759,
        4769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34D2"
    },
    "7398": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4759,
        4771
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7399": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4759,
        4771
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7400": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4727,
        4734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AE4"
    },
    "7403": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4727,
        4772
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7404": {
      "branch": 270,
      "fn": "AccessControl.grantRole",
      "offset": [
        4727,
        4772
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7405": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D27"
    },
    "7408": {
      "branch": 270,
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7409": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7411": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7412": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7416": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7418": {
      "op": "SHL"
    },
    "7419": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7420": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7421": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7423": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "ADD",
      "path": "0"
    },
    "7424": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7425": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7426": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7428": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "ADD",
      "path": "0"
    },
    "7429": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7430": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7431": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "SUB",
      "path": "0"
    },
    "7432": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7433": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7434": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2F"
    },
    "7436": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7437": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7438": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7440": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "ADD",
      "path": "0"
    },
    "7441": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7442": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5490"
    },
    "7445": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2F"
    },
    "7447": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7448": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "7449": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7451": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "ADD",
      "path": "0"
    },
    "7452": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7453": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "POP",
      "path": "0"
    },
    "7454": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "POP",
      "path": "0"
    },
    "7455": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7457": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7458": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7459": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7460": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "SUB",
      "path": "0"
    },
    "7461": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7462": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7463": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7464": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4835,
        4860
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 38,
      "value": "0x1D31"
    },
    "7467": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4846,
        4850
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7468": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4852,
        4859
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7469": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4835,
        4845
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A74"
    },
    "7472": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4835,
        4860
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7473": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4835,
        4860
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7474": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "POP",
      "path": "0"
    },
    "7475": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "POP",
      "path": "0"
    },
    "7476": {
      "fn": "AccessControl.grantRole",
      "jump": "o",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7477": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7478": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5915,
        5927
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 39,
      "value": "0x1D3D"
    },
    "7481": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5915,
        5925
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34D2"
    },
    "7484": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5915,
        5927
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7485": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5915,
        5927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7490": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7492": {
      "op": "SHL"
    },
    "7493": {
      "op": "SUB"
    },
    "7494": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5904,
        5927
      ],
      "op": "AND",
      "path": "0"
    },
    "7495": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5904,
        5911
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7502": {
      "op": "SHL"
    },
    "7503": {
      "op": "SUB"
    },
    "7504": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5904,
        5927
      ],
      "op": "AND",
      "path": "0"
    },
    "7505": {
      "branch": 271,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5904,
        5927
      ],
      "op": "EQ",
      "path": "0"
    },
    "7506": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D8C"
    },
    "7509": {
      "branch": 271,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7510": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7512": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7513": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7517": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7519": {
      "op": "SHL"
    },
    "7520": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7521": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7522": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7524": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "ADD",
      "path": "0"
    },
    "7525": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7526": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7527": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7529": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "ADD",
      "path": "0"
    },
    "7530": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7531": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7532": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "SUB",
      "path": "0"
    },
    "7533": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7534": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7535": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2F"
    },
    "7537": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7538": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7539": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7541": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "ADD",
      "path": "0"
    },
    "7542": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7543": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56C7"
    },
    "7546": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2F"
    },
    "7548": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7549": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "7550": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7552": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "ADD",
      "path": "0"
    },
    "7553": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7554": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "POP",
      "path": "0"
    },
    "7555": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "POP",
      "path": "0"
    },
    "7556": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7558": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7559": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7560": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7561": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "SUB",
      "path": "0"
    },
    "7562": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7563": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7564": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7565": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5990,
        6016
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 40,
      "value": "0x1D31"
    },
    "7568": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        6002,
        6006
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7569": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        6008,
        6015
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7570": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5990,
        6001
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3ADD"
    },
    "7573": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5990,
        6016
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7574": {
      "offset": [
        2373,
        2399
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7575": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        2373,
        2399
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "7577": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        2373,
        2399
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7578": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        2373,
        2399
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7579": {
      "fn": "AccessControl.renounceRole",
      "jump": "o",
      "offset": [
        2373,
        2399
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7580": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7581": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26698,
        26711
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "7583": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26733,
        26740
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7585": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26765,
        26772
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7586": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26798,
        26803
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7588": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26660,
        26666
      ],
      "op": "DUP5",
      "path": "12"
    },
    "7589": {
      "offset": [
        2758,
        2759
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "7591": {
      "offset": [
        6612,
        6618
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7592": {
      "offset": [
        6612,
        6641
      ],
      "op": "GT",
      "path": "12"
    },
    "7593": {
      "offset": [
        6604,
        6642
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1DB1"
    },
    "7596": {
      "offset": [
        6604,
        6642
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7597": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        6604,
        6642
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7599": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        6604,
        6642
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7600": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        6604,
        6642
      ],
      "op": "REVERT",
      "path": "12"
    },
    "7601": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        6604,
        6642
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7602": {
      "offset": [
        6691,
        6706
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7604": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        6691,
        6706
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7605": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        6691,
        6706
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7606": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        6691,
        6706
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7607": {
      "offset": [
        6691,
        6698
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "7609": {
      "offset": [
        6691,
        6706
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7611": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        6691,
        6706
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7612": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        6691,
        6706
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7614": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        6691,
        6706
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7615": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        6691,
        6706
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "7616": {
      "offset": [
        6691,
        6712
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7617": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        6691,
        6712
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "7619": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        6691,
        6712
      ],
      "op": "AND",
      "path": "12"
    },
    "7620": {
      "offset": [
        6683,
        6713
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1DCC"
    },
    "7623": {
      "offset": [
        6683,
        6713
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7624": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        6683,
        6713
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7626": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        6683,
        6713
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7627": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        6683,
        6713
      ],
      "op": "REVERT",
      "path": "12"
    },
    "7628": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        6683,
        6713
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7629": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26850,
        26865
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 41,
      "value": "0x0"
    },
    "7631": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26850,
        26865
      ],
      "op": "DUP7",
      "path": "12"
    },
    "7632": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26850,
        26865
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7633": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26850,
        26865
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7634": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26850,
        26857
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "7636": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26850,
        26865
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7638": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26850,
        26865
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7639": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26850,
        26865
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7640": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26850,
        26865
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7641": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26850,
        26865
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7643": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26850,
        26865
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7644": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26850,
        26865
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7645": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26850,
        26865
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7646": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26850,
        26865
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "7647": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26872,
        26894
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "7649": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26872,
        26894
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7650": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26872,
        26894
      ],
      "op": "ADD",
      "path": "12"
    },
    "7651": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26872,
        26894
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7652": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26896,
        26919
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "7654": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26896,
        26919
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7655": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26896,
        26919
      ],
      "op": "ADD",
      "path": "12"
    },
    "7656": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26896,
        26919
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7657": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26921,
        26947
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "7659": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26921,
        26947
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7660": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26921,
        26947
      ],
      "op": "ADD",
      "path": "12"
    },
    "7661": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26921,
        26947
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7662": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26850,
        26870
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "7664": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26850,
        26870
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "7665": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26850,
        26870
      ],
      "op": "DUP5",
      "path": "12"
    },
    "7666": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26850,
        26870
      ],
      "op": "ADD",
      "path": "12"
    },
    "7667": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7668": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7669": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "DUP8",
      "path": "12"
    },
    "7670": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7671": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "7673": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26921,
        26947
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "7676": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SWAP8",
      "path": "12"
    },
    "7677": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7678": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "AND",
      "path": "12"
    },
    "7679": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7680": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SWAP8",
      "path": "12"
    },
    "7681": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7682": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SWAP8",
      "path": "12"
    },
    "7683": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "MUL",
      "path": "12"
    },
    "7684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7686": {
      "op": "NOT"
    },
    "7687": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "ADD",
      "path": "12"
    },
    "7688": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7689": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7690": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "AND",
      "path": "12"
    },
    "7691": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "7692": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7693": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "7694": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "DIV",
      "path": "12"
    },
    "7695": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "7697": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7698": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "ADD",
      "path": "12"
    },
    "7699": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "DUP8",
      "path": "12"
    },
    "7700": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7701": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "DIV",
      "path": "12"
    },
    "7702": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "DUP8",
      "path": "12"
    },
    "7703": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "MUL",
      "path": "12"
    },
    "7704": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "DUP7",
      "path": "12"
    },
    "7705": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "ADD",
      "path": "12"
    },
    "7706": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "DUP8",
      "path": "12"
    },
    "7707": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "ADD",
      "path": "12"
    },
    "7708": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7709": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SWAP8",
      "path": "12"
    },
    "7710": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7711": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "DUP7",
      "path": "12"
    },
    "7712": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "DUP6",
      "path": "12"
    },
    "7713": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7714": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26850,
        26870
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "7715": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26872,
        26894
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "7716": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26872,
        26894
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "7717": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26896,
        26919
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7718": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26896,
        26919
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "7719": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26921,
        26947
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "7721": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26921,
        26947
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7722": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26921,
        26947
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7723": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26921,
        26947
      ],
      "op": "AND",
      "path": "12"
    },
    "7724": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26921,
        26947
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "7725": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7726": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7727": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26850,
        26870
      ],
      "op": "DUP7",
      "path": "12"
    },
    "7728": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26850,
        26870
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7729": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7730": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7731": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "ADD",
      "path": "12"
    },
    "7732": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26850,
        26870
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7733": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7734": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7735": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7736": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E82"
    },
    "7739": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7740": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7741": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "7743": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "LT",
      "path": "12"
    },
    "7744": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E57"
    },
    "7747": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7748": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "7751": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7752": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7753": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7754": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "DIV",
      "path": "12"
    },
    "7755": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "MUL",
      "path": "12"
    },
    "7756": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7757": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7758": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7759": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7761": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "ADD",
      "path": "12"
    },
    "7762": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7763": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E82"
    },
    "7766": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7767": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7768": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7769": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "ADD",
      "path": "12"
    },
    "7770": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7771": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7772": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7774": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7775": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7777": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7779": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "7780": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7781": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7782": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7783": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7784": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7785": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7786": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7787": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "7789": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "ADD",
      "path": "12"
    },
    "7790": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7791": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7793": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "ADD",
      "path": "12"
    },
    "7794": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7795": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7796": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "GT",
      "path": "12"
    },
    "7797": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E65"
    },
    "7800": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7801": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7802": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7803": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SUB",
      "path": "12"
    },
    "7804": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "7806": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "AND",
      "path": "12"
    },
    "7807": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7808": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "ADD",
      "path": "12"
    },
    "7809": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7810": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7811": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "POP",
      "path": "12"
    },
    "7812": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "POP",
      "path": "12"
    },
    "7813": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "POP",
      "path": "12"
    },
    "7814": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "POP",
      "path": "12"
    },
    "7815": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "POP",
      "path": "12"
    },
    "7816": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "7817": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "POP",
      "path": "12"
    },
    "7818": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "7819": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "POP",
      "path": "12"
    },
    "7820": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "7821": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "POP",
      "path": "12"
    },
    "7822": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "7823": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "POP",
      "path": "12"
    },
    "7824": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "7825": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26842,
        26948
      ],
      "op": "POP",
      "path": "12"
    },
    "7826": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "POP",
      "path": "12"
    },
    "7827": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7828": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "7829": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "POP",
      "path": "12"
    },
    "7830": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7831": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        26553,
        26955
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "7832": {
      "fn": "CryptoChampions.getHeroVisuals",
      "jump": "o",
      "offset": [
        26553,
        26955
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7833": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28174,
        28543
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7834": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28318,
        28323
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7836": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28346,
        28351
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7837": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28371,
        28376
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7839": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28398,
        28403
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7840": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28280,
        28286
      ],
      "op": "DUP5",
      "path": "12"
    },
    "7841": {
      "offset": [
        2758,
        2759
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "7843": {
      "offset": [
        6612,
        6618
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7844": {
      "offset": [
        6612,
        6641
      ],
      "op": "GT",
      "path": "12"
    },
    "7845": {
      "offset": [
        6604,
        6642
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1EAD"
    },
    "7848": {
      "offset": [
        6604,
        6642
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7849": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        6604,
        6642
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7851": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        6604,
        6642
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7852": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        6604,
        6642
      ],
      "op": "REVERT",
      "path": "12"
    },
    "7853": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        6604,
        6642
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7854": {
      "offset": [
        6691,
        6706
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7856": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        6691,
        6706
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7857": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        6691,
        6706
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7858": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        6691,
        6706
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7859": {
      "offset": [
        6691,
        6698
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "7861": {
      "offset": [
        6691,
        6706
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7863": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        6691,
        6706
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7864": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        6691,
        6706
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7866": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        6691,
        6706
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7867": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        6691,
        6706
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "7868": {
      "offset": [
        6691,
        6712
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7869": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        6691,
        6712
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "7871": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        6691,
        6712
      ],
      "op": "AND",
      "path": "12"
    },
    "7872": {
      "offset": [
        6683,
        6713
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1EC8"
    },
    "7875": {
      "offset": [
        6683,
        6713
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7876": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        6683,
        6713
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7878": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        6683,
        6713
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7879": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        6683,
        6713
      ],
      "op": "REVERT",
      "path": "12"
    },
    "7880": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        6683,
        6713
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7881": {
      "op": "POP"
    },
    "7882": {
      "op": "POP"
    },
    "7883": {
      "op": "POP"
    },
    "7884": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28447,
        28462
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 42,
      "value": "0x0"
    },
    "7886": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28447,
        28462
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "7887": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28447,
        28462
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7888": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28447,
        28462
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7889": {
      "op": "POP"
    },
    "7890": {
      "op": "POP"
    },
    "7891": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28447,
        28454
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "7893": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28447,
        28462
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7895": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28447,
        28462
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7896": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28447,
        28462
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7898": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28447,
        28462
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7899": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28447,
        28462
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "7900": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28447,
        28468
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "7902": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28447,
        28468
      ],
      "op": "ADD",
      "path": "12"
    },
    "7903": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28447,
        28468
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7904": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28447,
        28468
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "7906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7908": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "7910": {
      "op": "SHL"
    },
    "7911": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28447,
        28468
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7912": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28447,
        28468
      ],
      "op": "DIV",
      "path": "12"
    },
    "7913": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28447,
        28468
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7914": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28447,
        28468
      ],
      "op": "AND",
      "path": "12"
    },
    "7915": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28447,
        28468
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "7916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7918": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "7920": {
      "op": "SHL"
    },
    "7921": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28470,
        28488
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7922": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28470,
        28488
      ],
      "op": "DIV",
      "path": "12"
    },
    "7923": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28470,
        28488
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7924": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28470,
        28488
      ],
      "op": "AND",
      "path": "12"
    },
    "7925": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28470,
        28488
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "7926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7928": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "7930": {
      "op": "SHL"
    },
    "7931": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28490,
        28510
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7932": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28490,
        28510
      ],
      "op": "DIV",
      "path": "12"
    },
    "7933": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28490,
        28510
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7934": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28490,
        28510
      ],
      "op": "AND",
      "path": "12"
    },
    "7935": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28490,
        28510
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "7936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7938": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7940": {
      "op": "SHL"
    },
    "7941": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28512,
        28535
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7942": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28512,
        28535
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7943": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28512,
        28535
      ],
      "op": "DIV",
      "path": "12"
    },
    "7944": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28512,
        28535
      ],
      "op": "AND",
      "path": "12"
    },
    "7945": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        28512,
        28535
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7946": {
      "fn": "CryptoChampions.getHeroVitals",
      "jump": "o",
      "offset": [
        28174,
        28543
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7947": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7948": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14238,
        14245
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7950": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14182,
        14189
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7951": {
      "offset": [
        1991,
        1992
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7953": {
      "offset": [
        6437,
        6444
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7954": {
      "offset": [
        6437,
        6466
      ],
      "op": "GT",
      "path": "12"
    },
    "7955": {
      "offset": [
        6437,
        6501
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7956": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        6437,
        6501
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7957": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        6437,
        6501
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F1F"
    },
    "7960": {
      "offset": [
        6437,
        6501
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7961": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        6437,
        6501
      ],
      "op": "POP",
      "path": "12"
    },
    "7962": {
      "offset": [
        2758,
        2759
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "7964": {
      "offset": [
        6470,
        6477
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7965": {
      "offset": [
        6470,
        6501
      ],
      "op": "GT",
      "path": "12"
    },
    "7966": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        6470,
        6501
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7967": {
      "offset": [
        6437,
        6501
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7968": {
      "offset": [
        6429,
        6502
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F28"
    },
    "7971": {
      "offset": [
        6429,
        6502
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7972": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        6429,
        6502
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7974": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        6429,
        6502
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7975": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        6429,
        6502
      ],
      "op": "REVERT",
      "path": "12"
    },
    "7976": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        6429,
        6502
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7977": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14207,
        14219
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "7979": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14207,
        14219
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7980": {
      "offset": [
        7081,
        7093
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "7982": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        7081,
        7093
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7983": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        7081,
        7093
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "7985": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        7081,
        7093
      ],
      "op": "AND",
      "path": "12"
    },
    "7986": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        7081,
        7093
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "7988": {
      "offset": [
        7081,
        7102
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7989": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        7081,
        7102
      ],
      "op": "GT",
      "path": "12"
    },
    "7990": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        7081,
        7102
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7991": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        7081,
        7102
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F3C"
    },
    "7994": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        7081,
        7102
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7995": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        7081,
        7102
      ],
      "op": "INVALID",
      "path": "12"
    },
    "7996": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        7081,
        7102
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7997": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        7081,
        7102
      ],
      "op": "EQ",
      "path": "12"
    },
    "7998": {
      "offset": [
        7073,
        7103
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F46"
    },
    "8001": {
      "offset": [
        7073,
        7103
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8002": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        7073,
        7103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8004": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        7073,
        7103
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8005": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        7073,
        7103
      ],
      "op": "REVERT",
      "path": "12"
    },
    "8006": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        7073,
        7103
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8007": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14269,
        14291
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 43,
      "value": "0x0"
    },
    "8009": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14269,
        14291
      ],
      "op": "DUP7",
      "path": "12"
    },
    "8010": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14269,
        14291
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8011": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14269,
        14291
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8012": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14269,
        14282
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF"
    },
    "8014": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14269,
        14291
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8016": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14269,
        14291
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8017": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14269,
        14291
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8019": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14269,
        14291
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8020": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14269,
        14291
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "8021": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14269,
        14297
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8022": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14269,
        14297
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "8024": {
      "branch": 238,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14269,
        14297
      ],
      "op": "AND",
      "path": "12"
    },
    "8025": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14261,
        14298
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F61"
    },
    "8028": {
      "branch": 238,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14261,
        14298
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8029": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14261,
        14298
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8031": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14261,
        14298
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8032": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14261,
        14298
      ],
      "op": "REVERT",
      "path": "12"
    },
    "8033": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14261,
        14298
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8034": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14368,
        14389
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 44,
      "value": "0x1F6A"
    },
    "8037": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14381,
        14388
      ],
      "op": "DUP7",
      "path": "12"
    },
    "8038": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14368,
        14380
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3B46"
    },
    "8041": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        14368,
        14389
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8042": {
      "branch": 239,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14368,
        14389
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8043": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14360,
        14390
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F73"
    },
    "8046": {
      "branch": 239,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14360,
        14390
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8047": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14360,
        14390
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8049": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14360,
        14390
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8050": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14360,
        14390
      ],
      "op": "REVERT",
      "path": "12"
    },
    "8051": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14360,
        14390
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8052": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14460,
        14477
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8054": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14480,
        14519
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F81"
    },
    "8057": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14497,
        14509
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x15"
    },
    "8059": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14497,
        14509
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8060": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14511,
        14518
      ],
      "op": "DUP9",
      "path": "12"
    },
    "8061": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14480,
        14496
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x33E9"
    },
    "8064": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        14480,
        14519
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8065": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14480,
        14519
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8066": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14460,
        14519
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8067": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14460,
        14519
      ],
      "op": "POP",
      "path": "12"
    },
    "8068": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14550,
        14559
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 45
    },
    "8069": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14537,
        14546
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "8070": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14537,
        14559
      ],
      "op": "LT",
      "path": "12"
    },
    "8071": {
      "branch": 240,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14537,
        14559
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8072": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14529,
        14560
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F90"
    },
    "8075": {
      "branch": 240,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14529,
        14560
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8076": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14529,
        14560
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8078": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14529,
        14560
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8079": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14529,
        14560
      ],
      "op": "REVERT",
      "path": "12"
    },
    "8080": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14529,
        14560
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8081": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14633,
        14647
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8083": {
      "offset": [
        2758,
        2759
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "8085": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14650,
        14669
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1FAA"
    },
    "8088": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14667,
        14668
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "8090": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14650,
        14662
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x10"
    },
    "8092": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14650,
        14662
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8093": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14650,
        14666
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3478"
    },
    "8096": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14650,
        14666
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8097": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14650,
        14669
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8098": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14650,
        14669
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8099": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14650,
        14669
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "8104": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14650,
        14669
      ],
      "op": "AND",
      "path": "12"
    },
    "8105": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        14650,
        14669
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8106": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14650,
        14669
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8107": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14650,
        14692
      ],
      "op": "ADD",
      "path": "12"
    },
    "8108": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14740,
        14741
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 46,
      "value": "0x0"
    },
    "8110": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14709,
        14728
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8111": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14709,
        14728
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8112": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14709,
        14728
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8113": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14709,
        14720
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x11"
    },
    "8115": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14709,
        14728
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8117": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14709,
        14728
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8118": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14709,
        14728
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8120": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14709,
        14728
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8121": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14709,
        14728
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "8122": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14709,
        14728
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8123": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14650,
        14692
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8124": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14650,
        14692
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8125": {
      "op": "POP"
    },
    "8126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8130": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8132": {
      "op": "SHL"
    },
    "8133": {
      "op": "SUB"
    },
    "8134": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14709,
        14728
      ],
      "op": "AND",
      "path": "12"
    },
    "8135": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14709,
        14742
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8136": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14702,
        14743
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1FCD"
    },
    "8139": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14702,
        14743
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8140": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14702,
        14743
      ],
      "op": "INVALID",
      "path": "12"
    },
    "8141": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14702,
        14743
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8142": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14803,
        14818
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 47,
      "value": "0x0"
    },
    "8144": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14803,
        14818
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8145": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14803,
        14818
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8146": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14803,
        14818
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8147": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14803,
        14810
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "8149": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14803,
        14818
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8151": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14803,
        14818
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8152": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14803,
        14818
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8154": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14803,
        14818
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8155": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14803,
        14818
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "8156": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14803,
        14824
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8157": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14803,
        14824
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "8159": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14803,
        14824
      ],
      "op": "AND",
      "path": "12"
    },
    "8160": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14803,
        14833
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8161": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14796,
        14834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1FE6"
    },
    "8164": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14796,
        14834
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8165": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14796,
        14834
      ],
      "op": "INVALID",
      "path": "12"
    },
    "8166": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14796,
        14834
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8167": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14921,
        14937
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1FEE"
    },
    "8170": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14921,
        14937
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5206"
    },
    "8173": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        14921,
        14937
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8174": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14921,
        14937
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8175": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14960,
        14964
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 48,
      "value": "0x1"
    },
    "8177": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14947,
        14964
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8178": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14947,
        14964
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8179": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 49,
      "value": "0x40"
    },
    "8181": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8182": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8183": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8185": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "8187": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "DUP11",
      "path": "12"
    },
    "8188": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "ADD",
      "path": "12"
    },
    "8189": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8190": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8191": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "DIV",
      "path": "12"
    },
    "8192": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8193": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "MUL",
      "path": "12"
    },
    "8194": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8195": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "ADD",
      "path": "12"
    },
    "8196": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8197": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "ADD",
      "path": "12"
    },
    "8198": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8199": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "8200": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8201": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "DUP9",
      "path": "12"
    },
    "8202": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8203": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8204": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8205": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14986,
        14994
      ],
      "op": "DUP10",
      "path": "12"
    },
    "8206": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14986,
        14994
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8207": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14986,
        14994
      ],
      "op": "DUP10",
      "path": "12"
    },
    "8208": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14986,
        14994
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8209": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14986,
        14994
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8210": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14986,
        14994
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8211": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "DUP5",
      "path": "12"
    },
    "8212": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "ADD",
      "path": "12"
    },
    "8213": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14986,
        14994
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8214": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14986,
        14994
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8215": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14986,
        14994
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8216": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14986,
        14994
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8217": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "DUP5",
      "path": "12"
    },
    "8218": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "CALLDATACOPY",
      "path": "12"
    },
    "8219": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8221": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8222": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "DUP5",
      "path": "12"
    },
    "8223": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "ADD",
      "path": "12"
    },
    "8224": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8225": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "8227": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "NOT",
      "path": "12"
    },
    "8228": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "8230": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8231": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "ADD",
      "path": "12"
    },
    "8232": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "AND",
      "path": "12"
    },
    "8233": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8234": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "POP",
      "path": "12"
    },
    "8235": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8236": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8237": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "ADD",
      "path": "12"
    },
    "8238": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "8239": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "POP",
      "path": "12"
    },
    "8240": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "POP",
      "path": "12"
    },
    "8241": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "POP",
      "path": "12"
    },
    "8242": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "POP",
      "path": "12"
    },
    "8243": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "POP",
      "path": "12"
    },
    "8244": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "POP",
      "path": "12"
    },
    "8245": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "POP",
      "path": "12"
    },
    "8246": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14978
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8247": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14983
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8249": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14983
      ],
      "op": "ADD",
      "path": "12"
    },
    "8250": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8251": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8252": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8253": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14974,
        14994
      ],
      "op": "POP",
      "path": "12"
    },
    "8254": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15023,
        15035
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 50,
      "value": "0x15"
    },
    "8256": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15023,
        15035
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8257": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15004,
        15008
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8258": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15004,
        15020
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "8260": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15004,
        15020
      ],
      "op": "ADD",
      "path": "12"
    },
    "8261": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15004,
        15035
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8262": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15004,
        15035
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8263": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15004,
        15035
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8264": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15004,
        15035
      ],
      "op": "POP",
      "path": "12"
    },
    "8265": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15004,
        15035
      ],
      "op": "POP",
      "path": "12"
    },
    "8266": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15060,
        15067
      ],
      "op": "DUP9",
      "path": "12",
      "statement": 51
    },
    "8267": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15045,
        15049
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8268": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15045,
        15057
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA0"
    },
    "8270": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15045,
        15057
      ],
      "op": "ADD",
      "path": "12"
    },
    "8271": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15045,
        15067
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8272": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15045,
        15067
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8273": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15045,
        15067
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8274": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15045,
        15067
      ],
      "op": "POP",
      "path": "12"
    },
    "8275": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15045,
        15067
      ],
      "op": "POP",
      "path": "12"
    },
    "8276": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15091,
        15104
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 52,
      "value": "0xF"
    },
    "8278": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15091,
        15113
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8280": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15105,
        15112
      ],
      "op": "DUP11",
      "path": "12"
    },
    "8281": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15091,
        15113
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8282": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15091,
        15113
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8283": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15091,
        15113
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8285": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15091,
        15113
      ],
      "op": "ADD",
      "path": "12"
    },
    "8286": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15091,
        15113
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8287": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15091,
        15113
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8288": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15091,
        15113
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8289": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15091,
        15113
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8291": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15091,
        15113
      ],
      "op": "ADD",
      "path": "12"
    },
    "8292": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15091,
        15113
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8294": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15091,
        15113
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "8295": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15091,
        15120
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "8297": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15091,
        15120
      ],
      "op": "ADD",
      "path": "12"
    },
    "8298": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15091,
        15120
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8299": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15077,
        15081
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8300": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15077,
        15088
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC0"
    },
    "8302": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15077,
        15088
      ],
      "op": "ADD",
      "path": "12"
    },
    "8303": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15077,
        15120
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8304": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15077,
        15120
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8305": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15077,
        15120
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8306": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15077,
        15120
      ],
      "op": "POP",
      "path": "12"
    },
    "8307": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15077,
        15120
      ],
      "op": "POP",
      "path": "12"
    },
    "8308": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15145,
        15158
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 53,
      "value": "0xF"
    },
    "8310": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15145,
        15167
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8312": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15159,
        15166
      ],
      "op": "DUP11",
      "path": "12"
    },
    "8313": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15145,
        15167
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8314": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15145,
        15167
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8315": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15145,
        15167
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8317": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15145,
        15167
      ],
      "op": "ADD",
      "path": "12"
    },
    "8318": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15145,
        15167
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8319": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15145,
        15167
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8320": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15145,
        15167
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8321": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15145,
        15167
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8323": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15145,
        15167
      ],
      "op": "ADD",
      "path": "12"
    },
    "8324": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15145,
        15167
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8326": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15145,
        15167
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "8327": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15145,
        15175
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "8329": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15145,
        15175
      ],
      "op": "ADD",
      "path": "12"
    },
    "8330": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15145,
        15175
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8331": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15130,
        15134
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8332": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15130,
        15142
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "8334": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15130,
        15142
      ],
      "op": "ADD",
      "path": "12"
    },
    "8335": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15130,
        15175
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8336": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15130,
        15175
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8337": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15130,
        15175
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8338": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15130,
        15175
      ],
      "op": "POP",
      "path": "12"
    },
    "8339": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15130,
        15175
      ],
      "op": "POP",
      "path": "12"
    },
    "8340": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15201,
        15214
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 54,
      "value": "0xF"
    },
    "8342": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15201,
        15223
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8344": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15215,
        15222
      ],
      "op": "DUP11",
      "path": "12"
    },
    "8345": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15201,
        15223
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8346": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15201,
        15223
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8347": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15201,
        15223
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8349": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15201,
        15223
      ],
      "op": "ADD",
      "path": "12"
    },
    "8350": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15201,
        15223
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8351": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15201,
        15223
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8352": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15201,
        15223
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8353": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15201,
        15223
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8355": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15201,
        15223
      ],
      "op": "ADD",
      "path": "12"
    },
    "8356": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15201,
        15223
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8358": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15201,
        15223
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "8359": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15201,
        15232
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "8361": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15201,
        15232
      ],
      "op": "ADD",
      "path": "12"
    },
    "8362": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8363": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8364": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "8366": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8367": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "8369": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "AND",
      "path": "12"
    },
    "8370": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8371": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "8374": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "MUL",
      "path": "12"
    },
    "8375": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "SUB",
      "path": "12"
    },
    "8376": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "AND",
      "path": "12"
    },
    "8377": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "8379": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8380": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "DIV",
      "path": "12"
    },
    "8381": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8382": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "8384": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "ADD",
      "path": "12"
    },
    "8385": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8387": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8388": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8389": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "DIV",
      "path": "12"
    },
    "8390": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "MUL",
      "path": "12"
    },
    "8391": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8393": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "ADD",
      "path": "12"
    },
    "8394": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8396": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8397": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8398": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8399": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "ADD",
      "path": "12"
    },
    "8400": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8402": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8403": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8404": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "8405": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8406": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8407": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8408": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8409": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8410": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8412": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "ADD",
      "path": "12"
    },
    "8413": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8414": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8415": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8416": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "8418": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8419": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "8421": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "AND",
      "path": "12"
    },
    "8422": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8423": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "8426": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "MUL",
      "path": "12"
    },
    "8427": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "SUB",
      "path": "12"
    },
    "8428": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "AND",
      "path": "12"
    },
    "8429": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "8431": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8432": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "DIV",
      "path": "12"
    },
    "8433": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8434": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8435": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x213D"
    },
    "8438": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8439": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8440": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "8442": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "LT",
      "path": "12"
    },
    "8443": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2112"
    },
    "8446": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8447": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "8450": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8451": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8452": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8453": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "DIV",
      "path": "12"
    },
    "8454": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "MUL",
      "path": "12"
    },
    "8455": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8456": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8457": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8458": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8460": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "ADD",
      "path": "12"
    },
    "8461": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8462": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x213D"
    },
    "8465": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8466": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8467": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8468": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "ADD",
      "path": "12"
    },
    "8469": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8470": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8471": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8473": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8474": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8476": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8478": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "8479": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8480": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8481": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8482": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8483": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8484": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8485": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8486": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "8488": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "ADD",
      "path": "12"
    },
    "8489": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8490": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8492": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "ADD",
      "path": "12"
    },
    "8493": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8494": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8495": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "GT",
      "path": "12"
    },
    "8496": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2120"
    },
    "8499": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8500": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8501": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8502": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "SUB",
      "path": "12"
    },
    "8503": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "8505": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "AND",
      "path": "12"
    },
    "8506": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8507": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "ADD",
      "path": "12"
    },
    "8508": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8509": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8510": {
      "op": "POP"
    },
    "8511": {
      "op": "POP"
    },
    "8512": {
      "op": "POP"
    },
    "8513": {
      "op": "POP"
    },
    "8514": {
      "op": "POP"
    },
    "8515": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15198
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8517": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15198
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8518": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15198
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8519": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15198
      ],
      "op": "ADD",
      "path": "12"
    },
    "8520": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8521": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8522": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8523": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15232
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8524": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15257
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 55,
      "value": "0x0"
    },
    "8526": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15257
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8527": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15257
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8528": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15257
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8529": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15249
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "8531": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15257
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8533": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15257
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8534": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15257
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8535": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15257
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8536": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15257
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8537": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15257
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8538": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15257
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "8539": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8540": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8541": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8542": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8543": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8545": {
      "op": "NOT"
    },
    "8546": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "8547": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8548": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8549": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8550": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "OR",
      "path": "12"
    },
    "8551": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8552": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8553": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8554": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8555": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8556": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8557": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8558": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8559": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15198
      ],
      "op": "DUP5",
      "path": "12"
    },
    "8560": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15185,
        15198
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "8561": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2181"
    },
    "8564": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "8565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8567": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP6",
      "path": "12"
    },
    "8568": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8569": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "8570": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8571": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8572": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8573": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5188"
    },
    "8576": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        15242,
        15264
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8577": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8578": {
      "op": "POP"
    },
    "8579": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8581": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8582": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8583": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8584": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8585": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8586": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x219D"
    },
    "8589": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8590": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "8592": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP5",
      "path": "12"
    },
    "8593": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8594": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8595": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8597": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8598": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8599": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8600": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8601": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5188"
    },
    "8604": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        15242,
        15264
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8605": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8606": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "POP",
      "path": "12"
    },
    "8607": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "8609": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8610": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8611": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8612": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8613": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "8615": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8616": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8617": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "8619": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8620": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8621": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8622": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8623": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "8625": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8626": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8627": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA0"
    },
    "8629": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8630": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8631": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8632": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8633": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "8635": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8636": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8637": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC0"
    },
    "8639": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8640": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8641": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8642": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8643": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "8645": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8646": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8647": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "8649": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8650": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8651": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8652": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8653": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "8655": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8656": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8657": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "8660": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8661": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8662": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8663": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8664": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "8666": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8667": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8669": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "8672": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "EXP",
      "path": "12"
    },
    "8673": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8674": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8675": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8676": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "8678": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "8679": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "NOT",
      "path": "12"
    },
    "8680": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "8681": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8682": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8683": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "8685": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "8686": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "8687": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "OR",
      "path": "12"
    },
    "8688": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8689": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8690": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "POP",
      "path": "12"
    },
    "8691": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x120"
    },
    "8694": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8695": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8696": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8697": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8698": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "8700": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8701": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "8703": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "8706": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "EXP",
      "path": "12"
    },
    "8707": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8708": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8709": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8710": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "8712": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "8713": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "NOT",
      "path": "12"
    },
    "8714": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "8715": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8716": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8717": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "8719": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "8720": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "8721": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "OR",
      "path": "12"
    },
    "8722": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8723": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8724": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "POP",
      "path": "12"
    },
    "8725": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x140"
    },
    "8728": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8729": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8730": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8731": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8732": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "8734": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8735": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "8737": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "8740": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "EXP",
      "path": "12"
    },
    "8741": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8742": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8743": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8744": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "8746": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "8747": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "NOT",
      "path": "12"
    },
    "8748": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "8749": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8750": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8751": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "8753": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "8754": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "8755": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "OR",
      "path": "12"
    },
    "8756": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8757": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8758": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "POP",
      "path": "12"
    },
    "8759": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x160"
    },
    "8762": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8763": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8764": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8765": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8766": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "8768": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8769": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "8771": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "8774": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "EXP",
      "path": "12"
    },
    "8775": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8776": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8777": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8778": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "8780": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "8781": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "NOT",
      "path": "12"
    },
    "8782": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "8783": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8784": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8785": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "8787": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "8788": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "8789": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "OR",
      "path": "12"
    },
    "8790": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8791": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8792": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "POP",
      "path": "12"
    },
    "8793": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x180"
    },
    "8796": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8797": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8798": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8799": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8800": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "8802": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8803": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "8805": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "8808": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "EXP",
      "path": "12"
    },
    "8809": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8810": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8811": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8812": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "8814": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "8815": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "NOT",
      "path": "12"
    },
    "8816": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "8817": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8818": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8819": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "8821": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "8822": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "8823": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "OR",
      "path": "12"
    },
    "8824": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8825": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8826": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "POP",
      "path": "12"
    },
    "8827": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A0"
    },
    "8830": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8831": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8832": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8833": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8834": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "8836": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8837": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "8839": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "8842": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "EXP",
      "path": "12"
    },
    "8843": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8844": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8845": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8846": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "8848": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "8849": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "NOT",
      "path": "12"
    },
    "8850": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "8851": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8852": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8853": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "8855": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "8856": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "8857": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "OR",
      "path": "12"
    },
    "8858": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8859": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8860": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "POP",
      "path": "12"
    },
    "8861": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1C0"
    },
    "8864": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8865": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8866": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8867": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8868": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "8870": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8871": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "8873": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "8876": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "EXP",
      "path": "12"
    },
    "8877": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8878": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8879": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8880": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "8882": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "8883": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "NOT",
      "path": "12"
    },
    "8884": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "8885": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8886": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8887": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "8889": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "8890": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "8891": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "OR",
      "path": "12"
    },
    "8892": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8893": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8894": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "POP",
      "path": "12"
    },
    "8895": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E0"
    },
    "8898": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8899": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8900": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8901": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8902": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "8904": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8905": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "8907": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "8910": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "EXP",
      "path": "12"
    },
    "8911": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8912": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8913": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8914": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "8916": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "8917": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "NOT",
      "path": "12"
    },
    "8918": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "8919": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8920": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8921": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "8923": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "8924": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "8925": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "OR",
      "path": "12"
    },
    "8926": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8927": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8928": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "POP",
      "path": "12"
    },
    "8929": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x200"
    },
    "8932": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8933": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8934": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8935": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8936": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "8938": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8939": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "8941": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "8944": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "EXP",
      "path": "12"
    },
    "8945": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8946": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8947": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8948": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "8950": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "8951": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "NOT",
      "path": "12"
    },
    "8952": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "8953": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8954": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8955": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "8957": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "8958": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "8959": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "OR",
      "path": "12"
    },
    "8960": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8961": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8962": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "POP",
      "path": "12"
    },
    "8963": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x220"
    },
    "8966": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8967": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8968": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8969": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8970": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "8972": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "8973": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "8975": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "8978": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "EXP",
      "path": "12"
    },
    "8979": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8980": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8981": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8982": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "8984": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "8985": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "NOT",
      "path": "12"
    },
    "8986": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "8987": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8988": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8989": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "8991": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "8992": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "8993": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "OR",
      "path": "12"
    },
    "8994": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8995": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8996": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "POP",
      "path": "12"
    },
    "8997": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x240"
    },
    "9000": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9001": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "9002": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9003": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9004": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "9006": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "9007": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "9009": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "9012": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "EXP",
      "path": "12"
    },
    "9013": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9014": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9015": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9016": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "9018": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "9019": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "NOT",
      "path": "12"
    },
    "9020": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "9021": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9022": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9023": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "9025": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "9026": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "9027": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "OR",
      "path": "12"
    },
    "9028": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9029": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9030": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "POP",
      "path": "12"
    },
    "9031": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "9034": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9035": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "9036": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9037": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9038": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "9040": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "9041": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "9043": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "9046": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "EXP",
      "path": "12"
    },
    "9047": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9048": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9049": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9050": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "9052": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "9053": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "NOT",
      "path": "12"
    },
    "9054": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "9055": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9056": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9057": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "9059": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "9060": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "9061": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "OR",
      "path": "12"
    },
    "9062": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9063": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9064": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "POP",
      "path": "12"
    },
    "9065": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x280"
    },
    "9068": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9069": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "9070": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9071": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9072": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "9074": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "9075": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "9077": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "9080": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "EXP",
      "path": "12"
    },
    "9081": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9082": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9083": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9084": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "9086": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "9087": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "NOT",
      "path": "12"
    },
    "9088": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "9089": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9090": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9091": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "9093": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "9094": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "9095": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "OR",
      "path": "12"
    },
    "9096": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9097": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9098": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "POP",
      "path": "12"
    },
    "9099": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A0"
    },
    "9102": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9103": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "9104": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9105": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9106": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "9108": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "9109": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xD"
    },
    "9111": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "9114": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "EXP",
      "path": "12"
    },
    "9115": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9116": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9117": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9118": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "9120": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "9121": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "NOT",
      "path": "12"
    },
    "9122": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "9123": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9124": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9125": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "9127": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "9128": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "9129": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "OR",
      "path": "12"
    },
    "9130": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9131": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9132": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "POP",
      "path": "12"
    },
    "9133": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C0"
    },
    "9136": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9137": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "9138": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9139": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9140": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "9142": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "9143": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE"
    },
    "9145": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "9148": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "EXP",
      "path": "12"
    },
    "9149": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9150": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9151": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9152": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "9154": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "9155": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "NOT",
      "path": "12"
    },
    "9156": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "9157": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9158": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9159": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "9161": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "9162": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "9163": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "OR",
      "path": "12"
    },
    "9164": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9165": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9166": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "POP",
      "path": "12"
    },
    "9167": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E0"
    },
    "9170": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9171": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "9172": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9173": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9174": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "9176": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "9177": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF"
    },
    "9179": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "9182": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "EXP",
      "path": "12"
    },
    "9183": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9184": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9185": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9186": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "9188": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "9189": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "NOT",
      "path": "12"
    },
    "9190": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "9191": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9192": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9193": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "9195": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "9196": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "9197": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "OR",
      "path": "12"
    },
    "9198": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9199": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9200": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "POP",
      "path": "12"
    },
    "9201": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x300"
    },
    "9204": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9205": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "9206": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9207": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9208": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "9210": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "9211": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x10"
    },
    "9213": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "9216": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "EXP",
      "path": "12"
    },
    "9217": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9218": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9219": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9220": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "9222": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "9223": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "NOT",
      "path": "12"
    },
    "9224": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "9225": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9226": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9227": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "9229": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "9230": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "9231": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "OR",
      "path": "12"
    },
    "9232": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9233": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9234": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "POP",
      "path": "12"
    },
    "9235": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x320"
    },
    "9238": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9239": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "9240": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9241": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9242": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "9244": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "9245": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x11"
    },
    "9247": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "9250": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "EXP",
      "path": "12"
    },
    "9251": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9252": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9253": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9254": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "9256": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "9257": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "NOT",
      "path": "12"
    },
    "9258": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "9259": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9260": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9261": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "9263": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "9264": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "9265": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "OR",
      "path": "12"
    },
    "9266": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9267": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9268": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "POP",
      "path": "12"
    },
    "9269": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x340"
    },
    "9272": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9273": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "9274": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9275": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9276": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "9278": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "ADD",
      "path": "12"
    },
    "9279": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "9281": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "9284": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "EXP",
      "path": "12"
    },
    "9285": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9286": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9287": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9288": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "9290": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "9291": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "NOT",
      "path": "12"
    },
    "9292": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "9293": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9294": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9295": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "9297": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "AND",
      "path": "12"
    },
    "9298": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "MUL",
      "path": "12"
    },
    "9299": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "OR",
      "path": "12"
    },
    "9300": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9301": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9302": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "POP",
      "path": "12"
    },
    "9303": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9304": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "POP",
      "path": "12"
    },
    "9305": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15242,
        15264
      ],
      "op": "POP",
      "path": "12"
    },
    "9306": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15336,
        15353
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9308": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15356,
        15380
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2464"
    },
    "9311": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15373,
        15379
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9312": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15356,
        15372
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3C1B"
    },
    "9315": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        15356,
        15380
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9316": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15356,
        15380
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9317": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15390,
        15419
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 56,
      "value": "0x0"
    },
    "9319": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15390,
        15419
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9320": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15390,
        15419
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9321": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15390,
        15419
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9322": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15390,
        15408
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1A"
    },
    "9324": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15390,
        15419
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9326": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15390,
        15419
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9327": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15390,
        15419
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9329": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15390,
        15419
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9330": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15390,
        15419
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9331": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15390,
        15428
      ],
      "op": "DUP5",
      "path": "12"
    },
    "9332": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15390,
        15428
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9333": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15390,
        15428
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9334": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15336,
        15380
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9335": {
      "op": "POP"
    },
    "9336": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15463,
        15497
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 57,
      "value": "0x2482"
    },
    "9339": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15469,
        15481
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x160B"
    },
    "9342": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15469,
        15479
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34D2"
    },
    "9345": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        15469,
        15481
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9346": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15463,
        15497
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9347": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15570,
        15633
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 58,
      "value": "0x24AE"
    },
    "9350": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15576,
        15588
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x248D"
    },
    "9353": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15576,
        15586
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34D2"
    },
    "9356": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        15576,
        15588
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9357": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15576,
        15588
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9358": {
      "offset": [
        1991,
        1992
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9360": {
      "offset": [
        1247,
        1259
      ],
      "op": "PUSH9",
      "path": "12",
      "value": "0x1B1AE4D6E2EF500000"
    },
    "9370": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15570,
        15633
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9372": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15570,
        15633
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9373": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15570,
        15633
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9374": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15570,
        15633
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9376": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15570,
        15633
      ],
      "op": "ADD",
      "path": "12"
    },
    "9377": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15570,
        15633
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9379": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15570,
        15633
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9380": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15570,
        15633
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9381": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15570,
        15633
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9383": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15570,
        15633
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9384": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15570,
        15633
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9385": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15570,
        15633
      ],
      "op": "POP",
      "path": "12"
    },
    "9386": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15570,
        15575
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34D6"
    },
    "9389": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        15570,
        15633
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9390": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15570,
        15633
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9391": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15729,
        15741
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 59,
      "value": "0x24B6"
    },
    "9394": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15729,
        15739
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34D2"
    },
    "9397": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        15729,
        15741
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9398": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15729,
        15741
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9399": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15707,
        15726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9401": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15707,
        15726
      ],
      "op": "DUP5",
      "path": "12"
    },
    "9402": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15707,
        15726
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9403": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15707,
        15726
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9404": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15707,
        15718
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x11"
    },
    "9406": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15707,
        15726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9408": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15707,
        15726
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9409": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15707,
        15726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9411": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15707,
        15726
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9412": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15707,
        15726
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9413": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15707,
        15741
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9414": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15707,
        15741
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9419": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9421": {
      "op": "SHL"
    },
    "9422": {
      "op": "SUB"
    },
    "9423": {
      "op": "NOT"
    },
    "9424": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15707,
        15741
      ],
      "op": "AND",
      "path": "12"
    },
    "9425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9429": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9431": {
      "op": "SHL"
    },
    "9432": {
      "op": "SUB"
    },
    "9433": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15707,
        15741
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "9434": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15707,
        15741
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9435": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15707,
        15741
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "9436": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15707,
        15741
      ],
      "op": "AND",
      "path": "12"
    },
    "9437": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15707,
        15741
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9438": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15707,
        15741
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9439": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15707,
        15741
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9440": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15707,
        15741
      ],
      "op": "OR",
      "path": "12"
    },
    "9441": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15707,
        15741
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9442": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15707,
        15741
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9443": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15827,
        15839
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 60,
      "value": "0x10"
    },
    "9445": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15827,
        15839
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9446": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15827,
        15846
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F0"
    },
    "9449": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15827,
        15846
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9452": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15827,
        15843
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3478"
    },
    "9455": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        15827,
        15846
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9456": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15827,
        15846
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9457": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15812,
        15824
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x10"
    },
    "9459": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15812,
        15846
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9460": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15917,
        15929
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 61,
      "value": "0x15"
    },
    "9462": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15917,
        15929
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9463": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15899,
        15930
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9465": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15899,
        15930
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9466": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15899,
        15930
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9467": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15899,
        15930
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9468": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15899,
        15916
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x13"
    },
    "9470": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15899,
        15930
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9472": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15899,
        15930
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9473": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15899,
        15930
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9474": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15899,
        15930
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9475": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15899,
        15930
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9477": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15899,
        15930
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9478": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15899,
        15930
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9479": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15899,
        15930
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9480": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15899,
        15939
      ],
      "op": "DUP14",
      "path": "12"
    },
    "9481": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15899,
        15939
      ],
      "op": "DUP5",
      "path": "12"
    },
    "9482": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15899,
        15939
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9483": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15899,
        15939
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9484": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15899,
        15939
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9485": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15899,
        15939
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9486": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15899,
        15939
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9487": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15899,
        15939
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9488": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15899,
        15939
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9489": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15899,
        15946
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x251B"
    },
    "9492": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15899,
        15946
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9493": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15944,
        15945
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "9495": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15899,
        15943
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3478"
    },
    "9498": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        15899,
        15946
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9499": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15899,
        15946
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9500": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15874,
        15886
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x15"
    },
    "9502": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15874,
        15886
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9503": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15856,
        15887
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9505": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15856,
        15887
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9506": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15856,
        15887
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9507": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15856,
        15887
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9508": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15856,
        15873
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x13"
    },
    "9510": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15856,
        15887
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9512": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15856,
        15887
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9513": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15856,
        15887
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9514": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15856,
        15887
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9515": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15856,
        15887
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9517": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15856,
        15887
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9518": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15856,
        15887
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9519": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15856,
        15887
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9520": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15856,
        15896
      ],
      "op": "DUP15",
      "path": "12"
    },
    "9521": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15856,
        15896
      ],
      "op": "DUP5",
      "path": "12"
    },
    "9522": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15856,
        15896
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9523": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15856,
        15896
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9524": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15856,
        15896
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9525": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15856,
        15896
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9526": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15856,
        15896
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9527": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15856,
        15896
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9528": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15856,
        15946
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9529": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15856,
        15946
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9530": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15856,
        15946
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9531": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15856,
        15946
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9532": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16008,
        16057
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2551"
    },
    "9535": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16053,
        16056
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x64"
    },
    "9537": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16008,
        16048
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x254B"
    },
    "9540": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16008,
        16017
      ],
      "op": "DUP8",
      "path": "12"
    },
    "9541": {
      "offset": [
        2159,
        2161
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x19"
    },
    "9543": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16008,
        16021
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3CD3"
    },
    "9546": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        16008,
        16048
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9547": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16008,
        16048
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9548": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16008,
        16052
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9549": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16008,
        16052
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3D2C"
    },
    "9552": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        16008,
        16057
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9553": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16008,
        16057
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9554": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16067,
        16084
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9556": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16087,
        16108
      ],
      "op": "DUP13",
      "path": "12"
    },
    "9557": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16087,
        16108
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9558": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16087,
        16108
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9559": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16087,
        16099
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE"
    },
    "9561": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16087,
        16108
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9563": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16087,
        16108
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9564": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16087,
        16108
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9566": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16087,
        16108
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9567": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16087,
        16108
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9568": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16087,
        16108
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9569": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16087,
        16108
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9570": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9571": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9572": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15987,
        16057
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "9573": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15987,
        16057
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "9574": {
      "op": "POP"
    },
    "9575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9579": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9581": {
      "op": "SHL"
    },
    "9582": {
      "op": "SUB"
    },
    "9583": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16087,
        16108
      ],
      "op": "AND",
      "path": "12"
    },
    "9584": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16087,
        16108
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9585": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16087,
        16108
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9586": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16087,
        16108
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9587": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15987,
        16057
      ],
      "op": "DUP5",
      "path": "12"
    },
    "9588": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15987,
        16057
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9589": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16067,
        16084
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9590": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9591": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16067,
        16084
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9592": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9593": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        15987,
        16057
      ],
      "op": "DUP6",
      "path": "12"
    },
    "9594": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16087,
        16108
      ],
      "op": "DUP8",
      "path": "12"
    },
    "9595": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "GAS",
      "path": "12"
    },
    "9596": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "CALL",
      "path": "12"
    },
    "9597": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "9598": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "POP",
      "path": "12"
    },
    "9599": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "POP",
      "path": "12"
    },
    "9600": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "POP",
      "path": "12"
    },
    "9601": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "9602": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9603": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9605": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9606": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "EQ",
      "path": "12"
    },
    "9607": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25AC"
    },
    "9610": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9611": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9613": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9614": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9615": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "POP",
      "path": "12"
    },
    "9616": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "9618": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "NOT",
      "path": "12"
    },
    "9619": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3F"
    },
    "9621": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "9622": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "ADD",
      "path": "12"
    },
    "9623": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "AND",
      "path": "12"
    },
    "9624": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9625": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "ADD",
      "path": "12"
    },
    "9626": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9628": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9629": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "9630": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9631": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9632": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "9633": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9635": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9637": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "DUP5",
      "path": "12"
    },
    "9638": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "ADD",
      "path": "12"
    },
    "9639": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "9640": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25B1"
    },
    "9643": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9644": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9645": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "9647": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9648": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "POP",
      "path": "12"
    },
    "9649": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9650": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16137,
        16176
      ],
      "op": "POP",
      "path": "12"
    },
    "9651": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16118,
        16176
      ],
      "op": "POP",
      "path": "12"
    },
    "9652": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16118,
        16176
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9653": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16118,
        16176
      ],
      "op": "POP",
      "path": "12"
    },
    "9654": {
      "branch": 241,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16194,
        16201
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 62
    },
    "9655": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25F8"
    },
    "9658": {
      "branch": 241,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9659": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9661": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9662": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9663": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9667": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9669": {
      "op": "SHL"
    },
    "9670": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9671": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9672": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9674": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "9676": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9677": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "ADD",
      "path": "12"
    },
    "9678": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9679": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE"
    },
    "9681": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "9683": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9684": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "ADD",
      "path": "12"
    },
    "9685": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9686": {
      "op": "PUSH14",
      "value": "0x14185E5B595B9D0819985A5B1959"
    },
    "9701": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "9703": {
      "op": "SHL"
    },
    "9704": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x44"
    },
    "9706": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9707": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "ADD",
      "path": "12"
    },
    "9708": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9709": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9710": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9711": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9712": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9713": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9714": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "SUB",
      "path": "12"
    },
    "9715": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x64"
    },
    "9717": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "ADD",
      "path": "12"
    },
    "9718": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9719": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "REVERT",
      "path": "12"
    },
    "9720": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16186,
        16220
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9721": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16280,
        16294
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9723": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16297,
        16342
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260A"
    },
    "9726": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16338,
        16341
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x64"
    },
    "9728": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16297,
        16333
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x254B"
    },
    "9731": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16297,
        16306
      ],
      "op": "DUP11",
      "path": "12"
    },
    "9732": {
      "offset": [
        2215,
        2217
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x19"
    },
    "9734": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16297,
        16310
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3CD3"
    },
    "9737": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        16297,
        16333
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9738": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16297,
        16342
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9739": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16362,
        16369
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 63,
      "value": "0xB"
    },
    "9741": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16362,
        16369
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9742": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16280,
        16342
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9743": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16280,
        16342
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9744": {
      "op": "POP"
    },
    "9745": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16362,
        16381
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x261A"
    },
    "9748": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16362,
        16381
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9749": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16280,
        16342
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9750": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16362,
        16373
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3478"
    },
    "9753": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        16362,
        16381
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9754": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16362,
        16381
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9755": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16352,
        16359
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "9757": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16352,
        16381
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9758": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16411,
        16471
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 64,
      "value": "0x263D"
    },
    "9761": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16433,
        16470
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2634"
    },
    "9764": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16463,
        16469
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9765": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16433,
        16458
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x262E"
    },
    "9768": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16433,
        16442
      ],
      "op": "DUP12",
      "path": "12"
    },
    "9769": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16447,
        16457
      ],
      "op": "DUP9",
      "path": "12"
    },
    "9770": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16433,
        16446
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3D93"
    },
    "9773": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        16433,
        16458
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9774": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16433,
        16458
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9775": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16433,
        16462
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9776": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16433,
        16462
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3D93"
    },
    "9779": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        16433,
        16470
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9780": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16433,
        16470
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9781": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16411,
        16428
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "9783": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16411,
        16428
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9784": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16411,
        16428
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9785": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16411,
        16432
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3478"
    },
    "9788": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        16411,
        16471
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9789": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16411,
        16471
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9790": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16391,
        16408
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "9792": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16391,
        16471
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9793": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16522,
        16546
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 65,
      "value": "0x2649"
    },
    "9796": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16536,
        16545
      ],
      "op": "DUP9",
      "path": "12"
    },
    "9797": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16522,
        16535
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35DE"
    },
    "9800": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        16522,
        16546
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9801": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16522,
        16546
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9802": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16562,
        16594
      ],
      "op": "PUSH32",
      "path": "12",
      "statement": 66,
      "value": "0xF34A510082F5A02E39555458564800FC1FE73BFD8D3AA07CBF063FE662E7657E"
    },
    "9835": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16573,
        16579
      ],
      "op": "DUP8",
      "path": "12"
    },
    "9836": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16581,
        16593
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2673"
    },
    "9839": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16581,
        16591
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34D2"
    },
    "9842": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        16581,
        16593
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9843": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16581,
        16593
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9844": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16562,
        16594
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9846": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16562,
        16594
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9847": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16562,
        16594
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9848": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16562,
        16594
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "9849": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16562,
        16594
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9850": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16562,
        16594
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9857": {
      "op": "SHL"
    },
    "9858": {
      "op": "SUB"
    },
    "9859": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16562,
        16594
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9860": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16562,
        16594
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9861": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16562,
        16594
      ],
      "op": "AND",
      "path": "12"
    },
    "9862": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16562,
        16594
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9864": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16562,
        16594
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9865": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16562,
        16594
      ],
      "op": "ADD",
      "path": "12"
    },
    "9866": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16562,
        16594
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9867": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16562,
        16594
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9868": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16562,
        16594
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9869": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16562,
        16594
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9870": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16562,
        16594
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9871": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16562,
        16594
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9872": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16562,
        16594
      ],
      "op": "SUB",
      "path": "12"
    },
    "9873": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16562,
        16594
      ],
      "op": "ADD",
      "path": "12"
    },
    "9874": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16562,
        16594
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9875": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16562,
        16594
      ],
      "op": "LOG1",
      "path": "12"
    },
    "9876": {
      "op": "POP"
    },
    "9877": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16612,
        16618
      ],
      "op": "SWAP5",
      "path": "12",
      "statement": 67
    },
    "9878": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        16612,
        16618
      ],
      "op": "SWAP13",
      "path": "12"
    },
    "9879": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        14042,
        16625
      ],
      "op": "SWAP12",
      "path": "12"
    },
    "9880": {
      "op": "POP"
    },
    "9881": {
      "op": "POP"
    },
    "9882": {
      "op": "POP"
    },
    "9883": {
      "op": "POP"
    },
    "9884": {
      "op": "POP"
    },
    "9885": {
      "op": "POP"
    },
    "9886": {
      "op": "POP"
    },
    "9887": {
      "op": "POP"
    },
    "9888": {
      "op": "POP"
    },
    "9889": {
      "op": "POP"
    },
    "9890": {
      "op": "POP"
    },
    "9891": {
      "op": "POP"
    },
    "9892": {
      "fn": "CryptoChampions.mintHero",
      "jump": "o",
      "offset": [
        14042,
        16625
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9893": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27608,
        28065
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9894": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27750,
        27755
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9896": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27782,
        27787
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9897": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27815,
        27820
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9899": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27846,
        27851
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9900": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27712,
        27718
      ],
      "op": "DUP5",
      "path": "12"
    },
    "9901": {
      "offset": [
        2758,
        2759
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "9903": {
      "offset": [
        6612,
        6618
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9904": {
      "offset": [
        6612,
        6641
      ],
      "op": "GT",
      "path": "12"
    },
    "9905": {
      "offset": [
        6604,
        6642
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x26B9"
    },
    "9908": {
      "offset": [
        6604,
        6642
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9909": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        6604,
        6642
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9911": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        6604,
        6642
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9912": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        6604,
        6642
      ],
      "op": "REVERT",
      "path": "12"
    },
    "9913": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        6604,
        6642
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9914": {
      "offset": [
        6691,
        6706
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9916": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        6691,
        6706
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9917": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        6691,
        6706
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9918": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        6691,
        6706
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9919": {
      "offset": [
        6691,
        6698
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "9921": {
      "offset": [
        6691,
        6706
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9923": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        6691,
        6706
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9924": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        6691,
        6706
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9926": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        6691,
        6706
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9927": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        6691,
        6706
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9928": {
      "offset": [
        6691,
        6712
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9929": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        6691,
        6712
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "9931": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        6691,
        6712
      ],
      "op": "AND",
      "path": "12"
    },
    "9932": {
      "offset": [
        6683,
        6713
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x26D4"
    },
    "9935": {
      "offset": [
        6683,
        6713
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9936": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        6683,
        6713
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9938": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        6683,
        6713
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9939": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        6683,
        6713
      ],
      "op": "REVERT",
      "path": "12"
    },
    "9940": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        6683,
        6713
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9941": {
      "op": "POP"
    },
    "9942": {
      "op": "POP"
    },
    "9943": {
      "op": "POP"
    },
    "9944": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27908,
        27923
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 68,
      "value": "0x0"
    },
    "9946": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27908,
        27923
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "9947": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27908,
        27923
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9948": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27908,
        27923
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9949": {
      "op": "POP"
    },
    "9950": {
      "op": "POP"
    },
    "9951": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27908,
        27915
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "9953": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27908,
        27923
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9955": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27908,
        27923
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9956": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27908,
        27923
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9958": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27908,
        27923
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9959": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27908,
        27923
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9960": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27908,
        27933
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "9962": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27908,
        27933
      ],
      "op": "ADD",
      "path": "12"
    },
    "9963": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27908,
        27933
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9964": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27908,
        27933
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "9966": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27908,
        27933
      ],
      "op": "PUSH6",
      "path": "12",
      "value": "0x10000000000"
    },
    "9973": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27908,
        27933
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9974": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27908,
        27933
      ],
      "op": "DIV",
      "path": "12"
    },
    "9975": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27908,
        27933
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9976": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27908,
        27933
      ],
      "op": "AND",
      "path": "12"
    },
    "9977": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27908,
        27933
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "9978": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27947,
        27973
      ],
      "op": "PUSH7",
      "path": "12",
      "value": "0x1000000000000"
    },
    "9986": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27947,
        27973
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9987": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27947,
        27973
      ],
      "op": "DIV",
      "path": "12"
    },
    "9988": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27947,
        27973
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9989": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27947,
        27973
      ],
      "op": "AND",
      "path": "12"
    },
    "9990": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27947,
        27973
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "9991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9993": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "9995": {
      "op": "SHL"
    },
    "9996": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27987,
        28011
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9997": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27987,
        28011
      ],
      "op": "DIV",
      "path": "12"
    },
    "9998": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27987,
        28011
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9999": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27987,
        28011
      ],
      "op": "AND",
      "path": "12"
    },
    "10000": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        27987,
        28011
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "10001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10003": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10005": {
      "op": "SHL"
    },
    "10006": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        28025,
        28048
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10007": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        28025,
        28048
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10008": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        28025,
        28048
      ],
      "op": "DIV",
      "path": "12"
    },
    "10009": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        28025,
        28048
      ],
      "op": "AND",
      "path": "12"
    },
    "10010": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        28025,
        28048
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10011": {
      "fn": "CryptoChampions.getHeroLore",
      "jump": "o",
      "offset": [
        27608,
        28065
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10012": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        29774,
        29881
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10013": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        29862,
        29874
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 69,
      "value": "0xD"
    },
    "10015": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        29862,
        29874
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10016": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        29774,
        29881
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10017": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        29774,
        29881
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10018": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "jump": "o",
      "offset": [
        29774,
        29881
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10019": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10020": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3534,
        3550
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "10022": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3593,
        3596
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 70
    },
    "10023": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3593,
        3603
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10024": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3574,
        3582
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10025": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3574,
        3589
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10026": {
      "branch": 280,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3574,
        3603
      ],
      "op": "EQ",
      "path": "5"
    },
    "10027": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2765"
    },
    "10030": {
      "branch": 280,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10031": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10033": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10034": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10038": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10040": {
      "op": "SHL"
    },
    "10041": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10042": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10043": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "10045": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "ADD",
      "path": "5"
    },
    "10046": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10047": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10048": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10050": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "ADD",
      "path": "5"
    },
    "10051": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10052": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10053": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "SUB",
      "path": "5"
    },
    "10054": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10055": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10056": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x29"
    },
    "10058": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10059": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10060": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10062": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "ADD",
      "path": "5"
    },
    "10063": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10064": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5655"
    },
    "10067": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x29"
    },
    "10069": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10070": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "10071": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10073": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "ADD",
      "path": "5"
    },
    "10074": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10075": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "POP",
      "path": "5"
    },
    "10076": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "POP",
      "path": "5"
    },
    "10077": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10079": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10080": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10081": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10082": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "SUB",
      "path": "5"
    },
    "10083": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10084": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "REVERT",
      "path": "5"
    },
    "10085": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10086": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3660,
        3690
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "10088": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3707,
        3715
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10089": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3707,
        3722
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10090": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH8",
      "path": "5",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10099": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10100": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "GT",
      "path": "5"
    },
    "10101": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10102": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "10103": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x277F"
    },
    "10106": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10107": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10109": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10110": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "REVERT",
      "path": "5"
    },
    "10111": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10112": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "POP",
      "path": "5"
    },
    "10113": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10115": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10116": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10117": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10118": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10119": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10120": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10121": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10123": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "MUL",
      "path": "5"
    },
    "10124": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10126": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "ADD",
      "path": "5"
    },
    "10127": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10128": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "ADD",
      "path": "5"
    },
    "10129": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10131": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10132": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10133": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "10134": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x27A9"
    },
    "10137": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10138": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10139": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10141": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "ADD",
      "path": "5"
    },
    "10142": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10144": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10145": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "MUL",
      "path": "5"
    },
    "10146": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10147": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "10148": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10149": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "10150": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "ADD",
      "path": "5"
    },
    "10151": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10152": {
      "op": "POP"
    },
    "10153": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10154": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "POP",
      "path": "5"
    },
    "10155": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3660,
        3723
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10156": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3660,
        3723
      ],
      "op": "POP",
      "path": "5"
    },
    "10157": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3739,
        3748
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10159": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3734,
        3854
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10160": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3758,
        3766
      ],
      "op": "DUP5",
      "path": "5"
    },
    "10161": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3758,
        3773
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10162": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3754,
        3755
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10163": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3754,
        3773
      ],
      "op": "LT",
      "path": "5"
    },
    "10164": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3734,
        3854
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "10165": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3734,
        3854
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2807"
    },
    "10168": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3734,
        3854
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10169": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3813,
        3843
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 71,
      "value": "0x27E8"
    },
    "10172": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3831
      ],
      "op": "DUP6",
      "path": "5"
    },
    "10173": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3832,
        3833
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10174": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10175": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10176": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10177": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "LT",
      "path": "5"
    },
    "10178": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x27C7"
    },
    "10181": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10182": {
      "dev": "Index out of range",
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "INVALID",
      "path": "5"
    },
    "10183": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10184": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10186": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "MUL",
      "path": "5"
    },
    "10187": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10189": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "ADD",
      "path": "5"
    },
    "10190": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "ADD",
      "path": "5"
    },
    "10191": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10192": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3839
      ],
      "op": "DUP6",
      "path": "5"
    },
    "10193": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3840,
        3841
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10194": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10195": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10196": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10197": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "LT",
      "path": "5"
    },
    "10198": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x27DB"
    },
    "10201": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10202": {
      "dev": "Index out of range",
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "INVALID",
      "path": "5"
    },
    "10203": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10204": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10206": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "MUL",
      "path": "5"
    },
    "10207": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10209": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "ADD",
      "path": "5"
    },
    "10210": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "ADD",
      "path": "5"
    },
    "10211": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10212": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3813,
        3822
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1302"
    },
    "10215": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        3813,
        3843
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10216": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3813,
        3843
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10217": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3807
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10218": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3808,
        3809
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10219": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10220": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10221": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10222": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "LT",
      "path": "5"
    },
    "10223": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x27F4"
    },
    "10226": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10227": {
      "dev": "Index out of range",
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "INVALID",
      "path": "5"
    },
    "10228": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10229": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10231": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10232": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10233": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "MUL",
      "path": "5"
    },
    "10234": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10235": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10236": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10237": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "ADD",
      "path": "5"
    },
    "10238": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "ADD",
      "path": "5"
    },
    "10239": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3843
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10240": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3775,
        3778
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 72,
      "value": "0x1"
    },
    "10242": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3775,
        3778
      ],
      "op": "ADD",
      "path": "5"
    },
    "10243": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3734,
        3854
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x27AF"
    },
    "10246": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3734,
        3854
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10247": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3734,
        3854
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10248": {
      "op": "POP"
    },
    "10249": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3871,
        3884
      ],
      "op": "SWAP4",
      "path": "5",
      "statement": 73
    },
    "10250": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "10251": {
      "op": "POP"
    },
    "10252": {
      "op": "POP"
    },
    "10253": {
      "op": "POP"
    },
    "10254": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "o",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10255": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21099,
        21335
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10256": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21187,
        21194
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10258": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21170,
        21176
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10259": {
      "offset": [
        2758,
        2759
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "10261": {
      "offset": [
        6612,
        6618
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10262": {
      "offset": [
        6612,
        6641
      ],
      "op": "GT",
      "path": "12"
    },
    "10263": {
      "offset": [
        6604,
        6642
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x281F"
    },
    "10266": {
      "offset": [
        6604,
        6642
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10267": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        6604,
        6642
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10269": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        6604,
        6642
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10270": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        6604,
        6642
      ],
      "op": "REVERT",
      "path": "12"
    },
    "10271": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        6604,
        6642
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10272": {
      "offset": [
        6691,
        6706
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10274": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        6691,
        6706
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10275": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        6691,
        6706
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10276": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        6691,
        6706
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10277": {
      "offset": [
        6691,
        6698
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "10279": {
      "offset": [
        6691,
        6706
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10281": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        6691,
        6706
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10282": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        6691,
        6706
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10284": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        6691,
        6706
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10285": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        6691,
        6706
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10286": {
      "offset": [
        6691,
        6712
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10287": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        6691,
        6712
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "10289": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        6691,
        6712
      ],
      "op": "AND",
      "path": "12"
    },
    "10290": {
      "offset": [
        6683,
        6713
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x283A"
    },
    "10293": {
      "offset": [
        6683,
        6713
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10294": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        6683,
        6713
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10296": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        6683,
        6713
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10297": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        6683,
        6713
      ],
      "op": "REVERT",
      "path": "12"
    },
    "10298": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        6683,
        6713
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10299": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21245,
        21246
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 74,
      "value": "0x0"
    },
    "10301": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21214,
        21233
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10302": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21214,
        21233
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10303": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21214,
        21233
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10304": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21214,
        21225
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x11"
    },
    "10306": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21214,
        21233
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10308": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21214,
        21233
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10309": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21214,
        21233
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10311": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21214,
        21233
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10312": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21214,
        21233
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10313": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21214,
        21233
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10318": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10320": {
      "op": "SHL"
    },
    "10321": {
      "op": "SUB"
    },
    "10322": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21214,
        21233
      ],
      "op": "AND",
      "path": "12"
    },
    "10323": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21206,
        21248
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x285B"
    },
    "10326": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21206,
        21248
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10327": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21206,
        21248
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10329": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21206,
        21248
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10330": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21206,
        21248
      ],
      "op": "REVERT",
      "path": "12"
    },
    "10331": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21206,
        21248
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10332": {
      "op": "POP"
    },
    "10333": {
      "op": "POP"
    },
    "10334": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21309,
        21328
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 75,
      "value": "0x0"
    },
    "10336": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21309,
        21328
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10337": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21309,
        21328
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10338": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21309,
        21328
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10339": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21309,
        21320
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x11"
    },
    "10341": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21309,
        21328
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10343": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21309,
        21328
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10344": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21309,
        21328
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10346": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21309,
        21328
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10347": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21309,
        21328
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10348": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21309,
        21328
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10353": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10355": {
      "op": "SHL"
    },
    "10356": {
      "op": "SUB"
    },
    "10357": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21309,
        21328
      ],
      "op": "AND",
      "path": "12"
    },
    "10358": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        21309,
        21328
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10359": {
      "fn": "CryptoChampions.getHeroOwner",
      "jump": "o",
      "offset": [
        21099,
        21335
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10360": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24347,
        24642
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10361": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24509,
        24516
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10363": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24483,
        24490
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10364": {
      "offset": [
        1991,
        1992
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10366": {
      "offset": [
        6437,
        6444
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10367": {
      "offset": [
        6437,
        6466
      ],
      "op": "GT",
      "path": "12"
    },
    "10368": {
      "offset": [
        6437,
        6501
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10369": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        6437,
        6501
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10370": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        6437,
        6501
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x288C"
    },
    "10373": {
      "offset": [
        6437,
        6501
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10374": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        6437,
        6501
      ],
      "op": "POP",
      "path": "12"
    },
    "10375": {
      "offset": [
        2758,
        2759
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "10377": {
      "offset": [
        6470,
        6477
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10378": {
      "offset": [
        6470,
        6501
      ],
      "op": "GT",
      "path": "12"
    },
    "10379": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        6470,
        6501
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10380": {
      "offset": [
        6437,
        6501
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10381": {
      "offset": [
        6429,
        6502
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2895"
    },
    "10384": {
      "offset": [
        6429,
        6502
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10385": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        6429,
        6502
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10387": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        6429,
        6502
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10388": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        6429,
        6502
      ],
      "op": "REVERT",
      "path": "12"
    },
    "10389": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        6429,
        6502
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10390": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24549,
        24561
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 76,
      "value": "0x15"
    },
    "10392": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24549,
        24561
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10393": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24540,
        24545
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10394": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24540,
        24561
      ],
      "op": "GT",
      "path": "12"
    },
    "10395": {
      "branch": 242,
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24540,
        24561
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10396": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24532,
        24562
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28A4"
    },
    "10399": {
      "branch": 242,
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24532,
        24562
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10400": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24532,
        24562
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10402": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24532,
        24562
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10403": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24532,
        24562
      ],
      "op": "REVERT",
      "path": "12"
    },
    "10404": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24532,
        24562
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10405": {
      "op": "POP"
    },
    "10406": {
      "op": "POP"
    },
    "10407": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24602,
        24626
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 77,
      "value": "0x0"
    },
    "10409": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24602,
        24626
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10410": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24602,
        24626
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10411": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24602,
        24626
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10412": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24602,
        24619
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x13"
    },
    "10414": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24602,
        24626
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10416": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24602,
        24626
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10417": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24602,
        24626
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10418": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24602,
        24626
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10419": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24602,
        24626
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10421": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24602,
        24626
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10422": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24602,
        24626
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10423": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24602,
        24626
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10424": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24602,
        24635
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "10425": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24602,
        24635
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10426": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24602,
        24635
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10427": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24602,
        24635
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10428": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24602,
        24635
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10429": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24602,
        24635
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10430": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24602,
        24635
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10431": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24602,
        24635
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10432": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24602,
        24635
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10433": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        24602,
        24635
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10434": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "jump": "o",
      "offset": [
        24347,
        24642
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10435": {
      "offset": [
        4369,
        4427
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10436": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1C"
    },
    "10438": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10440": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10441": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10442": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10443": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10445": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10446": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10447": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10448": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10450": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10451": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10452": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10453": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10454": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10455": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10456": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10457": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "10458": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "10460": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "10462": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10464": {
      "op": "NOT"
    },
    "10465": {
      "offset": [
        4369,
        4427
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "10468": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "10470": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP7",
      "path": "12"
    },
    "10471": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "AND",
      "path": "12"
    },
    "10472": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10473": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "MUL",
      "path": "12"
    },
    "10474": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "ADD",
      "path": "12"
    },
    "10475": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10476": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "10477": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "AND",
      "path": "12"
    },
    "10478": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "10479": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10480": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "10481": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DIV",
      "path": "12"
    },
    "10482": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10483": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10484": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "ADD",
      "path": "12"
    },
    "10485": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10486": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10487": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DIV",
      "path": "12"
    },
    "10488": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10489": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "MUL",
      "path": "12"
    },
    "10490": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10491": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "ADD",
      "path": "12"
    },
    "10492": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10493": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "ADD",
      "path": "12"
    },
    "10494": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10495": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "10496": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10497": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10498": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10499": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10500": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10501": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10502": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10503": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "ADD",
      "path": "12"
    },
    "10504": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10505": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10506": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10507": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10508": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2956"
    },
    "10511": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10512": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10513": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "10515": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "LT",
      "path": "12"
    },
    "10516": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x292B"
    },
    "10519": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10520": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "10523": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10524": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10525": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10526": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DIV",
      "path": "12"
    },
    "10527": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "MUL",
      "path": "12"
    },
    "10528": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10529": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10530": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10531": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10533": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "ADD",
      "path": "12"
    },
    "10534": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10535": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2956"
    },
    "10538": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10539": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10540": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10541": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "ADD",
      "path": "12"
    },
    "10542": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10543": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10544": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10546": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10547": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10549": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10551": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10552": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10553": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10554": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10555": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10556": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10557": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10558": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10559": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "10561": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "ADD",
      "path": "12"
    },
    "10562": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10563": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10565": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "ADD",
      "path": "12"
    },
    "10566": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10567": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10568": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "GT",
      "path": "12"
    },
    "10569": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2939"
    },
    "10572": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10573": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10574": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10575": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "SUB",
      "path": "12"
    },
    "10576": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "10578": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "AND",
      "path": "12"
    },
    "10579": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10580": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "ADD",
      "path": "12"
    },
    "10581": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10582": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10583": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "POP",
      "path": "12"
    },
    "10584": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "POP",
      "path": "12"
    },
    "10585": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "POP",
      "path": "12"
    },
    "10586": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "POP",
      "path": "12"
    },
    "10587": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "POP",
      "path": "12"
    },
    "10588": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        4369,
        4427
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10589": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "jump": "o",
      "offset": [
        4369,
        4427
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10590": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13629,
        13882
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10591": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13729,
        13736
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10593": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13711,
        13718
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10594": {
      "offset": [
        1991,
        1992
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10596": {
      "offset": [
        6437,
        6444
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10597": {
      "offset": [
        6437,
        6466
      ],
      "op": "GT",
      "path": "12"
    },
    "10598": {
      "offset": [
        6437,
        6501
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10599": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        6437,
        6501
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10600": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        6437,
        6501
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2972"
    },
    "10603": {
      "offset": [
        6437,
        6501
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10604": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        6437,
        6501
      ],
      "op": "POP",
      "path": "12"
    },
    "10605": {
      "offset": [
        2758,
        2759
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "10607": {
      "offset": [
        6470,
        6477
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10608": {
      "offset": [
        6470,
        6501
      ],
      "op": "GT",
      "path": "12"
    },
    "10609": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        6470,
        6501
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10610": {
      "offset": [
        6437,
        6501
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10611": {
      "offset": [
        6429,
        6502
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x297B"
    },
    "10614": {
      "offset": [
        6429,
        6502
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10615": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        6429,
        6502
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10617": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        6429,
        6502
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10618": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        6429,
        6502
      ],
      "op": "REVERT",
      "path": "12"
    },
    "10619": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        6429,
        6502
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10620": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13789,
        13790
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 78,
      "value": "0x0"
    },
    "10622": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13756,
        13777
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10623": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13756,
        13777
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10624": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13756,
        13777
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10625": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13756,
        13768
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE"
    },
    "10627": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13756,
        13777
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10629": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13756,
        13777
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10630": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13756,
        13777
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10632": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13756,
        13777
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10633": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13756,
        13777
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10634": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13756,
        13777
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10639": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10641": {
      "op": "SHL"
    },
    "10642": {
      "op": "SUB"
    },
    "10643": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13756,
        13777
      ],
      "op": "AND",
      "path": "12"
    },
    "10644": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13748,
        13792
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x299C"
    },
    "10647": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13748,
        13792
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10648": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13748,
        13792
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10650": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13748,
        13792
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10651": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13748,
        13792
      ],
      "op": "REVERT",
      "path": "12"
    },
    "10652": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13748,
        13792
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10653": {
      "op": "POP"
    },
    "10654": {
      "op": "POP"
    },
    "10655": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13854,
        13875
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 79,
      "value": "0x0"
    },
    "10657": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13854,
        13875
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10658": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13854,
        13875
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10659": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13854,
        13875
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10660": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13854,
        13866
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE"
    },
    "10662": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13854,
        13875
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10664": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13854,
        13875
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10665": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13854,
        13875
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10667": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13854,
        13875
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10668": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13854,
        13875
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10669": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13854,
        13875
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10674": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10676": {
      "op": "SHL"
    },
    "10677": {
      "op": "SUB"
    },
    "10678": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13854,
        13875
      ],
      "op": "AND",
      "path": "12"
    },
    "10679": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        13854,
        13875
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10680": {
      "fn": "CryptoChampions.getElderOwner",
      "jump": "o",
      "offset": [
        13629,
        13882
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10681": {
      "offset": [
        3692,
        3721
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10682": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3692,
        3721
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x14"
    },
    "10684": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3692,
        3721
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10685": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3692,
        3721
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10686": {
      "fn": "CryptoChampions.getElderOwner",
      "jump": "o",
      "offset": [
        3692,
        3721
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10687": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28711,
        29317
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10688": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28854,
        28859
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10690": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28885,
        28890
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10691": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28917,
        28922
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10693": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28952,
        28957
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10694": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28987,
        28992
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10696": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29016,
        29021
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10697": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        28816,
        28822
      ],
      "op": "DUP7",
      "path": "12"
    },
    "10698": {
      "offset": [
        2758,
        2759
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "10700": {
      "offset": [
        6612,
        6618
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10701": {
      "offset": [
        6612,
        6641
      ],
      "op": "GT",
      "path": "12"
    },
    "10702": {
      "offset": [
        6604,
        6642
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x29D6"
    },
    "10705": {
      "offset": [
        6604,
        6642
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10706": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        6604,
        6642
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10708": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        6604,
        6642
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10709": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        6604,
        6642
      ],
      "op": "REVERT",
      "path": "12"
    },
    "10710": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        6604,
        6642
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10711": {
      "offset": [
        6691,
        6706
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10713": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        6691,
        6706
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10714": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        6691,
        6706
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10715": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        6691,
        6706
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10716": {
      "offset": [
        6691,
        6698
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "10718": {
      "offset": [
        6691,
        6706
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10720": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        6691,
        6706
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10721": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        6691,
        6706
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10723": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        6691,
        6706
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10724": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        6691,
        6706
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10725": {
      "offset": [
        6691,
        6712
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10726": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        6691,
        6712
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "10728": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        6691,
        6712
      ],
      "op": "AND",
      "path": "12"
    },
    "10729": {
      "offset": [
        6683,
        6713
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x29F1"
    },
    "10732": {
      "offset": [
        6683,
        6713
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10733": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        6683,
        6713
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10735": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        6683,
        6713
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10736": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        6683,
        6713
      ],
      "op": "REVERT",
      "path": "12"
    },
    "10737": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        6683,
        6713
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10738": {
      "op": "POP"
    },
    "10739": {
      "op": "POP"
    },
    "10740": {
      "op": "POP"
    },
    "10741": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29079,
        29094
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 80,
      "value": "0x0"
    },
    "10743": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29079,
        29094
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "10744": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29079,
        29094
      ],
      "op": "DUP6",
      "path": "12"
    },
    "10745": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29079,
        29094
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10746": {
      "op": "POP"
    },
    "10747": {
      "op": "POP"
    },
    "10748": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29079,
        29086
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "10750": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29079,
        29094
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10752": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29079,
        29094
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10753": {
      "op": "POP"
    },
    "10754": {
      "op": "POP"
    },
    "10755": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29079,
        29094
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10757": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29079,
        29094
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10758": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29079,
        29094
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10759": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29079,
        29103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "10761": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29079,
        29103
      ],
      "op": "ADD",
      "path": "12"
    },
    "10762": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29079,
        29103
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10763": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29079,
        29103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "10765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10767": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "10769": {
      "op": "SHL"
    },
    "10770": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29079,
        29103
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10771": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29079,
        29103
      ],
      "op": "DIV",
      "path": "12"
    },
    "10772": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29079,
        29103
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10773": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29079,
        29103
      ],
      "op": "AND",
      "path": "12"
    },
    "10774": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29079,
        29103
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "10775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10777": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "10779": {
      "op": "SHL"
    },
    "10780": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29117,
        29142
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10781": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29117,
        29142
      ],
      "op": "DIV",
      "path": "12"
    },
    "10782": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29117,
        29142
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10783": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29117,
        29142
      ],
      "op": "AND",
      "path": "12"
    },
    "10784": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29117,
        29142
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "10785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10787": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "10789": {
      "op": "SHL"
    },
    "10790": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29156,
        29184
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10791": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29156,
        29184
      ],
      "op": "DIV",
      "path": "12"
    },
    "10792": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29156,
        29184
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10793": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29156,
        29184
      ],
      "op": "AND",
      "path": "12"
    },
    "10794": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29156,
        29184
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "10795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10797": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10799": {
      "op": "SHL"
    },
    "10800": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29198,
        29226
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10801": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29198,
        29226
      ],
      "op": "DIV",
      "path": "12"
    },
    "10802": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29198,
        29226
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10803": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29198,
        29226
      ],
      "op": "AND",
      "path": "12"
    },
    "10804": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29198,
        29226
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "10805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10807": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "10809": {
      "op": "SHL"
    },
    "10810": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29240,
        29262
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10811": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29240,
        29262
      ],
      "op": "DIV",
      "path": "12"
    },
    "10812": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29240,
        29262
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10813": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29240,
        29262
      ],
      "op": "AND",
      "path": "12"
    },
    "10814": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29240,
        29262
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "10815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10817": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "10819": {
      "op": "SHL"
    },
    "10820": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29276,
        29300
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10821": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29276,
        29300
      ],
      "op": "DIV",
      "path": "12"
    },
    "10822": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29276,
        29300
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10823": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29276,
        29300
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10824": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29276,
        29300
      ],
      "op": "AND",
      "path": "12"
    },
    "10825": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        29276,
        29300
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10826": {
      "fn": "CryptoChampions.getHeroStats",
      "jump": "o",
      "offset": [
        28711,
        29317
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10827": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27083,
        27474
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10828": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27233,
        27238
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10830": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27263,
        27268
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10831": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27293,
        27298
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10833": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27323,
        27328
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10834": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27195,
        27201
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10835": {
      "offset": [
        2758,
        2759
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "10837": {
      "offset": [
        6612,
        6618
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10838": {
      "offset": [
        6612,
        6641
      ],
      "op": "GT",
      "path": "12"
    },
    "10839": {
      "offset": [
        6604,
        6642
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A5F"
    },
    "10842": {
      "offset": [
        6604,
        6642
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10843": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        6604,
        6642
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10845": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        6604,
        6642
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10846": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        6604,
        6642
      ],
      "op": "REVERT",
      "path": "12"
    },
    "10847": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        6604,
        6642
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10848": {
      "offset": [
        6691,
        6706
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10850": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        6691,
        6706
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10851": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        6691,
        6706
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10852": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        6691,
        6706
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10853": {
      "offset": [
        6691,
        6698
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "10855": {
      "offset": [
        6691,
        6706
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10857": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        6691,
        6706
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10858": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        6691,
        6706
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10860": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        6691,
        6706
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10861": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        6691,
        6706
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10862": {
      "offset": [
        6691,
        6712
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10863": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        6691,
        6712
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "10865": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        6691,
        6712
      ],
      "op": "AND",
      "path": "12"
    },
    "10866": {
      "offset": [
        6683,
        6713
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A7A"
    },
    "10869": {
      "offset": [
        6683,
        6713
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10870": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        6683,
        6713
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10872": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        6683,
        6713
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10873": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        6683,
        6713
      ],
      "op": "REVERT",
      "path": "12"
    },
    "10874": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        6683,
        6713
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10875": {
      "op": "POP"
    },
    "10876": {
      "op": "POP"
    },
    "10877": {
      "op": "POP"
    },
    "10878": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27372,
        27387
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 81,
      "value": "0x0"
    },
    "10880": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27372,
        27387
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "10881": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27372,
        27387
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10882": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27372,
        27387
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10883": {
      "op": "POP"
    },
    "10884": {
      "op": "POP"
    },
    "10885": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27372,
        27379
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "10887": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27372,
        27387
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10889": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27372,
        27387
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10890": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27372,
        27387
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10892": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27372,
        27387
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10893": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27372,
        27387
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10894": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27372,
        27394
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "10896": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27372,
        27394
      ],
      "op": "ADD",
      "path": "12"
    },
    "10897": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27372,
        27394
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10898": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27372,
        27394
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "10900": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27372,
        27394
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "10903": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27372,
        27394
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10904": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27372,
        27394
      ],
      "op": "DIV",
      "path": "12"
    },
    "10905": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27372,
        27394
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10906": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27372,
        27394
      ],
      "op": "AND",
      "path": "12"
    },
    "10907": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27372,
        27394
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "10908": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27396,
        27418
      ],
      "op": "PUSH3",
      "path": "12",
      "value": "0x10000"
    },
    "10912": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27396,
        27418
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10913": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27396,
        27418
      ],
      "op": "DIV",
      "path": "12"
    },
    "10914": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27396,
        27418
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10915": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27396,
        27418
      ],
      "op": "AND",
      "path": "12"
    },
    "10916": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27396,
        27418
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "10917": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27420,
        27442
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x1000000"
    },
    "10922": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27420,
        27442
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10923": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27420,
        27442
      ],
      "op": "DIV",
      "path": "12"
    },
    "10924": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27420,
        27442
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10925": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27420,
        27442
      ],
      "op": "AND",
      "path": "12"
    },
    "10926": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27420,
        27442
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "10927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10929": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10931": {
      "op": "SHL"
    },
    "10932": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27444,
        27466
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10933": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27444,
        27466
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10934": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27444,
        27466
      ],
      "op": "DIV",
      "path": "12"
    },
    "10935": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27444,
        27466
      ],
      "op": "AND",
      "path": "12"
    },
    "10936": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        27444,
        27466
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10937": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "jump": "o",
      "offset": [
        27083,
        27474
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10938": {
      "offset": [
        3759,
        3786
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10939": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3759,
        3786
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x15"
    },
    "10941": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3759,
        3786
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10942": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3759,
        3786
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10943": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "jump": "o",
      "offset": [
        3759,
        3786
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10944": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10945": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4038,
        4045
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10947": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 82
    },
    "10948": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10949": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10950": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10952": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10953": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10954": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10955": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10957": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10958": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10959": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AD8"
    },
    "10962": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4094
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10963": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4088,
        4093
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10964": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DF0"
    },
    "10967": {
      "fn": "AccessControl.getRoleMember",
      "jump": "i",
      "offset": [
        4064,
        4094
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10968": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4094
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10969": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4057,
        4094
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "10970": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10971": {
      "op": "POP"
    },
    "10972": {
      "op": "POP"
    },
    "10973": {
      "op": "POP"
    },
    "10974": {
      "fn": "AccessControl.getRoleMember",
      "jump": "o",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10975": {
      "offset": [
        2711,
        2759
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10976": {
      "offset": [
        2758,
        2759
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "10978": {
      "offset": [
        2711,
        2759
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10979": {
      "fn": "AccessControl.getRoleMember",
      "jump": "o",
      "offset": [
        2711,
        2759
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10980": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10981": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3019,
        3023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10983": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 83
    },
    "10984": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10985": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10986": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10988": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10989": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10990": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10991": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10993": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10994": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10995": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3080
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AD8"
    },
    "10998": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3080
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10999": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3072,
        3079
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11000": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3463"
    },
    "11003": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        3042,
        3080
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11004": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11005": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9592,
        9602
      ],
      "op": "CALLER",
      "path": "15",
      "statement": 84
    },
    "11006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11010": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11012": {
      "op": "SHL"
    },
    "11013": {
      "op": "SUB"
    },
    "11014": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9606,
        9620
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "11047": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9592,
        9620
      ],
      "op": "AND",
      "path": "15"
    },
    "11048": {
      "branch": 301,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9592,
        9620
      ],
      "op": "EQ",
      "path": "15"
    },
    "11049": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B79"
    },
    "11052": {
      "branch": 301,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11053": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11055": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11056": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11057": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11061": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11063": {
      "op": "SHL"
    },
    "11064": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11065": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11066": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11068": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "11070": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11071": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "ADD",
      "path": "15"
    },
    "11072": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11073": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "11075": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "11077": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11078": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "ADD",
      "path": "15"
    },
    "11079": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11080": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00"
    },
    "11113": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "11115": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11116": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "ADD",
      "path": "15"
    },
    "11117": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11118": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11119": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11120": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11121": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11122": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11123": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "SUB",
      "path": "15"
    },
    "11124": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "11126": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "ADD",
      "path": "15"
    },
    "11127": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11128": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "REVERT",
      "path": "15"
    },
    "11129": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11130": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9666,
        9706
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 85,
      "value": "0x1D31"
    },
    "11133": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9684,
        9693
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11134": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9695,
        9705
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11135": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9666,
        9683
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3DFC"
    },
    "11138": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9666,
        9706
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11139": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11140": {
      "offset": [
        6950,
        6970
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2BAC"
    },
    "11143": {
      "offset": [
        1749,
        1772
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x2172861495E7B85EDAC73E3CD5FBB42DD675BAADF627720E687BCFDACA025096"
    },
    "11176": {
      "offset": [
        6950,
        6958
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3E16"
    },
    "11179": {
      "jump": "i",
      "offset": [
        6950,
        6970
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11180": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        6950,
        6970
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11181": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10970,
        10981
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 86
    },
    "11182": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10954
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x16"
    },
    "11184": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10955,
        10966
      ],
      "op": "DUP5",
      "path": "12"
    },
    "11185": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10955,
        10966
      ],
      "op": "DUP5",
      "path": "12"
    },
    "11186": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10967
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11188": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10967
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "11189": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10967
      ],
      "op": "DUP1",
      "path": "12"
    },
    "11190": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10967
      ],
      "op": "DUP4",
      "path": "12"
    },
    "11191": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10967
      ],
      "op": "DUP4",
      "path": "12"
    },
    "11192": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10967
      ],
      "op": "DUP1",
      "path": "12"
    },
    "11193": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10967
      ],
      "op": "DUP3",
      "path": "12"
    },
    "11194": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10967
      ],
      "op": "DUP5",
      "path": "12"
    },
    "11195": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10967
      ],
      "op": "CALLDATACOPY",
      "path": "12"
    },
    "11196": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10967
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11197": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10967
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11198": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10967
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11199": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10967
      ],
      "op": "ADD",
      "path": "12"
    },
    "11200": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10967
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "11201": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10967
      ],
      "op": "DUP6",
      "path": "12"
    },
    "11202": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10967
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11203": {
      "op": "POP"
    },
    "11204": {
      "op": "POP"
    },
    "11205": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10967
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11207": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10967
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "11208": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10967
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "11209": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10967
      ],
      "op": "DUP4",
      "path": "12"
    },
    "11210": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10967
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11211": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10967
      ],
      "op": "SUB",
      "path": "12"
    },
    "11212": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10967
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11214": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10967
      ],
      "op": "ADD",
      "path": "12"
    },
    "11215": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10967
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11216": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10967
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "11217": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10967
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "11218": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10981
      ],
      "op": "DUP1",
      "path": "12"
    },
    "11219": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10981
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "11220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11226": {
      "op": "SHL"
    },
    "11227": {
      "op": "SUB"
    },
    "11228": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10981
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "11229": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10981
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11230": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10981
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "11231": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10981
      ],
      "op": "AND",
      "path": "12"
    },
    "11232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11236": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11238": {
      "op": "SHL"
    },
    "11239": {
      "op": "SUB"
    },
    "11240": {
      "op": "NOT"
    },
    "11241": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10981
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11242": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10981
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "11243": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10981
      ],
      "op": "AND",
      "path": "12"
    },
    "11244": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10981
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "11245": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10981
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11246": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10981
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "11247": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10981
      ],
      "op": "OR",
      "path": "12"
    },
    "11248": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10981
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11249": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10981
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "11250": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10981
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "11251": {
      "op": "POP"
    },
    "11252": {
      "op": "POP"
    },
    "11253": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10991,
        11001
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 87,
      "value": "0x17"
    },
    "11255": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10991,
        11019
      ],
      "op": "DUP1",
      "path": "12"
    },
    "11256": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10991,
        11019
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "11257": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10981
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "11259": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10991,
        11019
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11260": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10991,
        11019
      ],
      "op": "ADD",
      "path": "12"
    },
    "11261": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10991,
        11019
      ],
      "op": "DUP3",
      "path": "12"
    },
    "11262": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10991,
        11019
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "11263": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10943,
        10967
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11265": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10991,
        11019
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11266": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10991,
        11019
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11267": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10991,
        11019
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11268": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10991,
        11019
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11269": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10991,
        11019
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C31"
    },
    "11272": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10991,
        11019
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11273": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10991,
        11019
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0xC624B66CC0138B8FABC209247F72D758E1CF3343756D543BADBF24212BED8C15"
    },
    "11306": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10991,
        11019
      ],
      "op": "ADD",
      "path": "12"
    },
    "11307": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        11007,
        11018
      ],
      "op": "DUP5",
      "path": "12"
    },
    "11308": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        11007,
        11018
      ],
      "op": "DUP5",
      "path": "12"
    },
    "11309": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10991,
        11019
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x52E3"
    },
    "11312": {
      "fn": "CryptoChampions.createAffinity",
      "jump": "i",
      "offset": [
        10991,
        11019
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11313": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10991,
        11019
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11314": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10991,
        11019
      ],
      "op": "POP",
      "path": "12"
    },
    "11315": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "POP",
      "path": "12"
    },
    "11316": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "POP",
      "path": "12"
    },
    "11317": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        10831,
        11026
      ],
      "op": "POP",
      "path": "12"
    },
    "11318": {
      "fn": "CryptoChampions.createAffinity",
      "jump": "o",
      "offset": [
        10831,
        11026
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11319": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30067,
        30255
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11320": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30154,
        30166
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "11322": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30154,
        30166
      ],
      "op": "DUP1",
      "path": "12"
    },
    "11323": {
      "offset": [
        7081,
        7093
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "11325": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        7081,
        7093
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "11326": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        7081,
        7093
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "11328": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        7081,
        7093
      ],
      "op": "AND",
      "path": "12"
    },
    "11329": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        7081,
        7093
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "11331": {
      "offset": [
        7081,
        7102
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11332": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        7081,
        7102
      ],
      "op": "GT",
      "path": "12"
    },
    "11333": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        7081,
        7102
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "11334": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        7081,
        7102
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C4B"
    },
    "11337": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        7081,
        7102
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "11338": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        7081,
        7102
      ],
      "op": "INVALID",
      "path": "12"
    },
    "11339": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        7081,
        7102
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11340": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        7081,
        7102
      ],
      "op": "EQ",
      "path": "12"
    },
    "11341": {
      "offset": [
        7073,
        7103
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C55"
    },
    "11344": {
      "offset": [
        7073,
        7103
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "11345": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        7073,
        7103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11347": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        7073,
        7103
      ],
      "op": "DUP1",
      "path": "12"
    },
    "11348": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        7073,
        7103
      ],
      "op": "REVERT",
      "path": "12"
    },
    "11349": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        7073,
        7103
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11350": {
      "offset": [
        6841,
        6866
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C7E"
    },
    "11353": {
      "offset": [
        1864,
        1892
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0xAE0C232B87105E0A8134F8B92146DCD1D99373D32394BE9D70F700F90B3A3DB3"
    },
    "11386": {
      "offset": [
        6841,
        6849
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3E16"
    },
    "11389": {
      "jump": "i",
      "offset": [
        6841,
        6866
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11390": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        6841,
        6866
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11391": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30217,
        30229
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 88,
      "value": "0x15"
    },
    "11393": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30217,
        30229
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "11394": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30192,
        30230
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11396": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30192,
        30230
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11397": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30192,
        30230
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11398": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30192,
        30230
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11399": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30192,
        30216
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1C"
    },
    "11401": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30192,
        30230
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11403": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30192,
        30230
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11404": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30192,
        30230
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11406": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30192,
        30230
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11407": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30192,
        30230
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "11408": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30192,
        30248
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C31"
    },
    "11411": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30192,
        30248
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11412": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30233,
        30248
      ],
      "op": "DUP5",
      "path": "12"
    },
    "11413": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30233,
        30248
      ],
      "op": "DUP5",
      "path": "12"
    },
    "11414": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        30192,
        30248
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x52E3"
    },
    "11417": {
      "fn": "CryptoChampions.declareRoundWinner",
      "jump": "i",
      "offset": [
        30192,
        30248
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11418": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9091,
        9540
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11419": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9143,
        9160
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11421": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9143,
        9160
      ],
      "op": "DUP1",
      "path": "12"
    },
    "11422": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9183,
        9195
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "11424": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9183,
        9195
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "11425": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9183,
        9195
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "11427": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9183,
        9195
      ],
      "op": "AND",
      "path": "12"
    },
    "11428": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9183,
        9195
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "11430": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9183,
        9210
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11431": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9183,
        9210
      ],
      "op": "GT",
      "path": "12"
    },
    "11432": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9183,
        9210
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "11433": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9183,
        9210
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2CAE"
    },
    "11436": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9183,
        9210
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "11437": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9183,
        9210
      ],
      "op": "INVALID",
      "path": "12"
    },
    "11438": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9183,
        9210
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11439": {
      "branch": 243,
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9183,
        9210
      ],
      "op": "EQ",
      "path": "12"
    },
    "11440": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9183,
        9265
      ],
      "op": "DUP1",
      "path": "12"
    },
    "11441": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9183,
        9265
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "11442": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9183,
        9265
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2CC1"
    },
    "11445": {
      "branch": 243,
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9183,
        9265
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "11446": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9183,
        9265
      ],
      "op": "POP",
      "path": "12"
    },
    "11447": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9245,
        9265
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "11449": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9245,
        9265
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "11450": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9221,
        9242
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "11452": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9221,
        9242
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "11453": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9221,
        9265
      ],
      "op": "ADD",
      "path": "12"
    },
    "11454": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9214,
        9217
      ],
      "op": "TIMESTAMP",
      "path": "12"
    },
    "11455": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9214,
        9265
      ],
      "op": "LT",
      "path": "12"
    },
    "11456": {
      "branch": 244,
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9214,
        9265
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "11457": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9183,
        9265
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11458": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9179,
        9457
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "11459": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9179,
        9457
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2CD3"
    },
    "11462": {
      "branch": 244,
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9179,
        9457
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "11463": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9281,
        9303
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 89,
      "value": "0x2CCE"
    },
    "11466": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9281,
        9301
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3E29"
    },
    "11469": {
      "fn": "CryptoChampions.refreshPhase",
      "jump": "i",
      "offset": [
        9281,
        9303
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11470": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9281,
        9303
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11471": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9179,
        9457
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2D06"
    },
    "11474": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9179,
        9457
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11475": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9179,
        9457
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11476": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9340,
        9352
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "11478": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9324,
        9336
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "11480": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9324,
        9336
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "11481": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9324,
        9336
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "11483": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9324,
        9336
      ],
      "op": "AND",
      "path": "12"
    },
    "11484": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9324,
        9336
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "11486": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9324,
        9352
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11487": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9324,
        9352
      ],
      "op": "GT",
      "path": "12"
    },
    "11488": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9324,
        9352
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "11489": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9324,
        9352
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2CE6"
    },
    "11492": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9324,
        9352
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "11493": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9324,
        9352
      ],
      "op": "INVALID",
      "path": "12"
    },
    "11494": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9324,
        9352
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11495": {
      "branch": 245,
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9324,
        9352
      ],
      "op": "EQ",
      "path": "12"
    },
    "11496": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9324,
        9408
      ],
      "op": "DUP1",
      "path": "12"
    },
    "11497": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9324,
        9408
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "11498": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9324,
        9408
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2CF9"
    },
    "11501": {
      "branch": 245,
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9324,
        9408
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "11502": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9324,
        9408
      ],
      "op": "POP",
      "path": "12"
    },
    "11503": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9387,
        9408
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "11505": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9387,
        9408
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "11506": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9363,
        9384
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "11508": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9363,
        9384
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "11509": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9363,
        9408
      ],
      "op": "ADD",
      "path": "12"
    },
    "11510": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9356,
        9359
      ],
      "op": "TIMESTAMP",
      "path": "12"
    },
    "11511": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9356,
        9408
      ],
      "op": "LT",
      "path": "12"
    },
    "11512": {
      "branch": 246,
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9356,
        9408
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "11513": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9324,
        9408
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11514": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9320,
        9457
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "11515": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9320,
        9457
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2D06"
    },
    "11518": {
      "branch": 246,
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9320,
        9457
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "11519": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9424,
        9446
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 90,
      "value": "0x2D06"
    },
    "11522": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9424,
        9444
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3E29"
    },
    "11525": {
      "fn": "CryptoChampions.refreshPhase",
      "jump": "i",
      "offset": [
        9424,
        9446
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11526": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9424,
        9446
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11527": {
      "fn": "CryptoChampions.refreshPhase",
      "offset": [
        9091,
        9540
      ],
      "op": "POP",
      "path": "12"
    },
    "11528": {
      "fn": "CryptoChampions.refreshPhase",
      "jump": "o",
      "offset": [
        9091,
        9540
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11529": {
      "offset": [
        1727,
        1776
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11530": {
      "offset": [
        1772,
        1776
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11532": {
      "offset": [
        1727,
        1776
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11533": {
      "fn": "CryptoChampions.refreshPhase",
      "jump": "o",
      "offset": [
        1727,
        1776
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11534": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11535": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4077,
        4085
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 91
    },
    "11536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11540": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11542": {
      "op": "SHL"
    },
    "11543": {
      "op": "SUB"
    },
    "11544": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4061,
        4085
      ],
      "op": "AND",
      "path": "5"
    },
    "11545": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4061,
        4073
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D20"
    },
    "11548": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4061,
        4071
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34D2"
    },
    "11551": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        4061,
        4073
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11552": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4061,
        4073
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11559": {
      "op": "SHL"
    },
    "11560": {
      "op": "SUB"
    },
    "11561": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4061,
        4085
      ],
      "op": "AND",
      "path": "5"
    },
    "11562": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4061,
        4085
      ],
      "op": "EQ",
      "path": "5"
    },
    "11563": {
      "branch": 281,
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4061,
        4085
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "11564": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D66"
    },
    "11567": {
      "branch": 281,
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "11568": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11570": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11571": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11575": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11577": {
      "op": "SHL"
    },
    "11578": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11579": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11580": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "11582": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "ADD",
      "path": "5"
    },
    "11583": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11584": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11585": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "11587": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "ADD",
      "path": "5"
    },
    "11588": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11589": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11590": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "SUB",
      "path": "5"
    },
    "11591": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11592": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11593": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x29"
    },
    "11595": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11596": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11597": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "11599": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "ADD",
      "path": "5"
    },
    "11600": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11601": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x562C"
    },
    "11604": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x29"
    },
    "11606": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11607": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "11608": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11610": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "ADD",
      "path": "5"
    },
    "11611": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11612": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "POP",
      "path": "5"
    },
    "11613": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "POP",
      "path": "5"
    },
    "11614": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11616": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11617": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11618": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11619": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "SUB",
      "path": "5"
    },
    "11620": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11621": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "REVERT",
      "path": "5"
    },
    "11622": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11623": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4187,
        4195
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 92
    },
    "11624": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4160
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "11626": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "11628": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4161,
        4173
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D73"
    },
    "11631": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4161,
        4171
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34D2"
    },
    "11634": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        4161,
        4173
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11635": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4161,
        4173
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11642": {
      "op": "SHL"
    },
    "11643": {
      "op": "SUB"
    },
    "11644": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11645": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11646": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "AND",
      "path": "5"
    },
    "11647": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11648": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11649": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "11651": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11652": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "DUP4",
      "path": "5"
    },
    "11653": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "ADD",
      "path": "5"
    },
    "11654": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "11655": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11656": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "11657": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11658": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11660": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11661": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11662": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "ADD",
      "path": "5"
    },
    "11663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11665": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11666": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11667": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "11668": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11669": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "DUP8",
      "path": "5"
    },
    "11670": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "AND",
      "path": "5"
    },
    "11671": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11672": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11673": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11674": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11675": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11676": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "11677": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11678": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11679": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "11680": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11681": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "11682": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11684": {
      "op": "NOT"
    },
    "11685": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "AND",
      "path": "5"
    },
    "11686": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "11687": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "11688": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "11689": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "11690": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11691": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "11692": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "OR",
      "path": "5"
    },
    "11693": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11694": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11695": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "11696": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4225,
        4237
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 93,
      "value": "0x2DB7"
    },
    "11699": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4225,
        4235
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34D2"
    },
    "11702": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        4225,
        4237
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11703": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4225,
        4237
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11708": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11710": {
      "op": "SHL"
    },
    "11711": {
      "op": "SUB"
    },
    "11712": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "AND",
      "path": "5"
    },
    "11713": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "11746": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4249,
        4257
      ],
      "op": "DUP4",
      "path": "5"
    },
    "11747": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11749": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11750": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11751": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11752": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "11753": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "11754": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11755": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11756": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "11758": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "ADD",
      "path": "5"
    },
    "11759": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11760": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "POP",
      "path": "5"
    },
    "11761": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "POP",
      "path": "5"
    },
    "11762": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11764": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11765": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11766": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11767": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "SUB",
      "path": "5"
    },
    "11768": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11769": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "LOG3",
      "path": "5"
    },
    "11770": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "POP",
      "path": "5"
    },
    "11771": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "POP",
      "path": "5"
    },
    "11772": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "o",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11773": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30431,
        31246
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11774": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30494,
        30505
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11776": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30494,
        30505
      ],
      "op": "DUP1",
      "path": "12"
    },
    "11777": {
      "offset": [
        7081,
        7093
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "11779": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        7081,
        7093
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "11780": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        7081,
        7093
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "11782": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        7081,
        7093
      ],
      "op": "AND",
      "path": "12"
    },
    "11783": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        7081,
        7093
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "11785": {
      "offset": [
        7081,
        7102
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11786": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        7081,
        7102
      ],
      "op": "GT",
      "path": "12"
    },
    "11787": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        7081,
        7102
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "11788": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        7081,
        7102
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E11"
    },
    "11791": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        7081,
        7102
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "11792": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        7081,
        7102
      ],
      "op": "INVALID",
      "path": "12"
    },
    "11793": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        7081,
        7102
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11794": {
      "branch": 247,
      "fn": "CryptoChampions.claimReward",
      "offset": [
        7081,
        7102
      ],
      "op": "EQ",
      "path": "12"
    },
    "11795": {
      "offset": [
        7073,
        7103
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E1B"
    },
    "11798": {
      "branch": 247,
      "offset": [
        7073,
        7103
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "11799": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        7073,
        7103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11801": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        7073,
        7103
      ],
      "op": "DUP1",
      "path": "12"
    },
    "11802": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        7073,
        7103
      ],
      "op": "REVERT",
      "path": "12"
    },
    "11803": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        7073,
        7103
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11804": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30519,
        30525
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11805": {
      "offset": [
        2758,
        2759
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "11807": {
      "offset": [
        6612,
        6618
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11808": {
      "offset": [
        6612,
        6641
      ],
      "op": "GT",
      "path": "12"
    },
    "11809": {
      "offset": [
        6604,
        6642
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E29"
    },
    "11812": {
      "offset": [
        6604,
        6642
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "11813": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        6604,
        6642
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11815": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        6604,
        6642
      ],
      "op": "DUP1",
      "path": "12"
    },
    "11816": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        6604,
        6642
      ],
      "op": "REVERT",
      "path": "12"
    },
    "11817": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        6604,
        6642
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11818": {
      "offset": [
        6691,
        6706
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11820": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        6691,
        6706
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11821": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        6691,
        6706
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11822": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        6691,
        6706
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11823": {
      "offset": [
        6691,
        6698
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "11825": {
      "offset": [
        6691,
        6706
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11827": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        6691,
        6706
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11828": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        6691,
        6706
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11830": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        6691,
        6706
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11831": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        6691,
        6706
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "11832": {
      "offset": [
        6691,
        6712
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "11833": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        6691,
        6712
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "11835": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        6691,
        6712
      ],
      "op": "AND",
      "path": "12"
    },
    "11836": {
      "offset": [
        6683,
        6713
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E44"
    },
    "11839": {
      "offset": [
        6683,
        6713
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "11840": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        6683,
        6713
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11842": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        6683,
        6713
      ],
      "op": "DUP1",
      "path": "12"
    },
    "11843": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        6683,
        6713
      ],
      "op": "REVERT",
      "path": "12"
    },
    "11844": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        6683,
        6713
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11845": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30648,
        30660
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 94,
      "value": "0x15"
    },
    "11847": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30648,
        30660
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "11848": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30617,
        30632
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11850": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30617,
        30632
      ],
      "op": "DUP5",
      "path": "12"
    },
    "11851": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30617,
        30632
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11852": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30617,
        30632
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11853": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30617,
        30624
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "11855": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30617,
        30632
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11857": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30617,
        30632
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11858": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30617,
        30632
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11860": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30617,
        30632
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11861": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30617,
        30632
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "11862": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30617,
        30644
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "11864": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30617,
        30644
      ],
      "op": "ADD",
      "path": "12"
    },
    "11865": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30617,
        30644
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "11866": {
      "branch": 248,
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30617,
        30660
      ],
      "op": "EQ",
      "path": "12"
    },
    "11867": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30609,
        30661
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E63"
    },
    "11870": {
      "branch": 248,
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30609,
        30661
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "11871": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30609,
        30661
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11873": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30609,
        30661
      ],
      "op": "DUP1",
      "path": "12"
    },
    "11874": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30609,
        30661
      ],
      "op": "REVERT",
      "path": "12"
    },
    "11875": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30609,
        30661
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11876": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30781,
        30805
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 95,
      "value": "0x1C"
    },
    "11878": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30781,
        30819
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11880": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30806,
        30818
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x15"
    },
    "11882": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30806,
        30818
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "11883": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30781,
        30819
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11884": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30781,
        30819
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11885": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30781,
        30819
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11887": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30781,
        30819
      ],
      "op": "ADD",
      "path": "12"
    },
    "11888": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30781,
        30819
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11889": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30781,
        30819
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11890": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30781,
        30819
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11891": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30781,
        30819
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11893": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30781,
        30819
      ],
      "op": "ADD",
      "path": "12"
    },
    "11894": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30781,
        30819
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11896": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30781,
        30819
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "11897": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11899": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "11900": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "DUP1",
      "path": "12"
    },
    "11901": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "DUP3",
      "path": "12"
    },
    "11902": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "DUP1",
      "path": "12"
    },
    "11903": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "11904": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "11906": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11907": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "11909": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "AND",
      "path": "12"
    },
    "11910": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "11911": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "11914": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "MUL",
      "path": "12"
    },
    "11915": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "SUB",
      "path": "12"
    },
    "11916": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "AND",
      "path": "12"
    },
    "11917": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "11919": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11920": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "DIV",
      "path": "12"
    },
    "11921": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "DUP1",
      "path": "12"
    },
    "11922": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "11923": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2ED3"
    },
    "11926": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "11927": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "DUP1",
      "path": "12"
    },
    "11928": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "11930": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "LT",
      "path": "12"
    },
    "11931": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2EB1"
    },
    "11934": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "11935": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "11938": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "DUP1",
      "path": "12"
    },
    "11939": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "DUP4",
      "path": "12"
    },
    "11940": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "11941": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "DIV",
      "path": "12"
    },
    "11942": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "MUL",
      "path": "12"
    },
    "11943": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "DUP4",
      "path": "12"
    },
    "11944": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11945": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11946": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "DUP3",
      "path": "12"
    },
    "11947": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "ADD",
      "path": "12"
    },
    "11948": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11949": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2ED3"
    },
    "11952": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11953": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11954": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "DUP3",
      "path": "12"
    },
    "11955": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "ADD",
      "path": "12"
    },
    "11956": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11957": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11958": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11960": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11961": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11963": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11965": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "11966": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11967": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11968": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11969": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "11970": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11971": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11972": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11973": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "11975": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "ADD",
      "path": "12"
    },
    "11976": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11977": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11979": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "ADD",
      "path": "12"
    },
    "11980": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "DUP1",
      "path": "12"
    },
    "11981": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "DUP4",
      "path": "12"
    },
    "11982": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "GT",
      "path": "12"
    },
    "11983": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2EBF"
    },
    "11986": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "11987": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11988": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "POP",
      "path": "12"
    },
    "11989": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "POP",
      "path": "12"
    },
    "11990": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11991": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "POP",
      "path": "12"
    },
    "11992": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "POP",
      "path": "12"
    },
    "11993": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11995": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "11996": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "DUP1",
      "path": "12"
    },
    "11997": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11998": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "SUB",
      "path": "12"
    },
    "11999": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12000": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30765,
        30821
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "12001": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30735,
        30742
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "12003": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30735,
        30750
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12005": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30743,
        30749
      ],
      "op": "DUP6",
      "path": "12"
    },
    "12006": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30735,
        30750
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12007": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30735,
        30750
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12008": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30735,
        30750
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12010": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30735,
        30750
      ],
      "op": "ADD",
      "path": "12"
    },
    "12011": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30735,
        30750
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12012": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30735,
        30750
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12013": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30735,
        30750
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12014": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30735,
        30750
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12016": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30735,
        30750
      ],
      "op": "ADD",
      "path": "12"
    },
    "12017": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30735,
        30750
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12019": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30735,
        30750
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "12020": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30735,
        30759
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "12022": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30735,
        30759
      ],
      "op": "ADD",
      "path": "12"
    },
    "12023": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12025": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12026": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12027": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12028": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12029": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12030": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "12032": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12033": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "12035": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "AND",
      "path": "12"
    },
    "12036": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "12037": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "12040": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "MUL",
      "path": "12"
    },
    "12041": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "SUB",
      "path": "12"
    },
    "12042": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "AND",
      "path": "12"
    },
    "12043": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "12045": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12046": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "DIV",
      "path": "12"
    },
    "12047": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12048": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "12049": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2F51"
    },
    "12052": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "12053": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12054": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "12056": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "LT",
      "path": "12"
    },
    "12057": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2F2F"
    },
    "12060": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "12061": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "12064": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12065": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "DUP4",
      "path": "12"
    },
    "12066": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12067": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "DIV",
      "path": "12"
    },
    "12068": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "MUL",
      "path": "12"
    },
    "12069": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "DUP4",
      "path": "12"
    },
    "12070": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12071": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12072": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12073": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "ADD",
      "path": "12"
    },
    "12074": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12075": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2F51"
    },
    "12078": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12079": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12080": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12081": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "ADD",
      "path": "12"
    },
    "12082": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12083": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12084": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12086": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12087": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12089": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12091": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "12092": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12093": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12094": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12095": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12096": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12097": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12098": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12099": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "12101": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "ADD",
      "path": "12"
    },
    "12102": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12103": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12105": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "ADD",
      "path": "12"
    },
    "12106": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12107": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "DUP4",
      "path": "12"
    },
    "12108": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "GT",
      "path": "12"
    },
    "12109": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2F3D"
    },
    "12112": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "12113": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12114": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "POP",
      "path": "12"
    },
    "12115": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "POP",
      "path": "12"
    },
    "12116": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12117": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "POP",
      "path": "12"
    },
    "12118": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "POP",
      "path": "12"
    },
    "12119": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12121": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12122": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12123": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12124": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "SUB",
      "path": "12"
    },
    "12125": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12126": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30761
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "12127": {
      "branch": 249,
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30719,
        30821
      ],
      "op": "EQ",
      "path": "12"
    },
    "12128": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30711,
        30822
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2F68"
    },
    "12131": {
      "branch": 249,
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30711,
        30822
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "12132": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30711,
        30822
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12134": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30711,
        30822
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12135": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30711,
        30822
      ],
      "op": "REVERT",
      "path": "12"
    },
    "12136": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30711,
        30822
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12137": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30889,
        30916
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 96,
      "value": "0x0"
    },
    "12139": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30889,
        30916
      ],
      "op": "DUP4",
      "path": "12"
    },
    "12140": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30889,
        30916
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12141": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30889,
        30916
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12142": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30889,
        30908
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1D"
    },
    "12144": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30889,
        30916
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12146": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30889,
        30916
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12147": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30889,
        30916
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12148": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30889,
        30916
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12149": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30889,
        30916
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12151": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30889,
        30916
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12152": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30889,
        30916
      ],
      "op": "DUP4",
      "path": "12"
    },
    "12153": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30889,
        30916
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "12154": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30917,
        30929
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x15"
    },
    "12156": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30917,
        30929
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12157": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30889,
        30930
      ],
      "op": "DUP5",
      "path": "12"
    },
    "12158": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30889,
        30930
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12159": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30889,
        30930
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12160": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30889,
        30930
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12161": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30889,
        30930
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12162": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30889,
        30930
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12163": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30889,
        30930
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "12164": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30889,
        30930
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12165": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30889,
        30930
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "12167": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30889,
        30930
      ],
      "op": "AND",
      "path": "12"
    },
    "12168": {
      "branch": 250,
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30889,
        30939
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "12169": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30881,
        30940
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2F91"
    },
    "12172": {
      "branch": 250,
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30881,
        30940
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "12173": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30881,
        30940
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12175": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30881,
        30940
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12176": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30881,
        30940
      ],
      "op": "REVERT",
      "path": "12"
    },
    "12177": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30881,
        30940
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12178": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30993,
        31005
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12180": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31030
      ],
      "op": "DUP4",
      "path": "12"
    },
    "12181": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31030
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12182": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31030
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12183": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31022
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x11"
    },
    "12185": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31030
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12187": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31030
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12188": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31030
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12190": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31030
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12191": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31030
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12192": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31030
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "12193": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31030
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12194": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31044,
        31061
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "12196": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31044,
        31061
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12197": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12198": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12203": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12205": {
      "op": "SHL"
    },
    "12206": {
      "op": "SUB"
    },
    "12207": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31030
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12208": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31030
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12209": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31030
      ],
      "op": "AND",
      "path": "12"
    },
    "12210": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31030
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12211": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31044,
        31061
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12212": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30993,
        31005
      ],
      "op": "DUP4",
      "path": "12"
    },
    "12213": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12214": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30993,
        31005
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12215": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12216": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31044,
        31061
      ],
      "op": "DUP6",
      "path": "12"
    },
    "12217": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31030
      ],
      "op": "DUP8",
      "path": "12"
    },
    "12218": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "GAS",
      "path": "12"
    },
    "12219": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "CALL",
      "path": "12"
    },
    "12220": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "12221": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "POP",
      "path": "12"
    },
    "12222": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "POP",
      "path": "12"
    },
    "12223": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "POP",
      "path": "12"
    },
    "12224": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "12225": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12226": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12228": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12229": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "EQ",
      "path": "12"
    },
    "12230": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2FEB"
    },
    "12233": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "12234": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12236": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12237": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12238": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "POP",
      "path": "12"
    },
    "12239": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "12241": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "NOT",
      "path": "12"
    },
    "12242": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3F"
    },
    "12244": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "12245": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "ADD",
      "path": "12"
    },
    "12246": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "AND",
      "path": "12"
    },
    "12247": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12248": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "ADD",
      "path": "12"
    },
    "12249": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12251": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12252": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "12253": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12254": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12255": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "12256": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12258": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12260": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "DUP5",
      "path": "12"
    },
    "12261": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "ADD",
      "path": "12"
    },
    "12262": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "12263": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2FF0"
    },
    "12266": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12267": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12268": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "12270": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12271": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "POP",
      "path": "12"
    },
    "12272": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12273": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31011,
        31067
      ],
      "op": "POP",
      "path": "12"
    },
    "12274": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30992,
        31067
      ],
      "op": "POP",
      "path": "12"
    },
    "12275": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30992,
        31067
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12276": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        30992,
        31067
      ],
      "op": "POP",
      "path": "12"
    },
    "12277": {
      "branch": 251,
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31085,
        31092
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 97
    },
    "12278": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3037"
    },
    "12281": {
      "branch": 251,
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "12282": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12284": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12285": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12286": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12290": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12292": {
      "op": "SHL"
    },
    "12293": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12294": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12295": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12297": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "12299": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12300": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "ADD",
      "path": "12"
    },
    "12301": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12302": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE"
    },
    "12304": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "12306": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12307": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "ADD",
      "path": "12"
    },
    "12308": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12309": {
      "op": "PUSH14",
      "value": "0x14185E5B595B9D0819985A5B1959"
    },
    "12324": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "12326": {
      "op": "SHL"
    },
    "12327": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x44"
    },
    "12329": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12330": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "ADD",
      "path": "12"
    },
    "12331": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12332": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12333": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12334": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12335": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12336": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12337": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "SUB",
      "path": "12"
    },
    "12338": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x64"
    },
    "12340": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "ADD",
      "path": "12"
    },
    "12341": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12342": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "REVERT",
      "path": "12"
    },
    "12343": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31077,
        31111
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12344": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31163,
        31180
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 98,
      "value": "0xC"
    },
    "12346": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31163,
        31180
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12347": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31141,
        31158
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "12349": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31141,
        31158
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12350": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31141,
        31181
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3046"
    },
    "12353": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31141,
        31181
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12354": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31141,
        31162
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3D93"
    },
    "12357": {
      "fn": "CryptoChampions.claimReward",
      "jump": "i",
      "offset": [
        31141,
        31181
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12358": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31141,
        31181
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12359": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31121,
        31138
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "12361": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31121,
        31181
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "12362": {
      "op": "POP"
    },
    "12363": {
      "op": "POP"
    },
    "12364": {
      "op": "POP"
    },
    "12365": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31191,
        31218
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 99,
      "value": "0x0"
    },
    "12367": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31191,
        31218
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12368": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31191,
        31218
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12369": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31191,
        31218
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12370": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31191,
        31210
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1D"
    },
    "12372": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31191,
        31218
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12374": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31191,
        31218
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12375": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31191,
        31218
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12376": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31191,
        31218
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12377": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31191,
        31218
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12379": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31191,
        31218
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12380": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31191,
        31218
      ],
      "op": "DUP4",
      "path": "12"
    },
    "12381": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31191,
        31218
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "12382": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31219,
        31231
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x15"
    },
    "12384": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31219,
        31231
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12385": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31191,
        31232
      ],
      "op": "DUP5",
      "path": "12"
    },
    "12386": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31191,
        31232
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12387": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31191,
        31232
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12388": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31191,
        31232
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12389": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31191,
        31232
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12390": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31191,
        31232
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12391": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31191,
        31232
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "12392": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31191,
        31239
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12393": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31191,
        31239
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12394": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12396": {
      "op": "NOT"
    },
    "12397": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31191,
        31239
      ],
      "op": "AND",
      "path": "12"
    },
    "12398": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31235,
        31239
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "12400": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31191,
        31239
      ],
      "op": "OR",
      "path": "12"
    },
    "12401": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31191,
        31239
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12402": {
      "fn": "CryptoChampions.claimReward",
      "offset": [
        31191,
        31239
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "12403": {
      "fn": "CryptoChampions.claimReward",
      "jump": "o",
      "offset": [
        30431,
        31246
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12404": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32423,
        32657
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12405": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32562,
        32579
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "12407": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32589,
        32650
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 100,
      "value": "0x2C31"
    },
    "12410": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32606,
        32610
      ],
      "op": "DUP5",
      "path": "12"
    },
    "12411": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32612,
        32614
      ],
      "op": "DUP5",
      "path": "12"
    },
    "12412": {
      "offset": [
        1991,
        1992
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12414": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32637,
        32643
      ],
      "op": "DUP6",
      "path": "12"
    },
    "12415": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32645,
        32649
      ],
      "op": "DUP6",
      "path": "12"
    },
    "12416": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        32589,
        32605
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x321E"
    },
    "12419": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "jump": "i",
      "offset": [
        32589,
        32650
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12420": {
      "offset": [
        2864,
        2895
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12421": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2864,
        2895
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xD"
    },
    "12423": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2864,
        2895
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12424": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2864,
        2895
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12425": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "jump": "o",
      "offset": [
        2864,
        2895
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12426": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12427": {
      "offset": [
        6950,
        6970
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x30B3"
    },
    "12430": {
      "offset": [
        1749,
        1772
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x2172861495E7B85EDAC73E3CD5FBB42DD675BAADF627720E687BCFDACA025096"
    },
    "12463": {
      "offset": [
        6950,
        6958
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3E16"
    },
    "12466": {
      "jump": "i",
      "offset": [
        6950,
        6970
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12467": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6950,
        6970
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12468": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8939,
        8951
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 101,
      "value": "0x6"
    },
    "12470": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8939,
        8959
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12471": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8939,
        8959
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12472": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8954,
        8959
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12473": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8954,
        8959
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12474": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8939,
        8951
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12475": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12477": {
      "op": "NOT"
    },
    "12478": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8939,
        8959
      ],
      "op": "AND",
      "path": "12"
    },
    "12479": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8939,
        8959
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "12481": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8954,
        8959
      ],
      "op": "DUP4",
      "path": "12"
    },
    "12482": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8939,
        8959
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12483": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8939,
        8959
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12484": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8939,
        8959
      ],
      "op": "GT",
      "path": "12"
    },
    "12485": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8939,
        8959
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "12486": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8939,
        8959
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x30CB"
    },
    "12489": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8939,
        8959
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "12490": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8939,
        8959
      ],
      "op": "INVALID",
      "path": "12"
    },
    "12491": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8939,
        8959
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12492": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8939,
        8959
      ],
      "op": "MUL",
      "path": "12"
    },
    "12493": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8939,
        8959
      ],
      "op": "OR",
      "path": "12"
    },
    "12494": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8939,
        8959
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12495": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8939,
        8959
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "12496": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8939,
        8959
      ],
      "op": "POP",
      "path": "12"
    },
    "12497": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        8879,
        8966
      ],
      "op": "POP",
      "path": "12"
    },
    "12498": {
      "fn": "CryptoChampions.setPhase",
      "jump": "o",
      "offset": [
        8879,
        8966
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12499": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12500": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3318,
        3325
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12502": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 102
    },
    "12503": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12504": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12505": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12507": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12508": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12509": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12510": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12512": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12513": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "12514": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3373
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x136E"
    },
    "12517": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3373
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12518": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3371
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FF3"
    },
    "12521": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "i",
      "offset": [
        3344,
        3373
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12522": {
      "offset": [
        3209,
        3240
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12523": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3209,
        3240
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x10"
    },
    "12525": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3209,
        3240
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12526": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3209,
        3240
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12527": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "o",
      "offset": [
        3209,
        3240
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12528": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12529": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5199
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 103,
      "value": "0x0"
    },
    "12531": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12532": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12533": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12534": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12536": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12537": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12538": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12539": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12541": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12542": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "12543": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5215
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "12545": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5215
      ],
      "op": "ADD",
      "path": "0"
    },
    "12546": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5215
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "12547": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5185,
        5230
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x310E"
    },
    "12550": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5185,
        5230
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12551": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5217,
        5229
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CE7"
    },
    "12554": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5217,
        5227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34D2"
    },
    "12557": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5217,
        5229
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12558": {
      "branch": 272,
      "fn": "AccessControl.revokeRole",
      "offset": [
        5185,
        5230
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12559": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D8C"
    },
    "12562": {
      "branch": 272,
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12563": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12565": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12566": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12570": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12572": {
      "op": "SHL"
    },
    "12573": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12574": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12575": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "12577": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "ADD",
      "path": "0"
    },
    "12578": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12579": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12580": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12582": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "ADD",
      "path": "0"
    },
    "12583": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12584": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12585": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "SUB",
      "path": "0"
    },
    "12586": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12587": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12588": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x30"
    },
    "12590": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12591": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12592": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12594": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "ADD",
      "path": "0"
    },
    "12595": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12596": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5537"
    },
    "12599": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x30"
    },
    "12601": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12602": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "12603": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12605": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "ADD",
      "path": "0"
    },
    "12606": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12607": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "POP",
      "path": "0"
    },
    "12608": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "POP",
      "path": "0"
    },
    "12609": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12611": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12612": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12613": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12614": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "SUB",
      "path": "0"
    },
    "12615": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12616": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "REVERT",
      "path": "0"
    },
    "12617": {
      "offset": [
        2279,
        2315
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12618": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        2279,
        2315
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "12620": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        2279,
        2315
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12621": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        2279,
        2315
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12622": {
      "fn": "AccessControl.revokeRole",
      "jump": "o",
      "offset": [
        2279,
        2315
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12623": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11172,
        11281
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12624": {
      "offset": [
        6950,
        6970
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3178"
    },
    "12627": {
      "offset": [
        1749,
        1772
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x2172861495E7B85EDAC73E3CD5FBB42DD675BAADF627720E687BCFDACA025096"
    },
    "12660": {
      "offset": [
        6950,
        6958
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3E16"
    },
    "12663": {
      "jump": "i",
      "offset": [
        6950,
        6970
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12664": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        6950,
        6970
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12665": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11252,
        11266
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 104,
      "value": "0x14"
    },
    "12667": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        11252,
        11274
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "12668": {
      "fn": "CryptoChampions.setElderMintPrice",
      "jump": "o",
      "offset": [
        11172,
        11281
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12669": {
      "offset": [
        3953,
        3979
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12670": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x17"
    },
    "12672": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12673": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12674": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12675": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12676": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "LT",
      "path": "12"
    },
    "12677": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x318A"
    },
    "12680": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "12681": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "INVALID",
      "path": "12"
    },
    "12682": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12683": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12685": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12686": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12687": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12688": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12690": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12691": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12692": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12693": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "12694": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "ADD",
      "path": "12"
    },
    "12695": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12696": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12697": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12699": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12700": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12701": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "12703": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "12705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12707": {
      "op": "NOT"
    },
    "12708": {
      "offset": [
        3953,
        3979
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "12711": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "12713": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DUP8",
      "path": "12"
    },
    "12714": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "AND",
      "path": "12"
    },
    "12715": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "12716": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "MUL",
      "path": "12"
    },
    "12717": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "ADD",
      "path": "12"
    },
    "12718": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12719": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "12720": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "AND",
      "path": "12"
    },
    "12721": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "12722": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12723": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "12724": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DIV",
      "path": "12"
    },
    "12725": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "12726": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DUP4",
      "path": "12"
    },
    "12727": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "ADD",
      "path": "12"
    },
    "12728": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DUP6",
      "path": "12"
    },
    "12729": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12730": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DIV",
      "path": "12"
    },
    "12731": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DUP6",
      "path": "12"
    },
    "12732": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "MUL",
      "path": "12"
    },
    "12733": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12734": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "ADD",
      "path": "12"
    },
    "12735": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DUP6",
      "path": "12"
    },
    "12736": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "ADD",
      "path": "12"
    },
    "12737": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12738": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12739": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12740": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12741": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12742": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12743": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "12744": {
      "op": "POP"
    },
    "12745": {
      "offset": [
        3953,
        3979
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12746": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12747": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DUP4",
      "path": "12"
    },
    "12748": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "ADD",
      "path": "12"
    },
    "12749": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12750": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12751": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12752": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "12753": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2956"
    },
    "12756": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "12757": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12758": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "12760": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "LT",
      "path": "12"
    },
    "12761": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x292B"
    },
    "12764": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "12765": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "12768": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12769": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DUP4",
      "path": "12"
    },
    "12770": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12771": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DIV",
      "path": "12"
    },
    "12772": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "MUL",
      "path": "12"
    },
    "12773": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "DUP4",
      "path": "12"
    },
    "12774": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12775": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12776": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12778": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "ADD",
      "path": "12"
    },
    "12779": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12780": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2956"
    },
    "12783": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3953,
        3979
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12784": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12791": {
      "op": "SHL"
    },
    "12792": {
      "op": "SUB"
    },
    "12793": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 105
    },
    "12794": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12795": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "AND",
      "path": "5"
    },
    "12796": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4431,
        4435
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12798": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12799": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12800": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12801": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4472
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "12803": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12805": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12806": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12807": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12808": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12810": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12811": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12812": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12813": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "12814": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12815": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "12816": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "AND",
      "path": "5"
    },
    "12817": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12818": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12819": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12820": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12821": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12822": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12823": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12824": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12825": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "12827": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "AND",
      "path": "5"
    },
    "12828": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12829": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "o",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12830": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12835": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12837": {
      "op": "SHL"
    },
    "12838": {
      "op": "SUB"
    },
    "12839": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4780,
        4796
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 106
    },
    "12840": {
      "branch": 282,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4780,
        4796
      ],
      "op": "AND",
      "path": "5"
    },
    "12841": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3263"
    },
    "12844": {
      "branch": 282,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12845": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12847": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12848": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12852": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12854": {
      "op": "SHL"
    },
    "12855": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12856": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12857": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "12859": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "ADD",
      "path": "5"
    },
    "12860": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12861": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12862": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12864": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "ADD",
      "path": "5"
    },
    "12865": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12866": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12867": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "SUB",
      "path": "5"
    },
    "12868": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12869": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12870": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x25"
    },
    "12872": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12873": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12874": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12876": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "ADD",
      "path": "5"
    },
    "12877": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12878": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5567"
    },
    "12881": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x25"
    },
    "12883": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12884": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "12885": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12887": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "ADD",
      "path": "5"
    },
    "12888": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12889": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "POP",
      "path": "5"
    },
    "12890": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "POP",
      "path": "5"
    },
    "12891": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12893": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12894": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12895": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12896": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "SUB",
      "path": "5"
    },
    "12897": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12898": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "REVERT",
      "path": "5"
    },
    "12899": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12900": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4877,
        4889
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 107,
      "value": "0x326B"
    },
    "12903": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4877,
        4887
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34D2"
    },
    "12906": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4877,
        4889
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12907": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4877,
        4889
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12914": {
      "op": "SHL"
    },
    "12915": {
      "op": "SUB"
    },
    "12916": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4889
      ],
      "op": "AND",
      "path": "5"
    },
    "12917": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4873
      ],
      "op": "DUP6",
      "path": "5"
    },
    "12918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12922": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12924": {
      "op": "SHL"
    },
    "12925": {
      "op": "SUB"
    },
    "12926": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4889
      ],
      "op": "AND",
      "path": "5"
    },
    "12927": {
      "branch": 283,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4889
      ],
      "op": "EQ",
      "path": "5"
    },
    "12928": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4929
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12929": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4929
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3291"
    },
    "12932": {
      "branch": 283,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4929
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12933": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4929
      ],
      "op": "POP",
      "path": "5"
    },
    "12934": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4893,
        4929
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3291"
    },
    "12937": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4910,
        4914
      ],
      "op": "DUP6",
      "path": "5"
    },
    "12938": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4916,
        4928
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1977"
    },
    "12941": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4916,
        4926
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34D2"
    },
    "12944": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4916,
        4928
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12945": {
      "branch": 284,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4893,
        4929
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12946": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x32CC"
    },
    "12949": {
      "branch": 284,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12950": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12952": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12953": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12957": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12959": {
      "op": "SHL"
    },
    "12960": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12961": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12962": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "12964": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "ADD",
      "path": "5"
    },
    "12965": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12966": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12967": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12969": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "ADD",
      "path": "5"
    },
    "12970": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12971": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12972": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "SUB",
      "path": "5"
    },
    "12973": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12974": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12975": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x29"
    },
    "12977": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12978": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12979": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12981": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "ADD",
      "path": "5"
    },
    "12982": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12983": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x550E"
    },
    "12986": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x29"
    },
    "12988": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12989": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "12990": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12992": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "ADD",
      "path": "5"
    },
    "12993": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12994": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "POP",
      "path": "5"
    },
    "12995": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "POP",
      "path": "5"
    },
    "12996": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12998": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12999": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13000": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13001": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "SUB",
      "path": "5"
    },
    "13002": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13003": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "REVERT",
      "path": "5"
    },
    "13004": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13005": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5007,
        5023
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13007": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5026,
        5038
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x32D6"
    },
    "13010": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5026,
        5036
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34D2"
    },
    "13013": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        5026,
        5038
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13014": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5026,
        5038
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13015": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5007,
        5038
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13016": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5007,
        5038
      ],
      "op": "POP",
      "path": "5"
    },
    "13017": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5049,
        5145
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 108,
      "value": "0x32F6"
    },
    "13020": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5070,
        5078
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13021": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5080,
        5084
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13022": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5086,
        5088
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13023": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5090,
        5111
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x32E7"
    },
    "13026": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5108,
        5110
      ],
      "op": "DUP9",
      "path": "5"
    },
    "13027": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5090,
        5107
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3FFE"
    },
    "13030": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        5090,
        5111
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13031": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5090,
        5111
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13032": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5113,
        5138
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x32F0"
    },
    "13035": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5131,
        5137
      ],
      "op": "DUP9",
      "path": "5"
    },
    "13036": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5113,
        5130
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3FFE"
    },
    "13039": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        5113,
        5138
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13040": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5113,
        5138
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13041": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5140,
        5144
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13042": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5049,
        5069
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x364C"
    },
    "13045": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        5049,
        5145
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13046": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5049,
        5145
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13047": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 109,
      "value": "0x333D"
    },
    "13050": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5202,
        5208
      ],
      "op": "DUP4",
      "path": "5"
    },
    "13051": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13053": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "13054": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13055": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "13057": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "ADD",
      "path": "5"
    },
    "13058": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13060": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13061": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13062": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2A"
    },
    "13064": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13065": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13066": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13068": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "ADD",
      "path": "5"
    },
    "13069": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x55E1"
    },
    "13072": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2A"
    },
    "13074": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13075": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "13076": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13078": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13079": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13080": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13081": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5187
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "13083": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13085": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13086": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13087": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13088": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13090": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13091": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "DUP4",
      "path": "5"
    },
    "13092": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "13093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13097": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13099": {
      "op": "SHL"
    },
    "13100": {
      "op": "SUB"
    },
    "13101": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "DUP14",
      "path": "5"
    },
    "13102": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "AND",
      "path": "5"
    },
    "13103": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "DUP5",
      "path": "5"
    },
    "13104": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13105": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13106": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13107": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13108": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13109": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "13110": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "13111": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13112": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13113": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5201
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3767"
    },
    "13116": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        5178,
        5255
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13117": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13118": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13120": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "DUP6",
      "path": "5"
    },
    "13121": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13122": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13123": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5165
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "13125": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13127": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13128": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13129": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13130": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13132": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13133": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "DUP4",
      "path": "5"
    },
    "13134": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "13135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13139": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13141": {
      "op": "SHL"
    },
    "13142": {
      "op": "SUB"
    },
    "13143": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "DUP12",
      "path": "5"
    },
    "13144": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13145": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "AND",
      "path": "5"
    },
    "13146": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "DUP6",
      "path": "5"
    },
    "13147": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13148": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "13149": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13150": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13151": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "DUP4",
      "path": "5"
    },
    "13152": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "13153": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5255
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "13154": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5255
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13155": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5255
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "13156": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5255
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "13157": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5302
      ],
      "op": "DUP8",
      "path": "5",
      "statement": 110
    },
    "13158": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5302
      ],
      "op": "AND",
      "path": "5"
    },
    "13159": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5302
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13160": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5302
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13161": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5302
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "13162": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5302
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "13163": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5314
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3374"
    },
    "13166": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5314
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13167": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5307,
        5313
      ],
      "op": "DUP5",
      "path": "5"
    },
    "13168": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5306
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3478"
    },
    "13171": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        5285,
        5314
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13172": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5314
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13173": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13175": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "DUP6",
      "path": "5"
    },
    "13176": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13177": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13178": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5274
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "13180": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13182": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13183": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13184": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13185": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13187": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13188": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "DUP4",
      "path": "5"
    },
    "13189": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "13190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13194": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13196": {
      "op": "SHL"
    },
    "13197": {
      "op": "SUB"
    },
    "13198": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13199": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "DUP12",
      "path": "5"
    },
    "13200": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "AND",
      "path": "5"
    },
    "13201": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13202": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "DUP7",
      "path": "5"
    },
    "13203": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13204": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13205": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "DUP5",
      "path": "5"
    },
    "13206": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13207": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "13208": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "DUP3",
      "path": "5"
    },
    "13209": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13210": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "13211": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5314
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "13212": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5314
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13213": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5314
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "13214": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5314
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "13215": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 111
    },
    "13216": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "13217": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP9",
      "path": "5"
    },
    "13218": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13219": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13220": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13221": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP3",
      "path": "5"
    },
    "13222": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "ADD",
      "path": "5"
    },
    "13223": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13224": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13225": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13226": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13227": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "13228": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP11",
      "path": "5"
    },
    "13229": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP5",
      "path": "5"
    },
    "13230": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "AND",
      "path": "5"
    },
    "13231": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "13232": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP7",
      "path": "5"
    },
    "13233": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "AND",
      "path": "5"
    },
    "13234": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "13235": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "13268": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "13269": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13270": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP3",
      "path": "5"
    },
    "13271": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13272": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SUB",
      "path": "5"
    },
    "13273": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "ADD",
      "path": "5"
    },
    "13274": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13275": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "LOG4",
      "path": "5"
    },
    "13276": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5387,
        5455
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 112,
      "value": "0x1BBF"
    },
    "13279": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5418,
        5426
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13280": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5428,
        5432
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13281": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5434,
        5436
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13282": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5438,
        5440
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13283": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5442,
        5448
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13284": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5450,
        5454
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13285": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5387,
        5417
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4042"
    },
    "13288": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        5387,
        5455
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13289": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13290": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22588,
        22595
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13292": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22562,
        22569
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13293": {
      "offset": [
        1991,
        1992
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13295": {
      "offset": [
        6437,
        6444
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13296": {
      "offset": [
        6437,
        6466
      ],
      "op": "GT",
      "path": "12"
    },
    "13297": {
      "offset": [
        6437,
        6501
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13298": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        6437,
        6501
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13299": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        6437,
        6501
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x33FD"
    },
    "13302": {
      "offset": [
        6437,
        6501
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13303": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        6437,
        6501
      ],
      "op": "POP",
      "path": "12"
    },
    "13304": {
      "offset": [
        2758,
        2759
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "13306": {
      "offset": [
        6470,
        6477
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13307": {
      "offset": [
        6470,
        6501
      ],
      "op": "GT",
      "path": "12"
    },
    "13308": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        6470,
        6501
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13309": {
      "offset": [
        6437,
        6501
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13310": {
      "offset": [
        6429,
        6502
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3406"
    },
    "13313": {
      "offset": [
        6429,
        6502
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13314": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        6429,
        6502
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13316": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        6429,
        6502
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13317": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        6429,
        6502
      ],
      "op": "REVERT",
      "path": "12"
    },
    "13318": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        6429,
        6502
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13319": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22628,
        22640
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 113,
      "value": "0x15"
    },
    "13321": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22628,
        22640
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "13322": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22619,
        22624
      ],
      "op": "DUP5",
      "path": "12"
    },
    "13323": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22619,
        22640
      ],
      "op": "GT",
      "path": "12"
    },
    "13324": {
      "branch": 252,
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22619,
        22640
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13325": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22611,
        22641
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3415"
    },
    "13328": {
      "branch": 252,
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22611,
        22641
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13329": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22611,
        22641
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13331": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22611,
        22641
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13332": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22611,
        22641
      ],
      "op": "REVERT",
      "path": "12"
    },
    "13333": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22611,
        22641
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13334": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22699,
        22717
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13336": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22720,
        22744
      ],
      "op": "DUP5",
      "path": "12"
    },
    "13337": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22720,
        22744
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13338": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22720,
        22744
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "13339": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22720,
        22737
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x13"
    },
    "13341": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22720,
        22744
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "13343": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22720,
        22744
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13344": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22720,
        22744
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13345": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22720,
        22744
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "13346": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22720,
        22744
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "13348": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22720,
        22744
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13349": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22720,
        22744
      ],
      "op": "DUP4",
      "path": "12"
    },
    "13350": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22720,
        22744
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "13351": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22720,
        22753
      ],
      "op": "DUP7",
      "path": "12"
    },
    "13352": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22720,
        22753
      ],
      "op": "DUP5",
      "path": "12"
    },
    "13353": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22720,
        22753
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "13354": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22720,
        22753
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13355": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22720,
        22753
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "13356": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22720,
        22753
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "13357": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22720,
        22753
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13358": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22720,
        22753
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "13359": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22720,
        22753
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "13360": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22720,
        22760
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x343A"
    },
    "13363": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22720,
        22760
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13364": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22758,
        22759
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "13366": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22720,
        22757
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3478"
    },
    "13369": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "jump": "i",
      "offset": [
        22720,
        22760
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13370": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22720,
        22760
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13371": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22699,
        22760
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13372": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22699,
        22760
      ],
      "op": "POP",
      "path": "12"
    },
    "13373": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22778,
        22803
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 114,
      "value": "0x3445"
    },
    "13376": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22792,
        22802
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13377": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22778,
        22791
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x41B3"
    },
    "13380": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "jump": "i",
      "offset": [
        22778,
        22803
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13381": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22778,
        22803
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13382": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22771,
        22803
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "13383": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        22430,
        22810
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "13384": {
      "op": "POP"
    },
    "13385": {
      "op": "POP"
    },
    "13386": {
      "op": "POP"
    },
    "13387": {
      "op": "POP"
    },
    "13388": {
      "op": "POP"
    },
    "13389": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "jump": "o",
      "offset": [
        22430,
        22810
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13390": {
      "fn": "EnumerableSet.add",
      "offset": [
        6429,
        6579
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "13391": {
      "fn": "EnumerableSet.add",
      "offset": [
        6499,
        6503
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "13393": {
      "fn": "EnumerableSet.add",
      "offset": [
        6522,
        6572
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 115,
      "value": "0x2AD8"
    },
    "13396": {
      "fn": "EnumerableSet.add",
      "offset": [
        6527,
        6530
      ],
      "op": "DUP4",
      "path": "11"
    },
    "13397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13401": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13403": {
      "op": "SHL"
    },
    "13404": {
      "op": "SUB"
    },
    "13405": {
      "fn": "EnumerableSet.add",
      "offset": [
        6547,
        6570
      ],
      "op": "DUP5",
      "path": "11"
    },
    "13406": {
      "fn": "EnumerableSet.add",
      "offset": [
        6547,
        6570
      ],
      "op": "AND",
      "path": "11"
    },
    "13407": {
      "fn": "EnumerableSet.add",
      "offset": [
        6522,
        6526
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4205"
    },
    "13410": {
      "fn": "EnumerableSet.add",
      "jump": "i",
      "offset": [
        6522,
        6572
      ],
      "op": "JUMP",
      "path": "11"
    },
    "13411": {
      "fn": "EnumerableSet.contains",
      "offset": [
        6984,
        7149
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "13412": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7064,
        7068
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "13414": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7087,
        7142
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 116,
      "value": "0x2AD8"
    },
    "13417": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7097,
        7100
      ],
      "op": "DUP4",
      "path": "11"
    },
    "13418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13422": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13424": {
      "op": "SHL"
    },
    "13425": {
      "op": "SUB"
    },
    "13426": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7117,
        7140
      ],
      "op": "DUP5",
      "path": "11"
    },
    "13427": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7117,
        7140
      ],
      "op": "AND",
      "path": "11"
    },
    "13428": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7087,
        7096
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x424F"
    },
    "13431": {
      "fn": "EnumerableSet.contains",
      "jump": "i",
      "offset": [
        7087,
        7142
      ],
      "op": "JUMP",
      "path": "11"
    },
    "13432": {
      "fn": "SafeMath.add",
      "offset": [
        2690,
        2865
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "13433": {
      "fn": "SafeMath.add",
      "offset": [
        2748,
        2755
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "13435": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "3"
    },
    "13436": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "3"
    },
    "13437": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "ADD",
      "path": "3"
    },
    "13438": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 117
    },
    "13439": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP2",
      "path": "3"
    },
    "13440": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "LT",
      "path": "3"
    },
    "13441": {
      "branch": 294,
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "13442": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AD8"
    },
    "13445": {
      "branch": 294,
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13446": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "13448": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP1",
      "path": "3"
    },
    "13449": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "13450": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13454": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13456": {
      "op": "SHL"
    },
    "13457": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP2",
      "path": "3"
    },
    "13458": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "13459": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "13461": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "13463": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "3"
    },
    "13464": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "3"
    },
    "13465": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "13466": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1B"
    },
    "13468": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "13470": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "3"
    },
    "13471": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "3"
    },
    "13472": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "13473": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "13506": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "13508": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "3"
    },
    "13509": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "3"
    },
    "13510": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "13511": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13512": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "13513": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13514": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP2",
      "path": "3"
    },
    "13515": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13516": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SUB",
      "path": "3"
    },
    "13517": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "13519": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "3"
    },
    "13520": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13521": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "REVERT",
      "path": "3"
    },
    "13522": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "13523": {
      "fn": "Context._msgSender",
      "offset": [
        685,
        695
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 118
    },
    "13524": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "13525": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        598,
        702
      ],
      "op": "JUMP",
      "path": "10"
    },
    "13526": {
      "fn": "ERC1155._mint",
      "offset": [
        8015,
        8587
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13531": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13533": {
      "op": "SHL"
    },
    "13534": {
      "op": "SUB"
    },
    "13535": {
      "fn": "ERC1155._mint",
      "offset": [
        8129,
        8150
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 119
    },
    "13536": {
      "branch": 285,
      "fn": "ERC1155._mint",
      "offset": [
        8129,
        8150
      ],
      "op": "AND",
      "path": "5"
    },
    "13537": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x351B"
    },
    "13540": {
      "branch": 285,
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "13541": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13543": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "13544": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13548": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13550": {
      "op": "SHL"
    },
    "13551": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13552": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13553": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "13555": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "ADD",
      "path": "5"
    },
    "13556": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13557": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13558": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13560": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "ADD",
      "path": "5"
    },
    "13561": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP3",
      "path": "5"
    },
    "13562": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13563": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "SUB",
      "path": "5"
    },
    "13564": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP3",
      "path": "5"
    },
    "13565": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13566": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x21"
    },
    "13568": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13569": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13570": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13572": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "ADD",
      "path": "5"
    },
    "13573": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13574": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x56A6"
    },
    "13577": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x21"
    },
    "13579": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13580": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "13581": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13583": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "ADD",
      "path": "5"
    },
    "13584": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13585": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "POP",
      "path": "5"
    },
    "13586": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "POP",
      "path": "5"
    },
    "13587": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13589": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "13590": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13591": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13592": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "SUB",
      "path": "5"
    },
    "13593": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13594": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "REVERT",
      "path": "5"
    },
    "13595": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13596": {
      "fn": "ERC1155._mint",
      "offset": [
        8199,
        8215
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13598": {
      "fn": "ERC1155._mint",
      "offset": [
        8218,
        8230
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3525"
    },
    "13601": {
      "fn": "ERC1155._mint",
      "offset": [
        8218,
        8228
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34D2"
    },
    "13604": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8218,
        8230
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13605": {
      "fn": "ERC1155._mint",
      "offset": [
        8218,
        8230
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13606": {
      "fn": "ERC1155._mint",
      "offset": [
        8199,
        8230
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13607": {
      "fn": "ERC1155._mint",
      "offset": [
        8199,
        8230
      ],
      "op": "POP",
      "path": "5"
    },
    "13608": {
      "fn": "ERC1155._mint",
      "offset": [
        8241,
        8348
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 120,
      "value": "0x3537"
    },
    "13611": {
      "fn": "ERC1155._mint",
      "offset": [
        8262,
        8270
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13612": {
      "fn": "ERC1155._mint",
      "offset": [
        8280,
        8281
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13614": {
      "fn": "ERC1155._mint",
      "offset": [
        8284,
        8291
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13615": {
      "fn": "ERC1155._mint",
      "offset": [
        8293,
        8314
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x32E7"
    },
    "13618": {
      "fn": "ERC1155._mint",
      "offset": [
        8311,
        8313
      ],
      "op": "DUP9",
      "path": "5"
    },
    "13619": {
      "fn": "ERC1155._mint",
      "offset": [
        8293,
        8310
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3FFE"
    },
    "13622": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8293,
        8314
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13623": {
      "fn": "ERC1155._mint",
      "offset": [
        8241,
        8348
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13624": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 121,
      "value": "0x0"
    },
    "13626": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "DUP5",
      "path": "5"
    },
    "13627": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13628": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13629": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8393
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "13631": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13633": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13634": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13635": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13636": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13638": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13639": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "DUP4",
      "path": "5"
    },
    "13640": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "13641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13645": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13647": {
      "op": "SHL"
    },
    "13648": {
      "op": "SUB"
    },
    "13649": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "DUP10",
      "path": "5"
    },
    "13650": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "AND",
      "path": "5"
    },
    "13651": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "DUP5",
      "path": "5"
    },
    "13652": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13653": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13654": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13655": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13656": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13657": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "13658": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "13659": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8418
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3564"
    },
    "13662": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8418
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13663": {
      "fn": "ERC1155._mint",
      "offset": [
        8411,
        8417
      ],
      "op": "DUP5",
      "path": "5"
    },
    "13664": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8410
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3478"
    },
    "13667": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8384,
        8418
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13668": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8418
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13669": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13671": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "DUP6",
      "path": "5"
    },
    "13672": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13673": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13674": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8368
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "13676": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13678": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13679": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13680": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13681": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13683": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13684": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "DUP4",
      "path": "5"
    },
    "13685": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "13686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13692": {
      "op": "SHL"
    },
    "13693": {
      "op": "SUB"
    },
    "13694": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13695": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "DUP12",
      "path": "5"
    },
    "13696": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "AND",
      "path": "5"
    },
    "13697": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13698": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "DUP7",
      "path": "5"
    },
    "13699": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13700": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13701": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "DUP5",
      "path": "5"
    },
    "13702": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13703": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "DUP3",
      "path": "5"
    },
    "13704": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "DUP6",
      "path": "5"
    },
    "13705": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "13706": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8418
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "13707": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8418
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13708": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8418
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "13709": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8418
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "13710": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 122
    },
    "13711": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "13712": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP10",
      "path": "5"
    },
    "13713": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13714": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13715": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "13716": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP4",
      "path": "5"
    },
    "13717": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "ADD",
      "path": "5"
    },
    "13718": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP9",
      "path": "5"
    },
    "13719": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13720": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13721": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13722": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "13723": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13724": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "13725": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP7",
      "path": "5"
    },
    "13726": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "AND",
      "path": "5"
    },
    "13727": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "13728": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "13761": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "13762": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13763": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP3",
      "path": "5"
    },
    "13764": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13765": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SUB",
      "path": "5"
    },
    "13766": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "ADD",
      "path": "5"
    },
    "13767": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13768": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "LOG4",
      "path": "5"
    },
    "13769": {
      "fn": "ERC1155._mint",
      "offset": [
        8501,
        8580
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 123,
      "value": "0x35D7"
    },
    "13772": {
      "fn": "ERC1155._mint",
      "offset": [
        8532,
        8540
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13773": {
      "fn": "ERC1155._mint",
      "offset": [
        8550,
        8551
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13775": {
      "fn": "ERC1155._mint",
      "offset": [
        8554,
        8561
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13776": {
      "fn": "ERC1155._mint",
      "offset": [
        8563,
        8565
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13777": {
      "fn": "ERC1155._mint",
      "offset": [
        8567,
        8573
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13778": {
      "fn": "ERC1155._mint",
      "offset": [
        8575,
        8579
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13779": {
      "fn": "ERC1155._mint",
      "offset": [
        8501,
        8531
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4042"
    },
    "13782": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8501,
        8580
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13783": {
      "fn": "ERC1155._mint",
      "offset": [
        8501,
        8580
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13784": {
      "fn": "ERC1155._mint",
      "offset": [
        8015,
        8587
      ],
      "op": "POP",
      "path": "5"
    },
    "13785": {
      "fn": "ERC1155._mint",
      "offset": [
        8015,
        8587
      ],
      "op": "POP",
      "path": "5"
    },
    "13786": {
      "fn": "ERC1155._mint",
      "offset": [
        8015,
        8587
      ],
      "op": "POP",
      "path": "5"
    },
    "13787": {
      "fn": "ERC1155._mint",
      "offset": [
        8015,
        8587
      ],
      "op": "POP",
      "path": "5"
    },
    "13788": {
      "fn": "ERC1155._mint",
      "offset": [
        8015,
        8587
      ],
      "op": "POP",
      "path": "5"
    },
    "13789": {
      "fn": "ERC1155._mint",
      "jump": "o",
      "offset": [
        8015,
        8587
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13790": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24734,
        24971
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13791": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24816,
        24817
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13793": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24794,
        24813
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35EA"
    },
    "13796": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24794,
        24803
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "13797": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24808,
        24812
      ],
      "op": "DUP4",
      "path": "12"
    },
    "13798": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24794,
        24807
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3D93"
    },
    "13801": {
      "fn": "CryptoChampions._refundSender",
      "jump": "i",
      "offset": [
        24794,
        24813
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13802": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24794,
        24813
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13803": {
      "branch": 253,
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24794,
        24817
      ],
      "op": "GT",
      "path": "12"
    },
    "13804": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24790,
        24965
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13805": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24790,
        24965
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2D06"
    },
    "13808": {
      "branch": 253,
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24790,
        24965
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13809": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24834,
        24846
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13811": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24862
      ],
      "op": "CALLER",
      "path": "12"
    },
    "13812": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24876,
        24895
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35FD"
    },
    "13815": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24876,
        24885
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "13816": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24890,
        24894
      ],
      "op": "DUP5",
      "path": "12"
    },
    "13817": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24876,
        24889
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3D93"
    },
    "13820": {
      "fn": "CryptoChampions._refundSender",
      "jump": "i",
      "offset": [
        24876,
        24895
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13821": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24876,
        24895
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13822": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "13824": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "13825": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13827": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13828": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13829": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13830": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "DUP6",
      "path": "12"
    },
    "13831": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "DUP8",
      "path": "12"
    },
    "13832": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "GAS",
      "path": "12"
    },
    "13833": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "CALL",
      "path": "12"
    },
    "13834": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "13835": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "POP",
      "path": "12"
    },
    "13836": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "POP",
      "path": "12"
    },
    "13837": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "POP",
      "path": "12"
    },
    "13838": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "13839": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13840": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13842": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13843": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "EQ",
      "path": "12"
    },
    "13844": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3639"
    },
    "13847": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13848": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "13850": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "13851": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "13852": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "POP",
      "path": "12"
    },
    "13853": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "13855": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "NOT",
      "path": "12"
    },
    "13856": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3F"
    },
    "13858": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "13859": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "ADD",
      "path": "12"
    },
    "13860": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "AND",
      "path": "12"
    },
    "13861": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "DUP3",
      "path": "12"
    },
    "13862": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "ADD",
      "path": "12"
    },
    "13863": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "13865": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "13866": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "13867": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "DUP3",
      "path": "12"
    },
    "13868": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "13869": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "13870": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13872": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "13874": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "DUP5",
      "path": "12"
    },
    "13875": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "ADD",
      "path": "12"
    },
    "13876": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "13877": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x363E"
    },
    "13880": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13881": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13882": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "13884": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "13885": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "POP",
      "path": "12"
    },
    "13886": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13887": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24852,
        24901
      ],
      "op": "POP",
      "path": "12"
    },
    "13888": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24833,
        24901
      ],
      "op": "POP",
      "path": "12"
    },
    "13889": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24833,
        24901
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13890": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24833,
        24901
      ],
      "op": "POP",
      "path": "12"
    },
    "13891": {
      "branch": 254,
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24923,
        24930
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 124
    },
    "13892": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24915,
        24931
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D31"
    },
    "13895": {
      "branch": 254,
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24915,
        24931
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13896": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24915,
        24931
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13898": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24915,
        24931
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13899": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        24915,
        24931
      ],
      "op": "REVERT",
      "path": "12"
    },
    "13900": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23376,
        24080
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13901": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23607,
        23673
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 125,
      "value": "0x365A"
    },
    "13904": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23634,
        23642
      ],
      "op": "DUP7",
      "path": "12"
    },
    "13905": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23644,
        23648
      ],
      "op": "DUP7",
      "path": "12"
    },
    "13906": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23650,
        23652
      ],
      "op": "DUP7",
      "path": "12"
    },
    "13907": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23654,
        23657
      ],
      "op": "DUP7",
      "path": "12"
    },
    "13908": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23659,
        23666
      ],
      "op": "DUP7",
      "path": "12"
    },
    "13909": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23668,
        23672
      ],
      "op": "DUP7",
      "path": "12"
    },
    "13910": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23607,
        23633
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1BBF"
    },
    "13913": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        23607,
        23673
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13914": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23607,
        23673
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13915": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23689,
        23698
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13917": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23684,
        24074
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13918": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23708,
        23711
      ],
      "op": "DUP4",
      "path": "12"
    },
    "13919": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23708,
        23718
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "13920": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23704,
        23705
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13921": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23704,
        23718
      ],
      "op": "LT",
      "path": "12"
    },
    "13922": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23684,
        24074
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13923": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23684,
        24074
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x375E"
    },
    "13926": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23684,
        24074
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13927": {
      "offset": [
        1991,
        1992
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13929": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23828,
        23831
      ],
      "op": "DUP5",
      "path": "12"
    },
    "13930": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23832,
        23833
      ],
      "op": "DUP3",
      "path": "12"
    },
    "13931": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23828,
        23834
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13932": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23828,
        23834
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "13933": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23828,
        23834
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13934": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23828,
        23834
      ],
      "op": "LT",
      "path": "12"
    },
    "13935": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23828,
        23834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3674"
    },
    "13938": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23828,
        23834
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13939": {
      "dev": "Index out of range",
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23828,
        23834
      ],
      "op": "INVALID",
      "path": "12"
    },
    "13940": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23828,
        23834
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13941": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23828,
        23834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "13943": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23828,
        23834
      ],
      "op": "MUL",
      "path": "12"
    },
    "13944": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23828,
        23834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "13946": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23828,
        23834
      ],
      "op": "ADD",
      "path": "12"
    },
    "13947": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23828,
        23834
      ],
      "op": "ADD",
      "path": "12"
    },
    "13948": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23828,
        23834
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "13949": {
      "branch": 255,
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23828,
        23856
      ],
      "op": "GT",
      "path": "12"
    },
    "13950": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23828,
        23890
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13951": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23828,
        23890
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13952": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23828,
        23890
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x369D"
    },
    "13955": {
      "branch": 255,
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23828,
        23890
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13956": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23828,
        23890
      ],
      "op": "POP",
      "path": "12"
    },
    "13957": {
      "offset": [
        2758,
        2759
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "13959": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23860,
        23863
      ],
      "op": "DUP5",
      "path": "12"
    },
    "13960": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23864,
        23865
      ],
      "op": "DUP3",
      "path": "12"
    },
    "13961": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23860,
        23866
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13962": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23860,
        23866
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "13963": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23860,
        23866
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13964": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23860,
        23866
      ],
      "op": "LT",
      "path": "12"
    },
    "13965": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23860,
        23866
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3692"
    },
    "13968": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23860,
        23866
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13969": {
      "dev": "Index out of range",
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23860,
        23866
      ],
      "op": "INVALID",
      "path": "12"
    },
    "13970": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23860,
        23866
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13971": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23860,
        23866
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "13973": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23860,
        23866
      ],
      "op": "MUL",
      "path": "12"
    },
    "13974": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23860,
        23866
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "13976": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23860,
        23866
      ],
      "op": "ADD",
      "path": "12"
    },
    "13977": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23860,
        23866
      ],
      "op": "ADD",
      "path": "12"
    },
    "13978": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23860,
        23866
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "13979": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23860,
        23890
      ],
      "op": "GT",
      "path": "12"
    },
    "13980": {
      "branch": 256,
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23860,
        23890
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13981": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23828,
        23890
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13982": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23824,
        23959
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13983": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23824,
        23959
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x36EE"
    },
    "13986": {
      "branch": 256,
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23824,
        23959
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13987": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23941,
        23943
      ],
      "op": "DUP5",
      "path": "12",
      "statement": 126
    },
    "13988": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23922
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE"
    },
    "13990": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23930
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13992": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23923,
        23926
      ],
      "op": "DUP7",
      "path": "12"
    },
    "13993": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23927,
        23928
      ],
      "op": "DUP5",
      "path": "12"
    },
    "13994": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23923,
        23929
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13995": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23923,
        23929
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "13996": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23923,
        23929
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13997": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23923,
        23929
      ],
      "op": "LT",
      "path": "12"
    },
    "13998": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23923,
        23929
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x36B3"
    },
    "14001": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23923,
        23929
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "14002": {
      "dev": "Index out of range",
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23923,
        23929
      ],
      "op": "INVALID",
      "path": "12"
    },
    "14003": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23923,
        23929
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "14004": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23923,
        23929
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "14006": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23923,
        23929
      ],
      "op": "MUL",
      "path": "12"
    },
    "14007": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23923,
        23929
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "14009": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23923,
        23929
      ],
      "op": "ADD",
      "path": "12"
    },
    "14010": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23923,
        23929
      ],
      "op": "ADD",
      "path": "12"
    },
    "14011": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23923,
        23929
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "14012": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23930
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14013": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23930
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "14014": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23930
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "14016": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23930
      ],
      "op": "ADD",
      "path": "12"
    },
    "14017": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23930
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "14018": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23930
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14019": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23930
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "14020": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23930
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "14022": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23930
      ],
      "op": "ADD",
      "path": "12"
    },
    "14023": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23930
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "14025": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23930
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "14026": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23930
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "14028": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23944
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "14031": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23944
      ],
      "op": "EXP",
      "path": "12"
    },
    "14032": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23944
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14033": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23944
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "14034": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23944
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14039": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14041": {
      "op": "SHL"
    },
    "14042": {
      "op": "SUB"
    },
    "14043": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23944
      ],
      "op": "MUL",
      "path": "12"
    },
    "14044": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23944
      ],
      "op": "NOT",
      "path": "12"
    },
    "14045": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23944
      ],
      "op": "AND",
      "path": "12"
    },
    "14046": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23944
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "14047": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23944
      ],
      "op": "DUP4",
      "path": "12"
    },
    "14048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14052": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14054": {
      "op": "SHL"
    },
    "14055": {
      "op": "SUB"
    },
    "14056": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23944
      ],
      "op": "AND",
      "path": "12"
    },
    "14057": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23944
      ],
      "op": "MUL",
      "path": "12"
    },
    "14058": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23944
      ],
      "op": "OR",
      "path": "12"
    },
    "14059": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23944
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "14060": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23944
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "14061": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23910,
        23944
      ],
      "op": "POP",
      "path": "12"
    },
    "14062": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23824,
        23959
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "14063": {
      "offset": [
        2758,
        2759
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "14065": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23976,
        23979
      ],
      "op": "DUP5",
      "path": "12"
    },
    "14066": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23980,
        23981
      ],
      "op": "DUP3",
      "path": "12"
    },
    "14067": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23976,
        23982
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14068": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23976,
        23982
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "14069": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23976,
        23982
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14070": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23976,
        23982
      ],
      "op": "LT",
      "path": "12"
    },
    "14071": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23976,
        23982
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x36FC"
    },
    "14074": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23976,
        23982
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "14075": {
      "dev": "Index out of range",
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23976,
        23982
      ],
      "op": "INVALID",
      "path": "12"
    },
    "14076": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23976,
        23982
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "14077": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23976,
        23982
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "14079": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23976,
        23982
      ],
      "op": "MUL",
      "path": "12"
    },
    "14080": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23976,
        23982
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "14082": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23976,
        23982
      ],
      "op": "ADD",
      "path": "12"
    },
    "14083": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23976,
        23982
      ],
      "op": "ADD",
      "path": "12"
    },
    "14084": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23976,
        23982
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "14085": {
      "branch": 257,
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23976,
        24005
      ],
      "op": "GT",
      "path": "12"
    },
    "14086": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23972,
        24064
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "14087": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23972,
        24064
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3756"
    },
    "14090": {
      "branch": 257,
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23972,
        24064
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "14091": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24047,
        24049
      ],
      "op": "DUP5",
      "path": "12",
      "statement": 127
    },
    "14092": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24036
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x11"
    },
    "14094": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24044
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "14096": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24037,
        24040
      ],
      "op": "DUP7",
      "path": "12"
    },
    "14097": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24041,
        24042
      ],
      "op": "DUP5",
      "path": "12"
    },
    "14098": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24037,
        24043
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14099": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24037,
        24043
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "14100": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24037,
        24043
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14101": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24037,
        24043
      ],
      "op": "LT",
      "path": "12"
    },
    "14102": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24037,
        24043
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x371B"
    },
    "14105": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24037,
        24043
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "14106": {
      "dev": "Index out of range",
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24037,
        24043
      ],
      "op": "INVALID",
      "path": "12"
    },
    "14107": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24037,
        24043
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "14108": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24037,
        24043
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "14110": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24037,
        24043
      ],
      "op": "MUL",
      "path": "12"
    },
    "14111": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24037,
        24043
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "14113": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24037,
        24043
      ],
      "op": "ADD",
      "path": "12"
    },
    "14114": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24037,
        24043
      ],
      "op": "ADD",
      "path": "12"
    },
    "14115": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24037,
        24043
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "14116": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24044
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14117": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24044
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "14118": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24044
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "14120": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24044
      ],
      "op": "ADD",
      "path": "12"
    },
    "14121": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24044
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "14122": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24044
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14123": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24044
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "14124": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24044
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "14126": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24044
      ],
      "op": "ADD",
      "path": "12"
    },
    "14127": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24044
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "14129": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24044
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "14130": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24044
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "14132": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24049
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "14135": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24049
      ],
      "op": "EXP",
      "path": "12"
    },
    "14136": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24049
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14137": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24049
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "14138": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24049
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14145": {
      "op": "SHL"
    },
    "14146": {
      "op": "SUB"
    },
    "14147": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24049
      ],
      "op": "MUL",
      "path": "12"
    },
    "14148": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24049
      ],
      "op": "NOT",
      "path": "12"
    },
    "14149": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24049
      ],
      "op": "AND",
      "path": "12"
    },
    "14150": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24049
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "14151": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24049
      ],
      "op": "DUP4",
      "path": "12"
    },
    "14152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14158": {
      "op": "SHL"
    },
    "14159": {
      "op": "SUB"
    },
    "14160": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24049
      ],
      "op": "AND",
      "path": "12"
    },
    "14161": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24049
      ],
      "op": "MUL",
      "path": "12"
    },
    "14162": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24049
      ],
      "op": "OR",
      "path": "12"
    },
    "14163": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24049
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "14164": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24049
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "14165": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        24025,
        24049
      ],
      "op": "POP",
      "path": "12"
    },
    "14166": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23972,
        24064
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "14167": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23720,
        23723
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 128,
      "value": "0x1"
    },
    "14169": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23720,
        23723
      ],
      "op": "ADD",
      "path": "12"
    },
    "14170": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23684,
        24074
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x365D"
    },
    "14173": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23684,
        24074
      ],
      "op": "JUMP",
      "path": "12"
    },
    "14174": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23684,
        24074
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "14175": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23684,
        24074
      ],
      "op": "POP",
      "path": "12"
    },
    "14176": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23376,
        24080
      ],
      "op": "POP",
      "path": "12"
    },
    "14177": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23376,
        24080
      ],
      "op": "POP",
      "path": "12"
    },
    "14178": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23376,
        24080
      ],
      "op": "POP",
      "path": "12"
    },
    "14179": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23376,
        24080
      ],
      "op": "POP",
      "path": "12"
    },
    "14180": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23376,
        24080
      ],
      "op": "POP",
      "path": "12"
    },
    "14181": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        23376,
        24080
      ],
      "op": "POP",
      "path": "12"
    },
    "14182": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "jump": "o",
      "offset": [
        23376,
        24080
      ],
      "op": "JUMP",
      "path": "12"
    },
    "14183": {
      "fn": "SafeMath.sub",
      "offset": [
        5432,
        5595
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14184": {
      "fn": "SafeMath.sub",
      "offset": [
        5518,
        5525
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14186": {
      "fn": "SafeMath.sub",
      "offset": [
        5553,
        5565
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 129
    },
    "14187": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "DUP5",
      "path": "3"
    },
    "14188": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "DUP5",
      "path": "3"
    },
    "14189": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "GT",
      "path": "3"
    },
    "14190": {
      "branch": 295,
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "14191": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37F6"
    },
    "14194": {
      "branch": 295,
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "14195": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "14197": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14198": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14202": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14204": {
      "op": "SHL"
    },
    "14205": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14206": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14207": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "14209": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14210": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14211": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14212": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "14214": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14215": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14216": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14217": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "3"
    },
    "14218": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14219": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14220": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "3"
    },
    "14221": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14222": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14223": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14224": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14225": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14226": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "14228": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14229": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "14230": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14231": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14232": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14233": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14234": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "14236": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14237": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14238": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14239": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "3"
    },
    "14240": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "3"
    },
    "14241": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14243": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14244": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "3"
    },
    "14245": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14246": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "LT",
      "path": "3"
    },
    "14247": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "14248": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37BB"
    },
    "14251": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "14252": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14253": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14254": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14255": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14256": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "3"
    },
    "14257": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14258": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14259": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14260": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "14262": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14263": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37A3"
    },
    "14266": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMP",
      "path": "3"
    },
    "14267": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14268": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14269": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14270": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14271": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14272": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14273": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14274": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14275": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14276": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14277": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14278": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "14280": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "AND",
      "path": "3"
    },
    "14281": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14282": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "14283": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37E8"
    },
    "14286": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "14287": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14288": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14289": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "3"
    },
    "14290": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14291": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14292": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "14294": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "3"
    },
    "14295": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "14297": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "3"
    },
    "14298": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "14301": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "EXP",
      "path": "3"
    },
    "14302": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "3"
    },
    "14303": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "NOT",
      "path": "3"
    },
    "14304": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "AND",
      "path": "3"
    },
    "14305": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14306": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14307": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "14309": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14310": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "14311": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14312": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14313": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14314": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "14315": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14316": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14317": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14318": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "14320": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14321": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14322": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "14323": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "3"
    },
    "14324": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14325": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "REVERT",
      "path": "3"
    },
    "14326": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14327": {
      "op": "POP"
    },
    "14328": {
      "op": "POP"
    },
    "14329": {
      "op": "POP"
    },
    "14330": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 130
    },
    "14331": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SUB",
      "path": "3"
    },
    "14332": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14333": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        5432,
        5595
      ],
      "op": "JUMP",
      "path": "3"
    },
    "14334": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13240,
        14018
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14335": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13484,
        13499
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3810"
    },
    "14338": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13484,
        13486
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14343": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14345": {
      "op": "SHL"
    },
    "14346": {
      "op": "SUB"
    },
    "14347": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13484,
        13497
      ],
      "op": "AND",
      "path": "5"
    },
    "14348": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13484,
        13497
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4267"
    },
    "14351": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13484,
        13499
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14352": {
      "branch": 286,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13484,
        13499
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14353": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13480,
        14012
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "14354": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13480,
        14012
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BBF"
    },
    "14357": {
      "branch": 286,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13480,
        14012
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14358": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13536,
        13538
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14365": {
      "op": "SHL"
    },
    "14366": {
      "op": "SUB"
    },
    "14367": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13562
      ],
      "op": "AND",
      "path": "5"
    },
    "14368": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13562
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xBC197C81"
    },
    "14373": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13563,
        13571
      ],
      "op": "DUP8",
      "path": "5"
    },
    "14374": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13573,
        13577
      ],
      "op": "DUP8",
      "path": "5"
    },
    "14375": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13579,
        13582
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14376": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13584,
        13591
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14377": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13593,
        13597
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14378": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14380": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14381": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14382": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "14387": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "AND",
      "path": "5"
    },
    "14388": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "14390": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SHL",
      "path": "5"
    },
    "14391": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14392": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14393": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "14395": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14396": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14397": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14402": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14404": {
      "op": "SHL"
    },
    "14405": {
      "op": "SUB"
    },
    "14406": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "AND",
      "path": "5"
    },
    "14407": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14408": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14409": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14411": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14412": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP6",
      "path": "5"
    },
    "14413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14417": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14419": {
      "op": "SHL"
    },
    "14420": {
      "op": "SUB"
    },
    "14421": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "AND",
      "path": "5"
    },
    "14422": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14423": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14424": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14426": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14427": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14428": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14430": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14431": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14432": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14434": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14435": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14436": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14438": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14439": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14440": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14441": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SUB",
      "path": "5"
    },
    "14442": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14443": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14444": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP8",
      "path": "5"
    },
    "14445": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14446": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14447": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14448": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14449": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14450": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14452": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14453": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14454": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14455": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14456": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14457": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14458": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14460": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14461": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14462": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14464": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MUL",
      "path": "5"
    },
    "14465": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14466": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14467": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14468": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14470": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14471": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14472": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14473": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "LT",
      "path": "5"
    },
    "14474": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "14475": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x389E"
    },
    "14478": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14479": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14480": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14481": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14482": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14483": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14484": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14485": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14486": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14487": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14489": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14490": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3886"
    },
    "14493": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14494": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14495": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14496": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14497": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14498": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14499": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14500": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14501": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14502": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14503": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14504": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SUB",
      "path": "5"
    },
    "14505": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14506": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14507": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14508": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14509": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14510": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14511": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14512": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14513": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14515": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14516": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14517": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14518": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14519": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14520": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14521": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14523": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14524": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14525": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14527": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MUL",
      "path": "5"
    },
    "14528": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14529": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14530": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14531": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14533": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14534": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14535": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14536": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "LT",
      "path": "5"
    },
    "14537": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "14538": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x38DD"
    },
    "14541": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14542": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14543": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14544": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14545": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14546": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14547": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14548": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14549": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14550": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14552": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14553": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x38C5"
    },
    "14556": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14557": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14558": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14559": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14560": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14561": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14562": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14563": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14564": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14565": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14566": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14567": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SUB",
      "path": "5"
    },
    "14568": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14569": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14570": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP6",
      "path": "5"
    },
    "14571": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14572": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14573": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14574": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14575": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14576": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14578": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14579": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14580": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14581": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14582": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14583": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14584": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14586": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14587": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14588": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14589": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14590": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14591": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14593": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14594": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14595": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14596": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "LT",
      "path": "5"
    },
    "14597": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "14598": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3919"
    },
    "14601": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14602": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14603": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14604": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14605": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14606": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14607": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14608": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14609": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14610": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14612": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14613": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3901"
    },
    "14616": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14617": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14618": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14619": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14620": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14621": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14622": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14623": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14624": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14625": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14626": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14627": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14628": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "14630": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "AND",
      "path": "5"
    },
    "14631": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14632": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "14633": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3946"
    },
    "14636": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14637": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14638": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14639": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SUB",
      "path": "5"
    },
    "14640": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14641": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14642": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "14644": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14645": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14647": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SUB",
      "path": "5"
    },
    "14648": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "14651": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "EXP",
      "path": "5"
    },
    "14652": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SUB",
      "path": "5"
    },
    "14653": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "NOT",
      "path": "5"
    },
    "14654": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "AND",
      "path": "5"
    },
    "14655": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14656": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14657": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14659": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14660": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14661": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14662": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14663": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14664": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP9",
      "path": "5"
    },
    "14665": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14666": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14667": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14668": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14669": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14670": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14671": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14672": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14673": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14674": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14676": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14678": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14679": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14680": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14681": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SUB",
      "path": "5"
    },
    "14682": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14683": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14685": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP8",
      "path": "5"
    },
    "14686": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14687": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "14688": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "14689": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14690": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "14691": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x396B"
    },
    "14694": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14695": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14697": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14698": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "REVERT",
      "path": "5"
    },
    "14699": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14700": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14701": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "GAS",
      "path": "5"
    },
    "14702": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "CALL",
      "path": "5"
    },
    "14703": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "14704": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14705": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14706": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14707": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14708": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "14709": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3990"
    },
    "14712": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14713": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14714": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14716": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14717": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "14718": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14720": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14721": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "LT",
      "path": "5"
    },
    "14722": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "14723": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x398B"
    },
    "14726": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14727": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14729": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14730": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "REVERT",
      "path": "5"
    },
    "14731": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14732": {
      "op": "POP"
    },
    "14733": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14734": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "14736": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14737": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A25"
    },
    "14740": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14741": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x399C"
    },
    "14744": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x536C"
    },
    "14747": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14748": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14749": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14750": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x39A7"
    },
    "14753": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14754": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "POP",
      "path": "5"
    },
    "14755": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x39EE"
    },
    "14758": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14759": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14760": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 131,
      "value": "0x40"
    },
    "14762": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14763": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14767": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14769": {
      "op": "SHL"
    },
    "14770": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14771": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14772": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14774": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "14776": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14777": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ADD",
      "path": "5"
    },
    "14778": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14779": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14780": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14781": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14782": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14783": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "14785": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14786": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ADD",
      "path": "5"
    },
    "14787": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14788": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14789": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14790": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13878,
        13884
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14791": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13878,
        13884
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "14792": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14793": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "14794": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14795": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "14796": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "14798": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ADD",
      "path": "5"
    },
    "14799": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14800": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14801": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP6",
      "path": "5"
    },
    "14802": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ADD",
      "path": "5"
    },
    "14803": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14804": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14805": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14806": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14807": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14809": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14810": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "14811": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x37BB"
    },
    "14814": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14815": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14816": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14817": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ADD",
      "path": "5"
    },
    "14818": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14819": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14820": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14821": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ADD",
      "path": "5"
    },
    "14822": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14823": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14825": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ADD",
      "path": "5"
    },
    "14826": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x37A3"
    },
    "14829": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14830": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14831": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 132,
      "value": "0x40"
    },
    "14833": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14834": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14838": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14840": {
      "op": "SHL"
    },
    "14841": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14842": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14843": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "14845": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "ADD",
      "path": "5"
    },
    "14846": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14847": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14848": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14850": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "ADD",
      "path": "5"
    },
    "14851": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14852": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14853": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "SUB",
      "path": "5"
    },
    "14854": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14855": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14856": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x34"
    },
    "14858": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14859": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14860": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14862": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "ADD",
      "path": "5"
    },
    "14863": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14864": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5412"
    },
    "14867": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x34"
    },
    "14869": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14870": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "14871": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14873": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "ADD",
      "path": "5"
    },
    "14874": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14875": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "POP",
      "path": "5"
    },
    "14876": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "POP",
      "path": "5"
    },
    "14877": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14879": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14880": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14881": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14882": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "SUB",
      "path": "5"
    },
    "14883": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14884": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "REVERT",
      "path": "5"
    },
    "14885": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14890": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14892": {
      "op": "SHL"
    },
    "14893": {
      "op": "SUB"
    },
    "14894": {
      "op": "NOT"
    },
    "14895": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        13711
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14896": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        13711
      ],
      "op": "AND",
      "path": "5"
    },
    "14897": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "14902": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14904": {
      "op": "SHL"
    },
    "14905": {
      "branch": 287,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        13711
      ],
      "op": "EQ",
      "path": "5"
    },
    "14906": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13643,
        13804
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x375E"
    },
    "14909": {
      "branch": 287,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13643,
        13804
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14910": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 133,
      "value": "0x40"
    },
    "14912": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14913": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14917": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14919": {
      "op": "SHL"
    },
    "14920": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14921": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14922": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "14924": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "ADD",
      "path": "5"
    },
    "14925": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14926": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14927": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14929": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "ADD",
      "path": "5"
    },
    "14930": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14931": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14932": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "SUB",
      "path": "5"
    },
    "14933": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14934": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14935": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x28"
    },
    "14937": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14938": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14939": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14941": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "ADD",
      "path": "5"
    },
    "14942": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14943": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5468"
    },
    "14946": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x28"
    },
    "14948": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14949": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "14950": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14952": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "ADD",
      "path": "5"
    },
    "14953": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14954": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "POP",
      "path": "5"
    },
    "14955": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "POP",
      "path": "5"
    },
    "14956": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14958": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14959": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14960": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14961": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "SUB",
      "path": "5"
    },
    "14962": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14963": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "REVERT",
      "path": "5"
    },
    "14964": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7025,
        7209
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "14965": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7104
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14967": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "DUP3",
      "path": "0"
    },
    "14968": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "DUP2",
      "path": "0"
    },
    "14969": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "14970": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "14972": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "DUP2",
      "path": "0"
    },
    "14973": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "14974": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "14975": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "14977": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "14978": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "14979": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7131
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A8C"
    },
    "14982": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7131
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "14983": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7123,
        7130
      ],
      "op": "DUP3",
      "path": "0"
    },
    "14984": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7122
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x344E"
    },
    "14987": {
      "fn": "AccessControl._grantRole",
      "jump": "i",
      "offset": [
        7098,
        7131
      ],
      "op": "JUMP",
      "path": "0"
    },
    "14988": {
      "branch": 273,
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7131
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "14989": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7094,
        7203
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "14990": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7094,
        7203
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D31"
    },
    "14993": {
      "branch": 273,
      "fn": "AccessControl._grantRole",
      "offset": [
        7094,
        7203
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "14994": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7179,
        7191
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 134,
      "value": "0x3A99"
    },
    "14997": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7179,
        7189
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34D2"
    },
    "15000": {
      "fn": "AccessControl._grantRole",
      "jump": "i",
      "offset": [
        7179,
        7191
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15001": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7179,
        7191
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15006": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15008": {
      "op": "SHL"
    },
    "15009": {
      "op": "SUB"
    },
    "15010": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "AND",
      "path": "0"
    },
    "15011": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7170,
        7177
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15016": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15018": {
      "op": "SHL"
    },
    "15019": {
      "op": "SUB"
    },
    "15020": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "AND",
      "path": "0"
    },
    "15021": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7164,
        7168
      ],
      "op": "DUP4",
      "path": "0"
    },
    "15022": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
    },
    "15055": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15057": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15058": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15060": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15061": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15062": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "15063": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "SUB",
      "path": "0"
    },
    "15064": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15065": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "LOG4",
      "path": "0"
    },
    "15066": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7025,
        7209
      ],
      "op": "POP",
      "path": "0"
    },
    "15067": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7025,
        7209
      ],
      "op": "POP",
      "path": "0"
    },
    "15068": {
      "fn": "AccessControl._grantRole",
      "jump": "o",
      "offset": [
        7025,
        7209
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15069": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7215,
        7403
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15070": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15072": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "DUP3",
      "path": "0"
    },
    "15073": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15074": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "15075": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "15077": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15078": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15079": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "15080": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15082": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15083": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "15084": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7325
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AF5"
    },
    "15087": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7325
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15088": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7317,
        7324
      ],
      "op": "DUP3",
      "path": "0"
    },
    "15089": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7316
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x426D"
    },
    "15092": {
      "fn": "AccessControl._revokeRole",
      "jump": "i",
      "offset": [
        7289,
        7325
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15093": {
      "branch": 274,
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7325
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15094": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7285,
        7397
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "15095": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7285,
        7397
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D31"
    },
    "15098": {
      "branch": 274,
      "fn": "AccessControl._revokeRole",
      "offset": [
        7285,
        7397
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "15099": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7373,
        7385
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 135,
      "value": "0x3B02"
    },
    "15102": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7373,
        7383
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34D2"
    },
    "15105": {
      "fn": "AccessControl._revokeRole",
      "jump": "i",
      "offset": [
        7373,
        7385
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15106": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7373,
        7385
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15111": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15113": {
      "op": "SHL"
    },
    "15114": {
      "op": "SUB"
    },
    "15115": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "AND",
      "path": "0"
    },
    "15116": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7364,
        7371
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15121": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15123": {
      "op": "SHL"
    },
    "15124": {
      "op": "SUB"
    },
    "15125": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "AND",
      "path": "0"
    },
    "15126": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7358,
        7362
      ],
      "op": "DUP4",
      "path": "0"
    },
    "15127": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
    },
    "15160": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15162": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15163": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15165": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15166": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15167": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "15168": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "SUB",
      "path": "0"
    },
    "15169": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15170": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "LOG4",
      "path": "0"
    },
    "15171": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7215,
        7403
      ],
      "op": "POP",
      "path": "0"
    },
    "15172": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7215,
        7403
      ],
      "op": "POP",
      "path": "0"
    },
    "15173": {
      "fn": "AccessControl._revokeRole",
      "jump": "o",
      "offset": [
        7215,
        7403
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15174": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        16991,
        17657
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "15175": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17125,
        17137
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x15"
    },
    "15177": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17125,
        17137
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "15178": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17053,
        17057
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "15180": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17107,
        17138
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15181": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17107,
        17138
      ],
      "op": "DUP2",
      "path": "12"
    },
    "15182": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17107,
        17138
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15183": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17107,
        17124
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x13"
    },
    "15185": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17107,
        17138
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "15187": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17107,
        17138
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15188": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17107,
        17138
      ],
      "op": "DUP2",
      "path": "12"
    },
    "15189": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17107,
        17138
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15190": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17107,
        17138
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "15192": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17107,
        17138
      ],
      "op": "DUP1",
      "path": "12"
    },
    "15193": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17107,
        17138
      ],
      "op": "DUP4",
      "path": "12"
    },
    "15194": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17107,
        17138
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "15195": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17107,
        17147
      ],
      "op": "DUP5",
      "path": "12"
    },
    "15196": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17107,
        17147
      ],
      "op": "DUP5",
      "path": "12"
    },
    "15197": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17107,
        17147
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15198": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17107,
        17147
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15199": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17107,
        17147
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "15200": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17107,
        17147
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15201": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17107,
        17147
      ],
      "op": "DUP2",
      "path": "12"
    },
    "15202": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17107,
        17147
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "15203": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17107,
        17147
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "15204": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17150,
        17151
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "15206": {
      "op": "GT"
    },
    "15207": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17103,
        17189
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "15208": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17103,
        17189
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3B73"
    },
    "15211": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17103,
        17189
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "15212": {
      "op": "POP"
    },
    "15213": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17174,
        17178
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 136,
      "value": "0x1"
    },
    "15215": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17167,
        17178
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1398"
    },
    "15218": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17167,
        17178
      ],
      "op": "JUMP",
      "path": "12"
    },
    "15219": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17103,
        17189
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "15220": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17312,
        17324
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x15"
    },
    "15222": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17312,
        17324
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "15223": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17264,
        17291
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "15225": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17294,
        17325
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15226": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17294,
        17325
      ],
      "op": "DUP2",
      "path": "12"
    },
    "15227": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17294,
        17325
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15228": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17294,
        17311
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x13"
    },
    "15230": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17294,
        17325
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "15232": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17294,
        17325
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15233": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17294,
        17325
      ],
      "op": "DUP2",
      "path": "12"
    },
    "15234": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17294,
        17325
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15235": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17294,
        17325
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "15237": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17294,
        17325
      ],
      "op": "DUP1",
      "path": "12"
    },
    "15238": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17294,
        17325
      ],
      "op": "DUP4",
      "path": "12"
    },
    "15239": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17294,
        17325
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "15240": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17294,
        17334
      ],
      "op": "DUP6",
      "path": "12"
    },
    "15241": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17294,
        17334
      ],
      "op": "DUP5",
      "path": "12"
    },
    "15242": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17294,
        17334
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15243": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17294,
        17334
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15244": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17294,
        17334
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "15245": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17294,
        17334
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15246": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17294,
        17334
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15247": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17294,
        17334
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "15248": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17294,
        17334
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "15249": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17361,
        17362
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "15251": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17344,
        17563
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "15252": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17369,
        17381
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xD"
    },
    "15254": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17369,
        17381
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "15255": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17364,
        17365
      ],
      "op": "DUP2",
      "path": "12"
    },
    "15256": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17364,
        17381
      ],
      "op": "GT",
      "path": "12"
    },
    "15257": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17344,
        17563
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3BE8"
    },
    "15260": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17344,
        17563
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "15261": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17424,
        17436
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x15"
    },
    "15263": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17424,
        17436
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "15264": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17406,
        17437
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "15266": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17406,
        17437
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15267": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17406,
        17437
      ],
      "op": "DUP2",
      "path": "12"
    },
    "15268": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17406,
        17437
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15269": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17406,
        17423
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x13"
    },
    "15271": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17406,
        17437
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "15273": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17406,
        17437
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15274": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17406,
        17437
      ],
      "op": "DUP2",
      "path": "12"
    },
    "15275": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17406,
        17437
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15276": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17406,
        17437
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "15278": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17406,
        17437
      ],
      "op": "DUP1",
      "path": "12"
    },
    "15279": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17406,
        17437
      ],
      "op": "DUP4",
      "path": "12"
    },
    "15280": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17406,
        17437
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "15281": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17406,
        17440
      ],
      "op": "DUP5",
      "path": "12"
    },
    "15282": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17406,
        17440
      ],
      "op": "DUP5",
      "path": "12"
    },
    "15283": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17406,
        17440
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15284": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17406,
        17440
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15285": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17406,
        17440
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "15286": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17406,
        17440
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15287": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17406,
        17440
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15288": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17406,
        17440
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "15289": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17406,
        17440
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "15290": {
      "branch": 258,
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17406,
        17462
      ],
      "op": "DUP3",
      "path": "12"
    },
    "15291": {
      "op": "GT"
    },
    "15292": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17402,
        17553
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "15293": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17402,
        17553
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3BE0"
    },
    "15296": {
      "branch": 258,
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17402,
        17553
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "15297": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17522,
        17534
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 137,
      "value": "0x15"
    },
    "15299": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17522,
        17534
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "15300": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17504,
        17535
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "15302": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17504,
        17535
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15303": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17504,
        17535
      ],
      "op": "DUP2",
      "path": "12"
    },
    "15304": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17504,
        17535
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15305": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17504,
        17521
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x13"
    },
    "15307": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17504,
        17535
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "15309": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17504,
        17535
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15310": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17504,
        17535
      ],
      "op": "DUP2",
      "path": "12"
    },
    "15311": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17504,
        17535
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15312": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17504,
        17535
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "15314": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17504,
        17535
      ],
      "op": "DUP1",
      "path": "12"
    },
    "15315": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17504,
        17535
      ],
      "op": "DUP4",
      "path": "12"
    },
    "15316": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17504,
        17535
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "15317": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17504,
        17538
      ],
      "op": "DUP5",
      "path": "12"
    },
    "15318": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17504,
        17538
      ],
      "op": "DUP5",
      "path": "12"
    },
    "15319": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17504,
        17538
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15320": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17504,
        17538
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15321": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17504,
        17538
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "15322": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17504,
        17538
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15323": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17504,
        17538
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15324": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17504,
        17538
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "15325": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17504,
        17538
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "15326": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17504,
        17538
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "15327": {
      "op": "POP"
    },
    "15328": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17402,
        17553
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "15329": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17383,
        17386
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 138,
      "value": "0x1"
    },
    "15331": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17383,
        17386
      ],
      "op": "ADD",
      "path": "12"
    },
    "15332": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17344,
        17563
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3B93"
    },
    "15335": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17344,
        17563
      ],
      "op": "JUMP",
      "path": "12"
    },
    "15336": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17344,
        17563
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "15337": {
      "op": "POP"
    },
    "15338": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17624,
        17650
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 139,
      "value": "0x3BF4"
    },
    "15341": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17624,
        17643
      ],
      "op": "DUP2",
      "path": "12"
    },
    "15342": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17648,
        17649
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "15344": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17624,
        17647
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3CD3"
    },
    "15347": {
      "fn": "CryptoChampions._canMintHero",
      "jump": "i",
      "offset": [
        17624,
        17650
      ],
      "op": "JUMP",
      "path": "12"
    },
    "15348": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17624,
        17650
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "15349": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17598,
        17610
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x15"
    },
    "15351": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17598,
        17610
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "15352": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17580,
        17611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "15354": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17580,
        17611
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15355": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17580,
        17611
      ],
      "op": "DUP2",
      "path": "12"
    },
    "15356": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17580,
        17611
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15357": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17580,
        17597
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x13"
    },
    "15359": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17580,
        17611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "15361": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17580,
        17611
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15362": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17580,
        17611
      ],
      "op": "DUP2",
      "path": "12"
    },
    "15363": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17580,
        17611
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15364": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17580,
        17611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "15366": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17580,
        17611
      ],
      "op": "DUP1",
      "path": "12"
    },
    "15367": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17580,
        17611
      ],
      "op": "DUP4",
      "path": "12"
    },
    "15368": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17580,
        17611
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "15369": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17580,
        17620
      ],
      "op": "DUP8",
      "path": "12"
    },
    "15370": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17580,
        17620
      ],
      "op": "DUP5",
      "path": "12"
    },
    "15371": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17580,
        17620
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15372": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17580,
        17620
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15373": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17580,
        17620
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "15374": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17580,
        17620
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15375": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17580,
        17620
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15376": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17580,
        17620
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "15377": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17580,
        17620
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "15378": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17580,
        17650
      ],
      "op": "GT",
      "path": "12"
    },
    "15379": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17580,
        17650
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "15380": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        17580,
        17650
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "15381": {
      "op": "POP"
    },
    "15382": {
      "op": "POP"
    },
    "15383": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        16991,
        17657
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "15384": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        16991,
        17657
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15385": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        16991,
        17657
      ],
      "op": "POP",
      "path": "12"
    },
    "15386": {
      "fn": "CryptoChampions._canMintHero",
      "jump": "o",
      "offset": [
        16991,
        17657
      ],
      "op": "JUMP",
      "path": "12"
    },
    "15387": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9703,
        9975
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "15388": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9773,
        9790
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "15390": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9843,
        9847
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 140,
      "value": "0x19"
    },
    "15392": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9843,
        9847
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "15393": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9814
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x0"
    },
    "15426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15430": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15432": {
      "op": "SHL"
    },
    "15433": {
      "op": "SUB"
    },
    "15434": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9824
      ],
      "op": "AND",
      "path": "12"
    },
    "15435": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9824
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x70A08231"
    },
    "15440": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9833,
        9837
      ],
      "op": "ADDRESS",
      "path": "12"
    },
    "15441": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "15443": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "15444": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "DUP3",
      "path": "12"
    },
    "15445": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "15450": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "AND",
      "path": "12"
    },
    "15451": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "15453": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "SHL",
      "path": "12"
    },
    "15454": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "DUP2",
      "path": "12"
    },
    "15455": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15456": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "15458": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "ADD",
      "path": "12"
    },
    "15459": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "DUP1",
      "path": "12"
    },
    "15460": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "DUP3",
      "path": "12"
    },
    "15461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15465": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15467": {
      "op": "SHL"
    },
    "15468": {
      "op": "SUB"
    },
    "15469": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "AND",
      "path": "12"
    },
    "15470": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "DUP2",
      "path": "12"
    },
    "15471": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15472": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "15474": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "ADD",
      "path": "12"
    },
    "15475": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "15476": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "POP",
      "path": "12"
    },
    "15477": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "POP",
      "path": "12"
    },
    "15478": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "15480": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "15482": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "15483": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "DUP1",
      "path": "12"
    },
    "15484": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "DUP4",
      "path": "12"
    },
    "15485": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "SUB",
      "path": "12"
    },
    "15486": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "DUP2",
      "path": "12"
    },
    "15487": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "DUP7",
      "path": "12"
    },
    "15488": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "DUP1",
      "path": "12"
    },
    "15489": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "15490": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "15491": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "DUP1",
      "path": "12"
    },
    "15492": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "15493": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3C8D"
    },
    "15496": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "15497": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "15499": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "DUP1",
      "path": "12"
    },
    "15500": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "REVERT",
      "path": "12"
    },
    "15501": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "15502": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "POP",
      "path": "12"
    },
    "15503": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "GAS",
      "path": "12"
    },
    "15504": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "15505": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "15506": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "DUP1",
      "path": "12"
    },
    "15507": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "15508": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3CA1"
    },
    "15511": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "15512": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "15513": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "15515": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "DUP1",
      "path": "12"
    },
    "15516": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "15517": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "15518": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "15520": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "REVERT",
      "path": "12"
    },
    "15521": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "15522": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "POP",
      "path": "12"
    },
    "15523": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "POP",
      "path": "12"
    },
    "15524": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "POP",
      "path": "12"
    },
    "15525": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "POP",
      "path": "12"
    },
    "15526": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "15528": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "15529": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "15530": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "15532": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "DUP2",
      "path": "12"
    },
    "15533": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "LT",
      "path": "12"
    },
    "15534": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "15535": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3CB7"
    },
    "15538": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "15539": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "15541": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "DUP1",
      "path": "12"
    },
    "15542": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "REVERT",
      "path": "12"
    },
    "15543": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "15544": {
      "op": "POP"
    },
    "15545": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9839
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "15546": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9847
      ],
      "op": "LT",
      "path": "12"
    },
    "15547": {
      "branch": 259,
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9810,
        9847
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "15548": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9802,
        9848
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3CC4"
    },
    "15551": {
      "branch": 259,
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9802,
        9848
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "15552": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9802,
        9848
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "15554": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9802,
        9848
      ],
      "op": "DUP1",
      "path": "12"
    },
    "15555": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9802,
        9848
      ],
      "op": "REVERT",
      "path": "12"
    },
    "15556": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9802,
        9848
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "15557": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9917,
        9968
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 141,
      "value": "0x136E"
    },
    "15560": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9935,
        9943
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x18"
    },
    "15562": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9935,
        9943
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "15563": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9945,
        9949
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x19"
    },
    "15565": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9945,
        9949
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "15566": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9951,
        9967
      ],
      "op": "DUP5",
      "path": "12"
    },
    "15567": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        9917,
        9934
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4282"
    },
    "15570": {
      "fn": "CryptoChampions._getRandomNumber",
      "jump": "i",
      "offset": [
        9917,
        9968
      ],
      "op": "JUMP",
      "path": "12"
    },
    "15571": {
      "fn": "SafeMath.mul",
      "offset": [
        3538,
        3753
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "15572": {
      "fn": "SafeMath.mul",
      "offset": [
        3596,
        3603
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15574": {
      "branch": 296,
      "fn": "SafeMath.mul",
      "offset": [
        3619,
        3625
      ],
      "op": "DUP3",
      "path": "3"
    },
    "15575": {
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CE2"
    },
    "15578": {
      "branch": 296,
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "15579": {
      "op": "POP"
    },
    "15580": {
      "fn": "SafeMath.mul",
      "offset": [
        3634,
        3635
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 142,
      "value": "0x0"
    },
    "15582": {
      "fn": "SafeMath.mul",
      "offset": [
        3627,
        3635
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x136E"
    },
    "15585": {
      "fn": "SafeMath.mul",
      "offset": [
        3627,
        3635
      ],
      "op": "JUMP",
      "path": "3"
    },
    "15586": {
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "15587": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "3"
    },
    "15588": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "3"
    },
    "15589": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "MUL",
      "path": "3"
    },
    "15590": {
      "fn": "SafeMath.mul",
      "offset": [
        3661,
        3662
      ],
      "op": "DUP3",
      "path": "3"
    },
    "15591": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3658
      ],
      "op": "DUP5",
      "path": "3"
    },
    "15592": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "3"
    },
    "15593": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3658
      ],
      "op": "DUP2",
      "path": "3"
    },
    "15594": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 143,
      "value": "0x3CEF"
    },
    "15597": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "15598": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "INVALID",
      "path": "3"
    },
    "15599": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "15600": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "DIV",
      "path": "3"
    },
    "15601": {
      "branch": 297,
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3690
      ],
      "op": "EQ",
      "path": "3"
    },
    "15602": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AD8"
    },
    "15605": {
      "branch": 297,
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "15606": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "15608": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "15609": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15613": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15615": {
      "op": "SHL"
    },
    "15616": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "3"
    },
    "15617": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "15618": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "15620": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "3"
    },
    "15621": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15622": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15623": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "15625": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "3"
    },
    "15626": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP3",
      "path": "3"
    },
    "15627": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "3"
    },
    "15628": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SUB",
      "path": "3"
    },
    "15629": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP3",
      "path": "3"
    },
    "15630": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "15631": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "15633": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "3"
    },
    "15634": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "15635": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "15637": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "3"
    },
    "15638": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15639": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x560B"
    },
    "15642": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "15644": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "15645": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "15646": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "15648": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "3"
    },
    "15649": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "15650": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "POP",
      "path": "3"
    },
    "15651": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "POP",
      "path": "3"
    },
    "15652": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "15654": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "15655": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15656": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "15657": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SUB",
      "path": "3"
    },
    "15658": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15659": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "REVERT",
      "path": "3"
    },
    "15660": {
      "fn": "SafeMath.div",
      "offset": [
        4217,
        4367
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "15661": {
      "fn": "SafeMath.div",
      "offset": [
        4275,
        4282
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15663": {
      "fn": "SafeMath.div",
      "offset": [
        4306,
        4307
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 144
    },
    "15664": {
      "fn": "SafeMath.div",
      "offset": [
        4302,
        4303
      ],
      "op": "DUP3",
      "path": "3"
    },
    "15665": {
      "branch": 298,
      "fn": "SafeMath.div",
      "offset": [
        4302,
        4307
      ],
      "op": "GT",
      "path": "3"
    },
    "15666": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3D82"
    },
    "15669": {
      "branch": 298,
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "15670": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "15672": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15673": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "15674": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15678": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15680": {
      "op": "SHL"
    },
    "15681": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP2",
      "path": "3"
    },
    "15682": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "15683": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "15685": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "15687": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "3"
    },
    "15688": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "3"
    },
    "15689": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "15690": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1A"
    },
    "15692": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "15694": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "3"
    },
    "15695": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "3"
    },
    "15696": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "15697": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "15730": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "15732": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "3"
    },
    "15733": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "3"
    },
    "15734": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "15735": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15736": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "15737": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15738": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP2",
      "path": "3"
    },
    "15739": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15740": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SUB",
      "path": "3"
    },
    "15741": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "15743": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "3"
    },
    "15744": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15745": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "REVERT",
      "path": "3"
    },
    "15746": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "15747": {
      "fn": "SafeMath.div",
      "offset": [
        4359,
        4360
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 145
    },
    "15748": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4356
      ],
      "op": "DUP4",
      "path": "3"
    },
    "15749": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "DUP2",
      "path": "3"
    },
    "15750": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3D8B"
    },
    "15753": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "15754": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "INVALID",
      "path": "3"
    },
    "15755": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "15756": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "DIV",
      "path": "3"
    },
    "15757": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "15758": {
      "fn": "SafeMath.div",
      "offset": [
        4217,
        4367
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "15759": {
      "op": "POP"
    },
    "15760": {
      "op": "POP"
    },
    "15761": {
      "op": "POP"
    },
    "15762": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        4217,
        4367
      ],
      "op": "JUMP",
      "path": "3"
    },
    "15763": {
      "fn": "SafeMath.sub",
      "offset": [
        3136,
        3291
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "15764": {
      "fn": "SafeMath.sub",
      "offset": [
        3194,
        3201
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15766": {
      "fn": "SafeMath.sub",
      "offset": [
        3226,
        3227
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 146
    },
    "15767": {
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3222
      ],
      "op": "DUP3",
      "path": "3"
    },
    "15768": {
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3227
      ],
      "op": "GT",
      "path": "3"
    },
    "15769": {
      "branch": 299,
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3227
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "15770": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3DEA"
    },
    "15773": {
      "branch": 299,
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "15774": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "15776": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15777": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "15778": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15782": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15784": {
      "op": "SHL"
    },
    "15785": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP2",
      "path": "3"
    },
    "15786": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "15787": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "15789": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "15791": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "3"
    },
    "15792": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "3"
    },
    "15793": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "15794": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1E"
    },
    "15796": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "15798": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "3"
    },
    "15799": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "3"
    },
    "15800": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "15801": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "15834": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "15836": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "3"
    },
    "15837": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "3"
    },
    "15838": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "15839": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15840": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "15841": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15842": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP2",
      "path": "3"
    },
    "15843": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15844": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SUB",
      "path": "3"
    },
    "15845": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "15847": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "3"
    },
    "15848": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15849": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "REVERT",
      "path": "3"
    },
    "15850": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "15851": {
      "op": "POP"
    },
    "15852": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 147
    },
    "15853": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SUB",
      "path": "3"
    },
    "15854": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15855": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        3136,
        3291
      ],
      "op": "JUMP",
      "path": "3"
    },
    "15856": {
      "fn": "EnumerableSet.at",
      "offset": [
        7677,
        7833
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "15857": {
      "fn": "EnumerableSet.at",
      "offset": [
        7751,
        7758
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "15859": {
      "fn": "EnumerableSet.at",
      "offset": [
        7801,
        7823
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 148,
      "value": "0x2AD8"
    },
    "15862": {
      "fn": "EnumerableSet.at",
      "offset": [
        7805,
        7808
      ],
      "op": "DUP4",
      "path": "11"
    },
    "15863": {
      "fn": "EnumerableSet.at",
      "offset": [
        7817,
        7822
      ],
      "op": "DUP4",
      "path": "11"
    },
    "15864": {
      "fn": "EnumerableSet.at",
      "offset": [
        7801,
        7804
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x442C"
    },
    "15867": {
      "fn": "EnumerableSet.at",
      "jump": "i",
      "offset": [
        7801,
        7823
      ],
      "op": "JUMP",
      "path": "11"
    },
    "15868": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        10124,
        10297
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "15869": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        10218,
        10246
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 149,
      "value": "0x0"
    },
    "15871": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        10218,
        10246
      ],
      "op": "DUP3",
      "path": "12"
    },
    "15872": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        10218,
        10246
      ],
      "op": "DUP2",
      "path": "12"
    },
    "15873": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        10218,
        10246
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15874": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        10218,
        10235
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1B"
    },
    "15876": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        10218,
        10246
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "15878": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        10218,
        10246
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15879": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        10218,
        10246
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "15881": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        10218,
        10246
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15882": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        10218,
        10246
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "15883": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        10218,
        10259
      ],
      "op": "DUP2",
      "path": "12"
    },
    "15884": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        10218,
        10259
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15885": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        10218,
        10259
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "15886": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        10269,
        10290
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 150,
      "value": "0x1D31"
    },
    "15889": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        10236,
        10245
      ],
      "op": "DUP3",
      "path": "12"
    },
    "15890": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        10269,
        10279
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4490"
    },
    "15893": {
      "fn": "CryptoChampions.fulfillRandomness",
      "jump": "i",
      "offset": [
        10269,
        10290
      ],
      "op": "JUMP",
      "path": "12"
    },
    "15894": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        10391,
        10511
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "15895": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        10455,
        10480
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 151,
      "value": "0x3E20"
    },
    "15898": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        10463,
        10467
      ],
      "op": "DUP2",
      "path": "12"
    },
    "15899": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        10469,
        10479
      ],
      "op": "CALLER",
      "path": "12"
    },
    "15900": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        10455,
        10462
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2AE4"
    },
    "15903": {
      "fn": "CryptoChampions._hasRole",
      "jump": "i",
      "offset": [
        10455,
        10480
      ],
      "op": "JUMP",
      "path": "12"
    },
    "15904": {
      "branch": 260,
      "fn": "CryptoChampions._hasRole",
      "offset": [
        10455,
        10480
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "15905": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        10447,
        10481
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2D06"
    },
    "15908": {
      "branch": 260,
      "fn": "CryptoChampions._hasRole",
      "offset": [
        10447,
        10481
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "15909": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        10447,
        10481
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "15911": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        10447,
        10481
      ],
      "op": "DUP1",
      "path": "12"
    },
    "15912": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        10447,
        10481
      ],
      "op": "REVERT",
      "path": "12"
    },
    "15913": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7213,
        8696
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "15914": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7284,
        7295
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "15916": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7268,
        7280
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "15918": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7268,
        7280
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "15919": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7268,
        7280
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "15921": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7268,
        7280
      ],
      "op": "AND",
      "path": "12"
    },
    "15922": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7268,
        7280
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "15924": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7268,
        7295
      ],
      "op": "DUP2",
      "path": "12"
    },
    "15925": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7268,
        7295
      ],
      "op": "GT",
      "path": "12"
    },
    "15926": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7268,
        7295
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "15927": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7268,
        7295
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3E3C"
    },
    "15930": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7268,
        7295
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "15931": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7268,
        7295
      ],
      "op": "INVALID",
      "path": "12"
    },
    "15932": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7268,
        7295
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "15933": {
      "branch": 261,
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7268,
        7295
      ],
      "op": "EQ",
      "path": "12"
    },
    "15934": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7264,
        8652
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "15935": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7264,
        8652
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3E6F"
    },
    "15938": {
      "branch": 261,
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7264,
        8652
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "15939": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7414,
        7415
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 152,
      "value": "0x0"
    },
    "15941": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7394,
        7411
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "15943": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7394,
        7415
      ],
      "op": "DUP2",
      "path": "12"
    },
    "15944": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7394,
        7415
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15945": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7394,
        7415
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "15946": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7474,
        7491
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 153,
      "value": "0xC"
    },
    "15948": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7474,
        7495
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "15949": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7624,
        7636
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 154,
      "value": "0x15"
    },
    "15951": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7624,
        7636
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "15952": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7624,
        7643
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3E5A"
    },
    "15955": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7624,
        7643
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15956": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7641,
        7642
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "15958": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7624,
        7640
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3478"
    },
    "15961": {
      "fn": "CryptoChampions._transitionNextPhase",
      "jump": "i",
      "offset": [
        7624,
        7643
      ],
      "op": "JUMP",
      "path": "12"
    },
    "15962": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7624,
        7643
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "15963": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7609,
        7621
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x15"
    },
    "15965": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7609,
        7643
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "15966": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7692,
        7704
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 155,
      "value": "0x6"
    },
    "15968": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7692,
        7719
      ],
      "op": "DUP1",
      "path": "12"
    },
    "15969": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7692,
        7719
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "15970": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15972": {
      "op": "NOT"
    },
    "15973": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7692,
        7719
      ],
      "op": "AND",
      "path": "12"
    },
    "15974": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7707,
        7719
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "15976": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7692,
        7719
      ],
      "op": "OR",
      "path": "12"
    },
    "15977": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7692,
        7719
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15978": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7692,
        7719
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "15979": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7264,
        8652
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3FED"
    },
    "15982": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7264,
        8652
      ],
      "op": "JUMP",
      "path": "12"
    },
    "15983": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7264,
        8652
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "15984": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7756,
        7768
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "15986": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7740,
        7752
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "15988": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7740,
        7752
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "15989": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7740,
        7752
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "15991": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7740,
        7752
      ],
      "op": "AND",
      "path": "12"
    },
    "15992": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7740,
        7752
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "15994": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7740,
        7768
      ],
      "op": "DUP2",
      "path": "12"
    },
    "15995": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7740,
        7768
      ],
      "op": "GT",
      "path": "12"
    },
    "15996": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7740,
        7768
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "15997": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7740,
        7768
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3E82"
    },
    "16000": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7740,
        7768
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "16001": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7740,
        7768
      ],
      "op": "INVALID",
      "path": "12"
    },
    "16002": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7740,
        7768
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16003": {
      "branch": 262,
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7740,
        7768
      ],
      "op": "EQ",
      "path": "12"
    },
    "16004": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7736,
        8652
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "16005": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7736,
        8652
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3FED"
    },
    "16008": {
      "branch": 262,
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7736,
        8652
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "16009": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7861,
        7881
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 156,
      "value": "0x3E90"
    },
    "16012": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7861,
        7879
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4B67"
    },
    "16015": {
      "fn": "CryptoChampions._transitionNextPhase",
      "jump": "i",
      "offset": [
        7861,
        7881
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16016": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7861,
        7881
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16017": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8016,
        8017
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "16019": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8031,
        8508
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16020": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8043,
        8055
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xD"
    },
    "16022": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8043,
        8055
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16023": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8038,
        8039
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16024": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8038,
        8055
      ],
      "op": "GT",
      "path": "12"
    },
    "16025": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8031,
        8508
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3FD9"
    },
    "16028": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8031,
        8508
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "16029": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8188,
        8212
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1C"
    },
    "16031": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8188,
        8226
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "16033": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8213,
        8225
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x15"
    },
    "16035": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8213,
        8225
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16036": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8188,
        8226
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16037": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8188,
        8226
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16038": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8188,
        8226
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "16040": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8188,
        8226
      ],
      "op": "ADD",
      "path": "12"
    },
    "16041": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8188,
        8226
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16042": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8188,
        8226
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16043": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8188,
        8226
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16044": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8188,
        8226
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "16046": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8188,
        8226
      ],
      "op": "ADD",
      "path": "12"
    },
    "16047": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8188,
        8226
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "16049": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8188,
        8226
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "16050": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "16052": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "16053": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16054": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "DUP3",
      "path": "12"
    },
    "16055": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16056": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16057": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "16059": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16060": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "16062": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "AND",
      "path": "12"
    },
    "16063": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "16064": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "16067": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "MUL",
      "path": "12"
    },
    "16068": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "SUB",
      "path": "12"
    },
    "16069": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "AND",
      "path": "12"
    },
    "16070": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "16072": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16073": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "DIV",
      "path": "12"
    },
    "16074": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16075": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "16076": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3F0C"
    },
    "16079": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "16080": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16081": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "16083": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "LT",
      "path": "12"
    },
    "16084": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3EEA"
    },
    "16087": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "16088": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "16091": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16092": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "DUP4",
      "path": "12"
    },
    "16093": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16094": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "DIV",
      "path": "12"
    },
    "16095": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "MUL",
      "path": "12"
    },
    "16096": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "DUP4",
      "path": "12"
    },
    "16097": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16098": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "16099": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "DUP3",
      "path": "12"
    },
    "16100": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "ADD",
      "path": "12"
    },
    "16101": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "16102": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3F0C"
    },
    "16105": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16106": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16107": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "DUP3",
      "path": "12"
    },
    "16108": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "ADD",
      "path": "12"
    },
    "16109": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "16110": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16111": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "16113": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16114": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "16116": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "16118": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "16119": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16120": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16121": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16122": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16123": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16124": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16125": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16126": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "16128": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "ADD",
      "path": "12"
    },
    "16129": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16130": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "16132": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "ADD",
      "path": "12"
    },
    "16133": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16134": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "DUP4",
      "path": "12"
    },
    "16135": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "GT",
      "path": "12"
    },
    "16136": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3EF8"
    },
    "16139": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "16140": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16141": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "POP",
      "path": "12"
    },
    "16142": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "POP",
      "path": "12"
    },
    "16143": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "16144": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "POP",
      "path": "12"
    },
    "16145": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "POP",
      "path": "12"
    },
    "16146": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "16148": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "16149": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16150": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "16151": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "SUB",
      "path": "12"
    },
    "16152": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16153": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8172,
        8228
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "16154": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8121,
        8134
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF"
    },
    "16156": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8121,
        8137
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "16158": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8135,
        8136
      ],
      "op": "DUP4",
      "path": "12"
    },
    "16159": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8121,
        8137
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16160": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8121,
        8137
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16161": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8121,
        8137
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "16163": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8121,
        8137
      ],
      "op": "ADD",
      "path": "12"
    },
    "16164": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8121,
        8137
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16165": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8121,
        8137
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16166": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8121,
        8137
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16167": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8121,
        8137
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "16169": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8121,
        8137
      ],
      "op": "ADD",
      "path": "12"
    },
    "16170": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8121,
        8137
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "16172": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8121,
        8137
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "16173": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8121,
        8146
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "16175": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8121,
        8146
      ],
      "op": "ADD",
      "path": "12"
    },
    "16176": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "16178": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "16179": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16180": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "DUP3",
      "path": "12"
    },
    "16181": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16182": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16183": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "16185": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16186": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "16188": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "AND",
      "path": "12"
    },
    "16189": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "16190": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "16193": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "MUL",
      "path": "12"
    },
    "16194": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "SUB",
      "path": "12"
    },
    "16195": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "AND",
      "path": "12"
    },
    "16196": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "16198": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16199": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "DIV",
      "path": "12"
    },
    "16200": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16201": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "16202": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3F8A"
    },
    "16205": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "16206": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16207": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "16209": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "LT",
      "path": "12"
    },
    "16210": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3F68"
    },
    "16213": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "16214": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "16217": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16218": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "DUP4",
      "path": "12"
    },
    "16219": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16220": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "DIV",
      "path": "12"
    },
    "16221": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "MUL",
      "path": "12"
    },
    "16222": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "DUP4",
      "path": "12"
    },
    "16223": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16224": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "16225": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "DUP3",
      "path": "12"
    },
    "16226": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "ADD",
      "path": "12"
    },
    "16227": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "16228": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3F8A"
    },
    "16231": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16232": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16233": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "DUP3",
      "path": "12"
    },
    "16234": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "ADD",
      "path": "12"
    },
    "16235": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "16236": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16237": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "16239": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16240": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "16242": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "16244": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "16245": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16246": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16247": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16248": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16249": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16250": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16251": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16252": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "16254": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "ADD",
      "path": "12"
    },
    "16255": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16256": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "16258": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "ADD",
      "path": "12"
    },
    "16259": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16260": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "DUP4",
      "path": "12"
    },
    "16261": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "GT",
      "path": "12"
    },
    "16262": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3F76"
    },
    "16265": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "16266": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16267": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "POP",
      "path": "12"
    },
    "16268": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "POP",
      "path": "12"
    },
    "16269": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "16270": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "POP",
      "path": "12"
    },
    "16271": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "POP",
      "path": "12"
    },
    "16272": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "16274": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "16275": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16276": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "16277": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "SUB",
      "path": "12"
    },
    "16278": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16279": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8148
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "16280": {
      "branch": 263,
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8105,
        8228
      ],
      "op": "EQ",
      "path": "12"
    },
    "16281": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8080,
        8494
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "16282": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8080,
        8494
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3FD1"
    },
    "16285": {
      "branch": 263,
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8080,
        8494
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "16286": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8313,
        8314
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "16288": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8273,
        8310
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3FAB"
    },
    "16291": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8294,
        8306
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x15"
    },
    "16293": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8294,
        8306
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16294": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8308,
        8309
      ],
      "op": "DUP4",
      "path": "12"
    },
    "16295": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8273,
        8293
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2878"
    },
    "16298": {
      "fn": "CryptoChampions._transitionNextPhase",
      "jump": "i",
      "offset": [
        8273,
        8310
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16299": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8273,
        8310
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16300": {
      "branch": 264,
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8273,
        8314
      ],
      "op": "GT",
      "path": "12"
    },
    "16301": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8269,
        8476
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "16302": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8269,
        8476
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3FD1"
    },
    "16305": {
      "branch": 264,
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8269,
        8476
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "16306": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8362,
        8422
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 157,
      "value": "0x3FC9"
    },
    "16309": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8384,
        8421
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3FC0"
    },
    "16312": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8405,
        8417
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x15"
    },
    "16314": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8405,
        8417
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16315": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8419,
        8420
      ],
      "op": "DUP4",
      "path": "12"
    },
    "16316": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8384,
        8404
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2878"
    },
    "16319": {
      "fn": "CryptoChampions._transitionNextPhase",
      "jump": "i",
      "offset": [
        8384,
        8421
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16320": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8384,
        8421
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16321": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8362,
        8379
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "16323": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8362,
        8379
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16324": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8362,
        8379
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16325": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8362,
        8383
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3D2C"
    },
    "16328": {
      "fn": "CryptoChampions._transitionNextPhase",
      "jump": "i",
      "offset": [
        8362,
        8422
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16329": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8362,
        8422
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16330": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8342,
        8359
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "16332": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8342,
        8422
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "16333": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8448,
        8453
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 158,
      "value": "0x3FD9"
    },
    "16336": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8448,
        8453
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16337": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8269,
        8476
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16338": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8057,
        8060
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 159,
      "value": "0x1"
    },
    "16340": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8057,
        8060
      ],
      "op": "ADD",
      "path": "12"
    },
    "16341": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8031,
        8508
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3E93"
    },
    "16344": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8031,
        8508
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16345": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8031,
        8508
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16346": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8553,
        8566
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 160,
      "value": "0x3FE1"
    },
    "16349": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8553,
        8564
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4D54"
    },
    "16352": {
      "fn": "CryptoChampions._transitionNextPhase",
      "jump": "i",
      "offset": [
        8553,
        8566
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16353": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8553,
        8566
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16354": {
      "op": "POP"
    },
    "16355": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8615,
        8627
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 161,
      "value": "0x6"
    },
    "16357": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8615,
        8641
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16358": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8615,
        8641
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16359": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "16361": {
      "op": "NOT"
    },
    "16362": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8615,
        8641
      ],
      "op": "AND",
      "path": "12"
    },
    "16363": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8615,
        8641
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16364": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8615,
        8641
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "16365": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        7736,
        8652
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16366": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8686,
        8689
      ],
      "op": "TIMESTAMP",
      "path": "12",
      "statement": 162
    },
    "16367": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8662,
        8683
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "16369": {
      "fn": "CryptoChampions._transitionNextPhase",
      "offset": [
        8662,
        8689
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "16370": {
      "fn": "CryptoChampions._transitionNextPhase",
      "jump": "o",
      "offset": [
        7213,
        8696
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16371": {
      "fn": "EnumerableSet.length",
      "offset": [
        7230,
        7345
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "16372": {
      "fn": "EnumerableSet.length",
      "offset": [
        7293,
        7300
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "16374": {
      "fn": "EnumerableSet.length",
      "offset": [
        7319,
        7338
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 163,
      "value": "0x136E"
    },
    "16377": {
      "fn": "EnumerableSet.length",
      "offset": [
        7327,
        7330
      ],
      "op": "DUP3",
      "path": "11"
    },
    "16378": {
      "fn": "EnumerableSet.length",
      "offset": [
        7319,
        7326
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4DB3"
    },
    "16381": {
      "fn": "EnumerableSet.length",
      "jump": "i",
      "offset": [
        7319,
        7338
      ],
      "op": "JUMP",
      "path": "11"
    },
    "16382": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14024,
        14217
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "16383": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "16385": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16386": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16387": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14157,
        14158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "16389": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16390": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP3",
      "path": "5"
    },
    "16391": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16392": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16393": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16394": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "ADD",
      "path": "5"
    },
    "16395": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16396": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "16397": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16398": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14090,
        14106
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "16400": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14090,
        14106
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "16401": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14090,
        14106
      ],
      "op": "DUP3",
      "path": "5"
    },
    "16402": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14090,
        14106
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "16403": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16404": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16406": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16407": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16408": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "ADD",
      "path": "5"
    },
    "16409": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16410": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16411": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "16412": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16413": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "16414": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "ADD",
      "path": "5"
    },
    "16415": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16416": {
      "op": "POP"
    },
    "16417": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "POP",
      "path": "5"
    },
    "16418": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14118,
        14159
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16419": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14118,
        14159
      ],
      "op": "POP",
      "path": "5"
    },
    "16420": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14180,
        14187
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 164
    },
    "16421": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14174
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16422": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14175,
        14176
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "16424": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16425": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16426": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16427": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "LT",
      "path": "5"
    },
    "16428": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4031"
    },
    "16431": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "16432": {
      "dev": "Index out of range",
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "INVALID",
      "path": "5"
    },
    "16433": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "16434": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16436": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16437": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16438": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "MUL",
      "path": "5"
    },
    "16439": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "16440": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16441": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "16442": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "ADD",
      "path": "5"
    },
    "16443": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "ADD",
      "path": "5"
    },
    "16444": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14187
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16445": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14205,
        14210
      ],
      "op": "SWAP3",
      "path": "5",
      "statement": 165
    },
    "16446": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14024,
        14217
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "16447": {
      "op": "POP"
    },
    "16448": {
      "op": "POP"
    },
    "16449": {
      "fn": "ERC1155._asSingletonArray",
      "jump": "o",
      "offset": [
        14024,
        14217
      ],
      "op": "JUMP",
      "path": "5"
    },
    "16450": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12493,
        13234
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "16451": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12712,
        12727
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4054"
    },
    "16454": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12712,
        12714
      ],
      "op": "DUP5",
      "path": "5"
    },
    "16455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16459": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16461": {
      "op": "SHL"
    },
    "16462": {
      "op": "SUB"
    },
    "16463": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12712,
        12725
      ],
      "op": "AND",
      "path": "5"
    },
    "16464": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12712,
        12725
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4267"
    },
    "16467": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        12712,
        12727
      ],
      "op": "JUMP",
      "path": "5"
    },
    "16468": {
      "branch": 288,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12712,
        12727
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "16469": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12708,
        13228
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "16470": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12708,
        13228
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BBF"
    },
    "16473": {
      "branch": 288,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12708,
        13228
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "16474": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12764,
        12766
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16481": {
      "op": "SHL"
    },
    "16482": {
      "op": "SUB"
    },
    "16483": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12785
      ],
      "op": "AND",
      "path": "5"
    },
    "16484": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12785
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF23A6E61"
    },
    "16489": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12786,
        12794
      ],
      "op": "DUP8",
      "path": "5"
    },
    "16490": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12796,
        12800
      ],
      "op": "DUP8",
      "path": "5"
    },
    "16491": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12802,
        12804
      ],
      "op": "DUP7",
      "path": "5"
    },
    "16492": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12806,
        12812
      ],
      "op": "DUP7",
      "path": "5"
    },
    "16493": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12814,
        12818
      ],
      "op": "DUP7",
      "path": "5"
    },
    "16494": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "16496": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16497": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP7",
      "path": "5"
    },
    "16498": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "16503": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "AND",
      "path": "5"
    },
    "16504": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "16506": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SHL",
      "path": "5"
    },
    "16507": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16508": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16509": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "16511": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16512": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16513": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP7",
      "path": "5"
    },
    "16514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16518": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16520": {
      "op": "SHL"
    },
    "16521": {
      "op": "SUB"
    },
    "16522": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "AND",
      "path": "5"
    },
    "16523": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16524": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16525": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16527": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16528": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP6",
      "path": "5"
    },
    "16529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16533": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16535": {
      "op": "SHL"
    },
    "16536": {
      "op": "SUB"
    },
    "16537": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "AND",
      "path": "5"
    },
    "16538": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16539": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16540": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16542": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16543": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP5",
      "path": "5"
    },
    "16544": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16545": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16546": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16548": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16549": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16550": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16551": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16552": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16554": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16555": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16556": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16558": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16559": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP3",
      "path": "5"
    },
    "16560": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16561": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SUB",
      "path": "5"
    },
    "16562": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP3",
      "path": "5"
    },
    "16563": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16564": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16565": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16566": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16567": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16568": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16569": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16570": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16572": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16573": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "16574": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16575": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16576": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16577": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16578": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16580": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16581": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16582": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16583": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16584": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16585": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "16587": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "16588": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16589": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16590": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "LT",
      "path": "5"
    },
    "16591": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "16592": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x40E3"
    },
    "16595": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "16596": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16597": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16598": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16599": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16600": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16601": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP3",
      "path": "5"
    },
    "16602": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16603": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16604": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16606": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16607": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x40CB"
    },
    "16610": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMP",
      "path": "5"
    },
    "16611": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "16612": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16613": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16614": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16615": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16616": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16617": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16618": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16619": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16620": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16621": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16622": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "16624": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "AND",
      "path": "5"
    },
    "16625": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16626": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "16627": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4110"
    },
    "16630": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "16631": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16632": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP3",
      "path": "5"
    },
    "16633": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SUB",
      "path": "5"
    },
    "16634": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16635": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16636": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "16638": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16639": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16641": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SUB",
      "path": "5"
    },
    "16642": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "16645": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "EXP",
      "path": "5"
    },
    "16646": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SUB",
      "path": "5"
    },
    "16647": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "NOT",
      "path": "5"
    },
    "16648": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "AND",
      "path": "5"
    },
    "16649": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16650": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16651": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16653": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16654": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "16655": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16656": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "16657": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16658": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "16659": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16660": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16661": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16662": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16663": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16664": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16665": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16666": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16668": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "16670": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16671": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16672": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16673": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SUB",
      "path": "5"
    },
    "16674": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16675": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "16677": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP8",
      "path": "5"
    },
    "16678": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16679": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "16680": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "16681": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16682": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "16683": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4133"
    },
    "16686": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "16687": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "16689": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16690": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "REVERT",
      "path": "5"
    },
    "16691": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "16692": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16693": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "GAS",
      "path": "5"
    },
    "16694": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "CALL",
      "path": "5"
    },
    "16695": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "16696": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16697": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16698": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16699": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16700": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "16701": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4158"
    },
    "16704": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "16705": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16706": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "16708": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16709": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "16710": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16712": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16713": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "LT",
      "path": "5"
    },
    "16714": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "16715": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4153"
    },
    "16718": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "16719": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "16721": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16722": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "REVERT",
      "path": "5"
    },
    "16723": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "16724": {
      "op": "POP"
    },
    "16725": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16726": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "16728": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "16729": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12743,
        13218
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4164"
    },
    "16732": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12743,
        13218
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "16733": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12743,
        13218
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x399C"
    },
    "16736": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12743,
        13218
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x536C"
    },
    "16739": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        12743,
        13218
      ],
      "op": "JUMP",
      "path": "5"
    },
    "16740": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12743,
        13218
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "16741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16745": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16747": {
      "op": "SHL"
    },
    "16748": {
      "op": "SUB"
    },
    "16749": {
      "op": "NOT"
    },
    "16750": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12868,
        12927
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16751": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12868,
        12927
      ],
      "op": "AND",
      "path": "5"
    },
    "16752": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "16757": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16759": {
      "op": "SHL"
    },
    "16760": {
      "branch": 289,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12868,
        12927
      ],
      "op": "EQ",
      "path": "5"
    },
    "16761": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12864,
        13020
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x375E"
    },
    "16764": {
      "branch": 289,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12864,
        13020
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "16765": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 166,
      "value": "0x40"
    },
    "16767": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16768": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16772": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16774": {
      "op": "SHL"
    },
    "16775": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16776": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16777": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "16779": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "ADD",
      "path": "5"
    },
    "16780": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16781": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16782": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16784": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "ADD",
      "path": "5"
    },
    "16785": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP3",
      "path": "5"
    },
    "16786": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16787": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "SUB",
      "path": "5"
    },
    "16788": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP3",
      "path": "5"
    },
    "16789": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16790": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x28"
    },
    "16792": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16793": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16794": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16796": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "ADD",
      "path": "5"
    },
    "16797": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16798": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5468"
    },
    "16801": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x28"
    },
    "16803": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "16804": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "16805": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "16807": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "ADD",
      "path": "5"
    },
    "16808": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "16809": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "POP",
      "path": "5"
    },
    "16810": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "POP",
      "path": "5"
    },
    "16811": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "16813": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16814": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16815": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "16816": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "SUB",
      "path": "5"
    },
    "16817": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16818": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "REVERT",
      "path": "5"
    },
    "16819": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23047,
        23308
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16820": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23112,
        23119
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "16822": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23112,
        23119
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16823": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23169,
        23170
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "16825": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23188,
        23225
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 167,
      "value": "0x41DA"
    },
    "16828": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23221,
        23224
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x64"
    },
    "16830": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23188,
        23216
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x254B"
    },
    "16833": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23214,
        23215
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "16835": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23188,
        23209
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x41D4"
    },
    "16838": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23188,
        23197
      ],
      "op": "DUP9",
      "path": "12"
    },
    "16839": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23202,
        23208
      ],
      "op": "PUSH8",
      "path": "12",
      "value": "0xDE0B6B3A7640000"
    },
    "16848": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23188,
        23201
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3CD3"
    },
    "16851": {
      "fn": "CryptoChampions._priceFormula",
      "jump": "i",
      "offset": [
        23188,
        23209
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16852": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23188,
        23209
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16853": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23188,
        23213
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16854": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23188,
        23213
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3CD3"
    },
    "16857": {
      "fn": "CryptoChampions._priceFormula",
      "jump": "i",
      "offset": [
        23188,
        23216
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16858": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23188,
        23225
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16859": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23180,
        23225
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "16860": {
      "op": "POP"
    },
    "16861": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23243,
        23278
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 168,
      "value": "0x41FD"
    },
    "16864": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23253,
        23277
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x41F6"
    },
    "16867": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23274,
        23276
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "16869": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23253,
        23269
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x254B"
    },
    "16872": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23253,
        23257
      ],
      "op": "DUP5",
      "path": "12"
    },
    "16873": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23262,
        23268
      ],
      "op": "PUSH8",
      "path": "12",
      "value": "0xDE0B6B3A7640000"
    },
    "16882": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23253,
        23261
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3CD3"
    },
    "16885": {
      "fn": "CryptoChampions._priceFormula",
      "jump": "i",
      "offset": [
        23253,
        23269
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16886": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23253,
        23277
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16887": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23243,
        23248
      ],
      "op": "DUP4",
      "path": "12"
    },
    "16888": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23243,
        23248
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16889": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23243,
        23252
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3478"
    },
    "16892": {
      "fn": "CryptoChampions._priceFormula",
      "jump": "i",
      "offset": [
        23243,
        23278
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16893": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23243,
        23278
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16894": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23235,
        23278
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "16895": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        23047,
        23308
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "16896": {
      "op": "POP"
    },
    "16897": {
      "op": "POP"
    },
    "16898": {
      "op": "POP"
    },
    "16899": {
      "op": "POP"
    },
    "16900": {
      "fn": "CryptoChampions._priceFormula",
      "jump": "o",
      "offset": [
        23047,
        23308
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16901": {
      "fn": "EnumerableSet._add",
      "offset": [
        1640,
        2044
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "16902": {
      "fn": "EnumerableSet._add",
      "offset": [
        1703,
        1707
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "16904": {
      "fn": "EnumerableSet._add",
      "offset": [
        1724,
        1745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4211"
    },
    "16907": {
      "fn": "EnumerableSet._add",
      "offset": [
        1734,
        1737
      ],
      "op": "DUP4",
      "path": "11"
    },
    "16908": {
      "fn": "EnumerableSet._add",
      "offset": [
        1739,
        1744
      ],
      "op": "DUP4",
      "path": "11"
    },
    "16909": {
      "fn": "EnumerableSet._add",
      "offset": [
        1724,
        1733
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x424F"
    },
    "16912": {
      "fn": "EnumerableSet._add",
      "jump": "i",
      "offset": [
        1724,
        1745
      ],
      "op": "JUMP",
      "path": "11"
    },
    "16913": {
      "branch": 291,
      "fn": "EnumerableSet._add",
      "offset": [
        1724,
        1745
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "16914": {
      "fn": "EnumerableSet._add",
      "offset": [
        1719,
        2038
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4247"
    },
    "16917": {
      "branch": 291,
      "fn": "EnumerableSet._add",
      "offset": [
        1719,
        2038
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "16918": {
      "op": "POP"
    },
    "16919": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 169
    },
    "16920": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "16921": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "16923": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP2",
      "path": "11"
    },
    "16924": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP2",
      "path": "11"
    },
    "16925": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "ADD",
      "path": "11"
    },
    "16926": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP5",
      "path": "11"
    },
    "16927": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "16928": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1772
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "16930": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP5",
      "path": "11"
    },
    "16931": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP2",
      "path": "11"
    },
    "16932": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "16933": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "16935": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP1",
      "path": "11"
    },
    "16936": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP3",
      "path": "11"
    },
    "16937": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "16938": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "16939": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "16940": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "ADD",
      "path": "11"
    },
    "16941": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP5",
      "path": "11"
    },
    "16942": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "16943": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "16944": {
      "fn": "EnumerableSet._add",
      "offset": [
        1941,
        1959
      ],
      "op": "DUP5",
      "path": "11",
      "statement": 170
    },
    "16945": {
      "fn": "EnumerableSet._add",
      "offset": [
        1941,
        1959
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "16946": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "DUP5",
      "path": "11"
    },
    "16947": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "DUP3",
      "path": "11"
    },
    "16948": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "16949": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1931
      ],
      "op": "DUP3",
      "path": "11"
    },
    "16950": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1931
      ],
      "op": "DUP7",
      "path": "11"
    },
    "16951": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1931
      ],
      "op": "ADD",
      "path": "11"
    },
    "16952": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "16953": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "16954": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "16955": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "16957": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "16958": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "16959": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1959
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "16960": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1959
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "16961": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1959
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "16962": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1959
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "16963": {
      "fn": "EnumerableSet._add",
      "offset": [
        1973,
        1984
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 171,
      "value": "0x136E"
    },
    "16966": {
      "fn": "EnumerableSet._add",
      "offset": [
        1973,
        1984
      ],
      "op": "JUMP",
      "path": "11"
    },
    "16967": {
      "fn": "EnumerableSet._add",
      "offset": [
        1719,
        2038
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "16968": {
      "op": "POP"
    },
    "16969": {
      "fn": "EnumerableSet._add",
      "offset": [
        2022,
        2027
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 172,
      "value": "0x0"
    },
    "16971": {
      "fn": "EnumerableSet._add",
      "offset": [
        2015,
        2027
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x136E"
    },
    "16974": {
      "fn": "EnumerableSet._add",
      "offset": [
        2015,
        2027
      ],
      "op": "JUMP",
      "path": "11"
    },
    "16975": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3805,
        3932
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "16976": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3878,
        3882
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "16978": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "SWAP1",
      "path": "11",
      "statement": 173
    },
    "16979": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "DUP2",
      "path": "11"
    },
    "16980": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "16981": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "16983": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "16984": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "16985": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "16986": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "ADD",
      "path": "11"
    },
    "16987": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "16989": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "16990": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "16992": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "16993": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "16994": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "16995": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3925
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "16996": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3925
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "16997": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3925
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "16998": {
      "fn": "EnumerableSet._contains",
      "jump": "o",
      "offset": [
        3805,
        3932
      ],
      "op": "JUMP",
      "path": "11"
    },
    "16999": {
      "fn": "Address.isContract",
      "offset": [
        726,
        1139
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "17000": {
      "fn": "Address.isContract",
      "offset": [
        1086,
        1106
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "17001": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "9",
      "statement": 174
    },
    "17002": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "17003": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "17004": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        726,
        1139
      ],
      "op": "JUMP",
      "path": "9"
    },
    "17005": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6747,
        6903
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17006": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6820,
        6824
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "17008": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6843,
        6896
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 175,
      "value": "0x2AD8"
    },
    "17011": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6851,
        6854
      ],
      "op": "DUP4",
      "path": "11"
    },
    "17012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17016": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17018": {
      "op": "SHL"
    },
    "17019": {
      "op": "SUB"
    },
    "17020": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6871,
        6894
      ],
      "op": "DUP5",
      "path": "11"
    },
    "17021": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6871,
        6894
      ],
      "op": "AND",
      "path": "11"
    },
    "17022": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6843,
        6850
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4DB7"
    },
    "17025": {
      "fn": "EnumerableSet.remove",
      "jump": "i",
      "offset": [
        6843,
        6896
      ],
      "op": "JUMP",
      "path": "11"
    },
    "17026": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7527,
        8617
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "17027": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7649,
        7666
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "17029": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7682
      ],
      "op": "PUSH32",
      "path": "15",
      "statement": 176,
      "value": "0x0"
    },
    "17062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17068": {
      "op": "SHL"
    },
    "17069": {
      "op": "SUB"
    },
    "17070": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7698
      ],
      "op": "AND",
      "path": "15"
    },
    "17071": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7698
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x4000AEA0"
    },
    "17076": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7699,
        7713
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "17109": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7715,
        7719
      ],
      "op": "DUP6",
      "path": "15"
    },
    "17110": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7732,
        7740
      ],
      "op": "DUP8",
      "path": "15"
    },
    "17111": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7742,
        7747
      ],
      "op": "DUP7",
      "path": "15"
    },
    "17112": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "17114": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "17115": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17117": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "ADD",
      "path": "15"
    },
    "17118": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17119": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP4",
      "path": "15"
    },
    "17120": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17121": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17122": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17124": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "ADD",
      "path": "15"
    },
    "17125": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP3",
      "path": "15"
    },
    "17126": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17127": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17128": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17130": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "ADD",
      "path": "15"
    },
    "17131": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "17132": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "POP",
      "path": "15"
    },
    "17133": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "POP",
      "path": "15"
    },
    "17134": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "POP",
      "path": "15"
    },
    "17135": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "17137": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "17138": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17140": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17141": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP4",
      "path": "15"
    },
    "17142": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "SUB",
      "path": "15"
    },
    "17143": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "SUB",
      "path": "15"
    },
    "17144": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17145": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17146": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "17147": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "17149": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17150": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "17152": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "17153": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP5",
      "path": "15"
    },
    "17154": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "17159": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "AND",
      "path": "15"
    },
    "17160": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "17162": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SHL",
      "path": "15"
    },
    "17163": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17164": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17165": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "17167": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "15"
    },
    "17168": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17169": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP5",
      "path": "15"
    },
    "17170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17174": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17176": {
      "op": "SHL"
    },
    "17177": {
      "op": "SUB"
    },
    "17178": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "AND",
      "path": "15"
    },
    "17179": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17180": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17181": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17183": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "15"
    },
    "17184": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "15"
    },
    "17185": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17186": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17187": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17189": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "15"
    },
    "17190": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17191": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17193": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "15"
    },
    "17194": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP3",
      "path": "15"
    },
    "17195": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17196": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SUB",
      "path": "15"
    },
    "17197": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP3",
      "path": "15"
    },
    "17198": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17199": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "15"
    },
    "17200": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17201": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17202": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "17203": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17204": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17205": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17207": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "15"
    },
    "17208": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "17209": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17210": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17211": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "17212": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "17213": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17215": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "15"
    },
    "17216": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "17217": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17218": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "15"
    },
    "17219": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "15"
    },
    "17220": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "17222": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "17223": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "15"
    },
    "17224": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17225": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "LT",
      "path": "15"
    },
    "17226": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "17227": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x435E"
    },
    "17230": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "17231": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17232": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17233": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "15"
    },
    "17234": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "17235": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "15"
    },
    "17236": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP3",
      "path": "15"
    },
    "17237": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "15"
    },
    "17238": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17239": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17241": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "15"
    },
    "17242": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4346"
    },
    "17245": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMP",
      "path": "15"
    },
    "17246": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "17247": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17248": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17249": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17250": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17251": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "17252": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17253": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "17254": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17255": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "15"
    },
    "17256": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "17257": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "17259": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "AND",
      "path": "15"
    },
    "17260": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17261": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "17262": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x438B"
    },
    "17265": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "17266": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17267": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP3",
      "path": "15"
    },
    "17268": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SUB",
      "path": "15"
    },
    "17269": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17270": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "17271": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "17273": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "15"
    },
    "17274": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17276": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SUB",
      "path": "15"
    },
    "17277": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "17280": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "EXP",
      "path": "15"
    },
    "17281": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SUB",
      "path": "15"
    },
    "17282": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "NOT",
      "path": "15"
    },
    "17283": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "AND",
      "path": "15"
    },
    "17284": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17285": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17286": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17288": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "15"
    },
    "17289": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "17290": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17291": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "17292": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17293": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "17294": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17295": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17296": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17297": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17298": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17299": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17301": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "17303": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "17304": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17305": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "15"
    },
    "17306": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SUB",
      "path": "15"
    },
    "17307": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17308": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "17310": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP8",
      "path": "15"
    },
    "17311": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17312": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "17313": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "17314": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17315": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "17316": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x43AC"
    },
    "17319": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "17320": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "17322": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17323": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "REVERT",
      "path": "15"
    },
    "17324": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "17325": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17326": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "GAS",
      "path": "15"
    },
    "17327": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "CALL",
      "path": "15"
    },
    "17328": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "17329": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17330": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "17331": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x43C0"
    },
    "17334": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "17335": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "17336": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "17338": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17339": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "17340": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "17341": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "17343": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "REVERT",
      "path": "15"
    },
    "17344": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "17345": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17346": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17347": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17348": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17349": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "17351": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "17352": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "17353": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17355": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17356": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "LT",
      "path": "15"
    },
    "17357": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "17358": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x43D6"
    },
    "17361": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "17362": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "17364": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17365": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "REVERT",
      "path": "15"
    },
    "17366": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "17367": {
      "op": "POP"
    },
    "17368": {
      "op": "POP"
    },
    "17369": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7996,
        8011
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "17371": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "DUP5",
      "path": "15"
    },
    "17372": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17373": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17374": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8069
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "17376": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17378": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17379": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "17381": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17382": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "17383": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "17384": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8014,
        8080
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x43F6"
    },
    "17387": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8014,
        8080
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "17388": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8031,
        8039
      ],
      "op": "DUP7",
      "path": "15"
    },
    "17389": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8031,
        8039
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "17390": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8041,
        8046
      ],
      "op": "DUP6",
      "path": "15"
    },
    "17391": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8041,
        8046
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "17392": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8056,
        8060
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "17393": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8056,
        8060
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "17394": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8014,
        8030
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4E7D"
    },
    "17397": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8014,
        8080
      ],
      "op": "JUMP",
      "path": "15"
    },
    "17398": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8014,
        8080
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "17399": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 177,
      "value": "0x0"
    },
    "17401": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "DUP7",
      "path": "15"
    },
    "17402": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17403": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17404": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8544
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "17406": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17408": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17409": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "17411": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "17412": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "17413": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "17414": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7996,
        8080
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "17415": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7996,
        8080
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "17416": {
      "op": "POP"
    },
    "17417": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8561
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4413"
    },
    "17420": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8561
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "17421": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8559,
        8560
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "17423": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8558
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3478"
    },
    "17426": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8538,
        8561
      ],
      "op": "JUMP",
      "path": "15"
    },
    "17427": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8561
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "17428": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "17430": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "DUP7",
      "path": "15"
    },
    "17431": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17432": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17433": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8525
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "17435": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17437": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17438": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "17440": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "17441": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "17442": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8561
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "17443": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8578,
        8610
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 178,
      "value": "0x3445"
    },
    "17446": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8526,
        8534
      ],
      "op": "DUP6",
      "path": "15"
    },
    "17447": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8602,
        8609
      ],
      "op": "DUP3",
      "path": "15"
    },
    "17448": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8578,
        8591
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4EC4"
    },
    "17451": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8578,
        8610
      ],
      "op": "JUMP",
      "path": "15"
    },
    "17452": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17453": {
      "fn": "EnumerableSet._at",
      "offset": [
        4546,
        4564
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 179
    },
    "17454": {
      "fn": "EnumerableSet._at",
      "offset": [
        4546,
        4564
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "17455": {
      "fn": "EnumerableSet._at",
      "offset": [
        4519,
        4526
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "17457": {
      "fn": "EnumerableSet._at",
      "offset": [
        4519,
        4526
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17458": {
      "branch": 292,
      "fn": "EnumerableSet._at",
      "offset": [
        4546,
        4572
      ],
      "op": "DUP3",
      "path": "11"
    },
    "17459": {
      "op": "LT"
    },
    "17460": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x446E"
    },
    "17463": {
      "branch": 292,
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "17464": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "17466": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "17467": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "17471": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "17473": {
      "op": "SHL"
    },
    "17474": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17475": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "17476": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "17478": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "ADD",
      "path": "11"
    },
    "17479": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP1",
      "path": "11"
    },
    "17480": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP1",
      "path": "11"
    },
    "17481": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "17483": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "ADD",
      "path": "11"
    },
    "17484": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP3",
      "path": "11"
    },
    "17485": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17486": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SUB",
      "path": "11"
    },
    "17487": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP3",
      "path": "11"
    },
    "17488": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "17489": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x22"
    },
    "17491": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17492": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "17493": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "17495": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "ADD",
      "path": "11"
    },
    "17496": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP1",
      "path": "11"
    },
    "17497": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5446"
    },
    "17500": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x22"
    },
    "17502": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "17503": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "CODECOPY",
      "path": "11"
    },
    "17504": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "17506": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "ADD",
      "path": "11"
    },
    "17507": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "17508": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "POP",
      "path": "11"
    },
    "17509": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "POP",
      "path": "11"
    },
    "17510": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "17512": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "17513": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP1",
      "path": "11"
    },
    "17514": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "17515": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SUB",
      "path": "11"
    },
    "17516": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17517": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "REVERT",
      "path": "11"
    },
    "17518": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17519": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4631
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 180
    },
    "17520": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4639
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "17522": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4639
      ],
      "op": "ADD",
      "path": "11"
    },
    "17523": {
      "fn": "EnumerableSet._at",
      "offset": [
        4640,
        4645
      ],
      "op": "DUP3",
      "path": "11"
    },
    "17524": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17525": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "17526": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17527": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "LT",
      "path": "11"
    },
    "17528": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x447D"
    },
    "17531": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "17532": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "INVALID",
      "path": "11"
    },
    "17533": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17534": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17535": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "17537": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "17538": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "17540": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "17542": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "17543": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "ADD",
      "path": "11"
    },
    "17544": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "17545": {
      "fn": "EnumerableSet._at",
      "offset": [
        4621,
        4646
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17546": {
      "fn": "EnumerableSet._at",
      "offset": [
        4621,
        4646
      ],
      "op": "POP",
      "path": "11"
    },
    "17547": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "17548": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "17549": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "POP",
      "path": "11"
    },
    "17550": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "POP",
      "path": "11"
    },
    "17551": {
      "fn": "EnumerableSet._at",
      "jump": "o",
      "offset": [
        4452,
        4653
      ],
      "op": "JUMP",
      "path": "11"
    },
    "17552": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17769,
        20518
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "17553": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17829,
        17858
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "17555": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17829,
        17858
      ],
      "op": "DUP2",
      "path": "12"
    },
    "17556": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17829,
        17858
      ],
      "op": "DUP2",
      "path": "12"
    },
    "17557": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17829,
        17858
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "17558": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17829,
        17847
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1A"
    },
    "17560": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17829,
        17858
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "17562": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17829,
        17858
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "17563": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17829,
        17858
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "17565": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17829,
        17858
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17566": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17829,
        17858
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "17567": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17829,
        17858
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "17568": {
      "offset": [
        2758,
        2759
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "17570": {
      "offset": [
        6612,
        6641
      ],
      "op": "DUP2",
      "path": "12"
    },
    "17571": {
      "branch": 265,
      "fn": "CryptoChampions._trainHero",
      "offset": [
        6612,
        6641
      ],
      "op": "GT",
      "path": "12"
    },
    "17572": {
      "offset": [
        6604,
        6642
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x44AC"
    },
    "17575": {
      "branch": 265,
      "offset": [
        6604,
        6642
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "17576": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        6604,
        6642
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "17578": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        6604,
        6642
      ],
      "op": "DUP1",
      "path": "12"
    },
    "17579": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        6604,
        6642
      ],
      "op": "REVERT",
      "path": "12"
    },
    "17580": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        6604,
        6642
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "17581": {
      "offset": [
        6691,
        6706
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "17583": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        6691,
        6706
      ],
      "op": "DUP2",
      "path": "12"
    },
    "17584": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        6691,
        6706
      ],
      "op": "DUP2",
      "path": "12"
    },
    "17585": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        6691,
        6706
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "17586": {
      "offset": [
        6691,
        6698
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "17588": {
      "offset": [
        6691,
        6706
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "17590": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        6691,
        6706
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "17591": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        6691,
        6706
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "17593": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        6691,
        6706
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17594": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        6691,
        6706
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "17595": {
      "offset": [
        6691,
        6712
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "17596": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        6691,
        6712
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "17598": {
      "branch": 266,
      "fn": "CryptoChampions._trainHero",
      "offset": [
        6691,
        6712
      ],
      "op": "AND",
      "path": "12"
    },
    "17599": {
      "offset": [
        6683,
        6713
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x44C7"
    },
    "17602": {
      "branch": 266,
      "offset": [
        6683,
        6713
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "17603": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        6683,
        6713
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "17605": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        6683,
        6713
      ],
      "op": "DUP1",
      "path": "12"
    },
    "17606": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        6683,
        6713
      ],
      "op": "REVERT",
      "path": "12"
    },
    "17607": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        6683,
        6713
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "17608": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17870,
        17884
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "17610": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17887,
        17916
      ],
      "op": "DUP3",
      "path": "12"
    },
    "17611": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17887,
        17916
      ],
      "op": "DUP2",
      "path": "12"
    },
    "17612": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17887,
        17916
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "17613": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17887,
        17905
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1A"
    },
    "17615": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17887,
        17916
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "17617": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17887,
        17916
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17618": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17887,
        17916
      ],
      "op": "DUP2",
      "path": "12"
    },
    "17619": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17887,
        17916
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "17620": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17887,
        17916
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "17622": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17887,
        17916
      ],
      "op": "DUP1",
      "path": "12"
    },
    "17623": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17887,
        17916
      ],
      "op": "DUP4",
      "path": "12"
    },
    "17624": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17887,
        17916
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "17625": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17887,
        17916
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "17626": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17949,
        17966
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1B"
    },
    "17628": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17949,
        17977
      ],
      "op": "DUP4",
      "path": "12"
    },
    "17629": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17949,
        17977
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "17630": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17949,
        17977
      ],
      "op": "DUP2",
      "path": "12"
    },
    "17631": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17949,
        17977
      ],
      "op": "DUP5",
      "path": "12"
    },
    "17632": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17949,
        17977
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "17633": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17949,
        17977
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "17634": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18021,
        18036
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 181
    },
    "17635": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18021,
        18036
      ],
      "op": "DUP6",
      "path": "12"
    },
    "17636": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18021,
        18036
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "17637": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18021,
        18028
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "17639": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18021,
        18036
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17640": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18021,
        18036
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "17641": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18021,
        18036
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "17642": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18021,
        18036
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17643": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18021,
        18036
      ],
      "op": "DUP4",
      "path": "12"
    },
    "17644": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18021,
        18036
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "17645": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18021,
        18042
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "17647": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18021,
        18042
      ],
      "op": "ADD",
      "path": "12"
    },
    "17648": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18021,
        18046
      ],
      "op": "DUP1",
      "path": "12"
    },
    "17649": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18021,
        18046
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "17650": {
      "op": "PUSH10",
      "value": "0xFF000000000000000000"
    },
    "17661": {
      "op": "NOT"
    },
    "17662": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18021,
        18046
      ],
      "op": "AND",
      "path": "12"
    },
    "17663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17665": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "17667": {
      "op": "SHL"
    },
    "17668": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18021,
        18046
      ],
      "op": "OR",
      "path": "12"
    },
    "17669": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18021,
        18046
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17670": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18021,
        18046
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "17671": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17887,
        17916
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "17672": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18120,
        18146
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 182,
      "value": "0x4512"
    },
    "17675": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18130,
        18131
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "17677": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17949,
        17977
      ],
      "op": "DUP4",
      "path": "12"
    },
    "17678": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18120,
        18129
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4EF0"
    },
    "17681": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        18120,
        18146
      ],
      "op": "JUMP",
      "path": "12"
    },
    "17682": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18120,
        18146
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "17683": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18073,
        18088
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "17685": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18073,
        18088
      ],
      "op": "DUP6",
      "path": "12"
    },
    "17686": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18073,
        18088
      ],
      "op": "DUP2",
      "path": "12"
    },
    "17687": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18073,
        18088
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "17688": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18073,
        18080
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "17690": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18073,
        18088
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "17692": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18073,
        18088
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "17693": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18073,
        18088
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "17695": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18073,
        18088
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17696": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18073,
        18088
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "17697": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18073,
        18099
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "17699": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18073,
        18099
      ],
      "op": "ADD",
      "path": "12"
    },
    "17700": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18072,
        18146
      ],
      "op": "DUP1",
      "path": "12"
    },
    "17701": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18072,
        18146
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "17702": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17704": {
      "op": "NOT"
    },
    "17705": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18072,
        18146
      ],
      "op": "AND",
      "path": "12"
    },
    "17706": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18072,
        18146
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "17708": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18072,
        18146
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "17709": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18072,
        18146
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17710": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18072,
        18146
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "17711": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18072,
        18146
      ],
      "op": "AND",
      "path": "12"
    },
    "17712": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18072,
        18146
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "17713": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18072,
        18146
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17714": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18072,
        18146
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "17715": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18072,
        18146
      ],
      "op": "OR",
      "path": "12"
    },
    "17716": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18072,
        18146
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17717": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18072,
        18146
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "17718": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18072,
        18146
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "17719": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18072,
        18146
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17720": {
      "op": "POP"
    },
    "17721": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18215,
        18244
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 183,
      "value": "0x4543"
    },
    "17724": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18225,
        18226
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "17726": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18072,
        18146
      ],
      "op": "DUP3",
      "path": "12"
    },
    "17727": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18215,
        18224
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4EF0"
    },
    "17730": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        18215,
        18244
      ],
      "op": "JUMP",
      "path": "12"
    },
    "17731": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18215,
        18244
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "17732": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18172,
        18187
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "17734": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18172,
        18187
      ],
      "op": "DUP6",
      "path": "12"
    },
    "17735": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18172,
        18187
      ],
      "op": "DUP2",
      "path": "12"
    },
    "17736": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18172,
        18187
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "17737": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18172,
        18179
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "17739": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18172,
        18187
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "17741": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18172,
        18187
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "17742": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18172,
        18187
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "17744": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18172,
        18187
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17745": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18172,
        18187
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "17746": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18172,
        18194
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "17748": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18172,
        18194
      ],
      "op": "ADD",
      "path": "12"
    },
    "17749": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18171,
        18244
      ],
      "op": "DUP1",
      "path": "12"
    },
    "17750": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18171,
        18244
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "17751": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18171,
        18244
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "17753": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18171,
        18244
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17754": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18171,
        18244
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "17755": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18171,
        18244
      ],
      "op": "AND",
      "path": "12"
    },
    "17756": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18171,
        18244
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "17759": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18171,
        18244
      ],
      "op": "MUL",
      "path": "12"
    },
    "17760": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "17763": {
      "op": "NOT"
    },
    "17764": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18171,
        18244
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17765": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18171,
        18244
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "17766": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18171,
        18244
      ],
      "op": "AND",
      "path": "12"
    },
    "17767": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18171,
        18244
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "17768": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18171,
        18244
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17769": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18171,
        18244
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "17770": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18171,
        18244
      ],
      "op": "OR",
      "path": "12"
    },
    "17771": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18171,
        18244
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17772": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18171,
        18244
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "17773": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18171,
        18244
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "17774": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18171,
        18244
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17775": {
      "op": "POP"
    },
    "17776": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18312,
        18341
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 184,
      "value": "0x457A"
    },
    "17779": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18322,
        18323
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "17781": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18171,
        18244
      ],
      "op": "DUP3",
      "path": "12"
    },
    "17782": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18312,
        18321
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4EF0"
    },
    "17785": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        18312,
        18341
      ],
      "op": "JUMP",
      "path": "12"
    },
    "17786": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18312,
        18341
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "17787": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18269,
        18284
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "17789": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18269,
        18284
      ],
      "op": "DUP6",
      "path": "12"
    },
    "17790": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18269,
        18284
      ],
      "op": "DUP2",
      "path": "12"
    },
    "17791": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18269,
        18284
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "17792": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18269,
        18276
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "17794": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18269,
        18284
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "17796": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18269,
        18284
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "17797": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18269,
        18284
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "17799": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18269,
        18284
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17800": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18269,
        18284
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "17801": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18269,
        18291
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "17803": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18269,
        18291
      ],
      "op": "ADD",
      "path": "12"
    },
    "17804": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18268,
        18341
      ],
      "op": "DUP1",
      "path": "12"
    },
    "17805": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18268,
        18341
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "17806": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18268,
        18341
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "17808": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18268,
        18341
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17809": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18268,
        18341
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "17810": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18268,
        18341
      ],
      "op": "AND",
      "path": "12"
    },
    "17811": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18268,
        18341
      ],
      "op": "PUSH3",
      "path": "12",
      "value": "0x10000"
    },
    "17815": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18268,
        18341
      ],
      "op": "MUL",
      "path": "12"
    },
    "17816": {
      "op": "PUSH3",
      "value": "0xFF0000"
    },
    "17820": {
      "op": "NOT"
    },
    "17821": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18268,
        18341
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17822": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18268,
        18341
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "17823": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18268,
        18341
      ],
      "op": "AND",
      "path": "12"
    },
    "17824": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18268,
        18341
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "17825": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18268,
        18341
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17826": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18268,
        18341
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "17827": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18268,
        18341
      ],
      "op": "OR",
      "path": "12"
    },
    "17828": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18268,
        18341
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17829": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18268,
        18341
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "17830": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18268,
        18341
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "17831": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18268,
        18341
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17832": {
      "op": "POP"
    },
    "17833": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18409,
        18438
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 185,
      "value": "0x45B3"
    },
    "17836": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18419,
        18420
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "17838": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18268,
        18341
      ],
      "op": "DUP3",
      "path": "12"
    },
    "17839": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18409,
        18418
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4EF0"
    },
    "17842": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        18409,
        18438
      ],
      "op": "JUMP",
      "path": "12"
    },
    "17843": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18409,
        18438
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "17844": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18366,
        18381
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "17846": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18366,
        18381
      ],
      "op": "DUP6",
      "path": "12"
    },
    "17847": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18366,
        18381
      ],
      "op": "DUP2",
      "path": "12"
    },
    "17848": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18366,
        18381
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "17849": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18366,
        18373
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "17851": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18366,
        18381
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "17853": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18366,
        18381
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "17854": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18366,
        18381
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "17856": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18366,
        18381
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17857": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18366,
        18381
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "17858": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18366,
        18388
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "17860": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18366,
        18388
      ],
      "op": "ADD",
      "path": "12"
    },
    "17861": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18365,
        18438
      ],
      "op": "DUP1",
      "path": "12"
    },
    "17862": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18365,
        18438
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "17863": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18365,
        18438
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "17865": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18365,
        18438
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17866": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18365,
        18438
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "17867": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18365,
        18438
      ],
      "op": "AND",
      "path": "12"
    },
    "17868": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18365,
        18438
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x1000000"
    },
    "17873": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18365,
        18438
      ],
      "op": "MUL",
      "path": "12"
    },
    "17874": {
      "op": "PUSH4",
      "value": "0xFF000000"
    },
    "17879": {
      "op": "NOT"
    },
    "17880": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18365,
        18438
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17881": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18365,
        18438
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "17882": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18365,
        18438
      ],
      "op": "AND",
      "path": "12"
    },
    "17883": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18365,
        18438
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "17884": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18365,
        18438
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17885": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18365,
        18438
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "17886": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18365,
        18438
      ],
      "op": "OR",
      "path": "12"
    },
    "17887": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18365,
        18438
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17888": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18365,
        18438
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "17889": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18365,
        18438
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "17890": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18365,
        18438
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17891": {
      "op": "POP"
    },
    "17892": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18506,
        18535
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 186,
      "value": "0x45EE"
    },
    "17895": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18516,
        18517
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "17897": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18365,
        18438
      ],
      "op": "DUP3",
      "path": "12"
    },
    "17898": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18506,
        18515
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4EF0"
    },
    "17901": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        18506,
        18535
      ],
      "op": "JUMP",
      "path": "12"
    },
    "17902": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18506,
        18535
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "17903": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18463,
        18478
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "17905": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18463,
        18478
      ],
      "op": "DUP6",
      "path": "12"
    },
    "17906": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18463,
        18478
      ],
      "op": "DUP2",
      "path": "12"
    },
    "17907": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18463,
        18478
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "17908": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18463,
        18470
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "17910": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18463,
        18478
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "17912": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18463,
        18478
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "17913": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18463,
        18478
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "17915": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18463,
        18478
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17916": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18463,
        18478
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "17917": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18463,
        18485
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "17919": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18463,
        18485
      ],
      "op": "ADD",
      "path": "12"
    },
    "17920": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18462,
        18535
      ],
      "op": "DUP1",
      "path": "12"
    },
    "17921": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18462,
        18535
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "17922": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18462,
        18535
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "17924": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18462,
        18535
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17925": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18462,
        18535
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "17926": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18462,
        18535
      ],
      "op": "AND",
      "path": "12"
    },
    "17927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17929": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17931": {
      "op": "SHL"
    },
    "17932": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18462,
        18535
      ],
      "op": "MUL",
      "path": "12"
    },
    "17933": {
      "op": "PUSH5",
      "value": "0xFF00000000"
    },
    "17939": {
      "op": "NOT"
    },
    "17940": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18462,
        18535
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17941": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18462,
        18535
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "17942": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18462,
        18535
      ],
      "op": "AND",
      "path": "12"
    },
    "17943": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18462,
        18535
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "17944": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18462,
        18535
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17945": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18462,
        18535
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "17946": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18462,
        18535
      ],
      "op": "OR",
      "path": "12"
    },
    "17947": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18462,
        18535
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17948": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18462,
        18535
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "17949": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18462,
        18535
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "17950": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18462,
        18535
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17951": {
      "op": "POP"
    },
    "17952": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18607,
        18636
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 187,
      "value": "0x462A"
    },
    "17955": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18617,
        18618
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "17957": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18462,
        18535
      ],
      "op": "DUP3",
      "path": "12"
    },
    "17958": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18607,
        18616
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4EF0"
    },
    "17961": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        18607,
        18636
      ],
      "op": "JUMP",
      "path": "12"
    },
    "17962": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18607,
        18636
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "17963": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18561,
        18576
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "17965": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18561,
        18576
      ],
      "op": "DUP6",
      "path": "12"
    },
    "17966": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18561,
        18576
      ],
      "op": "DUP2",
      "path": "12"
    },
    "17967": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18561,
        18576
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "17968": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18561,
        18568
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "17970": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18561,
        18576
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "17972": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18561,
        18576
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "17973": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18561,
        18576
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "17975": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18561,
        18576
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17976": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18561,
        18576
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "17977": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18561,
        18586
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "17979": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18561,
        18586
      ],
      "op": "ADD",
      "path": "12"
    },
    "17980": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18560,
        18636
      ],
      "op": "DUP1",
      "path": "12"
    },
    "17981": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18560,
        18636
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "17982": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18560,
        18636
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "17984": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18560,
        18636
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17985": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18560,
        18636
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "17986": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18560,
        18636
      ],
      "op": "AND",
      "path": "12"
    },
    "17987": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18560,
        18636
      ],
      "op": "PUSH6",
      "path": "12",
      "value": "0x10000000000"
    },
    "17994": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18560,
        18636
      ],
      "op": "MUL",
      "path": "12"
    },
    "17995": {
      "op": "PUSH6",
      "value": "0xFF0000000000"
    },
    "18002": {
      "op": "NOT"
    },
    "18003": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18560,
        18636
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18004": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18560,
        18636
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "18005": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18560,
        18636
      ],
      "op": "AND",
      "path": "12"
    },
    "18006": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18560,
        18636
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18007": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18560,
        18636
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18008": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18560,
        18636
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18009": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18560,
        18636
      ],
      "op": "OR",
      "path": "12"
    },
    "18010": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18560,
        18636
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18011": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18560,
        18636
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18012": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18560,
        18636
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "18013": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18560,
        18636
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18014": {
      "op": "POP"
    },
    "18015": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18708,
        18738
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 188,
      "value": "0x4669"
    },
    "18018": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18718,
        18720
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1E"
    },
    "18020": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18560,
        18636
      ],
      "op": "DUP3",
      "path": "12"
    },
    "18021": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18708,
        18717
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4EF0"
    },
    "18024": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        18708,
        18738
      ],
      "op": "JUMP",
      "path": "12"
    },
    "18025": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18708,
        18738
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18026": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18661,
        18676
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18028": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18661,
        18676
      ],
      "op": "DUP6",
      "path": "12"
    },
    "18029": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18661,
        18676
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18030": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18661,
        18676
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18031": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18661,
        18668
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "18033": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18661,
        18676
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "18035": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18661,
        18676
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18036": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18661,
        18676
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "18038": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18661,
        18676
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18039": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18661,
        18676
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "18040": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18661,
        18687
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "18042": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18661,
        18687
      ],
      "op": "ADD",
      "path": "12"
    },
    "18043": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18660,
        18738
      ],
      "op": "DUP1",
      "path": "12"
    },
    "18044": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18660,
        18738
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "18045": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18660,
        18738
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "18047": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18660,
        18738
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18048": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18660,
        18738
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "18049": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18660,
        18738
      ],
      "op": "AND",
      "path": "12"
    },
    "18050": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18660,
        18738
      ],
      "op": "PUSH7",
      "path": "12",
      "value": "0x1000000000000"
    },
    "18058": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18660,
        18738
      ],
      "op": "MUL",
      "path": "12"
    },
    "18059": {
      "op": "PUSH7",
      "value": "0xFF000000000000"
    },
    "18067": {
      "op": "NOT"
    },
    "18068": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18660,
        18738
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18069": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18660,
        18738
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "18070": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18660,
        18738
      ],
      "op": "AND",
      "path": "12"
    },
    "18071": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18660,
        18738
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18072": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18660,
        18738
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18073": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18660,
        18738
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18074": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18660,
        18738
      ],
      "op": "OR",
      "path": "12"
    },
    "18075": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18660,
        18738
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18076": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18660,
        18738
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18077": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18660,
        18738
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "18078": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18660,
        18738
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18079": {
      "op": "POP"
    },
    "18080": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18809,
        18839
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 189,
      "value": "0x46AA"
    },
    "18083": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18819,
        18821
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x18"
    },
    "18085": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18660,
        18738
      ],
      "op": "DUP3",
      "path": "12"
    },
    "18086": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18809,
        18818
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4EF0"
    },
    "18089": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        18809,
        18839
      ],
      "op": "JUMP",
      "path": "12"
    },
    "18090": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18809,
        18839
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18091": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18764,
        18779
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18093": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18764,
        18779
      ],
      "op": "DUP6",
      "path": "12"
    },
    "18094": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18764,
        18779
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18095": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18764,
        18779
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18096": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18764,
        18771
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "18098": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18764,
        18779
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "18100": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18764,
        18779
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18101": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18764,
        18779
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "18103": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18764,
        18779
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18104": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18764,
        18779
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "18105": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18764,
        18788
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "18107": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18764,
        18788
      ],
      "op": "ADD",
      "path": "12"
    },
    "18108": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18763,
        18839
      ],
      "op": "DUP1",
      "path": "12"
    },
    "18109": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18763,
        18839
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "18110": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18763,
        18839
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "18112": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18763,
        18839
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18113": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18763,
        18839
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "18114": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18763,
        18839
      ],
      "op": "AND",
      "path": "12"
    },
    "18115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18117": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "18119": {
      "op": "SHL"
    },
    "18120": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18763,
        18839
      ],
      "op": "MUL",
      "path": "12"
    },
    "18121": {
      "op": "PUSH8",
      "value": "0xFF00000000000000"
    },
    "18130": {
      "op": "NOT"
    },
    "18131": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18763,
        18839
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18132": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18763,
        18839
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "18133": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18763,
        18839
      ],
      "op": "AND",
      "path": "12"
    },
    "18134": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18763,
        18839
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18135": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18763,
        18839
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18136": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18763,
        18839
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18137": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18763,
        18839
      ],
      "op": "OR",
      "path": "12"
    },
    "18138": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18763,
        18839
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18139": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18763,
        18839
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18140": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18763,
        18839
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "18141": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18763,
        18839
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18142": {
      "op": "POP"
    },
    "18143": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18909,
        18938
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 190,
      "value": "0x46E9"
    },
    "18146": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18764,
        18788
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "18148": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18763,
        18839
      ],
      "op": "DUP3",
      "path": "12"
    },
    "18149": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18909,
        18918
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4EF0"
    },
    "18152": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        18909,
        18938
      ],
      "op": "JUMP",
      "path": "12"
    },
    "18153": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18909,
        18938
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18154": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18865,
        18880
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18156": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18865,
        18880
      ],
      "op": "DUP6",
      "path": "12"
    },
    "18157": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18865,
        18880
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18158": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18865,
        18880
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18159": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18865,
        18872
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "18161": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18865,
        18880
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "18163": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18865,
        18880
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18164": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18865,
        18880
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "18166": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18865,
        18880
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18167": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18865,
        18880
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "18168": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18865,
        18888
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "18170": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18865,
        18888
      ],
      "op": "ADD",
      "path": "12"
    },
    "18171": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18864,
        18938
      ],
      "op": "DUP1",
      "path": "12"
    },
    "18172": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18864,
        18938
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "18173": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18864,
        18938
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "18175": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18864,
        18938
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18176": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18864,
        18938
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "18177": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18864,
        18938
      ],
      "op": "AND",
      "path": "12"
    },
    "18178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18180": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18182": {
      "op": "SHL"
    },
    "18183": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18864,
        18938
      ],
      "op": "MUL",
      "path": "12"
    },
    "18184": {
      "op": "PUSH9",
      "value": "0xFF0000000000000000"
    },
    "18194": {
      "op": "NOT"
    },
    "18195": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18864,
        18938
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18196": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18864,
        18938
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "18197": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18864,
        18938
      ],
      "op": "AND",
      "path": "12"
    },
    "18198": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18864,
        18938
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18199": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18864,
        18938
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18200": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18864,
        18938
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18201": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18864,
        18938
      ],
      "op": "OR",
      "path": "12"
    },
    "18202": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18864,
        18938
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18203": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18864,
        18938
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18204": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18864,
        18938
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "18205": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18864,
        18938
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18206": {
      "op": "POP"
    },
    "18207": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19003,
        19033
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 191,
      "value": "0x4729"
    },
    "18210": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19013,
        19015
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x15"
    },
    "18212": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18864,
        18938
      ],
      "op": "DUP3",
      "path": "12"
    },
    "18213": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19003,
        19012
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4EF0"
    },
    "18216": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        19003,
        19033
      ],
      "op": "JUMP",
      "path": "12"
    },
    "18217": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19003,
        19033
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18218": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18964,
        18979
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18220": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18964,
        18979
      ],
      "op": "DUP6",
      "path": "12"
    },
    "18221": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18964,
        18979
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18222": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18964,
        18979
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18223": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18964,
        18971
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "18225": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18964,
        18979
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "18227": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18964,
        18979
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18228": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18964,
        18979
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "18230": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18964,
        18979
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18231": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18964,
        18979
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "18232": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18964,
        18982
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "18234": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18964,
        18982
      ],
      "op": "ADD",
      "path": "12"
    },
    "18235": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18963,
        19033
      ],
      "op": "DUP1",
      "path": "12"
    },
    "18236": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18963,
        19033
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "18237": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18239": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "18241": {
      "op": "SHL"
    },
    "18242": {
      "op": "NOT"
    },
    "18243": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18963,
        19033
      ],
      "op": "AND",
      "path": "12"
    },
    "18244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18246": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "18248": {
      "op": "SHL"
    },
    "18249": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18963,
        19033
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "18251": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18963,
        19033
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "18252": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18963,
        19033
      ],
      "op": "DUP6",
      "path": "12"
    },
    "18253": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18963,
        19033
      ],
      "op": "AND",
      "path": "12"
    },
    "18254": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18963,
        19033
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18255": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18963,
        19033
      ],
      "op": "MUL",
      "path": "12"
    },
    "18256": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18963,
        19033
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18257": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18963,
        19033
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18258": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18963,
        19033
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18259": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18963,
        19033
      ],
      "op": "OR",
      "path": "12"
    },
    "18260": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18963,
        19033
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18261": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18963,
        19033
      ],
      "op": "DUP3",
      "path": "12"
    },
    "18262": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18963,
        19033
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18263": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18963,
        19033
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "18264": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18963,
        19033
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18265": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        18963,
        19033
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "18266": {
      "op": "POP"
    },
    "18267": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19084,
        19109
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 192,
      "value": "0x4769"
    },
    "18270": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19084,
        19109
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18271": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19084,
        19102
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18272": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19084,
        19102
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18273": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19084,
        19102
      ],
      "op": "DIV",
      "path": "12"
    },
    "18274": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19084,
        19102
      ],
      "op": "AND",
      "path": "12"
    },
    "18275": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19107,
        19108
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "18277": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19084,
        19106
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3478"
    },
    "18280": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        19084,
        19109
      ],
      "op": "JUMP",
      "path": "12"
    },
    "18281": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19084,
        19109
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18282": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19057,
        19072
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18284": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19057,
        19072
      ],
      "op": "DUP5",
      "path": "12"
    },
    "18285": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19057,
        19072
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18286": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19057,
        19072
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18287": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19057,
        19064
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "18289": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19057,
        19072
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "18291": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19057,
        19072
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18292": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19057,
        19072
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "18294": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19057,
        19072
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18295": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19057,
        19072
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "18296": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19057,
        19075
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "18298": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19057,
        19075
      ],
      "op": "ADD",
      "path": "12"
    },
    "18299": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19057,
        19110
      ],
      "op": "DUP1",
      "path": "12"
    },
    "18300": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19057,
        19110
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "18301": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19057,
        19110
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "18303": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19057,
        19110
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18304": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19057,
        19110
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18305": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19057,
        19110
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18306": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19057,
        19110
      ],
      "op": "AND",
      "path": "12"
    },
    "18307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18309": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "18311": {
      "op": "SHL"
    },
    "18312": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19057,
        19110
      ],
      "op": "MUL",
      "path": "12"
    },
    "18313": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18315": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "18317": {
      "op": "SHL"
    },
    "18318": {
      "op": "NOT"
    },
    "18319": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19057,
        19110
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18320": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19057,
        19110
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18321": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19057,
        19110
      ],
      "op": "AND",
      "path": "12"
    },
    "18322": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19057,
        19110
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18323": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19057,
        19110
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18324": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19057,
        19110
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18325": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19057,
        19110
      ],
      "op": "OR",
      "path": "12"
    },
    "18326": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19057,
        19110
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18327": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19057,
        19110
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "18328": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19162,
        19192
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 193,
      "value": "0x47A2"
    },
    "18331": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19172,
        19174
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x15"
    },
    "18333": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19176,
        19191
      ],
      "op": "DUP3",
      "path": "12"
    },
    "18334": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19162,
        19171
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4EF0"
    },
    "18337": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        19162,
        19192
      ],
      "op": "JUMP",
      "path": "12"
    },
    "18338": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19162,
        19192
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18339": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19121,
        19136
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18341": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19121,
        19136
      ],
      "op": "DUP6",
      "path": "12"
    },
    "18342": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19121,
        19136
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18343": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19121,
        19136
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18344": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19121,
        19128
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "18346": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19121,
        19136
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "18348": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19121,
        19136
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18349": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19121,
        19136
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "18351": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19121,
        19136
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18352": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19121,
        19136
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "18353": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19121,
        19141
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "18355": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19121,
        19141
      ],
      "op": "ADD",
      "path": "12"
    },
    "18356": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19120,
        19192
      ],
      "op": "DUP1",
      "path": "12"
    },
    "18357": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19120,
        19192
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "18358": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18360": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "18362": {
      "op": "SHL"
    },
    "18363": {
      "op": "NOT"
    },
    "18364": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19120,
        19192
      ],
      "op": "AND",
      "path": "12"
    },
    "18365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18367": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "18369": {
      "op": "SHL"
    },
    "18370": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19120,
        19192
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "18372": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19120,
        19192
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "18373": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19120,
        19192
      ],
      "op": "DUP6",
      "path": "12"
    },
    "18374": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19120,
        19192
      ],
      "op": "AND",
      "path": "12"
    },
    "18375": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19120,
        19192
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18376": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19120,
        19192
      ],
      "op": "MUL",
      "path": "12"
    },
    "18377": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19120,
        19192
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18378": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19120,
        19192
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18379": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19120,
        19192
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18380": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19120,
        19192
      ],
      "op": "OR",
      "path": "12"
    },
    "18381": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19120,
        19192
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18382": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19120,
        19192
      ],
      "op": "DUP3",
      "path": "12"
    },
    "18383": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19120,
        19192
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18384": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19120,
        19192
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "18385": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19120,
        19192
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18386": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19120,
        19192
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "18387": {
      "op": "POP"
    },
    "18388": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19245,
        19272
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 194,
      "value": "0x47E2"
    },
    "18391": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19245,
        19272
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18392": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19245,
        19265
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18393": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19245,
        19265
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18394": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19245,
        19265
      ],
      "op": "DIV",
      "path": "12"
    },
    "18395": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19245,
        19265
      ],
      "op": "AND",
      "path": "12"
    },
    "18396": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19270,
        19271
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "18398": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19245,
        19269
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3478"
    },
    "18401": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        19245,
        19272
      ],
      "op": "JUMP",
      "path": "12"
    },
    "18402": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19245,
        19272
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18403": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19216,
        19231
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18405": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19216,
        19231
      ],
      "op": "DUP5",
      "path": "12"
    },
    "18406": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19216,
        19231
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18407": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19216,
        19231
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18408": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19216,
        19223
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "18410": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19216,
        19231
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "18412": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19216,
        19231
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18413": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19216,
        19231
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "18415": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19216,
        19231
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18416": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19216,
        19231
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "18417": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19216,
        19236
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "18419": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19216,
        19236
      ],
      "op": "ADD",
      "path": "12"
    },
    "18420": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19216,
        19273
      ],
      "op": "DUP1",
      "path": "12"
    },
    "18421": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19216,
        19273
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "18422": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19216,
        19273
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "18424": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19216,
        19273
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18425": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19216,
        19273
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18426": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19216,
        19273
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18427": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19216,
        19273
      ],
      "op": "AND",
      "path": "12"
    },
    "18428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18430": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "18432": {
      "op": "SHL"
    },
    "18433": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19216,
        19273
      ],
      "op": "MUL",
      "path": "12"
    },
    "18434": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18436": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "18438": {
      "op": "SHL"
    },
    "18439": {
      "op": "NOT"
    },
    "18440": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19216,
        19273
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18441": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19216,
        19273
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18442": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19216,
        19273
      ],
      "op": "AND",
      "path": "12"
    },
    "18443": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19216,
        19273
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18444": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19216,
        19273
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18445": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19216,
        19273
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18446": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19216,
        19273
      ],
      "op": "OR",
      "path": "12"
    },
    "18447": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19216,
        19273
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18448": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19216,
        19273
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "18449": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19328,
        19358
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 195,
      "value": "0x481B"
    },
    "18452": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19338,
        19340
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "18454": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19342,
        19357
      ],
      "op": "DUP3",
      "path": "12"
    },
    "18455": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19328,
        19337
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4EF0"
    },
    "18458": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        19328,
        19358
      ],
      "op": "JUMP",
      "path": "12"
    },
    "18459": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19328,
        19358
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18460": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19284,
        19299
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18462": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19284,
        19299
      ],
      "op": "DUP6",
      "path": "12"
    },
    "18463": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19284,
        19299
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18464": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19284,
        19299
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18465": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19284,
        19291
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "18467": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19284,
        19299
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "18469": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19284,
        19299
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18470": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19284,
        19299
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "18472": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19284,
        19299
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18473": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19284,
        19299
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "18474": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19284,
        19307
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "18476": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19284,
        19307
      ],
      "op": "ADD",
      "path": "12"
    },
    "18477": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19283,
        19358
      ],
      "op": "DUP1",
      "path": "12"
    },
    "18478": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19283,
        19358
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "18479": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18481": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18483": {
      "op": "SHL"
    },
    "18484": {
      "op": "NOT"
    },
    "18485": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19283,
        19358
      ],
      "op": "AND",
      "path": "12"
    },
    "18486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18488": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18490": {
      "op": "SHL"
    },
    "18491": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19283,
        19358
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "18493": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19283,
        19358
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "18494": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19283,
        19358
      ],
      "op": "DUP6",
      "path": "12"
    },
    "18495": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19283,
        19358
      ],
      "op": "AND",
      "path": "12"
    },
    "18496": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19283,
        19358
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18497": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19283,
        19358
      ],
      "op": "MUL",
      "path": "12"
    },
    "18498": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19283,
        19358
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18499": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19283,
        19358
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18500": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19283,
        19358
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18501": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19283,
        19358
      ],
      "op": "OR",
      "path": "12"
    },
    "18502": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19283,
        19358
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18503": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19283,
        19358
      ],
      "op": "DUP3",
      "path": "12"
    },
    "18504": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19283,
        19358
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18505": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19283,
        19358
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "18506": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19283,
        19358
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18507": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19283,
        19358
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "18508": {
      "op": "POP"
    },
    "18509": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19414,
        19444
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 196,
      "value": "0x485B"
    },
    "18512": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19414,
        19444
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18513": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19414,
        19437
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18514": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19414,
        19437
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18515": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19414,
        19437
      ],
      "op": "DIV",
      "path": "12"
    },
    "18516": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19414,
        19437
      ],
      "op": "AND",
      "path": "12"
    },
    "18517": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19442,
        19443
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "18519": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19414,
        19441
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3478"
    },
    "18522": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        19414,
        19444
      ],
      "op": "JUMP",
      "path": "12"
    },
    "18523": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19414,
        19444
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18524": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19382,
        19397
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18526": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19382,
        19397
      ],
      "op": "DUP5",
      "path": "12"
    },
    "18527": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19382,
        19397
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18528": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19382,
        19397
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18529": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19382,
        19389
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "18531": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19382,
        19397
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "18533": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19382,
        19397
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18534": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19382,
        19397
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "18536": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19382,
        19397
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18537": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19382,
        19397
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "18538": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19382,
        19405
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "18540": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19382,
        19405
      ],
      "op": "ADD",
      "path": "12"
    },
    "18541": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19382,
        19445
      ],
      "op": "DUP1",
      "path": "12"
    },
    "18542": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19382,
        19445
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "18543": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19382,
        19445
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "18545": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19382,
        19445
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18546": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19382,
        19445
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18547": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19382,
        19445
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18548": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19382,
        19445
      ],
      "op": "AND",
      "path": "12"
    },
    "18549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18551": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18553": {
      "op": "SHL"
    },
    "18554": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19382,
        19445
      ],
      "op": "MUL",
      "path": "12"
    },
    "18555": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18557": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18559": {
      "op": "SHL"
    },
    "18560": {
      "op": "NOT"
    },
    "18561": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19382,
        19445
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18562": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19382,
        19445
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18563": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19382,
        19445
      ],
      "op": "AND",
      "path": "12"
    },
    "18564": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19382,
        19445
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18565": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19382,
        19445
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18566": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19382,
        19445
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18567": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19382,
        19445
      ],
      "op": "OR",
      "path": "12"
    },
    "18568": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19382,
        19445
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18569": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19382,
        19445
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "18570": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19502,
        19532
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 197,
      "value": "0x4894"
    },
    "18573": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19512,
        19514
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x10"
    },
    "18575": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19516,
        19531
      ],
      "op": "DUP3",
      "path": "12"
    },
    "18576": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19502,
        19511
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4EF0"
    },
    "18579": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        19502,
        19532
      ],
      "op": "JUMP",
      "path": "12"
    },
    "18580": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19502,
        19532
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18581": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19457,
        19472
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18583": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19457,
        19472
      ],
      "op": "DUP6",
      "path": "12"
    },
    "18584": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19457,
        19472
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18585": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19457,
        19472
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18586": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19457,
        19464
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "18588": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19457,
        19472
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "18590": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19457,
        19472
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18591": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19457,
        19472
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "18593": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19457,
        19472
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18594": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19457,
        19472
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "18595": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19457,
        19481
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "18597": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19457,
        19481
      ],
      "op": "ADD",
      "path": "12"
    },
    "18598": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19456,
        19532
      ],
      "op": "DUP1",
      "path": "12"
    },
    "18599": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19456,
        19532
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "18600": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18602": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "18604": {
      "op": "SHL"
    },
    "18605": {
      "op": "NOT"
    },
    "18606": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19456,
        19532
      ],
      "op": "AND",
      "path": "12"
    },
    "18607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18609": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "18611": {
      "op": "SHL"
    },
    "18612": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19456,
        19532
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "18614": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19456,
        19532
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "18615": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19456,
        19532
      ],
      "op": "DUP6",
      "path": "12"
    },
    "18616": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19456,
        19532
      ],
      "op": "AND",
      "path": "12"
    },
    "18617": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19456,
        19532
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18618": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19456,
        19532
      ],
      "op": "MUL",
      "path": "12"
    },
    "18619": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19456,
        19532
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18620": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19456,
        19532
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18621": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19456,
        19532
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18622": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19456,
        19532
      ],
      "op": "OR",
      "path": "12"
    },
    "18623": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19456,
        19532
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18624": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19456,
        19532
      ],
      "op": "DUP3",
      "path": "12"
    },
    "18625": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19456,
        19532
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18626": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19456,
        19532
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "18627": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19456,
        19532
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18628": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19456,
        19532
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "18629": {
      "op": "POP"
    },
    "18630": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19588,
        19619
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 198,
      "value": "0x48D4"
    },
    "18633": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19588,
        19619
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18634": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19588,
        19612
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18635": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19588,
        19612
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18636": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19588,
        19612
      ],
      "op": "DIV",
      "path": "12"
    },
    "18637": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19588,
        19612
      ],
      "op": "AND",
      "path": "12"
    },
    "18638": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19617,
        19618
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "18640": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19588,
        19616
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3478"
    },
    "18643": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        19588,
        19619
      ],
      "op": "JUMP",
      "path": "12"
    },
    "18644": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19588,
        19619
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18645": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19555,
        19570
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18647": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19555,
        19570
      ],
      "op": "DUP5",
      "path": "12"
    },
    "18648": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19555,
        19570
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18649": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19555,
        19570
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18650": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19555,
        19562
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "18652": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19555,
        19570
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "18654": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19555,
        19570
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18655": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19555,
        19570
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "18657": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19555,
        19570
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18658": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19555,
        19570
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "18659": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19555,
        19579
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "18661": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19555,
        19579
      ],
      "op": "ADD",
      "path": "12"
    },
    "18662": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19555,
        19620
      ],
      "op": "DUP1",
      "path": "12"
    },
    "18663": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19555,
        19620
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "18664": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19555,
        19620
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "18666": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19555,
        19620
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18667": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19555,
        19620
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18668": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19555,
        19620
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18669": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19555,
        19620
      ],
      "op": "AND",
      "path": "12"
    },
    "18670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18672": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "18674": {
      "op": "SHL"
    },
    "18675": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19555,
        19620
      ],
      "op": "MUL",
      "path": "12"
    },
    "18676": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18678": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "18680": {
      "op": "SHL"
    },
    "18681": {
      "op": "NOT"
    },
    "18682": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19555,
        19620
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18683": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19555,
        19620
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18684": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19555,
        19620
      ],
      "op": "AND",
      "path": "12"
    },
    "18685": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19555,
        19620
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18686": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19555,
        19620
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18687": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19555,
        19620
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18688": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19555,
        19620
      ],
      "op": "OR",
      "path": "12"
    },
    "18689": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19555,
        19620
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18690": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19555,
        19620
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "18691": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19677,
        19707
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 199,
      "value": "0x490D"
    },
    "18694": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19687,
        19689
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x10"
    },
    "18696": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19691,
        19706
      ],
      "op": "DUP3",
      "path": "12"
    },
    "18697": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19677,
        19686
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4EF0"
    },
    "18700": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        19677,
        19707
      ],
      "op": "JUMP",
      "path": "12"
    },
    "18701": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19677,
        19707
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18702": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19631,
        19646
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18704": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19631,
        19646
      ],
      "op": "DUP6",
      "path": "12"
    },
    "18705": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19631,
        19646
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18706": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19631,
        19646
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18707": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19631,
        19638
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "18709": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19631,
        19646
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "18711": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19631,
        19646
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18712": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19631,
        19646
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "18714": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19631,
        19646
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18715": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19631,
        19646
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "18716": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19631,
        19656
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "18718": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19631,
        19656
      ],
      "op": "ADD",
      "path": "12"
    },
    "18719": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19630,
        19707
      ],
      "op": "DUP1",
      "path": "12"
    },
    "18720": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19630,
        19707
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "18721": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18723": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "18725": {
      "op": "SHL"
    },
    "18726": {
      "op": "NOT"
    },
    "18727": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19630,
        19707
      ],
      "op": "AND",
      "path": "12"
    },
    "18728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18730": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "18732": {
      "op": "SHL"
    },
    "18733": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19630,
        19707
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "18735": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19630,
        19707
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "18736": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19630,
        19707
      ],
      "op": "DUP6",
      "path": "12"
    },
    "18737": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19630,
        19707
      ],
      "op": "AND",
      "path": "12"
    },
    "18738": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19630,
        19707
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18739": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19630,
        19707
      ],
      "op": "MUL",
      "path": "12"
    },
    "18740": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19630,
        19707
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18741": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19630,
        19707
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18742": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19630,
        19707
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18743": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19630,
        19707
      ],
      "op": "OR",
      "path": "12"
    },
    "18744": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19630,
        19707
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18745": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19630,
        19707
      ],
      "op": "DUP3",
      "path": "12"
    },
    "18746": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19630,
        19707
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18747": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19630,
        19707
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "18748": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19630,
        19707
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18749": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19630,
        19707
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "18750": {
      "op": "POP"
    },
    "18751": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19764,
        19796
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 200,
      "value": "0x494D"
    },
    "18754": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19764,
        19796
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18755": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19764,
        19789
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18756": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19764,
        19789
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18757": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19764,
        19789
      ],
      "op": "DIV",
      "path": "12"
    },
    "18758": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19764,
        19789
      ],
      "op": "AND",
      "path": "12"
    },
    "18759": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19794,
        19795
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "18761": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19764,
        19793
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3478"
    },
    "18764": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        19764,
        19796
      ],
      "op": "JUMP",
      "path": "12"
    },
    "18765": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19764,
        19796
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18766": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19730,
        19745
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18768": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19730,
        19745
      ],
      "op": "DUP5",
      "path": "12"
    },
    "18769": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19730,
        19745
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18770": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19730,
        19745
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18771": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19730,
        19737
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "18773": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19730,
        19745
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "18775": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19730,
        19745
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18776": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19730,
        19745
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "18778": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19730,
        19745
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18779": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19730,
        19745
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "18780": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19730,
        19755
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "18782": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19730,
        19755
      ],
      "op": "ADD",
      "path": "12"
    },
    "18783": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19730,
        19797
      ],
      "op": "DUP1",
      "path": "12"
    },
    "18784": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19730,
        19797
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "18785": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19730,
        19797
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "18787": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19730,
        19797
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18788": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19730,
        19797
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18789": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19730,
        19797
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18790": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19730,
        19797
      ],
      "op": "AND",
      "path": "12"
    },
    "18791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18793": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "18795": {
      "op": "SHL"
    },
    "18796": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19730,
        19797
      ],
      "op": "MUL",
      "path": "12"
    },
    "18797": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18799": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "18801": {
      "op": "SHL"
    },
    "18802": {
      "op": "NOT"
    },
    "18803": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19730,
        19797
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18804": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19730,
        19797
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18805": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19730,
        19797
      ],
      "op": "AND",
      "path": "12"
    },
    "18806": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19730,
        19797
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18807": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19730,
        19797
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18808": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19730,
        19797
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18809": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19730,
        19797
      ],
      "op": "OR",
      "path": "12"
    },
    "18810": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19730,
        19797
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18811": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19730,
        19797
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "18812": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19857,
        19887
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 201,
      "value": "0x4986"
    },
    "18815": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19867,
        19869
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x10"
    },
    "18817": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19871,
        19886
      ],
      "op": "DUP3",
      "path": "12"
    },
    "18818": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19857,
        19866
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4EF0"
    },
    "18821": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        19857,
        19887
      ],
      "op": "JUMP",
      "path": "12"
    },
    "18822": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19857,
        19887
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18823": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19808,
        19823
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18825": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19808,
        19823
      ],
      "op": "DUP6",
      "path": "12"
    },
    "18826": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19808,
        19823
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18827": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19808,
        19823
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18828": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19808,
        19815
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "18830": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19808,
        19823
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "18832": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19808,
        19823
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18833": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19808,
        19823
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "18835": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19808,
        19823
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18836": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19808,
        19823
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "18837": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19808,
        19836
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "18839": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19808,
        19836
      ],
      "op": "ADD",
      "path": "12"
    },
    "18840": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19807,
        19887
      ],
      "op": "DUP1",
      "path": "12"
    },
    "18841": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19807,
        19887
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "18842": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18844": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "18846": {
      "op": "SHL"
    },
    "18847": {
      "op": "NOT"
    },
    "18848": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19807,
        19887
      ],
      "op": "AND",
      "path": "12"
    },
    "18849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18851": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "18853": {
      "op": "SHL"
    },
    "18854": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19807,
        19887
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "18856": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19807,
        19887
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "18857": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19807,
        19887
      ],
      "op": "DUP6",
      "path": "12"
    },
    "18858": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19807,
        19887
      ],
      "op": "AND",
      "path": "12"
    },
    "18859": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19807,
        19887
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18860": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19807,
        19887
      ],
      "op": "MUL",
      "path": "12"
    },
    "18861": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19807,
        19887
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18862": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19807,
        19887
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18863": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19807,
        19887
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18864": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19807,
        19887
      ],
      "op": "OR",
      "path": "12"
    },
    "18865": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19807,
        19887
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18866": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19807,
        19887
      ],
      "op": "DUP3",
      "path": "12"
    },
    "18867": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19807,
        19887
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18868": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19807,
        19887
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "18869": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19807,
        19887
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18870": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19807,
        19887
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "18871": {
      "op": "POP"
    },
    "18872": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19947,
        19982
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 202,
      "value": "0x49C6"
    },
    "18875": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19947,
        19982
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18876": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19947,
        19975
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18877": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19947,
        19975
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18878": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19947,
        19975
      ],
      "op": "DIV",
      "path": "12"
    },
    "18879": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19947,
        19975
      ],
      "op": "AND",
      "path": "12"
    },
    "18880": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19980,
        19981
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "18882": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19947,
        19979
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3478"
    },
    "18885": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        19947,
        19982
      ],
      "op": "JUMP",
      "path": "12"
    },
    "18886": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19947,
        19982
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18887": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19910,
        19925
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18889": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19910,
        19925
      ],
      "op": "DUP5",
      "path": "12"
    },
    "18890": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19910,
        19925
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18891": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19910,
        19925
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18892": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19910,
        19917
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "18894": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19910,
        19925
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "18896": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19910,
        19925
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18897": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19910,
        19925
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "18899": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19910,
        19925
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18900": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19910,
        19925
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "18901": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19910,
        19938
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "18903": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19910,
        19938
      ],
      "op": "ADD",
      "path": "12"
    },
    "18904": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19910,
        19983
      ],
      "op": "DUP1",
      "path": "12"
    },
    "18905": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19910,
        19983
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "18906": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19910,
        19983
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "18908": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19910,
        19983
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18909": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19910,
        19983
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18910": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19910,
        19983
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18911": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19910,
        19983
      ],
      "op": "AND",
      "path": "12"
    },
    "18912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18914": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "18916": {
      "op": "SHL"
    },
    "18917": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19910,
        19983
      ],
      "op": "MUL",
      "path": "12"
    },
    "18918": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18920": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "18922": {
      "op": "SHL"
    },
    "18923": {
      "op": "NOT"
    },
    "18924": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19910,
        19983
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18925": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19910,
        19983
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18926": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19910,
        19983
      ],
      "op": "AND",
      "path": "12"
    },
    "18927": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19910,
        19983
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18928": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19910,
        19983
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18929": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19910,
        19983
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18930": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19910,
        19983
      ],
      "op": "OR",
      "path": "12"
    },
    "18931": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19910,
        19983
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18932": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19910,
        19983
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "18933": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20043,
        20073
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 203,
      "value": "0x49FF"
    },
    "18936": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20053,
        20055
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x10"
    },
    "18938": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20057,
        20072
      ],
      "op": "DUP3",
      "path": "12"
    },
    "18939": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20043,
        20052
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4EF0"
    },
    "18942": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        20043,
        20073
      ],
      "op": "JUMP",
      "path": "12"
    },
    "18943": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20043,
        20073
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18944": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19994,
        20009
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18946": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19994,
        20009
      ],
      "op": "DUP6",
      "path": "12"
    },
    "18947": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19994,
        20009
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18948": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19994,
        20009
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18949": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19994,
        20001
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "18951": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19994,
        20009
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "18953": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19994,
        20009
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18954": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19994,
        20009
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "18956": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19994,
        20009
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18957": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19994,
        20009
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "18958": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19994,
        20022
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "18960": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19994,
        20022
      ],
      "op": "ADD",
      "path": "12"
    },
    "18961": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19993,
        20073
      ],
      "op": "DUP1",
      "path": "12"
    },
    "18962": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19993,
        20073
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "18963": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18965": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "18967": {
      "op": "SHL"
    },
    "18968": {
      "op": "NOT"
    },
    "18969": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19993,
        20073
      ],
      "op": "AND",
      "path": "12"
    },
    "18970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18972": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "18974": {
      "op": "SHL"
    },
    "18975": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19993,
        20073
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "18977": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19993,
        20073
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "18978": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19993,
        20073
      ],
      "op": "DUP6",
      "path": "12"
    },
    "18979": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19993,
        20073
      ],
      "op": "AND",
      "path": "12"
    },
    "18980": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19993,
        20073
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18981": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19993,
        20073
      ],
      "op": "MUL",
      "path": "12"
    },
    "18982": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19993,
        20073
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18983": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19993,
        20073
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18984": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19993,
        20073
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18985": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19993,
        20073
      ],
      "op": "OR",
      "path": "12"
    },
    "18986": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19993,
        20073
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18987": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19993,
        20073
      ],
      "op": "DUP3",
      "path": "12"
    },
    "18988": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19993,
        20073
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18989": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19993,
        20073
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "18990": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19993,
        20073
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18991": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        19993,
        20073
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "18992": {
      "op": "POP"
    },
    "18993": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20133,
        20168
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 204,
      "value": "0x4A3F"
    },
    "18996": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20133,
        20168
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18997": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20133,
        20161
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18998": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20133,
        20161
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18999": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20133,
        20161
      ],
      "op": "DIV",
      "path": "12"
    },
    "19000": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20133,
        20161
      ],
      "op": "AND",
      "path": "12"
    },
    "19001": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20166,
        20167
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "19003": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20133,
        20165
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3478"
    },
    "19006": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        20133,
        20168
      ],
      "op": "JUMP",
      "path": "12"
    },
    "19007": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20133,
        20168
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19008": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20111
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19010": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20111
      ],
      "op": "DUP5",
      "path": "12"
    },
    "19011": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20111
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19012": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20111
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19013": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "19015": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20111
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "19017": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20111
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19018": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20111
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "19020": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20111
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19021": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20111
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "19022": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20124
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "19024": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20124
      ],
      "op": "ADD",
      "path": "12"
    },
    "19025": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20169
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19026": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20169
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "19027": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20169
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "19029": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20169
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "19030": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20169
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19031": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20169
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "19032": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20169
      ],
      "op": "AND",
      "path": "12"
    },
    "19033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19035": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "19037": {
      "op": "SHL"
    },
    "19038": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20169
      ],
      "op": "MUL",
      "path": "12"
    },
    "19039": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "19041": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "19043": {
      "op": "SHL"
    },
    "19044": {
      "op": "NOT"
    },
    "19045": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20169
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19046": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20169
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "19047": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20169
      ],
      "op": "AND",
      "path": "12"
    },
    "19048": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20169
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19049": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20169
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19050": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20169
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19051": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20169
      ],
      "op": "OR",
      "path": "12"
    },
    "19052": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20169
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19053": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20169
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "19054": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20223,
        20253
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 205,
      "value": "0x4A78"
    },
    "19057": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20096,
        20124
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x10"
    },
    "19059": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20237,
        20252
      ],
      "op": "DUP3",
      "path": "12"
    },
    "19060": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20223,
        20232
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4EF0"
    },
    "19063": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        20223,
        20253
      ],
      "op": "JUMP",
      "path": "12"
    },
    "19064": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20223,
        20253
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19065": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20180,
        20195
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19067": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20180,
        20195
      ],
      "op": "DUP6",
      "path": "12"
    },
    "19068": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20180,
        20195
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19069": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20180,
        20195
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19070": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20180,
        20187
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "19072": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20180,
        20195
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "19074": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20180,
        20195
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19075": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20180,
        20195
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "19077": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20180,
        20195
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19078": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20180,
        20195
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "19079": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20180,
        20202
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "19081": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20180,
        20202
      ],
      "op": "ADD",
      "path": "12"
    },
    "19082": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20179,
        20253
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19083": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20179,
        20253
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "19084": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "19086": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "19088": {
      "op": "SHL"
    },
    "19089": {
      "op": "NOT"
    },
    "19090": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20179,
        20253
      ],
      "op": "AND",
      "path": "12"
    },
    "19091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19093": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "19095": {
      "op": "SHL"
    },
    "19096": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20179,
        20253
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "19098": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20179,
        20253
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "19099": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20179,
        20253
      ],
      "op": "DUP6",
      "path": "12"
    },
    "19100": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20179,
        20253
      ],
      "op": "AND",
      "path": "12"
    },
    "19101": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20179,
        20253
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19102": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20179,
        20253
      ],
      "op": "MUL",
      "path": "12"
    },
    "19103": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20179,
        20253
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19104": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20179,
        20253
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19105": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20179,
        20253
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19106": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20179,
        20253
      ],
      "op": "OR",
      "path": "12"
    },
    "19107": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20179,
        20253
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19108": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20179,
        20253
      ],
      "op": "DUP3",
      "path": "12"
    },
    "19109": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20179,
        20253
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19110": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20179,
        20253
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "19111": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20179,
        20253
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19112": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20179,
        20253
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "19113": {
      "op": "POP"
    },
    "19114": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20307,
        20336
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 206,
      "value": "0x4AB8"
    },
    "19117": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20307,
        20336
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "19118": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20307,
        20329
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19119": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20307,
        20329
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19120": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20307,
        20329
      ],
      "op": "DIV",
      "path": "12"
    },
    "19121": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20307,
        20329
      ],
      "op": "AND",
      "path": "12"
    },
    "19122": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20334,
        20335
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "19124": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20307,
        20333
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3478"
    },
    "19127": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        20307,
        20336
      ],
      "op": "JUMP",
      "path": "12"
    },
    "19128": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20307,
        20336
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19129": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20276,
        20291
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19131": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20276,
        20291
      ],
      "op": "DUP5",
      "path": "12"
    },
    "19132": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20276,
        20291
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19133": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20276,
        20291
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19134": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20276,
        20283
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "19136": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20276,
        20291
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "19138": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20276,
        20291
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19139": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20276,
        20291
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "19141": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20276,
        20291
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19142": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20276,
        20291
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "19143": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20276,
        20298
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "19145": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20276,
        20298
      ],
      "op": "ADD",
      "path": "12"
    },
    "19146": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20276,
        20337
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19147": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20276,
        20337
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "19148": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20276,
        20337
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "19150": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20276,
        20337
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "19151": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20276,
        20337
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19152": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20276,
        20337
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "19153": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20276,
        20337
      ],
      "op": "AND",
      "path": "12"
    },
    "19154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19156": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "19158": {
      "op": "SHL"
    },
    "19159": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20276,
        20337
      ],
      "op": "MUL",
      "path": "12"
    },
    "19160": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "19162": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "19164": {
      "op": "SHL"
    },
    "19165": {
      "op": "NOT"
    },
    "19166": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20276,
        20337
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19167": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20276,
        20337
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "19168": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20276,
        20337
      ],
      "op": "AND",
      "path": "12"
    },
    "19169": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20276,
        20337
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19170": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20276,
        20337
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19171": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20276,
        20337
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19172": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20276,
        20337
      ],
      "op": "OR",
      "path": "12"
    },
    "19173": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20276,
        20337
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19174": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20276,
        20337
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "19175": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20393,
        20423
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 207,
      "value": "0x4AF1"
    },
    "19178": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20403,
        20405
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x10"
    },
    "19180": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20407,
        20422
      ],
      "op": "DUP3",
      "path": "12"
    },
    "19181": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20393,
        20402
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4EF0"
    },
    "19184": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        20393,
        20423
      ],
      "op": "JUMP",
      "path": "12"
    },
    "19185": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20393,
        20423
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19186": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20348,
        20363
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19188": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20348,
        20363
      ],
      "op": "DUP6",
      "path": "12"
    },
    "19189": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20348,
        20363
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19190": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20348,
        20363
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19191": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20348,
        20355
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "19193": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20348,
        20363
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "19195": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20348,
        20363
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19196": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20348,
        20363
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "19198": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20348,
        20363
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19199": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20348,
        20363
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "19200": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20348,
        20372
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "19202": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20348,
        20372
      ],
      "op": "ADD",
      "path": "12"
    },
    "19203": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20347,
        20423
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19204": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20347,
        20423
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "19205": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "19207": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "19209": {
      "op": "SHL"
    },
    "19210": {
      "op": "NOT"
    },
    "19211": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20347,
        20423
      ],
      "op": "AND",
      "path": "12"
    },
    "19212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19214": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "19216": {
      "op": "SHL"
    },
    "19217": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20347,
        20423
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "19219": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20347,
        20423
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "19220": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20347,
        20423
      ],
      "op": "DUP6",
      "path": "12"
    },
    "19221": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20347,
        20423
      ],
      "op": "AND",
      "path": "12"
    },
    "19222": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20347,
        20423
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19223": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20347,
        20423
      ],
      "op": "MUL",
      "path": "12"
    },
    "19224": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20347,
        20423
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19225": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20347,
        20423
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19226": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20347,
        20423
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19227": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20347,
        20423
      ],
      "op": "OR",
      "path": "12"
    },
    "19228": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20347,
        20423
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19229": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20347,
        20423
      ],
      "op": "DUP3",
      "path": "12"
    },
    "19230": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20347,
        20423
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19231": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20347,
        20423
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "19232": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20347,
        20423
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19233": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20347,
        20423
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "19234": {
      "op": "POP"
    },
    "19235": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20479,
        20510
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 208,
      "value": "0x4B31"
    },
    "19238": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20479,
        20510
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "19239": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20479,
        20503
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19240": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20479,
        20503
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19241": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20479,
        20503
      ],
      "op": "DIV",
      "path": "12"
    },
    "19242": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20479,
        20503
      ],
      "op": "AND",
      "path": "12"
    },
    "19243": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20508,
        20509
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "19245": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20479,
        20507
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3478"
    },
    "19248": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        20479,
        20510
      ],
      "op": "JUMP",
      "path": "12"
    },
    "19249": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20479,
        20510
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19250": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20461
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19252": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20461
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "19253": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20461
      ],
      "op": "DUP5",
      "path": "12"
    },
    "19254": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20461
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19255": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20453
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "19257": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20461
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "19259": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20461
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19260": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20461
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "19262": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20461
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19263": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20461
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "19264": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20461
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "19265": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20470
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "19267": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20470
      ],
      "op": "ADD",
      "path": "12"
    },
    "19268": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20511
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19269": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20511
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "19270": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20511
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "19272": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20511
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "19273": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20511
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19274": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20511
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "19275": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20511
      ],
      "op": "AND",
      "path": "12"
    },
    "19276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19278": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "19280": {
      "op": "SHL"
    },
    "19281": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20511
      ],
      "op": "MUL",
      "path": "12"
    },
    "19282": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "19284": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "19286": {
      "op": "SHL"
    },
    "19287": {
      "op": "NOT"
    },
    "19288": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20511
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19289": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20511
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "19290": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20511
      ],
      "op": "AND",
      "path": "12"
    },
    "19291": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20511
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "19292": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20511
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19293": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20511
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "19294": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20511
      ],
      "op": "OR",
      "path": "12"
    },
    "19295": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20511
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19296": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20511
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "19297": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        20446,
        20511
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "19298": {
      "op": "POP"
    },
    "19299": {
      "op": "POP"
    },
    "19300": {
      "op": "POP"
    },
    "19301": {
      "op": "POP"
    },
    "19302": {
      "fn": "CryptoChampions._trainHero",
      "jump": "o",
      "offset": [
        17769,
        20518
      ],
      "op": "JUMP",
      "path": "12"
    },
    "19303": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31358,
        31747
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19304": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31465
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1E"
    },
    "19306": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31465
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "19307": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31477,
        31490
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "19309": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31477,
        31490
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19310": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31477,
        31490
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "19311": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31477,
        31490
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19312": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31477,
        31490
      ],
      "op": "DUP3",
      "path": "12"
    },
    "19313": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31477,
        31490
      ],
      "op": "ADD",
      "path": "12"
    },
    "19314": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31477,
        31490
      ],
      "op": "DUP3",
      "path": "12"
    },
    "19315": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31477,
        31490
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19316": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31477,
        31490
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "19318": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31477,
        31490
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19319": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31477,
        31490
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19320": {
      "op": "PUSH10",
      "value": "0x50524943455F57415253"
    },
    "19331": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "19333": {
      "op": "SHL"
    },
    "19334": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31477,
        31490
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "19336": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31477,
        31490
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19337": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31477,
        31490
      ],
      "op": "DUP4",
      "path": "12"
    },
    "19338": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31477,
        31490
      ],
      "op": "ADD",
      "path": "12"
    },
    "19339": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31477,
        31490
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19340": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31477,
        31490
      ],
      "op": "DUP3",
      "path": "12"
    },
    "19341": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31477,
        31490
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19342": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "19343": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "19344": {
      "op": "PUSH4",
      "value": "0x6CADCD79"
    },
    "19349": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "19351": {
      "op": "SHL"
    },
    "19352": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19353": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19354": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "19356": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19357": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "ADD",
      "path": "12"
    },
    "19358": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "19359": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP5",
      "path": "12"
    },
    "19360": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19361": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP3",
      "path": "12"
    },
    "19362": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "19363": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "19365": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP3",
      "path": "12"
    },
    "19366": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "ADD",
      "path": "12"
    },
    "19367": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19368": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP3",
      "path": "12"
    },
    "19369": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "19370": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31407,
        31438
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19372": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31407,
        31438
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "19373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19379": {
      "op": "SHL"
    },
    "19380": {
      "op": "SUB"
    },
    "19381": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31465
      ],
      "op": "AND",
      "path": "12"
    },
    "19382": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31465
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "19383": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31476
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xD95B9AF2"
    },
    "19388": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31476
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "19389": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31477,
        31490
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "19390": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19391": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "19392": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP4",
      "path": "12"
    },
    "19393": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "19394": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x44"
    },
    "19396": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19397": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19398": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "ADD",
      "path": "12"
    },
    "19399": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19400": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31477,
        31490
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19401": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19402": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP4",
      "path": "12"
    },
    "19403": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31477,
        31490
      ],
      "op": "DUP4",
      "path": "12"
    },
    "19404": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31407,
        31438
      ],
      "op": "DUP12",
      "path": "12"
    },
    "19405": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19406": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP4",
      "path": "12"
    },
    "19407": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19408": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "LT",
      "path": "12"
    },
    "19409": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "19410": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4BE5"
    },
    "19413": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "19414": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19415": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19416": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "ADD",
      "path": "12"
    },
    "19417": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "19418": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP4",
      "path": "12"
    },
    "19419": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP3",
      "path": "12"
    },
    "19420": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "ADD",
      "path": "12"
    },
    "19421": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19422": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "19424": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "ADD",
      "path": "12"
    },
    "19425": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4BCD"
    },
    "19428": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "JUMP",
      "path": "12"
    },
    "19429": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19430": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "POP",
      "path": "12"
    },
    "19431": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "POP",
      "path": "12"
    },
    "19432": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "POP",
      "path": "12"
    },
    "19433": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "POP",
      "path": "12"
    },
    "19434": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19435": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "POP",
      "path": "12"
    },
    "19436": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19437": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19438": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "ADD",
      "path": "12"
    },
    "19439": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19440": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "19442": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "AND",
      "path": "12"
    },
    "19443": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19444": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "19445": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4C12"
    },
    "19448": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "19449": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19450": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP3",
      "path": "12"
    },
    "19451": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "SUB",
      "path": "12"
    },
    "19452": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19453": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "19454": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "19456": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP4",
      "path": "12"
    },
    "19457": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "19459": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "SUB",
      "path": "12"
    },
    "19460": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "19463": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "EXP",
      "path": "12"
    },
    "19464": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "SUB",
      "path": "12"
    },
    "19465": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "NOT",
      "path": "12"
    },
    "19466": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "AND",
      "path": "12"
    },
    "19467": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19468": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19469": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "19471": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "ADD",
      "path": "12"
    },
    "19472": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19473": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "POP",
      "path": "12"
    },
    "19474": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19475": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "POP",
      "path": "12"
    },
    "19476": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "19477": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "POP",
      "path": "12"
    },
    "19478": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "POP",
      "path": "12"
    },
    "19479": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "POP",
      "path": "12"
    },
    "19480": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "19482": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "19484": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "19485": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19486": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP4",
      "path": "12"
    },
    "19487": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "SUB",
      "path": "12"
    },
    "19488": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19489": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19491": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP8",
      "path": "12"
    },
    "19492": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19493": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "19494": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "19495": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19496": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "19497": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4C31"
    },
    "19500": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "19501": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19503": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19504": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "REVERT",
      "path": "12"
    },
    "19505": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19506": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "POP",
      "path": "12"
    },
    "19507": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "GAS",
      "path": "12"
    },
    "19508": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "CALL",
      "path": "12"
    },
    "19509": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "19510": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19511": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "19512": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4C45"
    },
    "19515": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "19516": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "19517": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19519": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19520": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "19521": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "19522": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19524": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "REVERT",
      "path": "12"
    },
    "19525": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19526": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "POP",
      "path": "12"
    },
    "19527": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "POP",
      "path": "12"
    },
    "19528": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "POP",
      "path": "12"
    },
    "19529": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "POP",
      "path": "12"
    },
    "19530": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "19532": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "19533": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "19534": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "19536": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19537": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "LT",
      "path": "12"
    },
    "19538": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "19539": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4C5B"
    },
    "19542": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "19543": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19545": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19546": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "REVERT",
      "path": "12"
    },
    "19547": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19548": {
      "op": "POP"
    },
    "19549": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "19550": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "19552": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19553": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "19554": {
      "op": "PUSH4",
      "value": "0x72D7F665"
    },
    "19559": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "19561": {
      "op": "SHL"
    },
    "19562": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19563": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19564": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31649,
        31653
      ],
      "op": "ADDRESS",
      "path": "12"
    },
    "19565": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "19567": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "DUP3",
      "path": "12"
    },
    "19568": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "ADD",
      "path": "12"
    },
    "19569": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19570": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19571": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "19572": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19573": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "19574": {
      "op": "POP"
    },
    "19575": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "DUP3",
      "path": "12"
    },
    "19576": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19577": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31501,
        31534
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19579": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31501,
        31534
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19584": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19586": {
      "op": "SHL"
    },
    "19587": {
      "op": "SUB"
    },
    "19588": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31640
      ],
      "op": "DUP5",
      "path": "12"
    },
    "19589": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31640
      ],
      "op": "AND",
      "path": "12"
    },
    "19590": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31640
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19591": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31640
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xE5AFECCA"
    },
    "19596": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31640
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19597": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "19599": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19600": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "DUP3",
      "path": "12"
    },
    "19601": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "ADD",
      "path": "12"
    },
    "19602": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "19603": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "19605": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31441,
        31491
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "19606": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19607": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19608": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19609": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "DUP3",
      "path": "12"
    },
    "19610": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19611": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "SUB",
      "path": "12"
    },
    "19612": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "ADD",
      "path": "12"
    },
    "19613": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19614": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31501,
        31534
      ],
      "op": "DUP8",
      "path": "12"
    },
    "19615": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31640
      ],
      "op": "DUP8",
      "path": "12"
    },
    "19616": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19617": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "19618": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "19619": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19620": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "19621": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4CAD"
    },
    "19624": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "19625": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19627": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19628": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "REVERT",
      "path": "12"
    },
    "19629": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19630": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "POP",
      "path": "12"
    },
    "19631": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "GAS",
      "path": "12"
    },
    "19632": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "CALL",
      "path": "12"
    },
    "19633": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "19634": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19635": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "19636": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4CC1"
    },
    "19639": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "19640": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "19641": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19643": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19644": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "19645": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "19646": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19648": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "REVERT",
      "path": "12"
    },
    "19649": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19650": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "POP",
      "path": "12"
    },
    "19651": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "POP",
      "path": "12"
    },
    "19652": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "POP",
      "path": "12"
    },
    "19653": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "POP",
      "path": "12"
    },
    "19654": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "19656": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "19657": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "19658": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "19660": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19661": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "LT",
      "path": "12"
    },
    "19662": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "19663": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4CD7"
    },
    "19666": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "19667": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19669": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19670": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "REVERT",
      "path": "12"
    },
    "19671": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19672": {
      "op": "POP"
    },
    "19673": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "19674": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19675": {
      "op": "POP"
    },
    "19676": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31665,
        31710
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 209,
      "value": "0x4D05"
    },
    "19679": {
      "offset": [
        1864,
        1892
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0xAE0C232B87105E0A8134F8B92146DCD1D99373D32394BE9D70F700F90B3A3DB3"
    },
    "19712": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31609,
        31655
      ],
      "op": "DUP3",
      "path": "12"
    },
    "19713": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31665,
        31674
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1CC9"
    },
    "19716": {
      "fn": "CryptoChampions._startNewPriceGame",
      "jump": "i",
      "offset": [
        31665,
        31710
      ],
      "op": "JUMP",
      "path": "12"
    },
    "19717": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31665,
        31710
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19718": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31728
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 210
    },
    "19719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19723": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19725": {
      "op": "SHL"
    },
    "19726": {
      "op": "SUB"
    },
    "19727": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31738
      ],
      "op": "AND",
      "path": "12"
    },
    "19728": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31738
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xD65AB5F2"
    },
    "19733": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "19735": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "19736": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19737": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "19742": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "AND",
      "path": "12"
    },
    "19743": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "19745": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "SHL",
      "path": "12"
    },
    "19746": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19747": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19748": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "19750": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "ADD",
      "path": "12"
    },
    "19751": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19753": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "19755": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "19756": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19757": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "DUP4",
      "path": "12"
    },
    "19758": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "SUB",
      "path": "12"
    },
    "19759": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19760": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19762": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "DUP8",
      "path": "12"
    },
    "19763": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19764": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "19765": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "19766": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19767": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "19768": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4D40"
    },
    "19771": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "19772": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19774": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19775": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "REVERT",
      "path": "12"
    },
    "19776": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19777": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "POP",
      "path": "12"
    },
    "19778": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "GAS",
      "path": "12"
    },
    "19779": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "CALL",
      "path": "12"
    },
    "19780": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "19781": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19782": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "19783": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x375E"
    },
    "19786": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "19787": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "19788": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19790": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19791": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "19792": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "19793": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19795": {
      "fn": "CryptoChampions._startNewPriceGame",
      "offset": [
        31720,
        31740
      ],
      "op": "REVERT",
      "path": "12"
    },
    "19796": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21393,
        21627
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19797": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21452,
        21453
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "19799": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21435,
        21585
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19800": {
      "offset": [
        2758,
        2759
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "19802": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21455,
        21456
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19803": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21455,
        21480
      ],
      "op": "GT",
      "path": "12"
    },
    "19804": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21435,
        21585
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4D87"
    },
    "19807": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21435,
        21585
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "19808": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21505,
        21521
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19810": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21505,
        21521
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19811": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21505,
        21521
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19812": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21505,
        21521
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19813": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21505,
        21518
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF"
    },
    "19815": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21505,
        21521
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "19817": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21505,
        21521
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19818": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21505,
        21521
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "19820": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21505,
        21521
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19821": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21505,
        21521
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "19822": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21505,
        21527
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "19823": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21505,
        21527
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "19825": {
      "branch": 267,
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21505,
        21527
      ],
      "op": "AND",
      "path": "12"
    },
    "19826": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21501,
        21575
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "19827": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21501,
        21575
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4D7F"
    },
    "19830": {
      "branch": 267,
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21501,
        21575
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "19831": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21547,
        21560
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 211,
      "value": "0x4D7F"
    },
    "19834": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21558,
        21559
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19835": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21547,
        21557
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4F21"
    },
    "19838": {
      "fn": "CryptoChampions._burnElders",
      "jump": "i",
      "offset": [
        21547,
        21560
      ],
      "op": "JUMP",
      "path": "12"
    },
    "19839": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21547,
        21560
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19840": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21482,
        21485
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 212,
      "value": "0x1"
    },
    "19842": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21482,
        21485
      ],
      "op": "ADD",
      "path": "12"
    },
    "19843": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21435,
        21585
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4D57"
    },
    "19846": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21435,
        21585
      ],
      "op": "JUMP",
      "path": "12"
    },
    "19847": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21435,
        21585
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19848": {
      "op": "POP"
    },
    "19849": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21600,
        21620
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 213,
      "value": "0x40"
    },
    "19851": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21600,
        21620
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "19852": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21600,
        21620
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x143B2C36FAC98F86168603D28D499BDE9CE0367D41E111CEF9F2ECBC9EEABFC"
    },
    "19885": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21600,
        21620
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19886": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21600,
        21620
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19888": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21600,
        21620
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19889": {
      "fn": "CryptoChampions._burnElders",
      "offset": [
        21600,
        21620
      ],
      "op": "LOG1",
      "path": "12"
    },
    "19890": {
      "fn": "CryptoChampions._burnElders",
      "jump": "o",
      "offset": [
        21393,
        21627
      ],
      "op": "JUMP",
      "path": "12"
    },
    "19891": {
      "fn": "EnumerableSet._length",
      "offset": [
        4013,
        4120
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "19892": {
      "fn": "EnumerableSet._length",
      "offset": [
        4095,
        4113
      ],
      "op": "SLOAD",
      "path": "11",
      "statement": 214
    },
    "19893": {
      "fn": "EnumerableSet._length",
      "offset": [
        4095,
        4113
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "19894": {
      "fn": "EnumerableSet._length",
      "jump": "o",
      "offset": [
        4013,
        4120
      ],
      "op": "JUMP",
      "path": "11"
    },
    "19895": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2212,
        3724
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "19896": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2278,
        2282
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "19898": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "DUP2",
      "path": "11"
    },
    "19899": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "DUP2",
      "path": "11"
    },
    "19900": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "19901": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2427
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "19903": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2427
      ],
      "op": "DUP4",
      "path": "11"
    },
    "19904": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2427
      ],
      "op": "ADD",
      "path": "11"
    },
    "19905": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "19907": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "19908": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "19910": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "DUP2",
      "path": "11"
    },
    "19911": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "19912": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "19913": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2449,
        2464
      ],
      "op": "DUP1",
      "path": "11"
    },
    "19914": {
      "branch": 293,
      "fn": "EnumerableSet._remove",
      "offset": [
        2449,
        2464
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "19915": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2445,
        3718
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4E73"
    },
    "19918": {
      "branch": 293,
      "fn": "EnumerableSet._remove",
      "offset": [
        2445,
        3718
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "19919": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2896
      ],
      "op": "DUP4",
      "path": "11"
    },
    "19920": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2896
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "19921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19923": {
      "op": "NOT"
    },
    "19924": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2830,
        2844
      ],
      "op": "DUP1",
      "path": "11"
    },
    "19925": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2830,
        2844
      ],
      "op": "DUP4",
      "path": "11"
    },
    "19926": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2830,
        2844
      ],
      "op": "ADD",
      "path": "11"
    },
    "19927": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2830,
        2844
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "19928": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "19929": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "DUP2",
      "path": "11"
    },
    "19930": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "ADD",
      "path": "11"
    },
    "19931": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "19932": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2806,
        2827
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "19934": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2806,
        2827
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "19935": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2881
      ],
      "op": "DUP8",
      "path": "11"
    },
    "19936": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2881
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "19937": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "DUP4",
      "path": "11"
    },
    "19938": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "19939": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "DUP2",
      "path": "11"
    },
    "19940": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "LT",
      "path": "11"
    },
    "19941": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4DEA"
    },
    "19944": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "19945": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "INVALID",
      "path": "11"
    },
    "19946": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "19947": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "19948": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "19950": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "19951": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "19953": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "19955": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "19956": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "ADD",
      "path": "11"
    },
    "19957": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "19958": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3140,
        3182
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "19959": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3140,
        3182
      ],
      "op": "POP",
      "path": "11"
    },
    "19960": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3303,
        3312
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 215
    },
    "19961": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3277
      ],
      "op": "DUP8",
      "path": "11"
    },
    "19962": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3285
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "19964": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3285
      ],
      "op": "ADD",
      "path": "11"
    },
    "19965": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3286,
        3299
      ],
      "op": "DUP5",
      "path": "11"
    },
    "19966": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP2",
      "path": "11"
    },
    "19967": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "19968": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP2",
      "path": "11"
    },
    "19969": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "LT",
      "path": "11"
    },
    "19970": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4E07"
    },
    "19973": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "19974": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "INVALID",
      "path": "11"
    },
    "19975": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "19976": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "19978": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "19979": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP3",
      "path": "11"
    },
    "19980": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "19981": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "19983": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP1",
      "path": "11"
    },
    "19984": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP4",
      "path": "11"
    },
    "19985": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "19986": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "19987": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "19988": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "ADD",
      "path": "11"
    },
    "19989": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3312
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "19990": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3312
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "19991": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3312
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "19992": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3312
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "19993": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 216
    },
    "19994": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "DUP2",
      "path": "11"
    },
    "19995": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "19996": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3420,
        3421
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "19998": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3390
      ],
      "op": "DUP10",
      "path": "11"
    },
    "19999": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3390
      ],
      "op": "DUP2",
      "path": "11"
    },
    "20000": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3390
      ],
      "op": "ADD",
      "path": "11"
    },
    "20001": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "20002": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "20003": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "20004": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "20006": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "20007": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "20008": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3404,
        3421
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "20009": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3404,
        3421
      ],
      "op": "DUP5",
      "path": "11"
    },
    "20010": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3404,
        3421
      ],
      "op": "ADD",
      "path": "11"
    },
    "20011": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3421
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "20012": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3421
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "20013": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "DUP7",
      "path": "11",
      "statement": 217
    },
    "20014": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "20015": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3381
      ],
      "op": "DUP8",
      "path": "11"
    },
    "20016": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3381
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "20017": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "DUP1",
      "path": "11"
    },
    "20018": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4E37"
    },
    "20021": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "20022": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "INVALID",
      "path": "11"
    },
    "20023": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "20024": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "20026": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "20027": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SUB",
      "path": "11"
    },
    "20028": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "DUP2",
      "path": "11"
    },
    "20029": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "DUP2",
      "path": "11"
    },
    "20030": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "20031": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "20033": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "20034": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "20036": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "20038": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "20039": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "ADD",
      "path": "11"
    },
    "20040": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "20042": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "20043": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "20044": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "20045": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "20046": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3622
      ],
      "op": "DUP7",
      "path": "11",
      "statement": 218
    },
    "20047": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3631
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "20049": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3631
      ],
      "op": "ADD",
      "path": "11"
    },
    "20050": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "20052": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3632,
        3637
      ],
      "op": "DUP8",
      "path": "11"
    },
    "20053": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "DUP2",
      "path": "11"
    },
    "20054": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "20055": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "20057": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "ADD",
      "path": "11"
    },
    "20058": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "20059": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "DUP2",
      "path": "11"
    },
    "20060": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "20061": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "20063": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "ADD",
      "path": "11"
    },
    "20064": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "20066": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "20067": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3612,
        3638
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "20069": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3612,
        3638
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "20070": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3612,
        3638
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "20071": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3660,
        3664
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 219,
      "value": "0x1"
    },
    "20073": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "20074": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "11"
    },
    "20075": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "11"
    },
    "20076": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "11"
    },
    "20077": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "11"
    },
    "20078": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "11"
    },
    "20079": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x136E"
    },
    "20082": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "JUMP",
      "path": "11"
    },
    "20083": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2445,
        3718
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "20084": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3702,
        3707
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 220,
      "value": "0x0"
    },
    "20086": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "20087": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "POP",
      "path": "11"
    },
    "20088": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "POP",
      "path": "11"
    },
    "20089": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x136E"
    },
    "20092": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "JUMP",
      "path": "11"
    },
    "20093": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        826,
        1090
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "20094": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 221,
      "value": "0x40"
    },
    "20096": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP1",
      "path": "16"
    },
    "20097": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "20098": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "20100": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP1",
      "path": "16"
    },
    "20101": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP3",
      "path": "16"
    },
    "20102": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "ADD",
      "path": "16"
    },
    "20103": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP7",
      "path": "16"
    },
    "20104": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "20105": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP7",
      "path": "16"
    },
    "20106": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "20107": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP1",
      "path": "16"
    },
    "20108": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP3",
      "path": "16"
    },
    "20109": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "ADD",
      "path": "16"
    },
    "20110": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "20111": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "20112": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "20113": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "20114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20118": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "20120": {
      "op": "SHL"
    },
    "20121": {
      "op": "SUB"
    },
    "20122": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "20123": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "20124": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "20125": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "AND",
      "path": "16"
    },
    "20126": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "20128": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP5",
      "path": "16"
    },
    "20129": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "ADD",
      "path": "16"
    },
    "20130": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "20131": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "20133": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP1",
      "path": "16"
    },
    "20134": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP5",
      "path": "16"
    },
    "20135": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "ADD",
      "path": "16"
    },
    "20136": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "20137": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "20138": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "20139": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "20140": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP2",
      "path": "16"
    },
    "20141": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "20142": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP1",
      "path": "16"
    },
    "20143": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP5",
      "path": "16"
    },
    "20144": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SUB",
      "path": "16"
    },
    "20145": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "20146": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "20147": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "ADD",
      "path": "16"
    },
    "20148": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP2",
      "path": "16"
    },
    "20149": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "20150": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA0"
    },
    "20152": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "20153": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "20154": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "ADD",
      "path": "16"
    },
    "20155": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "20156": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "20157": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1020,
        1082
      ],
      "op": "DUP1",
      "path": "16"
    },
    "20158": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1020,
        1082
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "20159": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1020,
        1082
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "20160": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1020,
        1082
      ],
      "op": "ADD",
      "path": "16"
    },
    "20161": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1020,
        1082
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "20162": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1020,
        1082
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "20163": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "jump": "o",
      "offset": [
        826,
        1090
      ],
      "op": "JUMP",
      "path": "16"
    },
    "20164": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1490,
        1662
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "20165": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 222,
      "value": "0x40"
    },
    "20167": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "20168": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "20169": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "20171": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "20172": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP3",
      "path": "16"
    },
    "20173": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "ADD",
      "path": "16"
    },
    "20174": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "20175": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "20176": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "20177": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "20178": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "20179": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP3",
      "path": "16"
    },
    "20180": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "ADD",
      "path": "16"
    },
    "20181": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "20182": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "20183": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "20184": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "20185": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "20186": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "20187": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "20188": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP4",
      "path": "16"
    },
    "20189": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SUB",
      "path": "16"
    },
    "20190": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP3",
      "path": "16"
    },
    "20191": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "ADD",
      "path": "16"
    },
    "20192": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP2",
      "path": "16"
    },
    "20193": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "20194": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "20196": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "20197": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "20198": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "ADD",
      "path": "16"
    },
    "20199": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "20200": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "20201": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1603,
        1655
      ],
      "op": "DUP1",
      "path": "16"
    },
    "20202": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1603,
        1655
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "20203": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1603,
        1655
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "20204": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1603,
        1655
      ],
      "op": "ADD",
      "path": "16"
    },
    "20205": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1603,
        1655
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "20206": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1603,
        1655
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "20207": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "jump": "o",
      "offset": [
        1490,
        1662
      ],
      "op": "JUMP",
      "path": "16"
    },
    "20208": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        20782,
        20968
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "20209": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        20863,
        20868
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "20211": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        20863,
        20868
      ],
      "op": "DUP1",
      "path": "12"
    },
    "20212": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        20903,
        20937
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 223,
      "value": "0x4F0B"
    },
    "20215": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        20935,
        20936
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "20217": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        20903,
        20930
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4F05"
    },
    "20220": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        20903,
        20915
      ],
      "op": "DUP6",
      "path": "12"
    },
    "20221": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        20903,
        20930
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "20223": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        20903,
        20930
      ],
      "op": "DUP9",
      "path": "12"
    },
    "20224": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        20903,
        20930
      ],
      "op": "AND",
      "path": "12"
    },
    "20225": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        20903,
        20919
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4FBD"
    },
    "20228": {
      "fn": "CryptoChampions._rollDice",
      "jump": "i",
      "offset": [
        20903,
        20930
      ],
      "op": "JUMP",
      "path": "12"
    },
    "20229": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        20903,
        20930
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "20230": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        20903,
        20934
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "20231": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        20903,
        20934
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3478"
    },
    "20234": {
      "fn": "CryptoChampions._rollDice",
      "jump": "i",
      "offset": [
        20903,
        20937
      ],
      "op": "JUMP",
      "path": "12"
    },
    "20235": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        20903,
        20937
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "20236": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        20940,
        20960
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4F16"
    },
    "20239": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        20940,
        20952
      ],
      "op": "DUP5",
      "path": "12"
    },
    "20240": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        20957,
        20959
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "20242": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        20940,
        20956
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3D2C"
    },
    "20245": {
      "fn": "CryptoChampions._rollDice",
      "jump": "i",
      "offset": [
        20940,
        20960
      ],
      "op": "JUMP",
      "path": "12"
    },
    "20246": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        20940,
        20960
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "20247": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        20889,
        20961
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "20248": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        20889,
        20961
      ],
      "op": "POP",
      "path": "12"
    },
    "20249": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        20889,
        20961
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "20250": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        20889,
        20961
      ],
      "op": "POP",
      "path": "12"
    },
    "20251": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        20782,
        20968
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "20252": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        20782,
        20968
      ],
      "op": "POP",
      "path": "12"
    },
    "20253": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        20782,
        20968
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "20254": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        20782,
        20968
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "20255": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        20782,
        20968
      ],
      "op": "POP",
      "path": "12"
    },
    "20256": {
      "fn": "CryptoChampions._rollDice",
      "jump": "o",
      "offset": [
        20782,
        20968
      ],
      "op": "JUMP",
      "path": "12"
    },
    "20257": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21773,
        22179
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "20258": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21840,
        21847
      ],
      "op": "DUP1",
      "path": "12"
    },
    "20259": {
      "offset": [
        1991,
        1992
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "20261": {
      "offset": [
        6437,
        6444
      ],
      "op": "DUP2",
      "path": "12"
    },
    "20262": {
      "offset": [
        6437,
        6466
      ],
      "op": "GT",
      "path": "12"
    },
    "20263": {
      "offset": [
        6437,
        6501
      ],
      "op": "DUP1",
      "path": "12"
    },
    "20264": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        6437,
        6501
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "20265": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        6437,
        6501
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4F33"
    },
    "20268": {
      "offset": [
        6437,
        6501
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "20269": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        6437,
        6501
      ],
      "op": "POP",
      "path": "12"
    },
    "20270": {
      "offset": [
        2758,
        2759
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "20272": {
      "offset": [
        6470,
        6477
      ],
      "op": "DUP2",
      "path": "12"
    },
    "20273": {
      "offset": [
        6470,
        6501
      ],
      "op": "GT",
      "path": "12"
    },
    "20274": {
      "branch": 268,
      "fn": "CryptoChampions._burnElder",
      "offset": [
        6470,
        6501
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "20275": {
      "offset": [
        6437,
        6501
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "20276": {
      "offset": [
        6429,
        6502
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4F3C"
    },
    "20279": {
      "branch": 268,
      "offset": [
        6429,
        6502
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "20280": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        6429,
        6502
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "20282": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        6429,
        6502
      ],
      "op": "DUP1",
      "path": "12"
    },
    "20283": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        6429,
        6502
      ],
      "op": "REVERT",
      "path": "12"
    },
    "20284": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        6429,
        6502
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "20285": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21867,
        21889
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 224,
      "value": "0x0"
    },
    "20287": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21867,
        21889
      ],
      "op": "DUP3",
      "path": "12"
    },
    "20288": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21867,
        21889
      ],
      "op": "DUP2",
      "path": "12"
    },
    "20289": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21867,
        21889
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "20290": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21867,
        21880
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF"
    },
    "20292": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21867,
        21889
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "20294": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21867,
        21889
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "20295": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21867,
        21889
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "20297": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21867,
        21889
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "20298": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21867,
        21889
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "20299": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21867,
        21895
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "20300": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21867,
        21895
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "20302": {
      "branch": 269,
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21867,
        21895
      ],
      "op": "AND",
      "path": "12"
    },
    "20303": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21859,
        21896
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4F57"
    },
    "20306": {
      "branch": 269,
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21859,
        21896
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "20307": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21859,
        21896
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "20309": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21859,
        21896
      ],
      "op": "DUP1",
      "path": "12"
    },
    "20310": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21859,
        21896
      ],
      "op": "REVERT",
      "path": "12"
    },
    "20311": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21859,
        21896
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "20312": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21960,
        21981
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 225,
      "value": "0x0"
    },
    "20314": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21960,
        21981
      ],
      "op": "DUP3",
      "path": "12"
    },
    "20315": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21960,
        21981
      ],
      "op": "DUP2",
      "path": "12"
    },
    "20316": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21960,
        21981
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "20317": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21960,
        21972
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE"
    },
    "20319": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21960,
        21981
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "20321": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21960,
        21981
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "20322": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21960,
        21981
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "20324": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21960,
        21981
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "20325": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21960,
        21981
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "20326": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21960,
        21981
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "20327": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21954,
        21994
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4F7B"
    },
    "20330": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21954,
        21994
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "20331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20335": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "20337": {
      "op": "SHL"
    },
    "20338": {
      "op": "SUB"
    },
    "20339": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21960,
        21981
      ],
      "op": "AND",
      "path": "12"
    },
    "20340": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21973,
        21980
      ],
      "op": "DUP4",
      "path": "12"
    },
    "20341": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21960,
        21981
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "20343": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21954,
        21959
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5024"
    },
    "20346": {
      "fn": "CryptoChampions._burnElder",
      "jump": "i",
      "offset": [
        21954,
        21994
      ],
      "op": "JUMP",
      "path": "12"
    },
    "20347": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        21954,
        21994
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "20348": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22063,
        22075
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 226,
      "value": "0xD"
    },
    "20350": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22063,
        22075
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "20351": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22063,
        22082
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4F89"
    },
    "20354": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22063,
        22082
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "20355": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22080,
        22081
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "20357": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22063,
        22079
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3D93"
    },
    "20360": {
      "fn": "CryptoChampions._burnElder",
      "jump": "i",
      "offset": [
        22063,
        22082
      ],
      "op": "JUMP",
      "path": "12"
    },
    "20361": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22063,
        22082
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "20362": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22048,
        22060
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xD"
    },
    "20364": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22048,
        22082
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "20365": {
      "op": "POP"
    },
    "20366": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22124,
        22125
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 227,
      "value": "0x0"
    },
    "20368": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22092,
        22113
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "20369": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22092,
        22113
      ],
      "op": "DUP2",
      "path": "12"
    },
    "20370": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22092,
        22113
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "20371": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22092,
        22104
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE"
    },
    "20373": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22092,
        22113
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "20375": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22092,
        22113
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "20376": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22092,
        22113
      ],
      "op": "DUP2",
      "path": "12"
    },
    "20377": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22092,
        22113
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "20378": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22092,
        22113
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "20380": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22092,
        22113
      ],
      "op": "DUP1",
      "path": "12"
    },
    "20381": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22092,
        22113
      ],
      "op": "DUP4",
      "path": "12"
    },
    "20382": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22092,
        22113
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "20383": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22092,
        22126
      ],
      "op": "DUP1",
      "path": "12"
    },
    "20384": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22092,
        22126
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "20385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20389": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "20391": {
      "op": "SHL"
    },
    "20392": {
      "op": "SUB"
    },
    "20393": {
      "op": "NOT"
    },
    "20394": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22092,
        22126
      ],
      "op": "AND",
      "path": "12"
    },
    "20395": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22092,
        22126
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "20396": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22092,
        22126
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "20397": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22136,
        22149
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 228,
      "value": "0xF"
    },
    "20399": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22136,
        22158
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "20400": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22136,
        22158
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "20401": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22136,
        22158
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "20402": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22136,
        22158
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "20403": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22136,
        22158
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "20404": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22136,
        22172
      ],
      "op": "DUP1",
      "path": "12"
    },
    "20405": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22136,
        22172
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "20406": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "20408": {
      "op": "NOT"
    },
    "20409": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22136,
        22172
      ],
      "op": "AND",
      "path": "12"
    },
    "20410": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22136,
        22172
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "20411": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        22136,
        22172
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "20412": {
      "fn": "CryptoChampions._burnElder",
      "jump": "o",
      "offset": [
        21773,
        22179
      ],
      "op": "JUMP",
      "path": "12"
    },
    "20413": {
      "fn": "SafeMath.mod",
      "offset": [
        4820,
        4968
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "20414": {
      "fn": "SafeMath.mod",
      "offset": [
        4878,
        4885
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "20416": {
      "fn": "SafeMath.mod",
      "offset": [
        4909,
        4910
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 229
    },
    "20417": {
      "fn": "SafeMath.mod",
      "offset": [
        4905,
        4906
      ],
      "op": "DUP3",
      "path": "3"
    },
    "20418": {
      "branch": 300,
      "fn": "SafeMath.mod",
      "offset": [
        4905,
        4910
      ],
      "op": "GT",
      "path": "3"
    },
    "20419": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5013"
    },
    "20422": {
      "branch": 300,
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "20423": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "20425": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP1",
      "path": "3"
    },
    "20426": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "20427": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "20431": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "20433": {
      "op": "SHL"
    },
    "20434": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP2",
      "path": "3"
    },
    "20435": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "20436": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "20438": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "20440": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP3",
      "path": "3"
    },
    "20441": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "ADD",
      "path": "3"
    },
    "20442": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "20443": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x18"
    },
    "20445": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "20447": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP3",
      "path": "3"
    },
    "20448": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "ADD",
      "path": "3"
    },
    "20449": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "20450": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206D6F64756C6F206279207A65726F0000000000000000"
    },
    "20483": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "20485": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP3",
      "path": "3"
    },
    "20486": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "ADD",
      "path": "3"
    },
    "20487": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "20488": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "20489": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "20490": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "20491": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP2",
      "path": "3"
    },
    "20492": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "20493": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "SUB",
      "path": "3"
    },
    "20494": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "20496": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "ADD",
      "path": "3"
    },
    "20497": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "20498": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "REVERT",
      "path": "3"
    },
    "20499": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "20500": {
      "fn": "SafeMath.mod",
      "offset": [
        4960,
        4961
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 230
    },
    "20501": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4957
      ],
      "op": "DUP4",
      "path": "3"
    },
    "20502": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "DUP2",
      "path": "3"
    },
    "20503": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x501C"
    },
    "20506": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "20507": {
      "dev": "Modulus by zero",
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "INVALID",
      "path": "3"
    },
    "20508": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "20509": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "MOD",
      "path": "3"
    },
    "20510": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "20511": {
      "fn": "SafeMath.mod",
      "offset": [
        4820,
        4968
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "20512": {
      "op": "POP"
    },
    "20513": {
      "op": "POP"
    },
    "20514": {
      "op": "POP"
    },
    "20515": {
      "fn": "SafeMath.mod",
      "jump": "o",
      "offset": [
        4820,
        4968
      ],
      "op": "JUMP",
      "path": "3"
    },
    "20516": {
      "fn": "ERC1155._burn",
      "offset": [
        9881,
        10419
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "20517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "20523": {
      "op": "SHL"
    },
    "20524": {
      "op": "SUB"
    },
    "20525": {
      "fn": "ERC1155._burn",
      "offset": [
        9976,
        9997
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 231
    },
    "20526": {
      "branch": 290,
      "fn": "ERC1155._burn",
      "offset": [
        9976,
        9997
      ],
      "op": "AND",
      "path": "5"
    },
    "20527": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5069"
    },
    "20530": {
      "branch": 290,
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "20531": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "20533": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "20534": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "20538": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "20540": {
      "op": "SHL"
    },
    "20541": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP2",
      "path": "5"
    },
    "20542": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "20543": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "20545": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "ADD",
      "path": "5"
    },
    "20546": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP1",
      "path": "5"
    },
    "20547": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP1",
      "path": "5"
    },
    "20548": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "20550": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "ADD",
      "path": "5"
    },
    "20551": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP3",
      "path": "5"
    },
    "20552": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP2",
      "path": "5"
    },
    "20553": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "SUB",
      "path": "5"
    },
    "20554": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP3",
      "path": "5"
    },
    "20555": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "20556": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x23"
    },
    "20558": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP2",
      "path": "5"
    },
    "20559": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "20560": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "20562": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "ADD",
      "path": "5"
    },
    "20563": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP1",
      "path": "5"
    },
    "20564": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x55BE"
    },
    "20567": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x23"
    },
    "20569": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "20570": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "20571": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "20573": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "ADD",
      "path": "5"
    },
    "20574": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "20575": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "POP",
      "path": "5"
    },
    "20576": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "POP",
      "path": "5"
    },
    "20577": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "20579": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "20580": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP1",
      "path": "5"
    },
    "20581": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "20582": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "SUB",
      "path": "5"
    },
    "20583": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "20584": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "REVERT",
      "path": "5"
    },
    "20585": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "20586": {
      "fn": "ERC1155._burn",
      "offset": [
        10048,
        10064
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "20588": {
      "fn": "ERC1155._burn",
      "offset": [
        10067,
        10079
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5073"
    },
    "20591": {
      "fn": "ERC1155._burn",
      "offset": [
        10067,
        10077
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34D2"
    },
    "20594": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        10067,
        10079
      ],
      "op": "JUMP",
      "path": "5"
    },
    "20595": {
      "fn": "ERC1155._burn",
      "offset": [
        10067,
        10079
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "20596": {
      "fn": "ERC1155._burn",
      "offset": [
        10048,
        10079
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "20597": {
      "fn": "ERC1155._burn",
      "offset": [
        10048,
        10079
      ],
      "op": "POP",
      "path": "5"
    },
    "20598": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 232,
      "value": "0x50A3"
    },
    "20601": {
      "fn": "ERC1155._burn",
      "offset": [
        10111,
        10119
      ],
      "op": "DUP2",
      "path": "5"
    },
    "20602": {
      "fn": "ERC1155._burn",
      "offset": [
        10121,
        10128
      ],
      "op": "DUP6",
      "path": "5"
    },
    "20603": {
      "fn": "ERC1155._burn",
      "offset": [
        10138,
        10139
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "20605": {
      "fn": "ERC1155._burn",
      "offset": [
        10142,
        10163
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5085"
    },
    "20608": {
      "fn": "ERC1155._burn",
      "offset": [
        10160,
        10162
      ],
      "op": "DUP8",
      "path": "5"
    },
    "20609": {
      "fn": "ERC1155._burn",
      "offset": [
        10142,
        10159
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3FFE"
    },
    "20612": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        10142,
        10163
      ],
      "op": "JUMP",
      "path": "5"
    },
    "20613": {
      "fn": "ERC1155._burn",
      "offset": [
        10142,
        10163
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "20614": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10190
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x508E"
    },
    "20617": {
      "fn": "ERC1155._burn",
      "offset": [
        10183,
        10189
      ],
      "op": "DUP8",
      "path": "5"
    },
    "20618": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10182
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3FFE"
    },
    "20621": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        10165,
        10190
      ],
      "op": "JUMP",
      "path": "5"
    },
    "20622": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10190
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "20623": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "20625": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "20626": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "DUP1",
      "path": "5"
    },
    "20627": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "20629": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "ADD",
      "path": "5"
    },
    "20630": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "20632": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "20633": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "DUP1",
      "path": "5"
    },
    "20634": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "20636": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "DUP2",
      "path": "5"
    },
    "20637": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "20638": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "POP",
      "path": "5"
    },
    "20639": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10110
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x364C"
    },
    "20642": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        10090,
        10195
      ],
      "op": "JUMP",
      "path": "5"
    },
    "20643": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "20644": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 233,
      "value": "0x50EA"
    },
    "20647": {
      "fn": "ERC1155._burn",
      "offset": [
        10271,
        10277
      ],
      "op": "DUP3",
      "path": "5"
    },
    "20648": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "20650": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "20651": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "DUP1",
      "path": "5"
    },
    "20652": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "20654": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "ADD",
      "path": "5"
    },
    "20655": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "20657": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "20658": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "DUP1",
      "path": "5"
    },
    "20659": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "20661": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "DUP2",
      "path": "5"
    },
    "20662": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "20663": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "20665": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "ADD",
      "path": "5"
    },
    "20666": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x54EA"
    },
    "20669": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "20671": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "20672": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "20673": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "20675": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "DUP7",
      "path": "5"
    },
    "20676": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "DUP2",
      "path": "5"
    },
    "20677": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "20678": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10240
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "20680": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "20682": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "20683": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "DUP2",
      "path": "5"
    },
    "20684": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "20685": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "20687": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "DUP1",
      "path": "5"
    },
    "20688": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "DUP4",
      "path": "5"
    },
    "20689": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "20690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20694": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "20696": {
      "op": "SHL"
    },
    "20697": {
      "op": "SUB"
    },
    "20698": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "DUP12",
      "path": "5"
    },
    "20699": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "AND",
      "path": "5"
    },
    "20700": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "DUP5",
      "path": "5"
    },
    "20701": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "20702": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "20703": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "20704": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "20705": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "20706": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "20707": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "20708": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "20709": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "20710": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10257
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3767"
    },
    "20713": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        10231,
        10339
      ],
      "op": "JUMP",
      "path": "5"
    },
    "20714": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "20715": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "20717": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "DUP5",
      "path": "5"
    },
    "20718": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "DUP2",
      "path": "5"
    },
    "20719": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "20720": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10215
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "20722": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "20724": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "20725": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "DUP2",
      "path": "5"
    },
    "20726": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "20727": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "20729": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "DUP1",
      "path": "5"
    },
    "20730": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "DUP4",
      "path": "5"
    },
    "20731": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "20732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20736": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "20738": {
      "op": "SHL"
    },
    "20739": {
      "op": "SUB"
    },
    "20740": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "DUP1",
      "path": "5"
    },
    "20741": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "DUP11",
      "path": "5"
    },
    "20742": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "AND",
      "path": "5"
    },
    "20743": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "DUP1",
      "path": "5"
    },
    "20744": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "DUP7",
      "path": "5"
    },
    "20745": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "20746": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "20747": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "DUP5",
      "path": "5"
    },
    "20748": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "20749": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "DUP3",
      "path": "5"
    },
    "20750": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "DUP6",
      "path": "5"
    },
    "20751": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "20752": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10339
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "20753": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10339
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "20754": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10339
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "20755": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10339
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "20756": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 234
    },
    "20757": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "20758": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP9",
      "path": "5"
    },
    "20759": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP2",
      "path": "5"
    },
    "20760": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "20761": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "20762": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP4",
      "path": "5"
    },
    "20763": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "ADD",
      "path": "5"
    },
    "20764": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP8",
      "path": "5"
    },
    "20765": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "20766": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "20767": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP2",
      "path": "5"
    },
    "20768": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "20769": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "20770": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "20771": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "20772": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "20773": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "20774": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP7",
      "path": "5"
    },
    "20775": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "AND",
      "path": "5"
    },
    "20776": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "20777": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "20810": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "20811": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "20812": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP3",
      "path": "5"
    },
    "20813": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "20814": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SUB",
      "path": "5"
    },
    "20815": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "ADD",
      "path": "5"
    },
    "20816": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "20817": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "LOG4",
      "path": "5"
    },
    "20818": {
      "fn": "ERC1155._burn",
      "offset": [
        9881,
        10419
      ],
      "op": "POP",
      "path": "5"
    },
    "20819": {
      "fn": "ERC1155._burn",
      "offset": [
        9881,
        10419
      ],
      "op": "POP",
      "path": "5"
    },
    "20820": {
      "fn": "ERC1155._burn",
      "offset": [
        9881,
        10419
      ],
      "op": "POP",
      "path": "5"
    },
    "20821": {
      "fn": "ERC1155._burn",
      "offset": [
        9881,
        10419
      ],
      "op": "POP",
      "path": "5"
    },
    "20822": {
      "fn": "ERC1155._burn",
      "jump": "o",
      "offset": [
        9881,
        10419
      ],
      "op": "JUMP",
      "path": "5"
    },
    "20823": {
      "op": "JUMPDEST"
    },
    "20824": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20826": {
      "op": "MLOAD"
    },
    "20827": {
      "op": "DUP1"
    },
    "20828": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "20830": {
      "op": "ADD"
    },
    "20831": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20833": {
      "op": "MSTORE"
    },
    "20834": {
      "op": "DUP1"
    },
    "20835": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20837": {
      "op": "ISZERO"
    },
    "20838": {
      "op": "ISZERO"
    },
    "20839": {
      "op": "DUP2"
    },
    "20840": {
      "op": "MSTORE"
    },
    "20841": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20843": {
      "op": "ADD"
    },
    "20844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20846": {
      "op": "DUP2"
    },
    "20847": {
      "op": "MSTORE"
    },
    "20848": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20850": {
      "op": "ADD"
    },
    "20851": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20853": {
      "op": "DUP2"
    },
    "20854": {
      "op": "MSTORE"
    },
    "20855": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20857": {
      "op": "ADD"
    },
    "20858": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "20860": {
      "op": "DUP2"
    },
    "20861": {
      "op": "MSTORE"
    },
    "20862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20864": {
      "op": "ADD"
    },
    "20865": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20867": {
      "op": "DUP2"
    },
    "20868": {
      "op": "MSTORE"
    },
    "20869": {
      "op": "POP"
    },
    "20870": {
      "op": "SWAP1"
    },
    "20871": {
      "op": "JUMP"
    },
    "20872": {
      "op": "JUMPDEST"
    },
    "20873": {
      "op": "DUP3"
    },
    "20874": {
      "op": "DUP1"
    },
    "20875": {
      "op": "SLOAD"
    },
    "20876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20878": {
      "op": "DUP2"
    },
    "20879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20881": {
      "op": "AND"
    },
    "20882": {
      "op": "ISZERO"
    },
    "20883": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "20886": {
      "op": "MUL"
    },
    "20887": {
      "op": "SUB"
    },
    "20888": {
      "op": "AND"
    },
    "20889": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "20891": {
      "op": "SWAP1"
    },
    "20892": {
      "op": "DIV"
    },
    "20893": {
      "op": "SWAP1"
    },
    "20894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20896": {
      "op": "MSTORE"
    },
    "20897": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20901": {
      "op": "KECCAK256"
    },
    "20902": {
      "op": "SWAP1"
    },
    "20903": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "20905": {
      "op": "ADD"
    },
    "20906": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20908": {
      "op": "SWAP1"
    },
    "20909": {
      "op": "DIV"
    },
    "20910": {
      "op": "DUP2"
    },
    "20911": {
      "op": "ADD"
    },
    "20912": {
      "op": "SWAP3"
    },
    "20913": {
      "op": "DUP3"
    },
    "20914": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "20916": {
      "op": "LT"
    },
    "20917": {
      "op": "PUSH2",
      "value": "0x51C9"
    },
    "20920": {
      "op": "JUMPI"
    },
    "20921": {
      "op": "DUP1"
    },
    "20922": {
      "op": "MLOAD"
    },
    "20923": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "20925": {
      "op": "NOT"
    },
    "20926": {
      "op": "AND"
    },
    "20927": {
      "op": "DUP4"
    },
    "20928": {
      "op": "DUP1"
    },
    "20929": {
      "op": "ADD"
    },
    "20930": {
      "op": "OR"
    },
    "20931": {
      "op": "DUP6"
    },
    "20932": {
      "op": "SSTORE"
    },
    "20933": {
      "op": "PUSH2",
      "value": "0x51F6"
    },
    "20936": {
      "op": "JUMP"
    },
    "20937": {
      "op": "JUMPDEST"
    },
    "20938": {
      "op": "DUP3"
    },
    "20939": {
      "op": "DUP1"
    },
    "20940": {
      "op": "ADD"
    },
    "20941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20943": {
      "op": "ADD"
    },
    "20944": {
      "op": "DUP6"
    },
    "20945": {
      "op": "SSTORE"
    },
    "20946": {
      "op": "DUP3"
    },
    "20947": {
      "op": "ISZERO"
    },
    "20948": {
      "op": "PUSH2",
      "value": "0x51F6"
    },
    "20951": {
      "op": "JUMPI"
    },
    "20952": {
      "op": "SWAP2"
    },
    "20953": {
      "op": "DUP3"
    },
    "20954": {
      "op": "ADD"
    },
    "20955": {
      "op": "JUMPDEST"
    },
    "20956": {
      "op": "DUP3"
    },
    "20957": {
      "op": "DUP2"
    },
    "20958": {
      "op": "GT"
    },
    "20959": {
      "op": "ISZERO"
    },
    "20960": {
      "op": "PUSH2",
      "value": "0x51F6"
    },
    "20963": {
      "op": "JUMPI"
    },
    "20964": {
      "op": "DUP3"
    },
    "20965": {
      "op": "MLOAD"
    },
    "20966": {
      "op": "DUP3"
    },
    "20967": {
      "op": "SSTORE"
    },
    "20968": {
      "op": "SWAP2"
    },
    "20969": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20971": {
      "op": "ADD"
    },
    "20972": {
      "op": "SWAP2"
    },
    "20973": {
      "op": "SWAP1"
    },
    "20974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20976": {
      "op": "ADD"
    },
    "20977": {
      "op": "SWAP1"
    },
    "20978": {
      "op": "PUSH2",
      "value": "0x51DB"
    },
    "20981": {
      "op": "JUMP"
    },
    "20982": {
      "op": "JUMPDEST"
    },
    "20983": {
      "op": "POP"
    },
    "20984": {
      "op": "PUSH2",
      "value": "0x5202"
    },
    "20987": {
      "op": "SWAP3"
    },
    "20988": {
      "op": "SWAP2"
    },
    "20989": {
      "op": "POP"
    },
    "20990": {
      "op": "PUSH2",
      "value": "0x5351"
    },
    "20993": {
      "op": "JUMP"
    },
    "20994": {
      "op": "JUMPDEST"
    },
    "20995": {
      "op": "POP"
    },
    "20996": {
      "op": "SWAP1"
    },
    "20997": {
      "op": "JUMP"
    },
    "20998": {
      "op": "JUMPDEST"
    },
    "20999": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21001": {
      "op": "DUP1"
    },
    "21002": {
      "op": "MLOAD"
    },
    "21003": {
      "op": "PUSH2",
      "value": "0x360"
    },
    "21006": {
      "op": "DUP2"
    },
    "21007": {
      "op": "ADD"
    },
    "21008": {
      "op": "DUP3"
    },
    "21009": {
      "op": "MSTORE"
    },
    "21010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21012": {
      "op": "DUP1"
    },
    "21013": {
      "op": "DUP3"
    },
    "21014": {
      "op": "MSTORE"
    },
    "21015": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "21017": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21019": {
      "op": "DUP4"
    },
    "21020": {
      "op": "ADD"
    },
    "21021": {
      "op": "DUP2"
    },
    "21022": {
      "op": "SWAP1"
    },
    "21023": {
      "op": "MSTORE"
    },
    "21024": {
      "op": "SWAP3"
    },
    "21025": {
      "op": "DUP3"
    },
    "21026": {
      "op": "ADD"
    },
    "21027": {
      "op": "DUP4"
    },
    "21028": {
      "op": "SWAP1"
    },
    "21029": {
      "op": "MSTORE"
    },
    "21030": {
      "op": "SWAP2"
    },
    "21031": {
      "op": "DUP2"
    },
    "21032": {
      "op": "ADD"
    },
    "21033": {
      "op": "DUP3"
    },
    "21034": {
      "op": "SWAP1"
    },
    "21035": {
      "op": "MSTORE"
    },
    "21036": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "21038": {
      "op": "DUP2"
    },
    "21039": {
      "op": "ADD"
    },
    "21040": {
      "op": "DUP3"
    },
    "21041": {
      "op": "SWAP1"
    },
    "21042": {
      "op": "MSTORE"
    },
    "21043": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "21045": {
      "op": "DUP2"
    },
    "21046": {
      "op": "ADD"
    },
    "21047": {
      "op": "DUP3"
    },
    "21048": {
      "op": "SWAP1"
    },
    "21049": {
      "op": "MSTORE"
    },
    "21050": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "21052": {
      "op": "DUP2"
    },
    "21053": {
      "op": "ADD"
    },
    "21054": {
      "op": "DUP3"
    },
    "21055": {
      "op": "SWAP1"
    },
    "21056": {
      "op": "MSTORE"
    },
    "21057": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "21059": {
      "op": "DUP2"
    },
    "21060": {
      "op": "ADD"
    },
    "21061": {
      "op": "DUP3"
    },
    "21062": {
      "op": "SWAP1"
    },
    "21063": {
      "op": "MSTORE"
    },
    "21064": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "21067": {
      "op": "DUP2"
    },
    "21068": {
      "op": "ADD"
    },
    "21069": {
      "op": "DUP3"
    },
    "21070": {
      "op": "SWAP1"
    },
    "21071": {
      "op": "MSTORE"
    },
    "21072": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "21075": {
      "op": "DUP2"
    },
    "21076": {
      "op": "ADD"
    },
    "21077": {
      "op": "DUP3"
    },
    "21078": {
      "op": "SWAP1"
    },
    "21079": {
      "op": "MSTORE"
    },
    "21080": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "21083": {
      "op": "DUP2"
    },
    "21084": {
      "op": "ADD"
    },
    "21085": {
      "op": "DUP3"
    },
    "21086": {
      "op": "SWAP1"
    },
    "21087": {
      "op": "MSTORE"
    },
    "21088": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "21091": {
      "op": "DUP2"
    },
    "21092": {
      "op": "ADD"
    },
    "21093": {
      "op": "DUP3"
    },
    "21094": {
      "op": "SWAP1"
    },
    "21095": {
      "op": "MSTORE"
    },
    "21096": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "21099": {
      "op": "DUP2"
    },
    "21100": {
      "op": "ADD"
    },
    "21101": {
      "op": "DUP3"
    },
    "21102": {
      "op": "SWAP1"
    },
    "21103": {
      "op": "MSTORE"
    },
    "21104": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "21107": {
      "op": "DUP2"
    },
    "21108": {
      "op": "ADD"
    },
    "21109": {
      "op": "DUP3"
    },
    "21110": {
      "op": "SWAP1"
    },
    "21111": {
      "op": "MSTORE"
    },
    "21112": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "21115": {
      "op": "DUP2"
    },
    "21116": {
      "op": "ADD"
    },
    "21117": {
      "op": "DUP3"
    },
    "21118": {
      "op": "SWAP1"
    },
    "21119": {
      "op": "MSTORE"
    },
    "21120": {
      "op": "PUSH2",
      "value": "0x1E0"
    },
    "21123": {
      "op": "DUP2"
    },
    "21124": {
      "op": "ADD"
    },
    "21125": {
      "op": "DUP3"
    },
    "21126": {
      "op": "SWAP1"
    },
    "21127": {
      "op": "MSTORE"
    },
    "21128": {
      "op": "PUSH2",
      "value": "0x200"
    },
    "21131": {
      "op": "DUP2"
    },
    "21132": {
      "op": "ADD"
    },
    "21133": {
      "op": "DUP3"
    },
    "21134": {
      "op": "SWAP1"
    },
    "21135": {
      "op": "MSTORE"
    },
    "21136": {
      "op": "PUSH2",
      "value": "0x220"
    },
    "21139": {
      "op": "DUP2"
    },
    "21140": {
      "op": "ADD"
    },
    "21141": {
      "op": "DUP3"
    },
    "21142": {
      "op": "SWAP1"
    },
    "21143": {
      "op": "MSTORE"
    },
    "21144": {
      "op": "PUSH2",
      "value": "0x240"
    },
    "21147": {
      "op": "DUP2"
    },
    "21148": {
      "op": "ADD"
    },
    "21149": {
      "op": "DUP3"
    },
    "21150": {
      "op": "SWAP1"
    },
    "21151": {
      "op": "MSTORE"
    },
    "21152": {
      "op": "PUSH2",
      "value": "0x260"
    },
    "21155": {
      "op": "DUP2"
    },
    "21156": {
      "op": "ADD"
    },
    "21157": {
      "op": "DUP3"
    },
    "21158": {
      "op": "SWAP1"
    },
    "21159": {
      "op": "MSTORE"
    },
    "21160": {
      "op": "PUSH2",
      "value": "0x280"
    },
    "21163": {
      "op": "DUP2"
    },
    "21164": {
      "op": "ADD"
    },
    "21165": {
      "op": "DUP3"
    },
    "21166": {
      "op": "SWAP1"
    },
    "21167": {
      "op": "MSTORE"
    },
    "21168": {
      "op": "PUSH2",
      "value": "0x2A0"
    },
    "21171": {
      "op": "DUP2"
    },
    "21172": {
      "op": "ADD"
    },
    "21173": {
      "op": "DUP3"
    },
    "21174": {
      "op": "SWAP1"
    },
    "21175": {
      "op": "MSTORE"
    },
    "21176": {
      "op": "PUSH2",
      "value": "0x2C0"
    },
    "21179": {
      "op": "DUP2"
    },
    "21180": {
      "op": "ADD"
    },
    "21181": {
      "op": "DUP3"
    },
    "21182": {
      "op": "SWAP1"
    },
    "21183": {
      "op": "MSTORE"
    },
    "21184": {
      "op": "PUSH2",
      "value": "0x2E0"
    },
    "21187": {
      "op": "DUP2"
    },
    "21188": {
      "op": "ADD"
    },
    "21189": {
      "op": "DUP3"
    },
    "21190": {
      "op": "SWAP1"
    },
    "21191": {
      "op": "MSTORE"
    },
    "21192": {
      "op": "PUSH2",
      "value": "0x300"
    },
    "21195": {
      "op": "DUP2"
    },
    "21196": {
      "op": "ADD"
    },
    "21197": {
      "op": "DUP3"
    },
    "21198": {
      "op": "SWAP1"
    },
    "21199": {
      "op": "MSTORE"
    },
    "21200": {
      "op": "PUSH2",
      "value": "0x320"
    },
    "21203": {
      "op": "DUP2"
    },
    "21204": {
      "op": "ADD"
    },
    "21205": {
      "op": "DUP3"
    },
    "21206": {
      "op": "SWAP1"
    },
    "21207": {
      "op": "MSTORE"
    },
    "21208": {
      "op": "PUSH2",
      "value": "0x340"
    },
    "21211": {
      "op": "DUP2"
    },
    "21212": {
      "op": "ADD"
    },
    "21213": {
      "op": "SWAP2"
    },
    "21214": {
      "op": "SWAP1"
    },
    "21215": {
      "op": "SWAP2"
    },
    "21216": {
      "op": "MSTORE"
    },
    "21217": {
      "op": "SWAP1"
    },
    "21218": {
      "op": "JUMP"
    },
    "21219": {
      "op": "JUMPDEST"
    },
    "21220": {
      "op": "DUP3"
    },
    "21221": {
      "op": "DUP1"
    },
    "21222": {
      "op": "SLOAD"
    },
    "21223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21225": {
      "op": "DUP2"
    },
    "21226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21228": {
      "op": "AND"
    },
    "21229": {
      "op": "ISZERO"
    },
    "21230": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "21233": {
      "op": "MUL"
    },
    "21234": {
      "op": "SUB"
    },
    "21235": {
      "op": "AND"
    },
    "21236": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "21238": {
      "op": "SWAP1"
    },
    "21239": {
      "op": "DIV"
    },
    "21240": {
      "op": "SWAP1"
    },
    "21241": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21243": {
      "op": "MSTORE"
    },
    "21244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21246": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21248": {
      "op": "KECCAK256"
    },
    "21249": {
      "op": "SWAP1"
    },
    "21250": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "21252": {
      "op": "ADD"
    },
    "21253": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21255": {
      "op": "SWAP1"
    },
    "21256": {
      "op": "DIV"
    },
    "21257": {
      "op": "DUP2"
    },
    "21258": {
      "op": "ADD"
    },
    "21259": {
      "op": "SWAP3"
    },
    "21260": {
      "op": "DUP3"
    },
    "21261": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "21263": {
      "op": "LT"
    },
    "21264": {
      "op": "PUSH2",
      "value": "0x5324"
    },
    "21267": {
      "op": "JUMPI"
    },
    "21268": {
      "op": "DUP3"
    },
    "21269": {
      "op": "DUP1"
    },
    "21270": {
      "op": "ADD"
    },
    "21271": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "21273": {
      "op": "NOT"
    },
    "21274": {
      "op": "DUP3"
    },
    "21275": {
      "op": "CALLDATALOAD"
    },
    "21276": {
      "op": "AND"
    },
    "21277": {
      "op": "OR"
    },
    "21278": {
      "op": "DUP6"
    },
    "21279": {
      "op": "SSTORE"
    },
    "21280": {
      "op": "PUSH2",
      "value": "0x51F6"
    },
    "21283": {
      "op": "JUMP"
    },
    "21284": {
      "op": "JUMPDEST"
    },
    "21285": {
      "op": "DUP3"
    },
    "21286": {
      "op": "DUP1"
    },
    "21287": {
      "op": "ADD"
    },
    "21288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21290": {
      "op": "ADD"
    },
    "21291": {
      "op": "DUP6"
    },
    "21292": {
      "op": "SSTORE"
    },
    "21293": {
      "op": "DUP3"
    },
    "21294": {
      "op": "ISZERO"
    },
    "21295": {
      "op": "PUSH2",
      "value": "0x51F6"
    },
    "21298": {
      "op": "JUMPI"
    },
    "21299": {
      "op": "SWAP2"
    },
    "21300": {
      "op": "DUP3"
    },
    "21301": {
      "op": "ADD"
    },
    "21302": {
      "op": "JUMPDEST"
    },
    "21303": {
      "op": "DUP3"
    },
    "21304": {
      "op": "DUP2"
    },
    "21305": {
      "op": "GT"
    },
    "21306": {
      "op": "ISZERO"
    },
    "21307": {
      "op": "PUSH2",
      "value": "0x51F6"
    },
    "21310": {
      "op": "JUMPI"
    },
    "21311": {
      "op": "DUP3"
    },
    "21312": {
      "op": "CALLDATALOAD"
    },
    "21313": {
      "op": "DUP3"
    },
    "21314": {
      "op": "SSTORE"
    },
    "21315": {
      "op": "SWAP2"
    },
    "21316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21318": {
      "op": "ADD"
    },
    "21319": {
      "op": "SWAP2"
    },
    "21320": {
      "op": "SWAP1"
    },
    "21321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21323": {
      "op": "ADD"
    },
    "21324": {
      "op": "SWAP1"
    },
    "21325": {
      "op": "PUSH2",
      "value": "0x5336"
    },
    "21328": {
      "op": "JUMP"
    },
    "21329": {
      "op": "JUMPDEST"
    },
    "21330": {
      "op": "JUMPDEST"
    },
    "21331": {
      "op": "DUP1"
    },
    "21332": {
      "op": "DUP3"
    },
    "21333": {
      "op": "GT"
    },
    "21334": {
      "op": "ISZERO"
    },
    "21335": {
      "op": "PUSH2",
      "value": "0x5202"
    },
    "21338": {
      "op": "JUMPI"
    },
    "21339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21341": {
      "op": "DUP2"
    },
    "21342": {
      "op": "SSTORE"
    },
    "21343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21345": {
      "op": "ADD"
    },
    "21346": {
      "op": "PUSH2",
      "value": "0x5352"
    },
    "21349": {
      "op": "JUMP"
    },
    "21350": {
      "op": "JUMPDEST"
    },
    "21351": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "21353": {
      "op": "SHR"
    },
    "21354": {
      "op": "SWAP1"
    },
    "21355": {
      "op": "JUMP"
    },
    "21356": {
      "op": "JUMPDEST"
    },
    "21357": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21359": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "21361": {
      "op": "RETURNDATASIZE"
    },
    "21362": {
      "op": "LT"
    },
    "21363": {
      "op": "ISZERO"
    },
    "21364": {
      "op": "PUSH2",
      "value": "0x537C"
    },
    "21367": {
      "op": "JUMPI"
    },
    "21368": {
      "op": "PUSH2",
      "value": "0x2720"
    },
    "21371": {
      "op": "JUMP"
    },
    "21372": {
      "op": "JUMPDEST"
    },
    "21373": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "21375": {
      "op": "DUP2"
    },
    "21376": {
      "op": "DUP3"
    },
    "21377": {
      "op": "RETURNDATACOPY"
    },
    "21378": {
      "op": "PUSH4",
      "value": "0x8C379A0"
    },
    "21383": {
      "op": "PUSH2",
      "value": "0x5390"
    },
    "21386": {
      "op": "DUP3"
    },
    "21387": {
      "op": "MLOAD"
    },
    "21388": {
      "op": "PUSH2",
      "value": "0x5366"
    },
    "21391": {
      "op": "JUMP"
    },
    "21392": {
      "op": "JUMPDEST"
    },
    "21393": {
      "op": "EQ"
    },
    "21394": {
      "op": "PUSH2",
      "value": "0x539A"
    },
    "21397": {
      "op": "JUMPI"
    },
    "21398": {
      "op": "PUSH2",
      "value": "0x2720"
    },
    "21401": {
      "op": "JUMP"
    },
    "21402": {
      "op": "JUMPDEST"
    },
    "21403": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21405": {
      "op": "MLOAD"
    },
    "21406": {
      "op": "RETURNDATASIZE"
    },
    "21407": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "21409": {
      "op": "NOT"
    },
    "21410": {
      "op": "ADD"
    },
    "21411": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "21413": {
      "op": "DUP3"
    },
    "21414": {
      "op": "RETURNDATACOPY"
    },
    "21415": {
      "op": "DUP1"
    },
    "21416": {
      "op": "MLOAD"
    },
    "21417": {
      "op": "RETURNDATASIZE"
    },
    "21418": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "21427": {
      "op": "DUP2"
    },
    "21428": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "21430": {
      "op": "DUP5"
    },
    "21431": {
      "op": "ADD"
    },
    "21432": {
      "op": "GT"
    },
    "21433": {
      "op": "DUP2"
    },
    "21434": {
      "op": "DUP5"
    },
    "21435": {
      "op": "GT"
    },
    "21436": {
      "op": "OR"
    },
    "21437": {
      "op": "ISZERO"
    },
    "21438": {
      "op": "PUSH2",
      "value": "0x53CA"
    },
    "21441": {
      "op": "JUMPI"
    },
    "21442": {
      "op": "POP"
    },
    "21443": {
      "op": "POP"
    },
    "21444": {
      "op": "POP"
    },
    "21445": {
      "op": "POP"
    },
    "21446": {
      "op": "PUSH2",
      "value": "0x2720"
    },
    "21449": {
      "op": "JUMP"
    },
    "21450": {
      "op": "JUMPDEST"
    },
    "21451": {
      "op": "DUP3"
    },
    "21452": {
      "op": "DUP5"
    },
    "21453": {
      "op": "ADD"
    },
    "21454": {
      "op": "SWAP3"
    },
    "21455": {
      "op": "POP"
    },
    "21456": {
      "op": "DUP3"
    },
    "21457": {
      "op": "MLOAD"
    },
    "21458": {
      "op": "SWAP2"
    },
    "21459": {
      "op": "POP"
    },
    "21460": {
      "op": "DUP1"
    },
    "21461": {
      "op": "DUP3"
    },
    "21462": {
      "op": "GT"
    },
    "21463": {
      "op": "ISZERO"
    },
    "21464": {
      "op": "PUSH2",
      "value": "0x53E4"
    },
    "21467": {
      "op": "JUMPI"
    },
    "21468": {
      "op": "POP"
    },
    "21469": {
      "op": "POP"
    },
    "21470": {
      "op": "POP"
    },
    "21471": {
      "op": "POP"
    },
    "21472": {
      "op": "PUSH2",
      "value": "0x2720"
    },
    "21475": {
      "op": "JUMP"
    },
    "21476": {
      "op": "JUMPDEST"
    },
    "21477": {
      "op": "POP"
    },
    "21478": {
      "op": "RETURNDATASIZE"
    },
    "21479": {
      "op": "DUP4"
    },
    "21480": {
      "op": "ADD"
    },
    "21481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21483": {
      "op": "DUP3"
    },
    "21484": {
      "op": "DUP5"
    },
    "21485": {
      "op": "ADD"
    },
    "21486": {
      "op": "ADD"
    },
    "21487": {
      "op": "GT"
    },
    "21488": {
      "op": "ISZERO"
    },
    "21489": {
      "op": "PUSH2",
      "value": "0x53FC"
    },
    "21492": {
      "op": "JUMPI"
    },
    "21493": {
      "op": "POP"
    },
    "21494": {
      "op": "POP"
    },
    "21495": {
      "op": "POP"
    },
    "21496": {
      "op": "PUSH2",
      "value": "0x2720"
    },
    "21499": {
      "op": "JUMP"
    },
    "21500": {
      "op": "JUMPDEST"
    },
    "21501": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "21503": {
      "op": "ADD"
    },
    "21504": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "21506": {
      "op": "NOT"
    },
    "21507": {
      "op": "AND"
    },
    "21508": {
      "op": "DUP2"
    },
    "21509": {
      "op": "ADD"
    },
    "21510": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21512": {
      "op": "ADD"
    },
    "21513": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21515": {
      "op": "MSTORE"
    },
    "21516": {
      "op": "SWAP2"
    },
    "21517": {
      "op": "POP"
    },
    "21518": {
      "op": "POP"
    },
    "21519": {
      "op": "SWAP1"
    },
    "21520": {
      "op": "JUMP"
    }
  },
  "sha1": "2a4531ca8078d787a14db4c264188df45ca74be1",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.6.0;\n\nimport \"../interfaces/ICryptoChampions.sol\";\nimport \"../interfaces/IMinigameFactoryRegistry.sol\";\nimport \"./chainlink_contracts/AggregatorV3Interface.sol\";\nimport \"./chainlink_contracts/VRFConsumerBase.sol\";\nimport \"./minigames/games/priceWars/PriceWarsFactory.sol\";\nimport \"./minigames/games/priceWars/PriceWars.sol\";\n\nimport \"OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/AccessControl.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/ERC1155.sol\";\n\n/// @title Crypto Champions Interface\n/// @author Oozyx\n/// @notice This is the crypto champions class\ncontract CryptoChampions is ICryptoChampions, AccessControl, ERC1155, VRFConsumerBase {\n    using SafeMath for uint256;\n    using SafeMath for uint8;\n\n    // Possible phases the contract can be in.  Phase one is when users can mint elder spirits and two is when they can mint heros.\n    enum Phase { SETUP, ACTION }\n\n    // The current phase the contract is in.\n    Phase public currentPhase;\n\n    // Number of tokens minted whenever a user mints a hero\n    uint256 internal constant NUM_TOKENS_MINTED = 500 * 10**18;\n\n    // The duration of each phase in days\n    uint256 internal SETUP_PHASE_DURATION = 2 seconds;\n    uint256 internal ACTION_PHASE_DURATION = 2 seconds;\n\n    // The current phase start time\n    uint256 public currentPhaseStartTime;\n\n    // The owner role is used to globally govern the contract\n    bytes32 internal constant ROLE_OWNER = keccak256(\"ROLE_OWNER\");\n\n    // The admin role is used for administrator duties and reports to the owner\n    bytes32 internal constant ROLE_ADMIN = keccak256(\"ROLE_ADMIN\");\n\n    // The role to declare round winners\n    bytes32 internal constant ROLE_GAME_ADMIN = keccak256(\"ROLE_GAME_ADMIN\");\n\n    // Reserved id for the in game currency\n    uint256 internal constant IN_GAME_CURRENCY_ID = 0;\n\n    // Constants used to determine fee proportions in percentage\n    // Usage: fee.mul(proportion).div(100)\n    uint8 internal constant HERO_MINT_ROYALTY_PERCENT = 25;\n    uint8 internal constant HERO_MINT_DEV_PERCENT = 25;\n\n    // The amount of ETH contained in the rewards pool\n    uint256 public rewardsPoolAmount = 0;\n\n    // The amount of ETH contained in the dev fund\n    uint256 public devFund = 0;\n\n    // The rewards share for every hero with the winning affinity calculated at the end of every round\n    uint256 internal _heroRewardsShare = 0;\n\n    // The identifier for the price wars game\n    string internal constant PRICE_WARS_ID = \"PRICE_WARS\";\n\n    // The max amount of elders that can be minted\n    uint256 public constant MAX_NUMBER_OF_ELDERS = 7;\n\n    // The amount of elders minted\n    // This amount cannot be greater than MAX_NUMBER_OF_ELDERS\n    uint256 public eldersInGame = 0;\n\n    // The mapping of elder id to elder owner, ids can only be in the range of [1, MAX_NUMBER OF ELDERS]\n    mapping(uint256 => address) internal _elderOwners;\n\n    // The mapping of elder id to the elder spirit\n    mapping(uint256 => ElderSpirit) internal _elderSpirits;\n\n    // The amount of heros minted\n    uint256 public heroesMinted = 0;\n\n    // The mapping of hero id to owner, ids can only be in the range of\n    // [1 + MAX_NUMBER_OF_ELDERS, ]\n    mapping(uint256 => address) internal _heroOwners;\n\n    // The mapping of hero id to the hero\n    mapping(uint256 => Hero) internal _heroes;\n\n    // The mapping of the round played to the elder spawns mapping\n    mapping(uint256 => mapping(uint256 => uint256)) internal _roundElderSpawns;\n\n    // The mint price for elders and heroes\n    uint256 public elderMintPrice;\n\n    // The current round index\n    uint256 public currentRound;\n\n    // The mapping of affinities (token ticker) to price feed address\n    mapping(string => address) internal _affinities;\n\n    // List of available affinities\n    string[] public affinities;\n\n    // The key hash used for VRF\n    bytes32 internal _keyHash;\n\n    // The fee in LINK for VRF\n    uint256 internal _fee;\n\n    // Mapping of request id to hero id\n    mapping(bytes32 => uint256) internal _heroRandomRequest;\n\n    // Mapping of request id to random result\n    mapping(bytes32 => uint256) internal _randomResultsVRF;\n\n    // The list of affinities that won in a round\n    mapping(uint256 => string) public winningAffinitiesByRound;\n\n    // Mapping of hero id to a mapping of round to a bool of the rewards claim\n    mapping(uint256 => mapping(uint256 => bool)) internal _heroRewardsClaimed;\n\n    // The registry of minigame factories\n    IMinigameFactoryRegistry internal _minigameFactoryRegistry;\n\n    /// @notice Triggered when an elder spirit gets minted\n    /// @param elderId The elder id belonging to the minted elder\n    /// @param owner The address of the owner\n    event ElderSpiritMinted(uint256 elderId, address owner);\n\n    /// @notice Triggered when a hero gets minted\n    /// @param heroId The hero id belonging to the hero that was minted\n    /// @param owner The address of the owner\n    event HeroMinted(uint256 heroId, address owner);\n\n    /// @notice Triggered when the elder spirits have been burned\n    event ElderSpiritsBurned();\n\n    // Initializes a new CryptoChampions contract\n    // TODO: need to provide the proper uri\n    constructor(\n        bytes32 keyhash,\n        address vrfCoordinator,\n        address linkToken,\n        address minigameFactoryRegistry\n    ) public ERC1155(\"uri\") VRFConsumerBase(vrfCoordinator, linkToken) {\n        // Set up administrative roles\n        _setRoleAdmin(ROLE_OWNER, ROLE_OWNER);\n        _setRoleAdmin(ROLE_ADMIN, ROLE_OWNER);\n        _setRoleAdmin(ROLE_GAME_ADMIN, ROLE_OWNER);\n\n        // Set up the deployer as the owner and give admin rights\n        _setupRole(ROLE_OWNER, msg.sender);\n        grantRole(ROLE_ADMIN, msg.sender);\n\n        // Set initial elder mint price\n        elderMintPrice = 0.271 ether;\n\n        // Set the initial round to 0\n        currentRound = 0;\n\n        // Set initial phase to phase one and phase start time\n        currentPhase = Phase.SETUP;\n        currentPhaseStartTime = now;\n\n        // Set VRF fields\n        _keyHash = keyhash;\n        _fee = 0.1 * 10**18; // 0.1 LINK\n\n        _minigameFactoryRegistry = IMinigameFactoryRegistry(minigameFactoryRegistry);\n    }\n\n    modifier isValidElderSpiritId(uint256 elderId) {\n        require(elderId > IN_GAME_CURRENCY_ID && elderId <= MAX_NUMBER_OF_ELDERS); // dev: Given id is not valid.\n        _;\n    }\n\n    modifier isValidHero(uint256 heroId) {\n        require(heroId > MAX_NUMBER_OF_ELDERS); // dev: Given id is not valid.\n        require(_heroes[heroId].valid); // dev: Hero is not valid.\n        _;\n    }\n\n    // Restrict to only price war addresses\n    modifier onlyGameAdmin {\n        _hasRole(ROLE_GAME_ADMIN);\n        _;\n    }\n\n    // Restrict to only admins\n    modifier onlyAdmin {\n        _hasRole(ROLE_ADMIN);\n        _;\n    }\n\n    // Restrict to the specified phase\n    modifier atPhase(Phase phase) {\n        require(currentPhase == phase); // dev: Current phase prohibits action.\n        _;\n    }\n\n    /// @notice Transitions to the next phase\n    function _transitionNextPhase() internal {\n        if (currentPhase == Phase.SETUP) {\n            // If rewards have gone unclaimed, send to address\n            // todo\n            rewardsPoolAmount = 0;\n\n            // Reset the hero rewards share\n            _heroRewardsShare = 0;\n\n            // todo mint all elders that have yet to be minted\n\n            // Increment the round\n            currentRound = currentRound.add(1);\n\n            // Set the next phase\n            currentPhase = Phase.ACTION;\n        } else if (currentPhase == Phase.ACTION) {\n            // Start the price game that will determine the winning affinity\n            _startNewPriceGame();\n\n            // Calculate hero rewards.\n            // Start by finding which elder had the winning affinity\n            uint256 i = 1;\n            for (; i <= eldersInGame; ++i) {\n                if (\n                    keccak256(bytes(_elderSpirits[i].affinity)) ==\n                    keccak256(bytes(winningAffinitiesByRound[currentRound]))\n                ) {\n                    if (getElderSpawnsAmount(currentRound, i) > 0) {\n                        _heroRewardsShare = rewardsPoolAmount.div(getElderSpawnsAmount(currentRound, i));\n                        break;\n                    }\n                }\n            }\n\n            // Burn the elders\n            _burnElders();\n\n            // Set the next phase\n            currentPhase = Phase.SETUP;\n        }\n\n        currentPhaseStartTime = now;\n    }\n\n    /// @notice Sets the contract's phase\n    /// @dev May delete function and keep only the refresh phase function\n    /// @param phase The phase the contract should be set to\n    function setPhase(Phase phase) external onlyAdmin {\n        currentPhase = phase;\n    }\n\n    /// @notice Transitions to next phase if the condition is met and rewards caller for a successful phase transition\n    function refreshPhase() external override {\n        bool phaseChanged = false;\n\n        if (currentPhase == Phase.SETUP && now >= currentPhaseStartTime + SETUP_PHASE_DURATION) {\n            _transitionNextPhase();\n        } else if (currentPhase == Phase.ACTION && now >= currentPhaseStartTime + ACTION_PHASE_DURATION) {\n            _transitionNextPhase();\n        }\n\n        if (phaseChanged) {\n            // todo reward msg.sender\n        }\n    }\n\n    /// @notice Makes a request for a random number\n    /// @param userProvidedSeed The seed for the random request\n    /// @return requestId The request id\n    function _getRandomNumber(uint256 userProvidedSeed) internal returns (bytes32 requestId) {\n        require(LINK.balanceOf(address(this)) >= _fee); // dev: Not enough LINK - fill contract with faucet\n        return requestRandomness(_keyHash, _fee, userProvidedSeed);\n    }\n\n    /// @notice Callback function used by the VRF coordinator\n    /// @param requestId The request id\n    /// @param randomness The randomness\n    function fulfillRandomness(bytes32 requestId, uint256 randomness) internal override {\n        _randomResultsVRF[requestId] = randomness;\n        _trainHero(requestId);\n    }\n\n    /// @notice Check if msg.sender has the role\n    /// @param role The role to verify\n    function _hasRole(bytes32 role) internal view {\n        require(hasRole(role, msg.sender)); // dev: Access denied.\n    }\n\n    /// @notice Creates a new token affinity\n    /// @dev This will be called by a priviledged address. It will allow to create new affinities. May need to add a\n    /// remove affinity function as well.\n    /// @param tokenTicker The token ticker of the affinity\n    /// @param feedAddress The price feed address\n    function createAffinity(string calldata tokenTicker, address feedAddress) external override onlyAdmin {\n        _affinities[tokenTicker] = feedAddress;\n        affinities.push(tokenTicker);\n    }\n\n    /// @notice Sets the elder mint price\n    /// @dev Can only be called by an admin address\n    /// @param price The new elder mint price\n    function setElderMintPrice(uint256 price) external override onlyAdmin {\n        elderMintPrice = price;\n    }\n\n    /// @notice Mints an elder spirit\n    /// @dev For now only race, class, and token (affinity) are needed. This will change. The race and class ids will\n    /// probably be public constants defined in the crypto champions contract, this is subject to change.\n    /// @param raceId The race id\n    /// @param classId The class id\n    /// @param affinity The affinity of the minted hero\n    /// @return The elder spirit id\n    function mintElderSpirit(\n        uint256 raceId,\n        uint256 classId,\n        string calldata affinity\n    ) external payable override atPhase(Phase.SETUP) returns (uint256) {\n        require(eldersInGame < MAX_NUMBER_OF_ELDERS); // dev: Max number of elders already minted.\n        require(msg.value >= elderMintPrice); // dev: Insufficient payment.\n        require(_affinities[affinity] != address(0)); // dev: Affinity does not exist.\n\n        // Generate the elderId and make sure it doesn't already exists\n        uint256 elderId = eldersInGame.add(1);\n        assert(_elderOwners[elderId] == address(0)); // dev: Elder with id already has owner.\n        assert(_elderSpirits[elderId].valid == false); // dev: Elder spirit with id has already been generated.\n\n        // Get the price data of affinity\n        int256 affinityPrice;\n        (, affinityPrice, , , ) = AggregatorV3Interface(_affinities[affinity]).latestRoundData();\n\n        // Create the elder spirit\n        ElderSpirit memory elder;\n        elder.valid = true;\n        elder.raceId = raceId;\n        elder.classId = classId;\n        elder.affinity = affinity;\n        elder.affinityPrice = affinityPrice;\n\n        // Mint the NFT\n        _mint(_msgSender(), elderId, 1, \"\"); // TODO: give the URI\n\n        // Assign the elder id with the owner and its spirit\n        _elderOwners[elderId] = _msgSender();\n        _elderSpirits[elderId] = elder;\n\n        // Increment elders minted\n        eldersInGame = eldersInGame.add(1);\n\n        // Refund if user sent too much\n        _refundSender(elderMintPrice);\n\n        // The entire elder minting fee goes to the dev fund\n        devFund = devFund.add(elderMintPrice);\n\n        emit ElderSpiritMinted(elderId, _msgSender());\n\n        return elderId;\n    }\n\n    /// @notice Gets the elder owner for the given elder id\n    /// @param elderId The elder id\n    /// @return The owner of the elder\n    function getElderOwner(uint256 elderId) public view override isValidElderSpiritId(elderId) returns (address) {\n        require(_elderOwners[elderId] != address(0)); // dev: Given elder id has not been minted.\n\n        return _elderOwners[elderId];\n    }\n\n    /// @notice Mints a hero based on an elder spirit\n    /// @param elderId The id of the elder spirit this hero is based on\n    /// @return The hero id\n    function mintHero(uint256 elderId, string calldata heroName)\n        external\n        payable\n        override\n        isValidElderSpiritId(elderId)\n        atPhase(Phase.ACTION)\n        returns (uint256)\n    {\n        require(_elderSpirits[elderId].valid); // dev: Elder with id doesn't exists or not valid.\n\n        require(_canMintHero(elderId)); // dev: Can't mint hero. Too mnay heroes minted for elder.\n\n        uint256 mintPrice = getHeroMintPrice(currentRound, elderId);\n        require(msg.value >= mintPrice); // dev: Insufficient payment.\n\n        // Generate the hero id\n        uint256 heroId = heroesMinted.add(1) + MAX_NUMBER_OF_ELDERS;\n        assert(_heroOwners[heroId] == address(0)); // dev: Hero with id already has an owner.\n        assert(_heroes[heroId].valid == false); // dev: Hero with id has already been generated.\n\n        // Create the hero\n        Hero memory hero;\n        hero.valid = true;\n        hero.name = heroName;\n        hero.roundMinted = currentRound;\n        hero.elderId = elderId;\n        hero.raceId = _elderSpirits[elderId].raceId;\n        hero.classId = _elderSpirits[elderId].classId;\n        hero.affinity = _elderSpirits[elderId].affinity;\n        _heroes[heroId] = hero;\n\n        // Request the random number and set hero attributes\n        bytes32 requestId = _getRandomNumber(heroId);\n        _heroRandomRequest[requestId] = heroId;\n\n        // Mint the NFT\n        _mint(_msgSender(), heroId, 1, \"\"); // TODO: give the URI\n\n        // Mint in game currency tokens\n        _mint(_msgSender(), IN_GAME_CURRENCY_ID, NUM_TOKENS_MINTED, \"\");\n\n        // Assign the hero id with the owner and with the hero\n        _heroOwners[heroId] = _msgSender();\n\n        // Increment the heroes minted and the elder spawns\n        heroesMinted = heroesMinted.add(1);\n        _roundElderSpawns[currentRound][elderId] = _roundElderSpawns[currentRound][elderId].add(1);\n\n        // Disburse royalties\n        uint256 royaltyFee = mintPrice.mul(HERO_MINT_ROYALTY_PERCENT).div(100);\n        address seedOwner = _elderOwners[elderId];\n        (bool success, ) = seedOwner.call{ value: royaltyFee }(\"\");\n        require(success, \"Payment failed\");\n\n        // Update the rewards and dev fund pools\n        uint256 devFee = mintPrice.mul(HERO_MINT_DEV_PERCENT).div(100);\n        devFund = devFund.add(devFee);\n        rewardsPoolAmount = rewardsPoolAmount.add(mintPrice.sub(royaltyFee).sub(devFee));\n\n        // Refund if user sent too much\n        _refundSender(mintPrice);\n\n        emit HeroMinted(heroId, _msgSender());\n\n        return heroId;\n    }\n\n    /// @notice Checks to see if a hero can be minted for a given elder\n    /// @dev (n < 4) || (n <= 2 * m)\n    ///     n is number of champions already minted for elder\n    ///     m is number of champions already minted for elder with least amount of champions\n    /// @param elderId The elder id\n    /// @return True if hero can be minted, false otherwise\n    function _canMintHero(uint256 elderId) internal view returns (bool) {\n        // Verify first condition\n        if (_roundElderSpawns[currentRound][elderId] < 4) {\n            return true;\n        }\n\n        // Find the elder with the least amount of heroes minted\n        uint256 smallestElderAmount = _roundElderSpawns[currentRound][elderId];\n        for (uint256 i = 1; i <= eldersInGame; ++i) {\n            if (_roundElderSpawns[currentRound][i] < smallestElderAmount) {\n                smallestElderAmount = _roundElderSpawns[currentRound][i];\n            }\n        }\n\n        return _roundElderSpawns[currentRound][elderId] <= smallestElderAmount.mul(2);\n    }\n\n    /// @notice Sets the hero attributes\n    /// @param requestId The request id that is mapped to a hero\n    function _trainHero(bytes32 requestId) internal isValidHero(_heroRandomRequest[requestId]) {\n        uint256 heroId = _heroRandomRequest[requestId];\n        uint256 randomNumber = _randomResultsVRF[requestId];\n        uint256 newRandomNumber;\n\n        _heroes[heroId].level = 1; // 1 by default\n        (_heroes[heroId].appearance, newRandomNumber) = _rollDice(2, randomNumber); // 1 out of 2\n\n        (_heroes[heroId].trait1, newRandomNumber) = _rollDice(4, newRandomNumber); // 1 out of 4\n        (_heroes[heroId].trait2, newRandomNumber) = _rollDice(4, newRandomNumber); // 1 out of 4\n        (_heroes[heroId].skill1, newRandomNumber) = _rollDice(4, newRandomNumber); // 1 out of 4\n        (_heroes[heroId].skill2, newRandomNumber) = _rollDice(4, newRandomNumber); // 1 out of 4\n\n        (_heroes[heroId].alignment, newRandomNumber) = _rollDice(9, newRandomNumber); // 1 out of 9\n        (_heroes[heroId].background, newRandomNumber) = _rollDice(30, newRandomNumber); // 1 out of 30\n        (_heroes[heroId].hometown, newRandomNumber) = _rollDice(24, newRandomNumber); // 1 out of 24\n        (_heroes[heroId].weather, newRandomNumber) = _rollDice(7, newRandomNumber); // 1 ouf of 7\n\n        (_heroes[heroId].hp, newRandomNumber) = _rollDice(21, newRandomNumber); // Roll 10-30\n        _heroes[heroId].hp = uint8(_heroes[heroId].hp.add(9));\n        (_heroes[heroId].mana, newRandomNumber) = _rollDice(21, newRandomNumber); // Roll 10-30\n        _heroes[heroId].mana = uint8(_heroes[heroId].mana.add(9));\n        (_heroes[heroId].stamina, newRandomNumber) = _rollDice(31, newRandomNumber); // Roll 10-40\n        _heroes[heroId].stamina = uint8(_heroes[heroId].stamina.add(9));\n\n        (_heroes[heroId].strength, newRandomNumber) = _rollDice(16, newRandomNumber); // Roll 3-18\n        _heroes[heroId].strength = uint8(_heroes[heroId].strength.add(2));\n        (_heroes[heroId].dexterity, newRandomNumber) = _rollDice(16, newRandomNumber); // Roll 3-18\n        _heroes[heroId].dexterity = uint8(_heroes[heroId].dexterity.add(2));\n        (_heroes[heroId].constitution, newRandomNumber) = _rollDice(16, newRandomNumber); // Roll 3-18\n        _heroes[heroId].constitution = uint8(_heroes[heroId].constitution.add(2));\n        (_heroes[heroId].intelligence, newRandomNumber) = _rollDice(16, newRandomNumber); // Roll 3-18\n        _heroes[heroId].intelligence = uint8(_heroes[heroId].intelligence.add(2));\n        (_heroes[heroId].wisdom, newRandomNumber) = _rollDice(16, newRandomNumber); // Roll 3-18\n        _heroes[heroId].wisdom = uint8(_heroes[heroId].wisdom.add(2));\n        (_heroes[heroId].charisma, newRandomNumber) = _rollDice(16, newRandomNumber); // Roll 3-18\n        _heroes[heroId].charisma = uint8(_heroes[heroId].charisma.add(2));\n    }\n\n    /// @notice Simulates rolling dice\n    /// @param maxNumber The max number of the dice (e.g. regular die is 6)\n    /// @param randomNumber The random number\n    /// @return The result of the dice roll and a new random number to use for another dice roll\n    function _rollDice(uint8 maxNumber, uint256 randomNumber) internal pure returns (uint8, uint256) {\n        return (uint8(randomNumber.mod(maxNumber).add(1)), randomNumber.div(10));\n    }\n\n    /// @notice Get the hero owner for the given hero id\n    /// @param heroId The hero id\n    /// @return The owner address\n    function getHeroOwner(uint256 heroId) public view override isValidHero(heroId) returns (address) {\n        require(_heroOwners[heroId] != address(0)); // dev: Given hero id has not been minted.\n\n        return _heroOwners[heroId];\n    }\n\n    /// @notice Burns all the elder spirits in game\n    function _burnElders() internal {\n        for (uint256 i = 1; i <= MAX_NUMBER_OF_ELDERS; ++i) {\n            if (_elderSpirits[i].valid) {\n                _burnElder(i);\n            }\n        }\n\n        emit ElderSpiritsBurned();\n    }\n\n    /// @notice Burns the elder spirit\n    /// @dev This will only be able to be called by the contract\n    /// @param elderId The elder id\n    function _burnElder(uint256 elderId) internal isValidElderSpiritId(elderId) {\n        require(_elderSpirits[elderId].valid); // dev: Cannot burn elder that does not exist.\n\n        _burn(_elderOwners[elderId], elderId, 1);\n\n        // Reset elder values for elder id\n        eldersInGame = eldersInGame.sub(1);\n        _elderOwners[elderId] = address(0);\n        _elderSpirits[elderId].valid = false;\n    }\n\n    /// @notice Gets the minting price of a hero based on specified elder spirit\n    /// @param round The round of the hero to be minted\n    /// @param elderId The elder id for which the hero will be based on\n    /// @return The hero mint price\n    function getHeroMintPrice(uint256 round, uint256 elderId)\n        public\n        view\n        override\n        isValidElderSpiritId(elderId)\n        returns (uint256)\n    {\n        require(round <= currentRound); // dev: Cannot get price round has not started.\n        uint256 heroAmount = _roundElderSpawns[round][elderId].add(1);\n\n        return _priceFormula(heroAmount);\n    }\n\n    /// @notice The bounding curve function that calculates price for the new supply\n    /// @dev price = 0.02*(heroes minted) + 0.1\n    /// @param newSupply The new supply after a burn or mint\n    /// @return The calculated price\n    function _priceFormula(uint256 newSupply) internal pure returns (uint256) {\n        uint256 price;\n        uint256 base = 1;\n        price = newSupply.mul(10**18).mul(2).div(100);\n        price = price.add(base.mul(10**18).div(10));\n\n        return price;\n    }\n\n    /// @dev Hook function called before every token transfer\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual override {\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            // If token is an elder spirit, update owners so can send them royalties\n            if (ids[i] > IN_GAME_CURRENCY_ID && ids[i] <= MAX_NUMBER_OF_ELDERS) {\n                _elderOwners[ids[i]] = payable(to);\n            }\n            if (ids[i] > MAX_NUMBER_OF_ELDERS) {\n                _heroOwners[ids[i]] = to;\n            }\n        }\n    }\n\n    /// @notice Gets the amount of heroes spawn from the elder with the specified id during the specified round\n    /// @param round The round the elder was created\n    /// @param elderId The elder id\n    /// @return The amount of heroes spawned from the elder\n    function getElderSpawnsAmount(uint256 round, uint256 elderId)\n        public\n        view\n        override\n        isValidElderSpiritId(elderId)\n        returns (uint256)\n    {\n        require(round <= currentRound); // dev: Invalid round.\n        return _roundElderSpawns[round][elderId];\n    }\n\n    /// @notice Refunds the sender if they sent too much\n    /// @param cost The cost\n    function _refundSender(uint256 cost) internal {\n        if (msg.value.sub(cost) > 0) {\n            (bool success, ) = msg.sender.call{ value: msg.value.sub(cost) }(\"\");\n            require(success); // dev: Refund failed.\n        }\n    }\n\n    /// @notice Fetches the data of a single elder spirit\n    /// @param elderId The id of the elder being searched for\n    /// @return The elder's attributes in the following order (valid, raceId, classId, affinity)\n    function getElderSpirit(uint256 elderId)\n        external\n        view\n        override\n        isValidElderSpiritId(elderId)\n        returns (\n            bool,\n            uint256,\n            uint256,\n            string memory,\n            int256\n        )\n    {\n        ElderSpirit memory elderSpirit = _elderSpirits[elderId];\n        return (\n            elderSpirit.valid,\n            elderSpirit.raceId,\n            elderSpirit.classId,\n            elderSpirit.affinity,\n            elderSpirit.affinityPrice\n        );\n    }\n\n    /// @notice Hero getter function\n    /// @param heroId The hero id\n    /// @return valid, affinity, affinity price, round minted, elder id\n    function getHeroGameData(uint256 heroId)\n        external\n        view\n        override\n        isValidHero(heroId)\n        returns (\n            bool, // valid\n            string memory, // affinity\n            int256, // affinity price\n            uint256, // round minted\n            uint256 // elder id\n        )\n    {\n        return (\n            _heroes[heroId].valid,\n            _heroes[heroId].affinity,\n            _heroes[heroId].affinityPrice,\n            _heroes[heroId].roundMinted,\n            _heroes[heroId].elderId\n        );\n    }\n\n    /// @notice Hero getter function\n    /// @param heroId The hero id\n    /// @return name, race id, class id, appearance\n    function getHeroVisuals(uint256 heroId)\n        external\n        view\n        override\n        isValidHero(heroId)\n        returns (\n            string memory, // name\n            uint256, // race id\n            uint256, // class id\n            uint8 // appearance\n        )\n    {\n        return (_heroes[heroId].name, _heroes[heroId].raceId, _heroes[heroId].classId, _heroes[heroId].appearance);\n    }\n\n    /// @notice Hero getter function\n    /// @param heroId The hero id\n    /// @return trait 1, trait 2, skill 1, skill 2\n    function getHeroTraitsSkills(uint256 heroId)\n        external\n        view\n        override\n        isValidHero(heroId)\n        returns (\n            uint8, // trait 1\n            uint8, // trait 2\n            uint8, // skill 1\n            uint8 // skill 2\n        )\n    {\n        return (_heroes[heroId].trait1, _heroes[heroId].trait2, _heroes[heroId].skill1, _heroes[heroId].skill2);\n    }\n\n    /// @notice Hero getter function\n    /// @param heroId The hero id\n    /// @return alignment, background, hometown, weather\n    function getHeroLore(uint256 heroId)\n        external\n        view\n        override\n        isValidHero(heroId)\n        returns (\n            uint8, // alignment\n            uint8, // background\n            uint8, // hometown\n            uint8 // weather\n        )\n    {\n        return (\n            _heroes[heroId].alignment,\n            _heroes[heroId].background,\n            _heroes[heroId].hometown,\n            _heroes[heroId].weather\n        );\n    }\n\n    /// @notice Hero getter function\n    /// @param heroId The hero id\n    /// @return level, hp, mana\n    function getHeroVitals(uint256 heroId)\n        external\n        view\n        override\n        isValidHero(heroId)\n        returns (\n            uint8, // level\n            uint8, // hp\n            uint8, // mana\n            uint8 // stamina\n        )\n    {\n        return (_heroes[heroId].level, _heroes[heroId].hp, _heroes[heroId].mana, _heroes[heroId].stamina);\n    }\n\n    /// @notice Hero getter function\n    /// @param heroId The hero id\n    /// @return stamina, strength, dexterity, constitution, intelligence, wisdom, charisma\n    function getHeroStats(uint256 heroId)\n        external\n        view\n        override\n        isValidHero(heroId)\n        returns (\n            uint8, // strength\n            uint8, // dexterity\n            uint8, // constitution\n            uint8, // intelligence\n            uint8, // wisdom\n            uint8 // charisma\n        )\n    {\n        return (\n            _heroes[heroId].strength,\n            _heroes[heroId].dexterity,\n            _heroes[heroId].constitution,\n            _heroes[heroId].intelligence,\n            _heroes[heroId].wisdom,\n            _heroes[heroId].charisma\n        );\n    }\n\n    /// @notice Fetches the feed address for a given affinity\n    /// @param affinity The affinity being searched for\n    /// @return The address of the affinity's feed address\n    function getAffinityFeedAddress(string calldata affinity) external view override returns (address) {\n        return _affinities[affinity];\n    }\n\n    /// @notice Fetches the number of elders currently in the game\n    /// @return The current number of elders in the game\n    function getNumEldersInGame() external view override returns (uint256) {\n        return eldersInGame;\n    }\n\n    /// @notice Declares a winning affinity for a round\n    /// @dev This can only be called by a game admin contract\n    /// @param winningAffinity The affinity that won the game\n    function declareRoundWinner(string calldata winningAffinity) external override atPhase(Phase.ACTION) onlyGameAdmin {\n        winningAffinitiesByRound[currentRound] = winningAffinity;\n    }\n\n    /// @notice Claims the rewards for the hero if eligible\n    /// @dev Can only claim once and only for the round the hero was minted\n    /// @param heroId The hero id\n    function claimReward(uint256 heroId) external override atPhase(Phase.SETUP) isValidHero(heroId) {\n        // Check if hero is eligible and if hero hasn't already claimed\n        require(_heroes[heroId].roundMinted == currentRound); // dev: Hero was not minted this round.\n        require(keccak256(bytes(_heroes[heroId].affinity)) == keccak256(bytes(winningAffinitiesByRound[currentRound]))); // dev: Hero does not have the winning affinity.\n        require(_heroRewardsClaimed[heroId][currentRound] == false); // dev: Reward has already been claimed.\n\n        (bool success, ) = _heroOwners[heroId].call{ value: _heroRewardsShare }(\"\");\n        require(success, \"Payment failed\");\n        rewardsPoolAmount = rewardsPoolAmount.sub(_heroRewardsShare);\n        _heroRewardsClaimed[heroId][currentRound] = true;\n    }\n\n    /// @notice Starts a new price game\n    /// @dev This can only be called by the admin of the contract\n    function _startNewPriceGame() internal {\n        address priceWarsFactoryAddress = _minigameFactoryRegistry.getFactory(PRICE_WARS_ID);\n        PriceWarsFactory priceWarsFactory = PriceWarsFactory(priceWarsFactoryAddress);\n        PriceWars priceWar = priceWarsFactory.createPriceWar(address(this));\n        grantRole(ROLE_GAME_ADMIN, address(priceWar));\n        priceWar.startGame();\n    }\n\n    /// @notice Transfers in game currency tokens from one address to another\n    /// @param to The receiving address\n    /// @param amount The amount to transfer\n    function transferInGameTokens(address to, uint256 amount) external override {\n        bytes memory data;\n        safeTransferFrom(msg.sender, to, IN_GAME_CURRENCY_ID, amount, data);\n    }\n\n    /// @notice Transfers in game currency tokens from one address to another.\n    /// @param from The sending address.  Note that the sender must be authorized to transfer funds if the sender is different from the from address.\n    /// @param to The receiving address\n    /// @param amount The amount to transfer\n    function delegatedTransferInGameTokens(\n        address from,\n        address to,\n        uint256 amount\n    ) external override {\n        bytes memory data;\n        safeTransferFrom(from, to, IN_GAME_CURRENCY_ID, amount, data);\n    }\n}\n",
  "sourceMap": "743:31916:12:-:0;;;1348:9;1308:49;;1404:9;1363:50;;2314:1;2279:36;;2398:1;2373:26;;2546:1;2509:38;;2894:1;2864:31;;3239:1;3209:31;;5348:1018;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5348:1018:12;;;;;;;;;;;;;;;;;1976:354:5;;;;;;;;;;;-1:-1:-1;;;1976:354:5;;;;;;;5348:1018:12;;;;;;;;;;;768:40:1;-1:-1:-1;;;768:18:1;:40::i;:::-;2026:13:5;2034:4;2026:7;:13::i;:::-;2128:41;-1:-1:-1;;;2128:18:5;:41::i;:::-;2269:54;-1:-1:-1;;;2269:18:5;:54::i;:::-;-1:-1:-1;;;;;;;9212:32:15;;;;;;;;9254;;;;;5605:37:12::2;-1:-1:-1::0;;;;;;;;;;;1600:23:12;5605:13:::2;:37::i;:::-;5652;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;5652:13:12::2;:37::i;:::-;5699:42;1864:28;-1:-1:-1::0;;;;;;;;;;;5699:13:12::2;:42::i;:::-;5818:34;-1:-1:-1::0;;;;;;;;;;;5841:10:12::2;5818;:34::i;:::-;5862:33;-1:-1:-1::0;;;;;;;;;;;5884:10:12::2;5862:9;:33::i;:::-;5963:11;5946:14;:28:::0;6038:1:::2;6023:12;:16:::0;6113:12:::2;:26:::0;;-1:-1:-1;;6113:26:12::2;::::0;;6173:3:::2;6149:21;:27:::0;6213:8:::2;:18:::0;;;;-1:-1:-1;;6248:12:12::2;6241:4;:19:::0;6283:24:::2;:76:::0;;-1:-1:-1;;;;;;6283:76:12::2;-1:-1:-1::0;;;;;6283:76:12;;::::2;::::0;;;::::2;::::0;;743:31916;;1507:198:1;-1:-1:-1;;;;;;1590:25:1;;;;;1582:66;;;;;-1:-1:-1;;;1582:66:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1658:33:1;;;;;1694:4;1658:33;;;;;;;;:40;;-1:-1:-1;;1658:40:1;;;;;;1507:198::o;7541:86:5:-;7607:13;;;;:4;;:13;;;;;:::i;:::-;;7541:86;:::o;6823:196:0:-;6934:6;:12;;;;;;;;;;;:22;;;6911:57;;6958:9;;6941:4;;6911:57;;6934:6;6911:57;6978:6;:12;;;;;;;;;;;:22;;:34;6823:196::o;6588:110::-;6666:25;6677:4;6683:7;6666:10;:25::i;4644:223::-;4735:6;:12;;;;;;;;;;:22;;;4727:45;;4759:12;:10;:12::i;:::-;4727:7;:45::i;:::-;4719:105;;;;-1:-1:-1;;;4719:105:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7025:184;7098:6;:12;;;;;;;;;;;:33;;7123:7;;7098:24;;;;;:33;;:::i;:::-;7094:109;;;7179:12;:10;:12::i;:::-;-1:-1:-1;;;;;7152:40:0;7170:7;-1:-1:-1;;;;;7152:40:0;7164:4;7152:40;;;;;;;;;;7025:184;;:::o;598:104:10:-;685:10;598:104;:::o;2950:137:0:-;3019:4;3042:12;;;;;;;;;;:38;;3072:7;;3042:29;;;;;:38;;:::i;:::-;3035:45;;2950:137;;;;;:::o;6429:150:11:-;6499:4;6522:50;6527:3;-1:-1:-1;;;;;6547:23:11;;6522:4;:50::i;6984:165::-;7064:4;7087:55;7097:3;-1:-1:-1;;;;;7117:23:11;;7087:9;:55::i;1640:404::-;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;-1:-1:-1;1761:23:11;;;;;;;;:11;:23;;;;;;;;;;;;;1941:18;;1919:19;;;:12;;;:19;;;;;;:40;;;;1973:11;;1719:319;-1:-1:-1;2022:5:11;2015:12;;3805:127;3878:4;3901:19;;;:12;;;;;:19;;;;;;:24;;;3805:127::o;743:31916:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;743:31916:12;;;-1:-1:-1;743:31916:12;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/CryptoChampions.sol",
  "type": "contract"
}