{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "keyhash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "vrfCoordinator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "linkToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "minigameFactoryRegistry",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "elderId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "ElderSpiritMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "ElderSpiritsBurned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "HeroBurned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "HeroMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_NUMBER_OF_ELDERS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "affinities",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnElders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "burnHero",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenTicker",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "feedAddress",
          "type": "address"
        }
      ],
      "name": "createAffinity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentPhase",
      "outputs": [
        {
          "internalType": "enum CryptoChampions.Phase",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentRound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "winningAffinity",
          "type": "string"
        }
      ],
      "name": "declareRoundWinner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "delegatedTransferInGameTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "winningAffinity",
          "type": "string"
        }
      ],
      "name": "disburseRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "elderMintPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eldersInGame",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "affinity",
          "type": "string"
        }
      ],
      "name": "getAffinityFeedAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "elderId",
          "type": "uint256"
        }
      ],
      "name": "getElderOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "round",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "elderId",
          "type": "uint256"
        }
      ],
      "name": "getElderSpawnsAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "elderId",
          "type": "uint256"
        }
      ],
      "name": "getElderSpirit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "getHeroGameData",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "getHeroLore",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "round",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "elderId",
          "type": "uint256"
        }
      ],
      "name": "getHeroMintPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "getHeroOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "getHeroStats",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "getHeroTraitsSkills",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "getHeroVisuals",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "getHeroVitals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNumEldersInGame",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "heroesMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "raceId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "classId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "affinity",
          "type": "string"
        }
      ],
      "name": "mintElderSpirit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "elderId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "heroName",
          "type": "string"
        }
      ],
      "name": "mintHero",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "randomness",
          "type": "uint256"
        }
      ],
      "name": "rawFulfillRandomness",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "setElderMintPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum CryptoChampions.Phase",
          "name": "phase",
          "type": "uint8"
        }
      ],
      "name": "setPhase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startNewPriceGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferInGameTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "winningAffinitiesByRound",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/AccessControl.sol",
    "1": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/introspection/ERC165.sol",
    "10": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Address.sol",
    "11": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Context.sol",
    "12": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/EnumerableSet.sol",
    "2": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/introspection/IERC165.sol",
    "25": "contracts/CryptoChampions.sol",
    "26": "contracts/chainlink_contracts/AggregatorV3Interface.sol",
    "27": "contracts/chainlink_contracts/LinkTokenInterface.sol",
    "28": "contracts/chainlink_contracts/VRFConsumerBase.sol",
    "29": "contracts/chainlink_contracts/VRFRequestIDBase.sol",
    "3": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
    "30": "contracts/minigames/Minigame.sol",
    "31": "contracts/minigames/games/priceWars/PriceWars.sol",
    "32": "contracts/minigames/games/priceWars/PriceWarsFactory.sol",
    "36": "interfaces/ICryptoChampions.sol",
    "37": "interfaces/IMinigameFactoryRegistry.sol",
    "4": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SignedSafeMath.sol",
    "5": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/ERC1155.sol",
    "7": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/IERC1155.sol",
    "8": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/IERC1155MetadataURI.sol",
    "9": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/IERC1155Receiver.sol"
  },
  "ast": {
    "absolutePath": "contracts/CryptoChampions.sol",
    "exportedSymbols": {
      "CryptoChampions": [
        2155
      ]
    },
    "id": 2156,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:25"
      },
      {
        "absolutePath": "interfaces/ICryptoChampions.sol",
        "file": "../interfaces/ICryptoChampions.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 2156,
        "sourceUnit": 5824,
        "src": "64:44:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IMinigameFactoryRegistry.sol",
        "file": "../interfaces/IMinigameFactoryRegistry.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 2156,
        "sourceUnit": 5841,
        "src": "109:52:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/chainlink_contracts/AggregatorV3Interface.sol",
        "file": "./chainlink_contracts/AggregatorV3Interface.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 2156,
        "sourceUnit": 5243,
        "src": "162:57:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/chainlink_contracts/VRFConsumerBase.sol",
        "file": "./chainlink_contracts/VRFConsumerBase.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 2156,
        "sourceUnit": 5366,
        "src": "220:51:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/minigames/games/priceWars/PriceWarsFactory.sol",
        "file": "./minigames/games/priceWars/PriceWarsFactory.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 2156,
        "sourceUnit": 5543,
        "src": "272:58:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/minigames/games/priceWars/PriceWars.sol",
        "file": "./minigames/games/priceWars/PriceWars.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 2156,
        "sourceUnit": 5505,
        "src": "331:51:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/AccessControl.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/AccessControl.sol",
        "id": 8,
        "nodeType": "ImportDirective",
        "scope": 2156,
        "sourceUnit": 3834,
        "src": "384:86:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "id": 9,
        "nodeType": "ImportDirective",
        "scope": 2156,
        "sourceUnit": 4189,
        "src": "471:79:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/ERC1155.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/ERC1155.sol",
        "id": 10,
        "nodeType": "ImportDirective",
        "scope": 2156,
        "sourceUnit": 5197,
        "src": "551:87:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12,
              "name": "ICryptoChampions",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5823,
              "src": "771:16:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICryptoChampions_$5823",
                "typeString": "contract ICryptoChampions"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "771:16:25"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 14,
              "name": "AccessControl",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3833,
              "src": "789:13:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccessControl_$3833",
                "typeString": "contract AccessControl"
              }
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "789:13:25"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16,
              "name": "ERC1155",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5196,
              "src": "804:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155_$5196",
                "typeString": "contract ERC1155"
              }
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "804:7:25"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 18,
              "name": "VRFConsumerBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5365,
              "src": "813:15:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VRFConsumerBase_$5365",
                "typeString": "contract VRFConsumerBase"
              }
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "813:15:25"
          }
        ],
        "contractDependencies": [
          3833,
          5196,
          5365,
          5823,
          6949,
          7498,
          7620,
          7635,
          7821,
          8686
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 11,
          "nodeType": "StructuredDocumentation",
          "src": "640:103:25",
          "text": "@title Crypto Champions Interface\n @author Oozyx\n @notice This is the crypto champions class"
        },
        "fullyImplemented": true,
        "id": 2155,
        "linearizedBaseContracts": [
          2155,
          5365,
          7821,
          5196,
          7635,
          7620,
          7498,
          8686,
          3833,
          6949,
          5823
        ],
        "name": "CryptoChampions",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 22,
            "libraryName": {
              "contractScope": null,
              "id": 20,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4188,
              "src": "841:8:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4188",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "835:27:25",
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "854:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 25,
            "libraryName": {
              "contractScope": null,
              "id": 23,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4188,
              "src": "873:8:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4188",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "867:25:25",
            "typeName": {
              "id": 24,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "886:5:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            }
          },
          {
            "canonicalName": "CryptoChampions.Phase",
            "id": 28,
            "members": [
              {
                "id": 26,
                "name": "MINT_ELDER",
                "nodeType": "EnumValue",
                "src": "1043:10:25"
              },
              {
                "id": 27,
                "name": "MINT_HERO",
                "nodeType": "EnumValue",
                "src": "1055:9:25"
              }
            ],
            "name": "Phase",
            "nodeType": "EnumDefinition",
            "src": "1030:36:25"
          },
          {
            "constant": false,
            "functionSelector": "055ad42e",
            "id": 30,
            "mutability": "mutable",
            "name": "currentPhase",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2155,
            "src": "1117:25:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_Phase_$28",
              "typeString": "enum CryptoChampions.Phase"
            },
            "typeName": {
              "contractScope": null,
              "id": 29,
              "name": "Phase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 28,
              "src": "1117:5:25",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Phase_$28",
                "typeString": "enum CryptoChampions.Phase"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 37,
            "mutability": "constant",
            "name": "NUM_TOKENS_MINTED",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2155,
            "src": "1209:58:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 31,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1209:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_500000000000000000000_by_1",
                "typeString": "int_const 500000000000000000000"
              },
              "id": 36,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "353030",
                "id": 32,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1255:3:25",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_500_by_1",
                  "typeString": "int_const 500"
                },
                "value": "500"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "id": 35,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "hexValue": "3130",
                  "id": 33,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1261:2:25",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "argumentTypes": null,
                  "hexValue": "3138",
                  "id": 34,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1265:2:25",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_18_by_1",
                    "typeString": "int_const 18"
                  },
                  "value": "18"
                },
                "src": "1261:6:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                }
              },
              "src": "1255:12:25",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500000000000000000000_by_1",
                "typeString": "int_const 500000000000000000000"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 42,
            "mutability": "constant",
            "name": "ROLE_OWNER",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2155,
            "src": "1336:62:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 38,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1336:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "524f4c455f4f574e4552",
                  "id": 40,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1385:12:25",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f4e1c871d5fdd0aee1cd182666698a4492b24c6832aac230d07b11046af5a89",
                    "typeString": "literal_string \"ROLE_OWNER\""
                  },
                  "value": "ROLE_OWNER"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f4e1c871d5fdd0aee1cd182666698a4492b24c6832aac230d07b11046af5a89",
                    "typeString": "literal_string \"ROLE_OWNER\""
                  }
                ],
                "id": 39,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1375:9:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 41,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1375:23:25",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 47,
            "mutability": "constant",
            "name": "ROLE_ADMIN",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2155,
            "src": "1485:62:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 43,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1485:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "524f4c455f41444d494e",
                  "id": 45,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1534:12:25",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096",
                    "typeString": "literal_string \"ROLE_ADMIN\""
                  },
                  "value": "ROLE_ADMIN"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096",
                    "typeString": "literal_string \"ROLE_ADMIN\""
                  }
                ],
                "id": 44,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1524:9:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 46,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1524:23:25",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 52,
            "mutability": "constant",
            "name": "ROLE_GAME_ADMIN",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2155,
            "src": "1595:72:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 48,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1595:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "524f4c455f47414d455f41444d494e",
                  "id": 50,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1649:17:25",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_ae0c232b87105e0a8134f8b92146dcd1d99373d32394be9d70f700f90b3a3db3",
                    "typeString": "literal_string \"ROLE_GAME_ADMIN\""
                  },
                  "value": "ROLE_GAME_ADMIN"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_ae0c232b87105e0a8134f8b92146dcd1d99373d32394be9d70f700f90b3a3db3",
                    "typeString": "literal_string \"ROLE_GAME_ADMIN\""
                  }
                ],
                "id": 49,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1639:9:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 51,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1639:28:25",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 55,
            "mutability": "constant",
            "name": "IN_GAME_CURRENCY_ID",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2155,
            "src": "1718:49:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 53,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1718:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 54,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1766:1:25",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 58,
            "mutability": "constant",
            "name": "HERO_MINT_ROYALTY_PROPORTION",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2155,
            "src": "1868:56:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 56,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1868:5:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "38",
              "id": 57,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1923:1:25",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_8_by_1",
                "typeString": "int_const 8"
              },
              "value": "8"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 61,
            "mutability": "constant",
            "name": "PRICE_WARS_ID",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2155,
            "src": "1977:53:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 59,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1977:6:25",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "50524943455f57415253",
              "id": 60,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2018:12:25",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b6cec68f785839f995f869881592b008194e95f206e81883d1180a68c36101a2",
                "typeString": "literal_string \"PRICE_WARS\""
              },
              "value": "PRICE_WARS"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "functionSelector": "90ded47e",
            "id": 64,
            "mutability": "constant",
            "name": "MAX_NUMBER_OF_ELDERS",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2155,
            "src": "2088:48:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 62,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2088:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "37",
              "id": 63,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2135:1:25",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_7_by_1",
                "typeString": "int_const 7"
              },
              "value": "7"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bf61211f",
            "id": 67,
            "mutability": "mutable",
            "name": "eldersInGame",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2155,
            "src": "2241:31:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 65,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2241:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 66,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2271:1:25",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 71,
            "mutability": "mutable",
            "name": "_elderOwners",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2155,
            "src": "2384:49:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 70,
              "keyType": {
                "id": 68,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2392:7:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2384:27:25",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 69,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2403:7:25",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 75,
            "mutability": "mutable",
            "name": "_elderSpirits",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2155,
            "src": "2491:54:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$5555_storage_$",
              "typeString": "mapping(uint256 => struct ElderSpirit)"
            },
            "typeName": {
              "id": 74,
              "keyType": {
                "id": 72,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2499:7:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2491:31:25",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$5555_storage_$",
                "typeString": "mapping(uint256 => struct ElderSpirit)"
              },
              "valueType": {
                "contractScope": null,
                "id": 73,
                "name": "ElderSpirit",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 5555,
                "src": "2510:11:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ElderSpirit_$5555_storage_ptr",
                  "typeString": "struct ElderSpirit"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "caab7ef8",
            "id": 78,
            "mutability": "mutable",
            "name": "heroesMinted",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2155,
            "src": "2586:31:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 76,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2586:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 77,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2616:1:25",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 82,
            "mutability": "mutable",
            "name": "_heroOwners",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2155,
            "src": "2732:48:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 81,
              "keyType": {
                "id": 79,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2740:7:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2732:27:25",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 80,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2751:7:25",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 86,
            "mutability": "mutable",
            "name": "_heroes",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2155,
            "src": "2829:41:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
              "typeString": "mapping(uint256 => struct Hero)"
            },
            "typeName": {
              "id": 85,
              "keyType": {
                "id": 83,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2837:7:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2829:24:25",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                "typeString": "mapping(uint256 => struct Hero)"
              },
              "valueType": {
                "contractScope": null,
                "id": 84,
                "name": "Hero",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 5610,
                "src": "2848:4:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Hero_$5610_storage_ptr",
                  "typeString": "struct Hero"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 92,
            "mutability": "mutable",
            "name": "_roundElderSpawns",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2155,
            "src": "2944:74:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 91,
              "keyType": {
                "id": 87,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2952:7:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2944:47:25",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 90,
                "keyType": {
                  "id": 88,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2971:7:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "2963:27:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 89,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2982:7:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "79935fe0",
            "id": 94,
            "mutability": "mutable",
            "name": "elderMintPrice",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2155,
            "src": "3069:29:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 93,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3069:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8a19c8bc",
            "id": 96,
            "mutability": "mutable",
            "name": "currentRound",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2155,
            "src": "3136:27:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 95,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3136:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 100,
            "mutability": "mutable",
            "name": "_affinities",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2155,
            "src": "3240:47:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 99,
              "keyType": {
                "id": 97,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "3248:6:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "3240:26:25",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 98,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3258:7:25",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "e5b0a993",
            "id": 103,
            "mutability": "mutable",
            "name": "affinities",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2155,
            "src": "3330:26:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 101,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "3330:6:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 102,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "3330:8:25",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 105,
            "mutability": "mutable",
            "name": "_keyHash",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2155,
            "src": "3396:25:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 104,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3396:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 107,
            "mutability": "mutable",
            "name": "_fee",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2155,
            "src": "3459:21:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 106,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3459:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 111,
            "mutability": "mutable",
            "name": "_heroRandomRequest",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2155,
            "src": "3527:55:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 110,
              "keyType": {
                "id": 108,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "3535:7:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "3527:27:25",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
                "id": 109,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3546:7:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 115,
            "mutability": "mutable",
            "name": "_randomResultsVRF",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2155,
            "src": "3635:54:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 114,
              "keyType": {
                "id": 112,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "3643:7:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "3635:27:25",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
                "id": 113,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3654:7:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "6de51353",
            "id": 118,
            "mutability": "mutable",
            "name": "winningAffinitiesByRound",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2155,
            "src": "3746:40:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 116,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "3746:6:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 117,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "3746:8:25",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 120,
            "mutability": "mutable",
            "name": "_minigameFactoryRegistry",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2155,
            "src": "3835:58:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IMinigameFactoryRegistry_$5840",
              "typeString": "contract IMinigameFactoryRegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 119,
              "name": "IMinigameFactoryRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5840,
              "src": "3835:24:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMinigameFactoryRegistry_$5840",
                "typeString": "contract IMinigameFactoryRegistry"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 121,
              "nodeType": "StructuredDocumentation",
              "src": "3900:166:25",
              "text": "@notice Triggered when an elder spirit gets minted\n @param elderId The elder id belonging to the minted elder\n @param owner The address of the owner"
            },
            "id": 127,
            "name": "ElderSpiritMinted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 127,
                  "src": "4095:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4095:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 125,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 127,
                  "src": "4112:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4112:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4094:32:25"
            },
            "src": "4071:56:25"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 128,
              "nodeType": "StructuredDocumentation",
              "src": "4133:163:25",
              "text": "@notice Triggered when a hero gets minted\n @param heroId The hero id belonging to the hero that was minted\n @param owner The address of the owner"
            },
            "id": 134,
            "name": "HeroMinted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 134,
                  "src": "4318:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4318:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 132,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 134,
                  "src": "4334:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4334:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4317:31:25"
            },
            "src": "4301:48:25"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 135,
              "nodeType": "StructuredDocumentation",
              "src": "4355:61:25",
              "text": "@notice Triggered when the elder spirits have been burned"
            },
            "id": 137,
            "name": "ElderSpiritsBurned",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4445:2:25"
            },
            "src": "4421:27:25"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 138,
              "nodeType": "StructuredDocumentation",
              "src": "4454:111:25",
              "text": "@notice Triggered when a hero has been burned\n @param heroId The hero id of the hero that was burned"
            },
            "id": 142,
            "name": "HeroBurned",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 140,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 142,
                  "src": "4587:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4587:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4586:16:25"
            },
            "src": "4570:33:25"
          },
          {
            "body": {
              "id": 218,
              "nodeType": "Block",
              "src": "4911:757:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 161,
                        "name": "ROLE_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "4974:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 162,
                        "name": "ROLE_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "4986:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 160,
                      "name": "_setRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3784,
                      "src": "4960:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4960:37:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "4960:37:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 166,
                        "name": "ROLE_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "5021:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 167,
                        "name": "ROLE_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "5033:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 165,
                      "name": "_setRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3784,
                      "src": "5007:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5007:37:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "5007:37:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 171,
                        "name": "ROLE_GAME_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "5068:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 172,
                        "name": "ROLE_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "5085:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 170,
                      "name": "_setRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3784,
                      "src": "5054:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5054:42:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "5054:42:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 176,
                        "name": "ROLE_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "5184:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 177,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5196:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5196:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 175,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3759,
                      "src": "5173:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5173:34:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "5173:34:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 182,
                        "name": "ROLE_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "5227:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 183,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5239:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5239:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 181,
                      "name": "grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3697,
                      "src": "5217:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5217:33:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "5217:33:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 187,
                      "name": "elderMintPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "5301:14:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "302e323731",
                      "id": 188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5318:11:25",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_271000000000000000_by_1",
                        "typeString": "int_const 271000000000000000"
                      },
                      "value": "0.271"
                    },
                    "src": "5301:28:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 190,
                  "nodeType": "ExpressionStatement",
                  "src": "5301:28:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 191,
                      "name": "currentRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "5378:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5393:1:25",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5378:16:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "5378:16:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 195,
                      "name": "currentPhase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "5447:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Phase_$28",
                        "typeString": "enum CryptoChampions.Phase"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 196,
                        "name": "Phase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "5462:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Phase_$28_$",
                          "typeString": "type(enum CryptoChampions.Phase)"
                        }
                      },
                      "id": 197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "MINT_ELDER",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5462:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Phase_$28",
                        "typeString": "enum CryptoChampions.Phase"
                      }
                    },
                    "src": "5447:31:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Phase_$28",
                      "typeString": "enum CryptoChampions.Phase"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "5447:31:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 200,
                      "name": "_keyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "5515:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 201,
                      "name": "keyhash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "5526:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5515:18:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "5515:18:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 204,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "5543:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "302e31",
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5550:3:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_10",
                          "typeString": "rational_const 1 / 10"
                        },
                        "value": "0.1"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "id": 208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5556:2:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3138",
                          "id": 207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5560:2:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "src": "5556:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "5550:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      }
                    },
                    "src": "5543:19:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "5543:19:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 212,
                      "name": "_minigameFactoryRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120,
                      "src": "5585:24:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMinigameFactoryRegistry_$5840",
                        "typeString": "contract IMinigameFactoryRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 214,
                          "name": "minigameFactoryRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 150,
                          "src": "5637:23:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 213,
                        "name": "IMinigameFactoryRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5840,
                        "src": "5612:24:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IMinigameFactoryRegistry_$5840_$",
                          "typeString": "type(contract IMinigameFactoryRegistry)"
                        }
                      },
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5612:49:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMinigameFactoryRegistry_$5840",
                        "typeString": "contract IMinigameFactoryRegistry"
                      }
                    },
                    "src": "5585:76:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMinigameFactoryRegistry_$5840",
                      "typeString": "contract IMinigameFactoryRegistry"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "5585:76:25"
                }
              ]
            },
            "documentation": null,
            "id": 219,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "757269",
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4861:5:25",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_96ee3279dd30231650e0b4a1a3516ab3dc26b6d3dfcb6ef20fb4329cfc1213e1",
                      "typeString": "literal_string \"uri\""
                    },
                    "value": "uri"
                  }
                ],
                "id": 154,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 152,
                  "name": "ERC1155",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5196,
                  "src": "4853:7:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC1155_$5196_$",
                    "typeString": "type(contract ERC1155)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4853:14:25"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 156,
                    "name": "vrfCoordinator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 146,
                    "src": "4884:14:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 157,
                    "name": "linkToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 148,
                    "src": "4900:9:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 158,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 155,
                  "name": "VRFConsumerBase",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5365,
                  "src": "4868:15:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_VRFConsumerBase_$5365_$",
                    "typeString": "type(contract VRFConsumerBase)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4868:42:25"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144,
                  "mutability": "mutable",
                  "name": "keyhash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 219,
                  "src": "4724:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4724:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 146,
                  "mutability": "mutable",
                  "name": "vrfCoordinator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 219,
                  "src": "4749:22:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4749:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 148,
                  "mutability": "mutable",
                  "name": "linkToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 219,
                  "src": "4781:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4781:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 150,
                  "mutability": "mutable",
                  "name": "minigameFactoryRegistry",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 219,
                  "src": "4808:31:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4808:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4714:131:25"
            },
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4911:0:25"
            },
            "scope": 2155,
            "src": "4703:965:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 234,
              "nodeType": "Block",
              "src": "5721:132:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 224,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 221,
                            "src": "5739:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 225,
                            "name": "IN_GAME_CURRENCY_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "5749:19:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5739:29:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 227,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 221,
                            "src": "5772:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 228,
                            "name": "MAX_NUMBER_OF_ELDERS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "5783:20:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5772:31:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5739:64:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 223,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5731:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5731:73:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "5731:73:25"
                },
                {
                  "id": 233,
                  "nodeType": "PlaceholderStatement",
                  "src": "5845:1:25"
                }
              ]
            },
            "documentation": null,
            "id": 235,
            "name": "isValidElderSpiritId",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 221,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 235,
                  "src": "5704:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5704:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5703:17:25"
            },
            "src": "5674:179:25",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 253,
              "nodeType": "Block",
              "src": "5896:164:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 240,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 237,
                          "src": "5914:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 241,
                          "name": "MAX_NUMBER_OF_ELDERS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "5923:20:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5914:29:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 239,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5906:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5906:38:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "5906:38:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 246,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "5993:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 248,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 247,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 237,
                            "src": "6001:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5993:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5610_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 249,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "valid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5557,
                        "src": "5993:21:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 245,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5985:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5985:30:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "5985:30:25"
                },
                {
                  "id": 252,
                  "nodeType": "PlaceholderStatement",
                  "src": "6052:1:25"
                }
              ]
            },
            "documentation": null,
            "id": 254,
            "name": "isValidHero",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 237,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 254,
                  "src": "5880:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5880:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5879:16:25"
            },
            "src": "5859:201:25",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 261,
              "nodeType": "Block",
              "src": "6133:53:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 257,
                        "name": "ROLE_GAME_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "6152:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 256,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 345,
                      "src": "6143:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) view"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6143:25:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "6143:25:25"
                },
                {
                  "id": 260,
                  "nodeType": "PlaceholderStatement",
                  "src": "6178:1:25"
                }
              ]
            },
            "documentation": null,
            "id": 262,
            "name": "onlyGameAdmin",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6133:0:25"
            },
            "src": "6110:76:25",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 269,
              "nodeType": "Block",
              "src": "6242:48:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 265,
                        "name": "ROLE_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "6261:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 264,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 345,
                      "src": "6252:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) view"
                      }
                    },
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6252:20:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "6252:20:25"
                },
                {
                  "id": 268,
                  "nodeType": "PlaceholderStatement",
                  "src": "6282:1:25"
                }
              ]
            },
            "documentation": null,
            "id": 270,
            "name": "onlyAdmin",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6242:0:25"
            },
            "src": "6223:67:25",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 296,
              "nodeType": "Block",
              "src": "6542:183:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 283,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6583:4:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CryptoChampions_$2155",
                                    "typeString": "contract CryptoChampions"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_CryptoChampions_$2155",
                                    "typeString": "contract CryptoChampions"
                                  }
                                ],
                                "id": 282,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6575:7:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 281,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6575:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6575:13:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 279,
                              "name": "LINK",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5318,
                              "src": "6560:4:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$7771",
                                "typeString": "contract LinkTokenInterface"
                              }
                            },
                            "id": 280,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7703,
                            "src": "6560:14:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6560:29:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 286,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "6593:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6560:37:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 278,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6552:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6552:46:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "6552:46:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 291,
                        "name": "_keyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "6685:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 292,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "6695:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 293,
                        "name": "userProvidedSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 273,
                        "src": "6701:16:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 290,
                      "name": "requestRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5316,
                      "src": "6667:17:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,uint256,uint256) returns (bytes32)"
                      }
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6667:51:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 277,
                  "id": 295,
                  "nodeType": "Return",
                  "src": "6660:58:25"
                }
              ]
            },
            "documentation": {
              "id": 271,
              "nodeType": "StructuredDocumentation",
              "src": "6296:152:25",
              "text": "@notice Makes a request for a random number\n @param userProvidedSeed The seed for the random request\n @return requestId The request id"
            },
            "id": 297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getRandomNumber",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 273,
                  "mutability": "mutable",
                  "name": "userProvidedSeed",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 297,
                  "src": "6479:24:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 272,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6479:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6478:26:25"
            },
            "returnParameters": {
              "id": 277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 276,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 297,
                  "src": "6523:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 275,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6523:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6522:19:25"
            },
            "scope": 2155,
            "src": "6453:272:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              5261
            ],
            "body": {
              "id": 316,
              "nodeType": "Block",
              "src": "6958:89:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 306,
                        "name": "_randomResultsVRF",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "6968:17:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 308,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 307,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 300,
                        "src": "6986:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6968:28:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 309,
                      "name": "randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "6999:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6968:41:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "6968:41:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 313,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 300,
                        "src": "7030:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 312,
                      "name": "_trainHero",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1273,
                      "src": "7019:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7019:21:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 315,
                  "nodeType": "ExpressionStatement",
                  "src": "7019:21:25"
                }
              ]
            },
            "documentation": {
              "id": 298,
              "nodeType": "StructuredDocumentation",
              "src": "6731:138:25",
              "text": "@notice Callback function used by the VRF coordinator\n @param requestId The request id\n @param randomness The randomness"
            },
            "id": 317,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillRandomness",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 304,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6949:8:25"
            },
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 300,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 317,
                  "src": "6901:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6901:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 302,
                  "mutability": "mutable",
                  "name": "randomness",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 317,
                  "src": "6920:18:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6920:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6900:39:25"
            },
            "returnParameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6958:0:25"
            },
            "scope": 2155,
            "src": "6874:173:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 329,
              "nodeType": "Block",
              "src": "7206:37:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 325,
                      "name": "currentPhase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "7216:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Phase_$28",
                        "typeString": "enum CryptoChampions.Phase"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 326,
                      "name": "phase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 320,
                      "src": "7231:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Phase_$28",
                        "typeString": "enum CryptoChampions.Phase"
                      }
                    },
                    "src": "7216:20:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Phase_$28",
                      "typeString": "enum CryptoChampions.Phase"
                    }
                  },
                  "id": 328,
                  "nodeType": "ExpressionStatement",
                  "src": "7216:20:25"
                }
              ]
            },
            "documentation": {
              "id": 318,
              "nodeType": "StructuredDocumentation",
              "src": "7053:98:25",
              "text": "@notice Sets the contract's phase\n @param phase The phase the contract should be set to"
            },
            "functionSelector": "c03afb59",
            "id": 330,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 323,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 322,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 270,
                  "src": "7196:9:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7196:9:25"
              }
            ],
            "name": "setPhase",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 320,
                  "mutability": "mutable",
                  "name": "phase",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 330,
                  "src": "7174:11:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Phase_$28",
                    "typeString": "enum CryptoChampions.Phase"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 319,
                    "name": "Phase",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 28,
                    "src": "7174:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Phase_$28",
                      "typeString": "enum CryptoChampions.Phase"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7173:13:25"
            },
            "returnParameters": {
              "id": 324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7206:0:25"
            },
            "scope": 2155,
            "src": "7156:87:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 344,
              "nodeType": "Block",
              "src": "7383:74:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 338,
                            "name": "role",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 333,
                            "src": "7409:4:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 339,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7415:3:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "7415:10:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 337,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3622,
                          "src": "7401:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7401:25:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 336,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7393:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7393:34:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 343,
                  "nodeType": "ExpressionStatement",
                  "src": "7393:34:25"
                }
              ]
            },
            "documentation": {
              "id": 331,
              "nodeType": "StructuredDocumentation",
              "src": "7249:83:25",
              "text": "@notice Check if msg.sender has the role\n @param role The role to verify"
            },
            "id": 345,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_hasRole",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 333,
                  "mutability": "mutable",
                  "name": "role",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 345,
                  "src": "7355:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 332,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7355:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7354:14:25"
            },
            "returnParameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7383:0:25"
            },
            "scope": 2155,
            "src": "7337:120:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              5617
            ],
            "body": {
              "id": 368,
              "nodeType": "Block",
              "src": "7879:93:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 356,
                        "name": "_affinities",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "7889:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 358,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 357,
                        "name": "tokenTicker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "7901:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7889:24:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 359,
                      "name": "feedAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 350,
                      "src": "7916:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7889:38:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "7889:38:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 365,
                        "name": "tokenTicker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "7953:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 362,
                        "name": "affinities",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "7937:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7937:15:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$__$",
                        "typeString": "function (string storage ref)"
                      }
                    },
                    "id": 366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7937:28:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 367,
                  "nodeType": "ExpressionStatement",
                  "src": "7937:28:25"
                }
              ]
            },
            "documentation": {
              "id": 346,
              "nodeType": "StructuredDocumentation",
              "src": "7463:309:25",
              "text": "@notice Creates a new token affinity\n @dev This will be called by a priviledged address. It will allow to create new affinities. May need to add a\n remove affinity function as well.\n @param tokenTicker The token ticker of the affinity\n @param feedAddress The price feed address"
            },
            "functionSelector": "9d5b82c0",
            "id": 369,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 354,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 353,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 270,
                  "src": "7869:9:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7869:9:25"
              }
            ],
            "name": "createAffinity",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 352,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7860:8:25"
            },
            "parameters": {
              "id": 351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 348,
                  "mutability": "mutable",
                  "name": "tokenTicker",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 369,
                  "src": "7801:27:25",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 347,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7801:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 350,
                  "mutability": "mutable",
                  "name": "feedAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 369,
                  "src": "7830:19:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7830:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7800:50:25"
            },
            "returnParameters": {
              "id": 355,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7879:0:25"
            },
            "scope": 2155,
            "src": "7777:195:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5622
            ],
            "body": {
              "id": 382,
              "nodeType": "Block",
              "src": "8188:39:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 378,
                      "name": "elderMintPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "8198:14:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 379,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 372,
                      "src": "8215:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8198:22:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 381,
                  "nodeType": "ExpressionStatement",
                  "src": "8198:22:25"
                }
              ]
            },
            "documentation": {
              "id": 370,
              "nodeType": "StructuredDocumentation",
              "src": "7978:135:25",
              "text": "@notice Sets the elder mint price\n @dev Can only be called by an admin address\n @param price The new elder mint price"
            },
            "functionSelector": "e3e98382",
            "id": 383,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 376,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 375,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 270,
                  "src": "8178:9:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8178:9:25"
              }
            ],
            "name": "setElderMintPrice",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 374,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8169:8:25"
            },
            "parameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 372,
                  "mutability": "mutable",
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 383,
                  "src": "8145:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 371,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8145:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8144:15:25"
            },
            "returnParameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8188:0:25"
            },
            "scope": 2155,
            "src": "8118:109:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5633
            ],
            "body": {
              "id": 541,
              "nodeType": "Block",
              "src": "8815:1582:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_Phase_$28",
                          "typeString": "enum CryptoChampions.Phase"
                        },
                        "id": 400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 397,
                          "name": "currentPhase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "8833:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Phase_$28",
                            "typeString": "enum CryptoChampions.Phase"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 398,
                            "name": "Phase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "8849:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Phase_$28_$",
                              "typeString": "type(enum CryptoChampions.Phase)"
                            }
                          },
                          "id": 399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "MINT_ELDER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "8849:16:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Phase_$28",
                            "typeString": "enum CryptoChampions.Phase"
                          }
                        },
                        "src": "8833:32:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 396,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8825:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8825:41:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "8825:41:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 404,
                          "name": "eldersInGame",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "8926:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 405,
                          "name": "MAX_NUMBER_OF_ELDERS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "8941:20:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8926:35:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 403,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8918:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8918:44:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 408,
                  "nodeType": "ExpressionStatement",
                  "src": "8918:44:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 410,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9025:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "9025:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 412,
                          "name": "elderMintPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 94,
                          "src": "9038:14:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9025:27:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 409,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9017:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9017:36:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 415,
                  "nodeType": "ExpressionStatement",
                  "src": "9017:36:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 417,
                            "name": "_affinities",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "9101:11:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 419,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 418,
                            "name": "affinity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 390,
                            "src": "9113:8:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9101:21:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9134:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9126:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 420,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9126:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9126:10:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "9101:35:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 416,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9093:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9093:44:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 426,
                  "nodeType": "ExpressionStatement",
                  "src": "9093:44:25"
                },
                {
                  "assignments": [
                    428
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 428,
                      "mutability": "mutable",
                      "name": "elderId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 541,
                      "src": "9253:15:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 427,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9253:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 433,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9288:1:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 429,
                        "name": "eldersInGame",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "9271:12:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4015,
                      "src": "9271:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9271:19:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9253:37:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 435,
                            "name": "_elderOwners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71,
                            "src": "9307:12:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 437,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 436,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 428,
                            "src": "9320:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9307:21:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9340:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9332:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 438,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9332:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9332:10:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "9307:35:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 434,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "9300:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9300:43:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 444,
                  "nodeType": "ExpressionStatement",
                  "src": "9300:43:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 446,
                              "name": "_elderSpirits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "9401:13:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$5555_storage_$",
                                "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                              }
                            },
                            "id": 448,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 447,
                              "name": "elderId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 428,
                              "src": "9415:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9401:22:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ElderSpirit_$5555_storage",
                              "typeString": "struct ElderSpirit storage ref"
                            }
                          },
                          "id": 449,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "valid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5546,
                          "src": "9401:28:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9433:5:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "9401:37:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 445,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "9394:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9394:45:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 453,
                  "nodeType": "ExpressionStatement",
                  "src": "9394:45:25"
                },
                {
                  "assignments": [
                    455
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 455,
                      "mutability": "mutable",
                      "name": "affinityPrice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 541,
                      "src": "9549:20:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 454,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9549:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 456,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9549:20:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        null,
                        {
                          "argumentTypes": null,
                          "id": 457,
                          "name": "affinityPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 455,
                          "src": "9582:13:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        null,
                        null,
                        null
                      ],
                      "id": 458,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "9579:23:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_int256_$__$__$__$",
                        "typeString": "tuple(,int256,,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 460,
                                "name": "_affinities",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100,
                                "src": "9627:11:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                  "typeString": "mapping(string memory => address)"
                                }
                              },
                              "id": 462,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 461,
                                "name": "affinity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 390,
                                "src": "9639:8:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9627:21:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 459,
                            "name": "AggregatorV3Interface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5242,
                            "src": "9605:21:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$5242_$",
                              "typeString": "type(contract AggregatorV3Interface)"
                            }
                          },
                          "id": 463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9605:44:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$5242",
                            "typeString": "contract AggregatorV3Interface"
                          }
                        },
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "latestRoundData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5241,
                        "src": "9605:60:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                          "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                        }
                      },
                      "id": 465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9605:62:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "src": "9579:88:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 467,
                  "nodeType": "ExpressionStatement",
                  "src": "9579:88:25"
                },
                {
                  "assignments": [
                    469
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 469,
                      "mutability": "mutable",
                      "name": "elder",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 541,
                      "src": "9713:24:25",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ElderSpirit_$5555_memory_ptr",
                        "typeString": "struct ElderSpirit"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 468,
                        "name": "ElderSpirit",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5555,
                        "src": "9713:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$5555_storage_ptr",
                          "typeString": "struct ElderSpirit"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 470,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9713:24:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 471,
                        "name": "elder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "9747:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$5555_memory_ptr",
                          "typeString": "struct ElderSpirit memory"
                        }
                      },
                      "id": 473,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "valid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5546,
                      "src": "9747:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9761:4:25",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "9747:18:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 476,
                  "nodeType": "ExpressionStatement",
                  "src": "9747:18:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 477,
                        "name": "elder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "9775:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$5555_memory_ptr",
                          "typeString": "struct ElderSpirit memory"
                        }
                      },
                      "id": 479,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "raceId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5548,
                      "src": "9775:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 480,
                      "name": "raceId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 386,
                      "src": "9790:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9775:21:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 482,
                  "nodeType": "ExpressionStatement",
                  "src": "9775:21:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 483,
                        "name": "elder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "9806:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$5555_memory_ptr",
                          "typeString": "struct ElderSpirit memory"
                        }
                      },
                      "id": 485,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "classId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5550,
                      "src": "9806:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 486,
                      "name": "classId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 388,
                      "src": "9822:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9806:23:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 488,
                  "nodeType": "ExpressionStatement",
                  "src": "9806:23:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 489,
                        "name": "elder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "9839:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$5555_memory_ptr",
                          "typeString": "struct ElderSpirit memory"
                        }
                      },
                      "id": 491,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "affinity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5552,
                      "src": "9839:14:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 492,
                      "name": "affinity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 390,
                      "src": "9856:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "9839:25:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 494,
                  "nodeType": "ExpressionStatement",
                  "src": "9839:25:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 495,
                        "name": "elder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "9874:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$5555_memory_ptr",
                          "typeString": "struct ElderSpirit memory"
                        }
                      },
                      "id": 497,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "affinityPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5554,
                      "src": "9874:19:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 498,
                      "name": "affinityPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 455,
                      "src": "9896:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "9874:35:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 500,
                  "nodeType": "ExpressionStatement",
                  "src": "9874:35:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 502,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6937,
                          "src": "9950:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9950:12:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 504,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 428,
                        "src": "9964:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9973:1:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9976:2:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 501,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4744,
                      "src": "9944:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9944:35:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 508,
                  "nodeType": "ExpressionStatement",
                  "src": "9944:35:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 509,
                        "name": "_elderOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "10073:12:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 511,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 510,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 428,
                        "src": "10086:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10073:21:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 512,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6937,
                        "src": "10097:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                          "typeString": "function () view returns (address payable)"
                        }
                      },
                      "id": 513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10097:12:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "10073:36:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 515,
                  "nodeType": "ExpressionStatement",
                  "src": "10073:36:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 516,
                        "name": "_elderSpirits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "10119:13:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$5555_storage_$",
                          "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                        }
                      },
                      "id": 518,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 517,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 428,
                        "src": "10133:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10119:22:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ElderSpirit_$5555_storage",
                        "typeString": "struct ElderSpirit storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 519,
                      "name": "elder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 469,
                      "src": "10144:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ElderSpirit_$5555_memory_ptr",
                        "typeString": "struct ElderSpirit memory"
                      }
                    },
                    "src": "10119:30:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ElderSpirit_$5555_storage",
                      "typeString": "struct ElderSpirit storage ref"
                    }
                  },
                  "id": 521,
                  "nodeType": "ExpressionStatement",
                  "src": "10119:30:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 522,
                      "name": "eldersInGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "10195:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10227:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 523,
                          "name": "eldersInGame",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "10210:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4015,
                        "src": "10210:16:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10210:19:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10195:34:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 528,
                  "nodeType": "ExpressionStatement",
                  "src": "10195:34:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 530,
                        "name": "elderMintPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "10294:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 529,
                      "name": "_refundSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1746,
                      "src": "10280:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10280:29:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 532,
                  "nodeType": "ExpressionStatement",
                  "src": "10280:29:25"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 534,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 428,
                        "src": "10343:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 535,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6937,
                          "src": "10352:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10352:12:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 533,
                      "name": "ElderSpiritMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "10325:17:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10325:40:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 538,
                  "nodeType": "EmitStatement",
                  "src": "10320:45:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 539,
                    "name": "elderId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 428,
                    "src": "10383:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 395,
                  "id": 540,
                  "nodeType": "Return",
                  "src": "10376:14:25"
                }
              ]
            },
            "documentation": {
              "id": 384,
              "nodeType": "StructuredDocumentation",
              "src": "8233:419:25",
              "text": "@notice Mints an elder spirit\n @dev For now only race, class, and token (affinity) are needed. This will change. The race and class ids will\n probably be public constants defined in the crypto champions contract, this is subject to change.\n @param raceId The race id\n @param classId The class id\n @param affinity The affinity of the minted hero\n @return The elder spirit id"
            },
            "functionSelector": "0fbea841",
            "id": 542,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintElderSpirit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 392,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8788:8:25"
            },
            "parameters": {
              "id": 391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 386,
                  "mutability": "mutable",
                  "name": "raceId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 542,
                  "src": "8691:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 385,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8691:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 388,
                  "mutability": "mutable",
                  "name": "classId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 542,
                  "src": "8715:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 387,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8715:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 390,
                  "mutability": "mutable",
                  "name": "affinity",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 542,
                  "src": "8740:24:25",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 389,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8740:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8681:89:25"
            },
            "returnParameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 394,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 542,
                  "src": "8806:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8806:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8805:9:25"
            },
            "scope": 2155,
            "src": "8657:1740:25",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5640
            ],
            "body": {
              "id": 569,
              "nodeType": "Block",
              "src": "10647:144:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 555,
                            "name": "_elderOwners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71,
                            "src": "10665:12:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 557,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 556,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 545,
                            "src": "10678:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10665:21:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 560,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10698:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10690:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 558,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10690:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10690:10:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "10665:35:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 554,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10657:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10657:44:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 564,
                  "nodeType": "ExpressionStatement",
                  "src": "10657:44:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 565,
                      "name": "_elderOwners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "10763:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 567,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 566,
                      "name": "elderId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 545,
                      "src": "10776:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10763:21:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 553,
                  "id": 568,
                  "nodeType": "Return",
                  "src": "10756:28:25"
                }
              ]
            },
            "documentation": {
              "id": 543,
              "nodeType": "StructuredDocumentation",
              "src": "10403:130:25",
              "text": "@notice Gets the elder owner for the given elder id\n @param elderId The elder id\n @return The owner of the elder"
            },
            "functionSelector": "72eda5bb",
            "id": 570,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 549,
                    "name": "elderId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 545,
                    "src": "10620:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 550,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 548,
                  "name": "isValidElderSpiritId",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 235,
                  "src": "10599:20:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10599:29:25"
              }
            ],
            "name": "getElderOwner",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 547,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10590:8:25"
            },
            "parameters": {
              "id": 546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 545,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 570,
                  "src": "10561:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 544,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10561:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10560:17:25"
            },
            "returnParameters": {
              "id": 553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 552,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 570,
                  "src": "10638:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 551,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10638:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10637:9:25"
            },
            "scope": 2155,
            "src": "10538:253:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5649
            ],
            "body": {
              "id": 810,
              "nodeType": "Block",
              "src": "11130:2293:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_Phase_$28",
                          "typeString": "enum CryptoChampions.Phase"
                        },
                        "id": 588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 585,
                          "name": "currentPhase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "11148:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Phase_$28",
                            "typeString": "enum CryptoChampions.Phase"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 586,
                            "name": "Phase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "11164:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Phase_$28_$",
                              "typeString": "type(enum CryptoChampions.Phase)"
                            }
                          },
                          "id": 587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "MINT_HERO",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11164:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Phase_$28",
                            "typeString": "enum CryptoChampions.Phase"
                          }
                        },
                        "src": "11148:31:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 584,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11140:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11140:40:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 590,
                  "nodeType": "ExpressionStatement",
                  "src": "11140:40:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 592,
                            "name": "_elderSpirits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75,
                            "src": "11236:13:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$5555_storage_$",
                              "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                            }
                          },
                          "id": 594,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 593,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 573,
                            "src": "11250:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11236:22:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ElderSpirit_$5555_storage",
                            "typeString": "struct ElderSpirit storage ref"
                          }
                        },
                        "id": 595,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "valid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5546,
                        "src": "11236:28:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 591,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11228:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11228:37:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 597,
                  "nodeType": "ExpressionStatement",
                  "src": "11228:37:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 600,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 573,
                            "src": "11348:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 599,
                          "name": "_canMintHero",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 879,
                          "src": "11335:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11335:21:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 598,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11327:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11327:30:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 603,
                  "nodeType": "ExpressionStatement",
                  "src": "11327:30:25"
                },
                {
                  "assignments": [
                    605
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 605,
                      "mutability": "mutable",
                      "name": "mintPrice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 810,
                      "src": "11427:17:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 604,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11427:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 610,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 607,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "11464:12:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 608,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 573,
                        "src": "11478:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 606,
                      "name": "getHeroMintPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1554,
                      "src": "11447:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11447:39:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11427:59:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 612,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11504:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11504:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 614,
                          "name": "mintPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 605,
                          "src": "11517:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11504:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 611,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11496:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11496:31:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 617,
                  "nodeType": "ExpressionStatement",
                  "src": "11496:31:25"
                },
                {
                  "assignments": [
                    619
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 619,
                      "mutability": "mutable",
                      "name": "heroId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 810,
                      "src": "11600:14:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 618,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11600:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 626,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11634:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 620,
                          "name": "heroesMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "11617:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4015,
                        "src": "11617:16:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11617:19:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 624,
                      "name": "MAX_NUMBER_OF_ELDERS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "11639:20:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11617:42:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11600:59:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 628,
                            "name": "_heroOwners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "11676:11:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 630,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 629,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 619,
                            "src": "11688:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11676:19:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11707:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11699:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 631,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11699:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11699:10:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "11676:33:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 627,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "11669:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11669:41:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 637,
                  "nodeType": "ExpressionStatement",
                  "src": "11669:41:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 639,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "11770:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 641,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 640,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 619,
                              "src": "11778:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11770:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5610_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 642,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "valid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5557,
                          "src": "11770:21:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11795:5:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "11770:30:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 638,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "11763:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11763:38:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 646,
                  "nodeType": "ExpressionStatement",
                  "src": "11763:38:25"
                },
                {
                  "assignments": [
                    648
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 648,
                      "mutability": "mutable",
                      "name": "hero",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 810,
                      "src": "11888:16:25",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Hero_$5610_memory_ptr",
                        "typeString": "struct Hero"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 647,
                        "name": "Hero",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5610,
                        "src": "11888:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5610_storage_ptr",
                          "typeString": "struct Hero"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 649,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11888:16:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 650,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "11914:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5610_memory_ptr",
                          "typeString": "struct Hero memory"
                        }
                      },
                      "id": 652,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "valid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5557,
                      "src": "11914:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11927:4:25",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "11914:17:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 655,
                  "nodeType": "ExpressionStatement",
                  "src": "11914:17:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 656,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "11941:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5610_memory_ptr",
                          "typeString": "struct Hero memory"
                        }
                      },
                      "id": 658,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5559,
                      "src": "11941:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 659,
                      "name": "heroName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 575,
                      "src": "11953:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "11941:20:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 661,
                  "nodeType": "ExpressionStatement",
                  "src": "11941:20:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 662,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "11971:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5610_memory_ptr",
                          "typeString": "struct Hero memory"
                        }
                      },
                      "id": 664,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "roundMinted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5565,
                      "src": "11971:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 665,
                      "name": "currentRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "11990:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11971:31:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 667,
                  "nodeType": "ExpressionStatement",
                  "src": "11971:31:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 668,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "12012:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5610_memory_ptr",
                          "typeString": "struct Hero memory"
                        }
                      },
                      "id": 670,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "elderId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5567,
                      "src": "12012:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 671,
                      "name": "elderId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 573,
                      "src": "12027:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12012:22:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 673,
                  "nodeType": "ExpressionStatement",
                  "src": "12012:22:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 674,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "12044:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5610_memory_ptr",
                          "typeString": "struct Hero memory"
                        }
                      },
                      "id": 676,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "raceId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5569,
                      "src": "12044:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 677,
                          "name": "_elderSpirits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "12058:13:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$5555_storage_$",
                            "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                          }
                        },
                        "id": 679,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 678,
                          "name": "elderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 573,
                          "src": "12072:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12058:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$5555_storage",
                          "typeString": "struct ElderSpirit storage ref"
                        }
                      },
                      "id": 680,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "raceId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5548,
                      "src": "12058:29:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12044:43:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 682,
                  "nodeType": "ExpressionStatement",
                  "src": "12044:43:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 683,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "12097:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5610_memory_ptr",
                          "typeString": "struct Hero memory"
                        }
                      },
                      "id": 685,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "classId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5571,
                      "src": "12097:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 686,
                          "name": "_elderSpirits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "12112:13:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$5555_storage_$",
                            "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                          }
                        },
                        "id": 688,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 687,
                          "name": "elderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 573,
                          "src": "12126:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12112:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$5555_storage",
                          "typeString": "struct ElderSpirit storage ref"
                        }
                      },
                      "id": 689,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "classId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5550,
                      "src": "12112:30:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12097:45:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 691,
                  "nodeType": "ExpressionStatement",
                  "src": "12097:45:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 692,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "12152:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5610_memory_ptr",
                          "typeString": "struct Hero memory"
                        }
                      },
                      "id": 694,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "affinity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5561,
                      "src": "12152:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 695,
                          "name": "_elderSpirits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "12168:13:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$5555_storage_$",
                            "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                          }
                        },
                        "id": 697,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 696,
                          "name": "elderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 573,
                          "src": "12182:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12168:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$5555_storage",
                          "typeString": "struct ElderSpirit storage ref"
                        }
                      },
                      "id": 698,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "affinity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5552,
                      "src": "12168:31:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "12152:47:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 700,
                  "nodeType": "ExpressionStatement",
                  "src": "12152:47:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 701,
                        "name": "_heroes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "12209:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                          "typeString": "mapping(uint256 => struct Hero storage ref)"
                        }
                      },
                      "id": 703,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 702,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 619,
                        "src": "12217:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12209:15:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Hero_$5610_storage",
                        "typeString": "struct Hero storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 704,
                      "name": "hero",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 648,
                      "src": "12227:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Hero_$5610_memory_ptr",
                        "typeString": "struct Hero memory"
                      }
                    },
                    "src": "12209:22:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Hero_$5610_storage",
                      "typeString": "struct Hero storage ref"
                    }
                  },
                  "id": 706,
                  "nodeType": "ExpressionStatement",
                  "src": "12209:22:25"
                },
                {
                  "assignments": [
                    708
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 708,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 810,
                      "src": "12303:17:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 707,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12303:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 712,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 710,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 619,
                        "src": "12340:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 709,
                      "name": "_getRandomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 297,
                      "src": "12323:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256) returns (bytes32)"
                      }
                    },
                    "id": 711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12323:24:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12303:44:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 713,
                        "name": "_heroRandomRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "12357:18:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 715,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 714,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 708,
                        "src": "12376:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12357:29:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 716,
                      "name": "heroId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 619,
                      "src": "12389:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12357:38:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 718,
                  "nodeType": "ExpressionStatement",
                  "src": "12357:38:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 720,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 708,
                        "src": "12416:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 719,
                      "name": "_trainHero",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1273,
                      "src": "12405:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12405:21:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 722,
                  "nodeType": "ExpressionStatement",
                  "src": "12405:21:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 724,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6937,
                          "src": "12467:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12467:12:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 726,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 619,
                        "src": "12481:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12489:1:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12492:2:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 723,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4744,
                      "src": "12461:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12461:34:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 730,
                  "nodeType": "ExpressionStatement",
                  "src": "12461:34:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 732,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6937,
                          "src": "12574:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12574:12:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 734,
                        "name": "IN_GAME_CURRENCY_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "12588:19:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 735,
                        "name": "NUM_TOKENS_MINTED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "12609:17:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12628:2:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 731,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4744,
                      "src": "12568:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12568:63:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 738,
                  "nodeType": "ExpressionStatement",
                  "src": "12568:63:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 739,
                        "name": "_heroOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "12705:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 741,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 740,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 619,
                        "src": "12717:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12705:19:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 742,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6937,
                        "src": "12727:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                          "typeString": "function () view returns (address payable)"
                        }
                      },
                      "id": 743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12727:12:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "12705:34:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 745,
                  "nodeType": "ExpressionStatement",
                  "src": "12705:34:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 746,
                      "name": "heroesMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "12810:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12842:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 747,
                          "name": "heroesMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "12825:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4015,
                        "src": "12825:16:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12825:19:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12810:34:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 752,
                  "nodeType": "ExpressionStatement",
                  "src": "12810:34:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 753,
                          "name": "_roundElderSpawns",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "12854:17:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 756,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 754,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "12872:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12854:31:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 757,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 755,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 573,
                        "src": "12886:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12854:40:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12942:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 758,
                              "name": "_roundElderSpawns",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92,
                              "src": "12897:17:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 760,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 759,
                              "name": "currentRound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 96,
                              "src": "12915:12:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12897:31:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 762,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 761,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 573,
                            "src": "12929:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12897:40:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4015,
                        "src": "12897:44:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12897:47:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12854:90:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 767,
                  "nodeType": "ExpressionStatement",
                  "src": "12854:90:25"
                },
                {
                  "assignments": [
                    769
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 769,
                      "mutability": "mutable",
                      "name": "royaltyFee",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 810,
                      "src": "12985:18:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 768,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12985:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 777,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13054:2:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 772,
                            "name": "HERO_MINT_ROYALTY_PROPORTION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "13020:28:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 770,
                            "name": "mintPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 605,
                            "src": "13006:9:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4071,
                          "src": "13006:13:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13006:43:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4093,
                      "src": "13006:47:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13006:51:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12985:72:25"
                },
                {
                  "assignments": [
                    779
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 779,
                      "mutability": "mutable",
                      "name": "seedOwner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 810,
                      "src": "13067:17:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 778,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13067:7:25",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 783,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 780,
                      "name": "_elderOwners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "13087:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 782,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 781,
                      "name": "elderId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 573,
                      "src": "13100:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13087:21:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13067:41:25"
                },
                {
                  "assignments": [
                    785,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 785,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 810,
                      "src": "13119:12:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 784,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13119:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 792,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13173:2:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 786,
                          "name": "seedOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 779,
                          "src": "13137:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "13137:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "argumentTypes": null,
                          "id": 788,
                          "name": "royaltyFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 769,
                          "src": "13160:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "13137:35:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13137:39:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13118:58:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 794,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "13194:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5061796d656e74206661696c6564",
                        "id": 795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13203:16:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87ec06ce2059ab3cf6fe4dd2fb1218712f1c693016c832faa431271492b69c3e",
                          "typeString": "literal_string \"Payment failed\""
                        },
                        "value": "Payment failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87ec06ce2059ab3cf6fe4dd2fb1218712f1c693016c832faa431271492b69c3e",
                          "typeString": "literal_string \"Payment failed\""
                        }
                      ],
                      "id": 793,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13186:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13186:34:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 797,
                  "nodeType": "ExpressionStatement",
                  "src": "13186:34:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 799,
                        "name": "mintPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "13334:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 798,
                      "name": "_refundSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1746,
                      "src": "13320:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13320:24:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 801,
                  "nodeType": "ExpressionStatement",
                  "src": "13320:24:25"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 803,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 619,
                        "src": "13371:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 804,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6937,
                          "src": "13379:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13379:12:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 802,
                      "name": "HeroMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "13360:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13360:32:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 807,
                  "nodeType": "EmitStatement",
                  "src": "13355:37:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 808,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 619,
                    "src": "13410:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 583,
                  "id": 809,
                  "nodeType": "Return",
                  "src": "13403:13:25"
                }
              ]
            },
            "documentation": {
              "id": 571,
              "nodeType": "StructuredDocumentation",
              "src": "10797:149:25",
              "text": "@notice Mints a hero based on an elder spirit\n @param elderId The id of the elder spirit this hero is based on\n @return The hero id"
            },
            "functionSelector": "498e8219",
            "id": 811,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 579,
                    "name": "elderId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 573,
                    "src": "11091:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 580,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 578,
                  "name": "isValidElderSpiritId",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 235,
                  "src": "11070:20:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "11070:29:25"
              }
            ],
            "name": "mintHero",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 577,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11053:8:25"
            },
            "parameters": {
              "id": 576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 573,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 811,
                  "src": "10969:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 572,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10969:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 575,
                  "mutability": "mutable",
                  "name": "heroName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 811,
                  "src": "10986:24:25",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 574,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10986:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10968:43:25"
            },
            "returnParameters": {
              "id": 583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 582,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 811,
                  "src": "11117:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 581,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11117:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11116:9:25"
            },
            "scope": 2155,
            "src": "10951:2472:25",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 878,
              "nodeType": "Block",
              "src": "13857:598:25",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 819,
                          "name": "_roundElderSpawns",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "13905:17:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 821,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 820,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "13923:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13905:31:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 823,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 822,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 814,
                        "src": "13937:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13905:40:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "34",
                      "id": 824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13948:1:25",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "src": "13905:44:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 829,
                  "nodeType": "IfStatement",
                  "src": "13901:86:25",
                  "trueBody": {
                    "id": 828,
                    "nodeType": "Block",
                    "src": "13951:36:25",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13972:4:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 818,
                        "id": 827,
                        "nodeType": "Return",
                        "src": "13965:11:25"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    831
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 831,
                      "mutability": "mutable",
                      "name": "smallestElderAmount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 878,
                      "src": "14062:27:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 830,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14062:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 837,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 832,
                        "name": "_roundElderSpawns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "14092:17:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                        }
                      },
                      "id": 834,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 833,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "14110:12:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14092:31:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 836,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 835,
                      "name": "elderId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 814,
                      "src": "14124:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14092:40:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14062:70:25"
                },
                {
                  "body": {
                    "id": 865,
                    "nodeType": "Block",
                    "src": "14186:175:25",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 848,
                                "name": "_roundElderSpawns",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 92,
                                "src": "14204:17:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                                }
                              },
                              "id": 850,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 849,
                                "name": "currentRound",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 96,
                                "src": "14222:12:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14204:31:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 852,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 851,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 839,
                              "src": "14236:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14204:34:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 853,
                            "name": "smallestElderAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 831,
                            "src": "14241:19:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14204:56:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 864,
                        "nodeType": "IfStatement",
                        "src": "14200:151:25",
                        "trueBody": {
                          "id": 863,
                          "nodeType": "Block",
                          "src": "14262:89:25",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 861,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 855,
                                  "name": "smallestElderAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 831,
                                  "src": "14280:19:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 856,
                                      "name": "_roundElderSpawns",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 92,
                                      "src": "14302:17:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                        "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                                      }
                                    },
                                    "id": 858,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 857,
                                      "name": "currentRound",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 96,
                                      "src": "14320:12:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14302:31:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 860,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 859,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 839,
                                    "src": "14334:1:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14302:34:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14280:56:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 862,
                              "nodeType": "ExpressionStatement",
                              "src": "14280:56:25"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 842,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 839,
                      "src": "14162:1:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 843,
                      "name": "eldersInGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "14167:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14162:17:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 866,
                  "initializationExpression": {
                    "assignments": [
                      839
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 839,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 866,
                        "src": "14147:9:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 838,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14147:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 841,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14159:1:25",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14147:13:25"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "14181:3:25",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 845,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 839,
                        "src": "14183:1:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 847,
                    "nodeType": "ExpressionStatement",
                    "src": "14181:3:25"
                  },
                  "nodeType": "ForStatement",
                  "src": "14142:219:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 867,
                          "name": "_roundElderSpawns",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "14378:17:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 869,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 868,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "14396:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14378:31:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 871,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 870,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 814,
                        "src": "14410:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14378:40:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14446:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 872,
                          "name": "smallestElderAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 831,
                          "src": "14422:19:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4071,
                        "src": "14422:23:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14422:26:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14378:70:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 818,
                  "id": 877,
                  "nodeType": "Return",
                  "src": "14371:77:25"
                }
              ]
            },
            "documentation": {
              "id": 812,
              "nodeType": "StructuredDocumentation",
              "src": "13429:355:25",
              "text": "@notice Checks to see if a hero can be minted for a given elder\n @dev (n < 4) || (n <= 2 * m)\n     n is number of champions already minted for elder\n     m is number of champions already minted for elder with least amount of champions\n @param elderId The elder id\n @return True if hero can be minted, false otherwise"
            },
            "id": 879,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canMintHero",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 814,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 879,
                  "src": "13811:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 813,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13811:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13810:17:25"
            },
            "returnParameters": {
              "id": 818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 817,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 879,
                  "src": "13851:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 816,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13851:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13850:6:25"
            },
            "scope": 2155,
            "src": "13789:666:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1272,
              "nodeType": "Block",
              "src": "14658:2658:25",
              "statements": [
                {
                  "assignments": [
                    891
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 891,
                      "mutability": "mutable",
                      "name": "heroId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1272,
                      "src": "14668:14:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 890,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14668:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 895,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 892,
                      "name": "_heroRandomRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "14685:18:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 894,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 893,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 882,
                      "src": "14704:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14685:29:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14668:46:25"
                },
                {
                  "assignments": [
                    897
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 897,
                      "mutability": "mutable",
                      "name": "randomNumber",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1272,
                      "src": "14724:20:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 896,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14724:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 901,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 898,
                      "name": "_randomResultsVRF",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "14747:17:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 900,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 899,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 882,
                      "src": "14765:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14747:28:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14724:51:25"
                },
                {
                  "assignments": [
                    903
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 903,
                      "mutability": "mutable",
                      "name": "newRandomNumber",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1272,
                      "src": "14785:23:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 902,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14785:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 904,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14785:23:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 905,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "14819:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 907,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 906,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 891,
                          "src": "14827:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14819:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5610_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 908,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5591,
                      "src": "14819:21:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14843:1:25",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "14819:25:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 911,
                  "nodeType": "ExpressionStatement",
                  "src": "14819:25:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 912,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "14871:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 914,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 913,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "14879:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14871:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5610_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 915,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "appearance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5573,
                          "src": "14871:26:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 916,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "14899:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 917,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "14870:45:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14928:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        {
                          "argumentTypes": null,
                          "id": 920,
                          "name": "randomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 897,
                          "src": "14931:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 918,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "14918:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14918:26:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "14870:74:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 923,
                  "nodeType": "ExpressionStatement",
                  "src": "14870:74:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 924,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "14970:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 926,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 925,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "14978:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14970:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5610_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 927,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "trait1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5575,
                          "src": "14970:22:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 928,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "14994:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 929,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "14969:41:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "34",
                          "id": 931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15023:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        {
                          "argumentTypes": null,
                          "id": 932,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "15026:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 930,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "15013:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15013:29:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "14969:73:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 935,
                  "nodeType": "ExpressionStatement",
                  "src": "14969:73:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 936,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "15067:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 938,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 937,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "15075:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15067:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5610_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 939,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "trait2",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5577,
                          "src": "15067:22:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 940,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "15091:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 941,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15066:41:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "34",
                          "id": 943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15120:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        {
                          "argumentTypes": null,
                          "id": 944,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "15123:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 942,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "15110:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15110:29:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "15066:73:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 947,
                  "nodeType": "ExpressionStatement",
                  "src": "15066:73:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 948,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "15164:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 950,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 949,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "15172:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15164:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5610_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 951,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "skill1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5579,
                          "src": "15164:22:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 952,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "15188:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 953,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15163:41:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "34",
                          "id": 955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15217:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        {
                          "argumentTypes": null,
                          "id": 956,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "15220:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 954,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "15207:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15207:29:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "15163:73:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 959,
                  "nodeType": "ExpressionStatement",
                  "src": "15163:73:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 960,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "15261:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 962,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 961,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "15269:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15261:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5610_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 963,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "skill2",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5581,
                          "src": "15261:22:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 964,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "15285:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 965,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15260:41:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "34",
                          "id": 967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15314:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        {
                          "argumentTypes": null,
                          "id": 968,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "15317:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 966,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "15304:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15304:29:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "15260:73:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 971,
                  "nodeType": "ExpressionStatement",
                  "src": "15260:73:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 972,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "15359:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 974,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 973,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "15367:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15359:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5610_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 975,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "alignment",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5583,
                          "src": "15359:25:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 976,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "15386:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 977,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15358:44:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "39",
                          "id": 979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15415:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          },
                          "value": "9"
                        },
                        {
                          "argumentTypes": null,
                          "id": 980,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "15418:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 978,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "15405:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15405:29:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "15358:76:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 983,
                  "nodeType": "ExpressionStatement",
                  "src": "15358:76:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 984,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "15459:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 986,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 985,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "15467:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15459:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5610_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 987,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "background",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5585,
                          "src": "15459:26:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 988,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "15487:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 989,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15458:45:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3330",
                          "id": 991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15516:2:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
                        {
                          "argumentTypes": null,
                          "id": 992,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "15520:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 990,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "15506:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15506:30:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "15458:78:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 995,
                  "nodeType": "ExpressionStatement",
                  "src": "15458:78:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 996,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "15562:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 998,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 997,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "15570:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15562:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5610_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 999,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "hometown",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5587,
                          "src": "15562:24:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1000,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "15588:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1001,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15561:43:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3234",
                          "id": 1003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15617:2:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_24_by_1",
                            "typeString": "int_const 24"
                          },
                          "value": "24"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1004,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "15621:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_24_by_1",
                            "typeString": "int_const 24"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1002,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "15607:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15607:30:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "15561:76:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1007,
                  "nodeType": "ExpressionStatement",
                  "src": "15561:76:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1008,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "15663:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1010,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1009,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "15671:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15663:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5610_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1011,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "weather",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5589,
                          "src": "15663:23:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1012,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "15688:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1013,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15662:42:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "37",
                          "id": 1015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15717:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_7_by_1",
                            "typeString": "int_const 7"
                          },
                          "value": "7"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1016,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "15720:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_7_by_1",
                            "typeString": "int_const 7"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1014,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "15707:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15707:29:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "15662:74:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1019,
                  "nodeType": "ExpressionStatement",
                  "src": "15662:74:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1020,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "15762:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1022,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1021,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "15770:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15762:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5610_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1023,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "hp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5593,
                          "src": "15762:18:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1024,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "15782:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1025,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15761:37:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3231",
                          "id": 1027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15811:2:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_21_by_1",
                            "typeString": "int_const 21"
                          },
                          "value": "21"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1028,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "15815:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_21_by_1",
                            "typeString": "int_const 21"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1026,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "15801:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15801:30:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "15761:70:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1031,
                  "nodeType": "ExpressionStatement",
                  "src": "15761:70:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1032,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "15855:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1034,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1033,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 891,
                          "src": "15863:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15855:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5610_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1035,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "hp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5593,
                      "src": "15855:18:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "39",
                              "id": 1043,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15905:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              },
                              "value": "9"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1038,
                                  "name": "_heroes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86,
                                  "src": "15882:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                                    "typeString": "mapping(uint256 => struct Hero storage ref)"
                                  }
                                },
                                "id": 1040,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1039,
                                  "name": "heroId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 891,
                                  "src": "15890:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "15882:15:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Hero_$5610_storage",
                                  "typeString": "struct Hero storage ref"
                                }
                              },
                              "id": 1041,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "hp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5593,
                              "src": "15882:18:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 1042,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4015,
                            "src": "15882:22:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15882:25:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15876:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 1036,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "15876:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15876:32:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "15855:53:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1047,
                  "nodeType": "ExpressionStatement",
                  "src": "15855:53:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1048,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "15919:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1050,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1049,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "15927:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15919:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5610_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1051,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "mana",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5595,
                          "src": "15919:20:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1052,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "15941:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1053,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15918:39:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3231",
                          "id": 1055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15970:2:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_21_by_1",
                            "typeString": "int_const 21"
                          },
                          "value": "21"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1056,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "15974:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_21_by_1",
                            "typeString": "int_const 21"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1054,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "15960:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15960:30:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "15918:72:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1059,
                  "nodeType": "ExpressionStatement",
                  "src": "15918:72:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1060,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "16014:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1062,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1061,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 891,
                          "src": "16022:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16014:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5610_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1063,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "mana",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5595,
                      "src": "16014:20:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "39",
                              "id": 1071,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16068:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              },
                              "value": "9"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1066,
                                  "name": "_heroes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86,
                                  "src": "16043:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                                    "typeString": "mapping(uint256 => struct Hero storage ref)"
                                  }
                                },
                                "id": 1068,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1067,
                                  "name": "heroId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 891,
                                  "src": "16051:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16043:15:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Hero_$5610_storage",
                                  "typeString": "struct Hero storage ref"
                                }
                              },
                              "id": 1069,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mana",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5595,
                              "src": "16043:20:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 1070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4015,
                            "src": "16043:24:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16043:27:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "16037:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 1064,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "16037:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16037:34:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "16014:57:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1075,
                  "nodeType": "ExpressionStatement",
                  "src": "16014:57:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1076,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "16082:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1078,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1077,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "16090:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16082:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5610_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1079,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "stamina",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5597,
                          "src": "16082:23:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1080,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "16107:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1081,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16081:42:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3331",
                          "id": 1083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16136:2:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_31_by_1",
                            "typeString": "int_const 31"
                          },
                          "value": "31"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1084,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "16140:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_31_by_1",
                            "typeString": "int_const 31"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1082,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "16126:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16126:30:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "16081:75:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1087,
                  "nodeType": "ExpressionStatement",
                  "src": "16081:75:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1088,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "16180:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1090,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1089,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 891,
                          "src": "16188:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16180:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5610_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1091,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stamina",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5597,
                      "src": "16180:23:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "39",
                              "id": 1099,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16240:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              },
                              "value": "9"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1094,
                                  "name": "_heroes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86,
                                  "src": "16212:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                                    "typeString": "mapping(uint256 => struct Hero storage ref)"
                                  }
                                },
                                "id": 1096,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1095,
                                  "name": "heroId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 891,
                                  "src": "16220:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16212:15:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Hero_$5610_storage",
                                  "typeString": "struct Hero storage ref"
                                }
                              },
                              "id": 1097,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "stamina",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5597,
                              "src": "16212:23:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 1098,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4015,
                            "src": "16212:27:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16212:30:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "16206:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 1092,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "16206:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16206:37:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "16180:63:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1103,
                  "nodeType": "ExpressionStatement",
                  "src": "16180:63:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1104,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "16255:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1106,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1105,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "16263:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16255:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5610_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1107,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "strength",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5599,
                          "src": "16255:24:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1108,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "16281:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1109,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16254:43:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3136",
                          "id": 1111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16310:2:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1112,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "16314:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1110,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "16300:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16300:30:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "16254:76:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1115,
                  "nodeType": "ExpressionStatement",
                  "src": "16254:76:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1116,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "16353:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1118,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1117,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 891,
                          "src": "16361:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16353:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5610_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1119,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "strength",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5599,
                      "src": "16353:24:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16415:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1122,
                                  "name": "_heroes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86,
                                  "src": "16386:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                                    "typeString": "mapping(uint256 => struct Hero storage ref)"
                                  }
                                },
                                "id": 1124,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1123,
                                  "name": "heroId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 891,
                                  "src": "16394:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16386:15:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Hero_$5610_storage",
                                  "typeString": "struct Hero storage ref"
                                }
                              },
                              "id": 1125,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "strength",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5599,
                              "src": "16386:24:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 1126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4015,
                            "src": "16386:28:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16386:31:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "16380:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 1120,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "16380:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16380:38:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "16353:65:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1131,
                  "nodeType": "ExpressionStatement",
                  "src": "16353:65:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1132,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "16429:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1134,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1133,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "16437:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16429:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5610_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1135,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "dexterity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5601,
                          "src": "16429:25:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1136,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "16456:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1137,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16428:44:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3136",
                          "id": 1139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16485:2:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1140,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "16489:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1138,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "16475:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16475:30:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "16428:77:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1143,
                  "nodeType": "ExpressionStatement",
                  "src": "16428:77:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1144,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "16528:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1146,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1145,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 891,
                          "src": "16536:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16528:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5610_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1147,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "dexterity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5601,
                      "src": "16528:25:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16592:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1150,
                                  "name": "_heroes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86,
                                  "src": "16562:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                                    "typeString": "mapping(uint256 => struct Hero storage ref)"
                                  }
                                },
                                "id": 1152,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1151,
                                  "name": "heroId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 891,
                                  "src": "16570:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16562:15:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Hero_$5610_storage",
                                  "typeString": "struct Hero storage ref"
                                }
                              },
                              "id": 1153,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "dexterity",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5601,
                              "src": "16562:25:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 1154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4015,
                            "src": "16562:29:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16562:32:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "16556:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 1148,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "16556:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16556:39:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "16528:67:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1159,
                  "nodeType": "ExpressionStatement",
                  "src": "16528:67:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1160,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "16606:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1162,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1161,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "16614:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16606:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5610_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1163,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "constitution",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5603,
                          "src": "16606:28:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1164,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "16636:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1165,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16605:47:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3136",
                          "id": 1167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16665:2:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1168,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "16669:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1166,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "16655:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16655:30:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "16605:80:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1171,
                  "nodeType": "ExpressionStatement",
                  "src": "16605:80:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1172,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "16708:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1174,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1173,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 891,
                          "src": "16716:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16708:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5610_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1175,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "constitution",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5603,
                      "src": "16708:28:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16778:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1178,
                                  "name": "_heroes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86,
                                  "src": "16745:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                                    "typeString": "mapping(uint256 => struct Hero storage ref)"
                                  }
                                },
                                "id": 1180,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1179,
                                  "name": "heroId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 891,
                                  "src": "16753:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16745:15:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Hero_$5610_storage",
                                  "typeString": "struct Hero storage ref"
                                }
                              },
                              "id": 1181,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "constitution",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5603,
                              "src": "16745:28:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 1182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4015,
                            "src": "16745:32:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16745:35:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "16739:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 1176,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "16739:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16739:42:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "16708:73:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1187,
                  "nodeType": "ExpressionStatement",
                  "src": "16708:73:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1188,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "16792:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1190,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1189,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "16800:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16792:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5610_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1191,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "intelligence",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5605,
                          "src": "16792:28:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1192,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "16822:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1193,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16791:47:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3136",
                          "id": 1195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16851:2:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1196,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "16855:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1194,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "16841:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16841:30:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "16791:80:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1199,
                  "nodeType": "ExpressionStatement",
                  "src": "16791:80:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1200,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "16894:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1202,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1201,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 891,
                          "src": "16902:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16894:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5610_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1203,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "intelligence",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5605,
                      "src": "16894:28:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16964:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1206,
                                  "name": "_heroes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86,
                                  "src": "16931:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                                    "typeString": "mapping(uint256 => struct Hero storage ref)"
                                  }
                                },
                                "id": 1208,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1207,
                                  "name": "heroId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 891,
                                  "src": "16939:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16931:15:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Hero_$5610_storage",
                                  "typeString": "struct Hero storage ref"
                                }
                              },
                              "id": 1209,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "intelligence",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5605,
                              "src": "16931:28:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 1210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4015,
                            "src": "16931:32:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16931:35:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "16925:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 1204,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "16925:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16925:42:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "16894:73:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1215,
                  "nodeType": "ExpressionStatement",
                  "src": "16894:73:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1216,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "16978:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1218,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1217,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "16986:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16978:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5610_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1219,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "wisdom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5607,
                          "src": "16978:22:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1220,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "17002:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1221,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16977:41:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3136",
                          "id": 1223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17031:2:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1224,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "17035:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1222,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "17021:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17021:30:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "16977:74:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1227,
                  "nodeType": "ExpressionStatement",
                  "src": "16977:74:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1228,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "17074:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1230,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1229,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 891,
                          "src": "17082:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17074:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5610_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1231,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "wisdom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5607,
                      "src": "17074:22:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17132:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1234,
                                  "name": "_heroes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86,
                                  "src": "17105:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                                    "typeString": "mapping(uint256 => struct Hero storage ref)"
                                  }
                                },
                                "id": 1236,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1235,
                                  "name": "heroId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 891,
                                  "src": "17113:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "17105:15:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Hero_$5610_storage",
                                  "typeString": "struct Hero storage ref"
                                }
                              },
                              "id": 1237,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "wisdom",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5607,
                              "src": "17105:22:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 1238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4015,
                            "src": "17105:26:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17105:29:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "17099:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 1232,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "17099:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17099:36:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "17074:61:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1243,
                  "nodeType": "ExpressionStatement",
                  "src": "17074:61:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1244,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "17146:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1246,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1245,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "17154:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17146:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5610_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1247,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "charisma",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5609,
                          "src": "17146:24:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1248,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "17172:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1249,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "17145:43:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3136",
                          "id": 1251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17201:2:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1252,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "17205:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1250,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "17191:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17191:30:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "17145:76:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1255,
                  "nodeType": "ExpressionStatement",
                  "src": "17145:76:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1256,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "17244:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1258,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1257,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 891,
                          "src": "17252:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17244:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5610_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1259,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "charisma",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5609,
                      "src": "17244:24:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17306:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1262,
                                  "name": "_heroes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86,
                                  "src": "17277:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                                    "typeString": "mapping(uint256 => struct Hero storage ref)"
                                  }
                                },
                                "id": 1264,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1263,
                                  "name": "heroId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 891,
                                  "src": "17285:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "17277:15:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Hero_$5610_storage",
                                  "typeString": "struct Hero storage ref"
                                }
                              },
                              "id": 1265,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "charisma",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5609,
                              "src": "17277:24:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 1266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4015,
                            "src": "17277:28:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17277:31:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "17271:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 1260,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "17271:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17271:38:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "17244:65:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1271,
                  "nodeType": "ExpressionStatement",
                  "src": "17244:65:25"
                }
              ]
            },
            "documentation": {
              "id": 880,
              "nodeType": "StructuredDocumentation",
              "src": "14461:101:25",
              "text": "@notice Sets the hero attributes\n @param requestId The request id that is mapped to a hero"
            },
            "id": 1273,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 885,
                      "name": "_heroRandomRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "14627:18:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 887,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 886,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 882,
                      "src": "14646:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14627:29:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 888,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 884,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 254,
                  "src": "14615:11:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "14615:42:25"
              }
            ],
            "name": "_trainHero",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 882,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1273,
                  "src": "14587:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 881,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14587:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14586:19:25"
            },
            "returnParameters": {
              "id": 889,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14658:0:25"
            },
            "scope": 2155,
            "src": "14567:2749:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1301,
              "nodeType": "Block",
              "src": "17677:89:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 1292,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17733:1:25",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1289,
                                    "name": "maxNumber",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1276,
                                    "src": "17718:9:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1287,
                                    "name": "randomNumber",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1278,
                                    "src": "17701:12:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1288,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mod",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4115,
                                  "src": "17701:16:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1290,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17701:27:25",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4015,
                              "src": "17701:31:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17701:34:25",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17695:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 1285,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "17695:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17695:41:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "3130",
                            "id": 1297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17755:2:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1295,
                            "name": "randomNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1278,
                            "src": "17738:12:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4093,
                          "src": "17738:16:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17738:20:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1299,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "17694:65:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                      "typeString": "tuple(uint8,uint256)"
                    }
                  },
                  "functionReturnParameters": 1284,
                  "id": 1300,
                  "nodeType": "Return",
                  "src": "17687:72:25"
                }
              ]
            },
            "documentation": {
              "id": 1274,
              "nodeType": "StructuredDocumentation",
              "src": "17322:253:25",
              "text": "@notice Simulates rolling dice\n @param maxNumber The max number of the dice (e.g. regular die is 6)\n @param randomNumber The random number\n @return The result of the dice roll and a new random number to use for another dice roll"
            },
            "id": 1302,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_rollDice",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1276,
                  "mutability": "mutable",
                  "name": "maxNumber",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1302,
                  "src": "17599:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1275,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "17599:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1278,
                  "mutability": "mutable",
                  "name": "randomNumber",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1302,
                  "src": "17616:20:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1277,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17616:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17598:39:25"
            },
            "returnParameters": {
              "id": 1284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1281,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1302,
                  "src": "17661:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1280,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "17661:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1283,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1302,
                  "src": "17668:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1282,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17668:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17660:16:25"
            },
            "scope": 2155,
            "src": "17580:186:25",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              5656
            ],
            "body": {
              "id": 1329,
              "nodeType": "Block",
              "src": "17994:139:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1315,
                            "name": "_heroOwners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "18012:11:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 1317,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1316,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1305,
                            "src": "18024:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "18012:19:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1320,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18043:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "18035:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1318,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "18035:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18035:10:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "18012:33:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1314,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18004:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18004:42:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1324,
                  "nodeType": "ExpressionStatement",
                  "src": "18004:42:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1325,
                      "name": "_heroOwners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "18107:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 1327,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1326,
                      "name": "heroId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1305,
                      "src": "18119:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "18107:19:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1313,
                  "id": 1328,
                  "nodeType": "Return",
                  "src": "18100:26:25"
                }
              ]
            },
            "documentation": {
              "id": 1303,
              "nodeType": "StructuredDocumentation",
              "src": "17772:120:25",
              "text": "@notice Get the hero owner for the given hero id\n @param heroId The hero id\n @return The owner address"
            },
            "functionSelector": "56b4d760",
            "id": 1330,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1309,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1305,
                    "src": "17968:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1310,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1308,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 254,
                  "src": "17956:11:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "17956:19:25"
              }
            ],
            "name": "getHeroOwner",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1307,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "17947:8:25"
            },
            "parameters": {
              "id": 1306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1305,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1330,
                  "src": "17919:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17919:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17918:16:25"
            },
            "returnParameters": {
              "id": 1313,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1312,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1330,
                  "src": "17985:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1311,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17985:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17984:9:25"
            },
            "scope": 2155,
            "src": "17897:236:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5661
            ],
            "body": {
              "id": 1339,
              "nodeType": "Block",
              "src": "18436:2:25",
              "statements": []
            },
            "documentation": {
              "id": 1331,
              "nodeType": "StructuredDocumentation",
              "src": "18139:206:25",
              "text": "@notice Disburses the rewards evenly among the heroes of the winning affinity\n @dev This will be called from a priviledged address\n @param winningAffinity The winning affinity token ticker"
            },
            "functionSelector": "2efb8874",
            "id": 1340,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1337,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1336,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 270,
                  "src": "18426:9:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "18426:9:25"
              }
            ],
            "name": "disburseRewards",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1335,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "18417:8:25"
            },
            "parameters": {
              "id": 1334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1333,
                  "mutability": "mutable",
                  "name": "winningAffinity",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1340,
                  "src": "18375:31:25",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1332,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "18375:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18374:33:25"
            },
            "returnParameters": {
              "id": 1338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18436:0:25"
            },
            "scope": 2155,
            "src": "18350:88:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5664
            ],
            "body": {
              "id": 1385,
              "nodeType": "Block",
              "src": "18546:349:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1348,
                          "name": "eldersInGame",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "18564:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18579:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "18564:16:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1347,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18556:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18556:25:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1352,
                  "nodeType": "ExpressionStatement",
                  "src": "18556:25:25"
                },
                {
                  "body": {
                    "id": 1373,
                    "nodeType": "Block",
                    "src": "18679:98:25",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1363,
                              "name": "_elderSpirits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "18697:13:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$5555_storage_$",
                                "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                              }
                            },
                            "id": 1365,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1364,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1354,
                              "src": "18711:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "18697:16:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ElderSpirit_$5555_storage",
                              "typeString": "struct ElderSpirit storage ref"
                            }
                          },
                          "id": 1366,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "valid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5546,
                          "src": "18697:22:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1372,
                        "nodeType": "IfStatement",
                        "src": "18693:74:25",
                        "trueBody": {
                          "id": 1371,
                          "nodeType": "Block",
                          "src": "18721:46:25",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1368,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1354,
                                    "src": "18750:1:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1367,
                                  "name": "_burnElder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1434,
                                  "src": "18739:10:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 1369,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18739:13:25",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1370,
                              "nodeType": "ExpressionStatement",
                              "src": "18739:13:25"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1357,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1354,
                      "src": "18647:1:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1358,
                      "name": "MAX_NUMBER_OF_ELDERS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "18652:20:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18647:25:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1374,
                  "initializationExpression": {
                    "assignments": [
                      1354
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1354,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1374,
                        "src": "18632:9:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1353,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18632:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1356,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18644:1:25",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "18632:13:25"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "18674:3:25",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1360,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1354,
                        "src": "18676:1:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1362,
                    "nodeType": "ExpressionStatement",
                    "src": "18674:3:25"
                  },
                  "nodeType": "ForStatement",
                  "src": "18627:150:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1375,
                      "name": "currentRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "18818:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18850:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1376,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "18833:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4015,
                        "src": "18833:16:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18833:19:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18818:34:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1381,
                  "nodeType": "ExpressionStatement",
                  "src": "18818:34:25"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1382,
                      "name": "ElderSpiritsBurned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "18868:18:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18868:20:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1384,
                  "nodeType": "EmitStatement",
                  "src": "18863:25:25"
                }
              ]
            },
            "documentation": {
              "id": 1341,
              "nodeType": "StructuredDocumentation",
              "src": "18444:47:25",
              "text": "@notice Burns all the elder spirits in game"
            },
            "functionSelector": "a4aeec53",
            "id": 1386,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1345,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1344,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 270,
                  "src": "18536:9:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "18536:9:25"
              }
            ],
            "name": "burnElders",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1343,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "18527:8:25"
            },
            "parameters": {
              "id": 1342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18515:2:25"
            },
            "returnParameters": {
              "id": 1346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18546:0:25"
            },
            "scope": 2155,
            "src": "18496:399:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1433,
              "nodeType": "Block",
              "src": "19117:504:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1396,
                            "name": "_elderSpirits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75,
                            "src": "19135:13:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$5555_storage_$",
                              "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                            }
                          },
                          "id": 1398,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1397,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1389,
                            "src": "19149:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "19135:22:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ElderSpirit_$5555_storage",
                            "typeString": "struct ElderSpirit storage ref"
                          }
                        },
                        "id": 1399,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "valid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5546,
                        "src": "19135:28:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1395,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19127:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19127:37:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1401,
                  "nodeType": "ExpressionStatement",
                  "src": "19127:37:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1403,
                          "name": "_elderOwners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "19402:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 1405,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1404,
                          "name": "elderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1389,
                          "src": "19415:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19402:21:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1406,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1389,
                        "src": "19425:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19434:1:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 1402,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4921,
                      "src": "19396:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19396:40:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1409,
                  "nodeType": "ExpressionStatement",
                  "src": "19396:40:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1410,
                      "name": "eldersInGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "19490:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19522:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1411,
                          "name": "eldersInGame",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "19505:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4037,
                        "src": "19505:16:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19505:19:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19490:34:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1416,
                  "nodeType": "ExpressionStatement",
                  "src": "19490:34:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1417,
                        "name": "_elderOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "19534:12:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1419,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1418,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1389,
                        "src": "19547:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19534:21:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19566:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "19558:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1420,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "19558:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19558:10:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "19534:34:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1425,
                  "nodeType": "ExpressionStatement",
                  "src": "19534:34:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1426,
                          "name": "_elderSpirits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "19578:13:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$5555_storage_$",
                            "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                          }
                        },
                        "id": 1428,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1427,
                          "name": "elderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1389,
                          "src": "19592:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19578:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$5555_storage",
                          "typeString": "struct ElderSpirit storage ref"
                        }
                      },
                      "id": 1429,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "valid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5546,
                      "src": "19578:28:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 1430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19609:5:25",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "19578:36:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1432,
                  "nodeType": "ExpressionStatement",
                  "src": "19578:36:25"
                }
              ]
            },
            "documentation": {
              "id": 1387,
              "nodeType": "StructuredDocumentation",
              "src": "18901:135:25",
              "text": "@notice Burns the elder spirit\n @dev This will only be able to be called by the contract\n @param elderId The elder id"
            },
            "id": 1434,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1392,
                    "name": "elderId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1389,
                    "src": "19108:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1393,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1391,
                  "name": "isValidElderSpiritId",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 235,
                  "src": "19087:20:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "19087:29:25"
              }
            ],
            "name": "_burnElder",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1389,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1434,
                  "src": "19061:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1388,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19061:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19060:17:25"
            },
            "returnParameters": {
              "id": 1394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19117:0:25"
            },
            "scope": 2155,
            "src": "19041:580:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              5669
            ],
            "body": {
              "id": 1517,
              "nodeType": "Block",
              "src": "19861:662:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1445,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "19879:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1447,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1446,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1437,
                            "src": "19887:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "19879:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5610_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1448,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "valid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5557,
                        "src": "19879:21:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1444,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19871:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19871:30:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1450,
                  "nodeType": "ExpressionStatement",
                  "src": "19871:30:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1452,
                            "name": "_heroOwners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "19965:11:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 1454,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1453,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1437,
                            "src": "19977:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "19965:19:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1455,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6937,
                            "src": "19988:10:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 1456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19988:12:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "19965:35:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1451,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19957:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19957:44:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1459,
                  "nodeType": "ExpressionStatement",
                  "src": "19957:44:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1461,
                          "name": "_heroOwners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82,
                          "src": "20062:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 1463,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1462,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1437,
                          "src": "20074:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "20062:19:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1464,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1437,
                        "src": "20083:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20091:1:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 1460,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4921,
                      "src": "20056:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20056:37:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1467,
                  "nodeType": "ExpressionStatement",
                  "src": "20056:37:25"
                },
                {
                  "assignments": [
                    1469
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1469,
                      "mutability": "mutable",
                      "name": "elderId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1517,
                      "src": "20167:15:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1468,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20167:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1474,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1470,
                        "name": "_heroes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "20185:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                          "typeString": "mapping(uint256 => struct Hero storage ref)"
                        }
                      },
                      "id": 1472,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1471,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1437,
                        "src": "20193:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "20185:15:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Hero_$5610_storage",
                        "typeString": "struct Hero storage ref"
                      }
                    },
                    "id": 1473,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "elderId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 5567,
                    "src": "20185:23:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20167:41:25"
                },
                {
                  "assignments": [
                    1476
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1476,
                      "mutability": "mutable",
                      "name": "heroRound",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1517,
                      "src": "20218:17:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1475,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20218:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1481,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1477,
                        "name": "_heroes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "20238:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                          "typeString": "mapping(uint256 => struct Hero storage ref)"
                        }
                      },
                      "id": 1479,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1478,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1437,
                        "src": "20246:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "20238:15:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Hero_$5610_storage",
                        "typeString": "struct Hero storage ref"
                      }
                    },
                    "id": 1480,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "roundMinted",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 5565,
                    "src": "20238:27:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20218:47:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1482,
                          "name": "_roundElderSpawns",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "20275:17:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 1485,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1483,
                          "name": "heroRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1476,
                          "src": "20293:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "20275:28:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1486,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1484,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1469,
                        "src": "20304:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20275:37:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20357:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1487,
                              "name": "_roundElderSpawns",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92,
                              "src": "20315:17:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 1489,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1488,
                              "name": "heroRound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1476,
                              "src": "20333:9:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20315:28:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 1491,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1490,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1469,
                            "src": "20344:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20315:37:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4037,
                        "src": "20315:41:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20315:44:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20275:84:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1496,
                  "nodeType": "ExpressionStatement",
                  "src": "20275:84:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1497,
                        "name": "_heroOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "20411:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1499,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1498,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1437,
                        "src": "20423:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20411:19:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20441:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "20433:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1500,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20433:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20433:10:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "20411:32:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1505,
                  "nodeType": "ExpressionStatement",
                  "src": "20411:32:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1506,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "20453:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1508,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1507,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1437,
                          "src": "20461:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "20453:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5610_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1509,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "valid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5557,
                      "src": "20453:21:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 1510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "20477:5:25",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "20453:29:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1512,
                  "nodeType": "ExpressionStatement",
                  "src": "20453:29:25"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1514,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1437,
                        "src": "20509:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1513,
                      "name": "HeroBurned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 142,
                      "src": "20498:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20498:18:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1516,
                  "nodeType": "EmitStatement",
                  "src": "20493:23:25"
                }
              ]
            },
            "documentation": {
              "id": 1435,
              "nodeType": "StructuredDocumentation",
              "src": "19627:157:25",
              "text": "@notice Burns the hero for a refund\n @dev This will only be able to be called from the owner of the hero\n @param heroId The hero id to burn"
            },
            "functionSelector": "27e50b18",
            "id": 1518,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1441,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1437,
                    "src": "19853:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1442,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1440,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 254,
                  "src": "19841:11:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "19841:19:25"
              }
            ],
            "name": "burnHero",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1439,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "19832:8:25"
            },
            "parameters": {
              "id": 1438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1437,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1518,
                  "src": "19807:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19807:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19806:16:25"
            },
            "returnParameters": {
              "id": 1443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19861:0:25"
            },
            "scope": 2155,
            "src": "19789:734:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5777
            ],
            "body": {
              "id": 1553,
              "nodeType": "Block",
              "src": "20945:209:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1533,
                          "name": "round",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1521,
                          "src": "20963:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1534,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "20972:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "20963:21:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1532,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20955:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20955:30:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1537,
                  "nodeType": "ExpressionStatement",
                  "src": "20955:30:25"
                },
                {
                  "assignments": [
                    1539
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1539,
                      "mutability": "mutable",
                      "name": "heroAmount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1553,
                      "src": "21043:18:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1538,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21043:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1548,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21102:1:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1540,
                            "name": "_roundElderSpawns",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92,
                            "src": "21064:17:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                              "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                            }
                          },
                          "id": 1542,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1541,
                            "name": "round",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1521,
                            "src": "21082:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "21064:24:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 1544,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1543,
                          "name": "elderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1523,
                          "src": "21089:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "21064:33:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4015,
                      "src": "21064:37:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21064:40:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21043:61:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1550,
                        "name": "heroAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1539,
                        "src": "21136:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1549,
                      "name": "_priceFormula",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1602,
                      "src": "21122:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21122:25:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1531,
                  "id": 1552,
                  "nodeType": "Return",
                  "src": "21115:32:25"
                }
              ]
            },
            "documentation": {
              "id": 1519,
              "nodeType": "StructuredDocumentation",
              "src": "20529:240:25",
              "text": "@notice Gets the minting price of a hero based on specified elder spirit\n @param round The round of the hero to be minted\n @param elderId The elder id for which the hero will be based on\n @return The hero mint price"
            },
            "functionSelector": "f32c4974",
            "id": 1554,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1527,
                    "name": "elderId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1523,
                    "src": "20906:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1528,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1526,
                  "name": "isValidElderSpiritId",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 235,
                  "src": "20885:20:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "20885:29:25"
              }
            ],
            "name": "getHeroMintPrice",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1525,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "20868:8:25"
            },
            "parameters": {
              "id": 1524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1521,
                  "mutability": "mutable",
                  "name": "round",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1554,
                  "src": "20800:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1520,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20800:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1523,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1554,
                  "src": "20815:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1522,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20815:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20799:32:25"
            },
            "returnParameters": {
              "id": 1531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1530,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1554,
                  "src": "20932:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1529,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20932:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20931:9:25"
            },
            "scope": 2155,
            "src": "20774:380:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1601,
              "nodeType": "Block",
              "src": "21465:187:25",
              "statements": [
                {
                  "assignments": [
                    1563
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1563,
                      "mutability": "mutable",
                      "name": "price",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1601,
                      "src": "21475:13:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1562,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21475:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1564,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21475:13:25"
                },
                {
                  "assignments": [
                    1566
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1566,
                      "mutability": "mutable",
                      "name": "base",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1601,
                      "src": "21498:12:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1565,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21498:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1568,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "31",
                    "id": 1567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "21513:1:25",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21498:16:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1569,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1563,
                      "src": "21524:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 1580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21565:3:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1577,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21558:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "id": 1574,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3130",
                                    "id": 1572,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21546:2:25",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3138",
                                    "id": 1573,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21550:2:25",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_18_by_1",
                                      "typeString": "int_const 18"
                                    },
                                    "value": "18"
                                  },
                                  "src": "21546:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1570,
                                  "name": "newSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1557,
                                  "src": "21532:9:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1571,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4071,
                                "src": "21532:13:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1575,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21532:21:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4071,
                            "src": "21532:25:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21532:28:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4093,
                        "src": "21532:32:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21532:37:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21524:45:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1583,
                  "nodeType": "ExpressionStatement",
                  "src": "21524:45:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1584,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1563,
                      "src": "21579:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 1594,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21618:2:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "id": 1591,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3130",
                                    "id": 1589,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21606:2:25",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3138",
                                    "id": 1590,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21610:2:25",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_18_by_1",
                                      "typeString": "int_const 18"
                                    },
                                    "value": "18"
                                  },
                                  "src": "21606:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1587,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1566,
                                  "src": "21597:4:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1588,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4071,
                                "src": "21597:8:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1592,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21597:16:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4093,
                            "src": "21597:20:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21597:24:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1585,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1563,
                          "src": "21587:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4015,
                        "src": "21587:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21587:35:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21579:43:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1598,
                  "nodeType": "ExpressionStatement",
                  "src": "21579:43:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1599,
                    "name": "price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1563,
                    "src": "21640:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1561,
                  "id": 1600,
                  "nodeType": "Return",
                  "src": "21633:12:25"
                }
              ]
            },
            "documentation": {
              "id": 1555,
              "nodeType": "StructuredDocumentation",
              "src": "21160:226:25",
              "text": "@notice The bounding curve function that calculates price for the new supply\n @dev price = 0.02*(heroes minted) + 0.1\n @param newSupply The new supply after a burn or mint\n @return The calculated price"
            },
            "id": 1602,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_priceFormula",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1557,
                  "mutability": "mutable",
                  "name": "newSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1602,
                  "src": "21414:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1556,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21414:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21413:19:25"
            },
            "returnParameters": {
              "id": 1561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1560,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1602,
                  "src": "21456:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1559,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21456:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21455:9:25"
            },
            "scope": 2155,
            "src": "21391:261:25",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              5035
            ],
            "body": {
              "id": 1684,
              "nodeType": "Block",
              "src": "21941:483:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1624,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1605,
                        "src": "21978:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1625,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1607,
                        "src": "21988:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1626,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1609,
                        "src": "21994:2:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1627,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1612,
                        "src": "21998:3:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1628,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1615,
                        "src": "22003:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1629,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1617,
                        "src": "22012:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1621,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "21951:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_CryptoChampions_$2155",
                          "typeString": "contract super CryptoChampions"
                        }
                      },
                      "id": 1623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5035,
                      "src": "21951:26:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 1630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21951:66:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1631,
                  "nodeType": "ExpressionStatement",
                  "src": "21951:66:25"
                },
                {
                  "body": {
                    "id": 1682,
                    "nodeType": "Block",
                    "src": "22069:349:25",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1643,
                                "name": "ids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1612,
                                "src": "22172:3:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 1645,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1644,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1633,
                                "src": "22176:1:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "22172:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1646,
                              "name": "IN_GAME_CURRENCY_ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55,
                              "src": "22181:19:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "22172:28:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1648,
                                "name": "ids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1612,
                                "src": "22204:3:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 1650,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1649,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1633,
                                "src": "22208:1:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "22204:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1651,
                              "name": "MAX_NUMBER_OF_ELDERS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64,
                              "src": "22214:20:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "22204:30:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "22172:62:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1666,
                        "nodeType": "IfStatement",
                        "src": "22168:135:25",
                        "trueBody": {
                          "id": 1665,
                          "nodeType": "Block",
                          "src": "22236:67:25",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1663,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1654,
                                    "name": "_elderOwners",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 71,
                                    "src": "22254:12:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                      "typeString": "mapping(uint256 => address)"
                                    }
                                  },
                                  "id": 1658,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1655,
                                      "name": "ids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1612,
                                      "src": "22267:3:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 1657,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1656,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1633,
                                      "src": "22271:1:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "22267:6:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "22254:20:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1661,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1609,
                                      "src": "22285:2:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1660,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "22277:8:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_payable_$",
                                      "typeString": "type(address payable)"
                                    },
                                    "typeName": {
                                      "id": 1659,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "22277:8:25",
                                      "stateMutability": "payable",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 1662,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22277:11:25",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "22254:34:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1664,
                              "nodeType": "ExpressionStatement",
                              "src": "22254:34:25"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1667,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1612,
                              "src": "22320:3:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 1669,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1668,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1633,
                              "src": "22324:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "22320:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1670,
                            "name": "MAX_NUMBER_OF_ELDERS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "22329:20:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22320:29:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1681,
                        "nodeType": "IfStatement",
                        "src": "22316:92:25",
                        "trueBody": {
                          "id": 1680,
                          "nodeType": "Block",
                          "src": "22351:57:25",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1678,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1672,
                                    "name": "_heroOwners",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 82,
                                    "src": "22369:11:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                      "typeString": "mapping(uint256 => address)"
                                    }
                                  },
                                  "id": 1676,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1673,
                                      "name": "ids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1612,
                                      "src": "22381:3:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 1675,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1674,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1633,
                                      "src": "22385:1:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "22381:6:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "22369:19:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 1677,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1609,
                                  "src": "22391:2:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "22369:24:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1679,
                              "nodeType": "ExpressionStatement",
                              "src": "22369:24:25"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1636,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1633,
                      "src": "22048:1:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1637,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1612,
                        "src": "22052:3:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 1638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "22052:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22048:14:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1683,
                  "initializationExpression": {
                    "assignments": [
                      1633
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1633,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1683,
                        "src": "22033:9:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1632,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "22033:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1635,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22045:1:25",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "22033:13:25"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "22064:3:25",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1640,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1633,
                        "src": "22064:1:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1642,
                    "nodeType": "ExpressionStatement",
                    "src": "22064:3:25"
                  },
                  "nodeType": "ForStatement",
                  "src": "22028:390:25"
                }
              ]
            },
            "documentation": {
              "id": 1603,
              "nodeType": "StructuredDocumentation",
              "src": "21658:57:25",
              "text": "@dev Hook function called before every token transfer"
            },
            "id": 1685,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1619,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "21932:8:25"
            },
            "parameters": {
              "id": 1618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1605,
                  "mutability": "mutable",
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1685,
                  "src": "21759:16:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1604,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21759:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1607,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1685,
                  "src": "21785:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1606,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21785:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1609,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1685,
                  "src": "21807:10:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1608,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21807:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1612,
                  "mutability": "mutable",
                  "name": "ids",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1685,
                  "src": "21827:20:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1610,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21827:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1611,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "21827:9:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1615,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1685,
                  "src": "21857:24:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1613,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21857:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1614,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "21857:9:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1617,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1685,
                  "src": "21891:17:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1616,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "21891:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21749:165:25"
            },
            "returnParameters": {
              "id": 1620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21941:0:25"
            },
            "scope": 2155,
            "src": "21720:704:25",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              5786
            ],
            "body": {
              "id": 1711,
              "nodeType": "Block",
              "src": "22866:120:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1700,
                          "name": "round",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1688,
                          "src": "22884:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1701,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "22893:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "22884:21:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1699,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22876:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22876:30:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1704,
                  "nodeType": "ExpressionStatement",
                  "src": "22876:30:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1705,
                        "name": "_roundElderSpawns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "22946:17:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                        }
                      },
                      "id": 1707,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1706,
                        "name": "round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1688,
                        "src": "22964:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "22946:24:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 1709,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1708,
                      "name": "elderId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1690,
                      "src": "22971:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "22946:33:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1698,
                  "id": 1710,
                  "nodeType": "Return",
                  "src": "22939:40:25"
                }
              ]
            },
            "documentation": {
              "id": 1686,
              "nodeType": "StructuredDocumentation",
              "src": "22430:256:25",
              "text": "@notice Gets the amount of heroes spawn from the elder with the specified id during the specified round\n @param round The round the elder was created\n @param elderId The elder id\n @return The amount of heroes spawned from the elder"
            },
            "functionSelector": "59ca19d3",
            "id": 1712,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1694,
                    "name": "elderId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1690,
                    "src": "22827:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1695,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1693,
                  "name": "isValidElderSpiritId",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 235,
                  "src": "22806:20:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "22806:29:25"
              }
            ],
            "name": "getElderSpawnsAmount",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1692,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "22789:8:25"
            },
            "parameters": {
              "id": 1691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1688,
                  "mutability": "mutable",
                  "name": "round",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1712,
                  "src": "22721:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1687,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22721:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1690,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1712,
                  "src": "22736:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1689,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22736:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22720:32:25"
            },
            "returnParameters": {
              "id": 1698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1697,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1712,
                  "src": "22853:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1696,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22853:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22852:9:25"
            },
            "scope": 2155,
            "src": "22691:295:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1745,
              "nodeType": "Block",
              "src": "23124:191:25",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1721,
                          "name": "cost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1715,
                          "src": "23152:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1718,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "23138:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "23138:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4037,
                        "src": "23138:13:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23138:19:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23160:1:25",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "23138:23:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1744,
                  "nodeType": "IfStatement",
                  "src": "23134:175:25",
                  "trueBody": {
                    "id": 1743,
                    "nodeType": "Block",
                    "src": "23163:146:25",
                    "statements": [
                      {
                        "assignments": [
                          1726,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1726,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1743,
                            "src": "23178:12:25",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1725,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "23178:4:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 1738,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "",
                              "id": 1736,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23242:2:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1727,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "23196:3:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1728,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "23196:10:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 1729,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "23196:15:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1733,
                                    "name": "cost",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1715,
                                    "src": "23234:4:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1730,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "23220:3:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1731,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "23220:9:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1732,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4037,
                                  "src": "23220:13:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1734,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23220:19:25",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "23196:45:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23196:49:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23177:68:25"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1740,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1726,
                              "src": "23267:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1739,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "23259:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23259:16:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1742,
                        "nodeType": "ExpressionStatement",
                        "src": "23259:16:25"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1713,
              "nodeType": "StructuredDocumentation",
              "src": "22992:81:25",
              "text": "@notice Refunds the sender if they sent too much\n @param cost The cost"
            },
            "id": 1746,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_refundSender",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1715,
                  "mutability": "mutable",
                  "name": "cost",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1746,
                  "src": "23101:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1714,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23101:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23100:14:25"
            },
            "returnParameters": {
              "id": 1717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23124:0:25"
            },
            "scope": 2155,
            "src": "23078:237:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              5684
            ],
            "body": {
              "id": 1784,
              "nodeType": "Block",
              "src": "23802:268:25",
              "statements": [
                {
                  "assignments": [
                    1767
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1767,
                      "mutability": "mutable",
                      "name": "elderSpirit",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1784,
                      "src": "23812:30:25",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ElderSpirit_$5555_memory_ptr",
                        "typeString": "struct ElderSpirit"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1766,
                        "name": "ElderSpirit",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5555,
                        "src": "23812:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$5555_storage_ptr",
                          "typeString": "struct ElderSpirit"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1771,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1768,
                      "name": "_elderSpirits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "23845:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$5555_storage_$",
                        "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                      }
                    },
                    "id": 1770,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1769,
                      "name": "elderId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1749,
                      "src": "23859:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "23845:22:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ElderSpirit_$5555_storage",
                      "typeString": "struct ElderSpirit storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23812:55:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1772,
                          "name": "elderSpirit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1767,
                          "src": "23898:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ElderSpirit_$5555_memory_ptr",
                            "typeString": "struct ElderSpirit memory"
                          }
                        },
                        "id": 1773,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "valid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5546,
                        "src": "23898:17:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1774,
                          "name": "elderSpirit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1767,
                          "src": "23929:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ElderSpirit_$5555_memory_ptr",
                            "typeString": "struct ElderSpirit memory"
                          }
                        },
                        "id": 1775,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "raceId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5548,
                        "src": "23929:18:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1776,
                          "name": "elderSpirit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1767,
                          "src": "23961:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ElderSpirit_$5555_memory_ptr",
                            "typeString": "struct ElderSpirit memory"
                          }
                        },
                        "id": 1777,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "classId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5550,
                        "src": "23961:19:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1778,
                          "name": "elderSpirit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1767,
                          "src": "23994:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ElderSpirit_$5555_memory_ptr",
                            "typeString": "struct ElderSpirit memory"
                          }
                        },
                        "id": 1779,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "affinity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5552,
                        "src": "23994:20:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1780,
                          "name": "elderSpirit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1767,
                          "src": "24028:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ElderSpirit_$5555_memory_ptr",
                            "typeString": "struct ElderSpirit memory"
                          }
                        },
                        "id": 1781,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "affinityPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5554,
                        "src": "24028:25:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "id": 1782,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "23884:179:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_int256_$",
                      "typeString": "tuple(bool,uint256,uint256,string memory,int256)"
                    }
                  },
                  "functionReturnParameters": 1765,
                  "id": 1783,
                  "nodeType": "Return",
                  "src": "23877:186:25"
                }
              ]
            },
            "documentation": {
              "id": 1747,
              "nodeType": "StructuredDocumentation",
              "src": "23321:212:25",
              "text": "@notice Fetches the data of a single elder spirit\n @param elderId The id of the elder being searched for\n @return The elder's attributes in the following order (valid, raceId, classId, affinity)"
            },
            "functionSelector": "21c2f72a",
            "id": 1785,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1753,
                    "name": "elderId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1749,
                    "src": "23655:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1754,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1752,
                  "name": "isValidElderSpiritId",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 235,
                  "src": "23634:20:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "23634:29:25"
              }
            ],
            "name": "getElderSpirit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1751,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23617:8:25"
            },
            "parameters": {
              "id": 1750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1749,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1785,
                  "src": "23562:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1748,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23562:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23561:17:25"
            },
            "returnParameters": {
              "id": 1765,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1756,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1785,
                  "src": "23694:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1755,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "23694:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1758,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1785,
                  "src": "23712:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1757,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23712:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1760,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1785,
                  "src": "23733:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1759,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23733:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1762,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1785,
                  "src": "23754:13:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1761,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "23754:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1764,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1785,
                  "src": "23781:6:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1763,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23781:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23680:117:25"
            },
            "scope": 2155,
            "src": "23538:532:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5699
            ],
            "body": {
              "id": 1827,
              "nodeType": "Block",
              "src": "24540:228:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1805,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "24571:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1807,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1806,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1788,
                            "src": "24579:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24571:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5610_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1808,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "valid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5557,
                        "src": "24571:21:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1809,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "24606:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1811,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1810,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1788,
                            "src": "24614:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24606:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5610_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1812,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "affinity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5561,
                        "src": "24606:24:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1813,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "24644:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1815,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1814,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1788,
                            "src": "24652:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24644:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5610_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1816,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "affinityPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5563,
                        "src": "24644:29:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1817,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "24687:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1819,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1818,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1788,
                            "src": "24695:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24687:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5610_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1820,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "roundMinted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5565,
                        "src": "24687:27:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1821,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "24728:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1823,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1822,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1788,
                            "src": "24736:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24728:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5610_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1824,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "elderId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5567,
                        "src": "24728:23:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1825,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "24557:204:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_string_storage_$_t_int256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(bool,string storage ref,int256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 1804,
                  "id": 1826,
                  "nodeType": "Return",
                  "src": "24550:211:25"
                }
              ]
            },
            "documentation": {
              "id": 1786,
              "nodeType": "StructuredDocumentation",
              "src": "24076:138:25",
              "text": "@notice Hero getter function\n @param heroId The hero id\n @return valid, affinity, affinity price, round minted, elder id"
            },
            "functionSelector": "2ee1f0a0",
            "id": 1828,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1792,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1788,
                    "src": "24327:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1793,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1791,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 254,
                  "src": "24315:11:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "24315:19:25"
              }
            ],
            "name": "getHeroGameData",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1790,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24298:8:25"
            },
            "parameters": {
              "id": 1789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1788,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1828,
                  "src": "24244:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24244:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24243:16:25"
            },
            "returnParameters": {
              "id": 1804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1795,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1828,
                  "src": "24365:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1794,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "24365:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1797,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1828,
                  "src": "24392:13:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1796,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "24392:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1799,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1828,
                  "src": "24431:6:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1798,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24431:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1801,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1828,
                  "src": "24469:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1800,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24469:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1803,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1828,
                  "src": "24506:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1802,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24506:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24351:184:25"
            },
            "scope": 2155,
            "src": "24219:549:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5712
            ],
            "body": {
              "id": 1864,
              "nodeType": "Block",
              "src": "25176:123:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1846,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "25194:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1848,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1847,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1831,
                            "src": "25202:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25194:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5610_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1849,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5559,
                        "src": "25194:20:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1850,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "25216:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1852,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1851,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1831,
                            "src": "25224:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25216:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5610_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1853,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "raceId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5569,
                        "src": "25216:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1854,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "25240:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1856,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1855,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1831,
                            "src": "25248:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25240:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5610_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1857,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "classId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5571,
                        "src": "25240:23:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1858,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "25265:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1860,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1859,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1831,
                            "src": "25273:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25265:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5610_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1861,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "appearance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5573,
                        "src": "25265:26:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 1862,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "25193:99:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_uint256_$_t_uint256_$_t_uint8_$",
                      "typeString": "tuple(string storage ref,uint256,uint256,uint8)"
                    }
                  },
                  "functionReturnParameters": 1845,
                  "id": 1863,
                  "nodeType": "Return",
                  "src": "25186:106:25"
                }
              ]
            },
            "documentation": {
              "id": 1829,
              "nodeType": "StructuredDocumentation",
              "src": "24774:118:25",
              "text": "@notice Hero getter function\n @param heroId The hero id\n @return name, race id, class id, appearance"
            },
            "functionSelector": "46e6f13d",
            "id": 1865,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1835,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1831,
                    "src": "25004:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1836,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1834,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 254,
                  "src": "24992:11:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "24992:19:25"
              }
            ],
            "name": "getHeroVisuals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1833,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24975:8:25"
            },
            "parameters": {
              "id": 1832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1831,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1865,
                  "src": "24921:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1830,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24921:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24920:16:25"
            },
            "returnParameters": {
              "id": 1845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1838,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1865,
                  "src": "25042:13:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1837,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "25042:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1840,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1865,
                  "src": "25077:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1839,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25077:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1842,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1865,
                  "src": "25109:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1841,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25109:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1844,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1865,
                  "src": "25142:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1843,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "25142:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25028:143:25"
            },
            "scope": 2155,
            "src": "24897:402:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5725
            ],
            "body": {
              "id": 1901,
              "nodeType": "Block",
              "src": "25698:120:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1883,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "25716:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1885,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1884,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1868,
                            "src": "25724:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25716:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5610_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1886,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "trait1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5575,
                        "src": "25716:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1887,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "25740:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1889,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1888,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1868,
                            "src": "25748:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25740:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5610_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1890,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "trait2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5577,
                        "src": "25740:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1891,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "25764:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1893,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1892,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1868,
                            "src": "25772:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25764:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5610_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1894,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "skill1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5579,
                        "src": "25764:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1895,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "25788:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1897,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1896,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1868,
                            "src": "25796:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25788:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5610_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1898,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "skill2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5581,
                        "src": "25788:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 1899,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "25715:96:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(uint8,uint8,uint8,uint8)"
                    }
                  },
                  "functionReturnParameters": 1882,
                  "id": 1900,
                  "nodeType": "Return",
                  "src": "25708:103:25"
                }
              ]
            },
            "documentation": {
              "id": 1866,
              "nodeType": "StructuredDocumentation",
              "src": "25305:117:25",
              "text": "@notice Hero getter function\n @param heroId The hero id\n @return trait 1, trait 2, skill 1, skill 2"
            },
            "functionSelector": "8423b077",
            "id": 1902,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1872,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1868,
                    "src": "25539:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1873,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1871,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 254,
                  "src": "25527:11:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "25527:19:25"
              }
            ],
            "name": "getHeroTraitsSkills",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1870,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25510:8:25"
            },
            "parameters": {
              "id": 1869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1868,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1902,
                  "src": "25456:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1867,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25456:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25455:16:25"
            },
            "returnParameters": {
              "id": 1882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1875,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1902,
                  "src": "25577:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1874,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "25577:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1877,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1902,
                  "src": "25607:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1876,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "25607:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1879,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1902,
                  "src": "25637:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1878,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "25637:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1881,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1902,
                  "src": "25667:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1880,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "25667:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25563:130:25"
            },
            "scope": 2155,
            "src": "25427:391:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5738
            ],
            "body": {
              "id": 1938,
              "nodeType": "Block",
              "src": "26221:188:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1920,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "26252:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1922,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1921,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1905,
                            "src": "26260:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26252:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5610_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1923,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "alignment",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5583,
                        "src": "26252:25:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1924,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "26291:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1926,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1925,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1905,
                            "src": "26299:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26291:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5610_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1927,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "background",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5585,
                        "src": "26291:26:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1928,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "26331:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1930,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1929,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1905,
                            "src": "26339:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26331:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5610_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1931,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hometown",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5587,
                        "src": "26331:24:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1932,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "26369:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1934,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1933,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1905,
                            "src": "26377:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26369:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5610_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1935,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "weather",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5589,
                        "src": "26369:23:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 1936,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "26238:164:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(uint8,uint8,uint8,uint8)"
                    }
                  },
                  "functionReturnParameters": 1919,
                  "id": 1937,
                  "nodeType": "Return",
                  "src": "26231:171:25"
                }
              ]
            },
            "documentation": {
              "id": 1903,
              "nodeType": "StructuredDocumentation",
              "src": "25824:123:25",
              "text": "@notice Hero getter function\n @param heroId The hero id\n @return alignment, background, hometown, weather"
            },
            "functionSelector": "4c2ed018",
            "id": 1939,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1909,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1905,
                    "src": "26056:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1910,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1908,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 254,
                  "src": "26044:11:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "26044:19:25"
              }
            ],
            "name": "getHeroLore",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1907,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "26027:8:25"
            },
            "parameters": {
              "id": 1906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1905,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1939,
                  "src": "25973:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1904,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25973:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25972:16:25"
            },
            "returnParameters": {
              "id": 1919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1912,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1939,
                  "src": "26094:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1911,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "26094:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1914,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1939,
                  "src": "26126:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1913,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "26126:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1916,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1939,
                  "src": "26159:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1915,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "26159:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1918,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1939,
                  "src": "26190:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1917,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "26190:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26080:136:25"
            },
            "scope": 2155,
            "src": "25952:457:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5751
            ],
            "body": {
              "id": 1975,
              "nodeType": "Block",
              "src": "26773:114:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1957,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "26791:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1959,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1958,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1942,
                            "src": "26799:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26791:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5610_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1960,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "level",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5591,
                        "src": "26791:21:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1961,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "26814:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1963,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1962,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1942,
                            "src": "26822:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26814:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5610_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1964,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5593,
                        "src": "26814:18:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1965,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "26834:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1967,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1966,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1942,
                            "src": "26842:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26834:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5610_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1968,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mana",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5595,
                        "src": "26834:20:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1969,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "26856:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1971,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1970,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1942,
                            "src": "26864:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26856:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5610_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1972,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stamina",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5597,
                        "src": "26856:23:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 1973,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "26790:90:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(uint8,uint8,uint8,uint8)"
                    }
                  },
                  "functionReturnParameters": 1956,
                  "id": 1974,
                  "nodeType": "Return",
                  "src": "26783:97:25"
                }
              ]
            },
            "documentation": {
              "id": 1940,
              "nodeType": "StructuredDocumentation",
              "src": "26415:98:25",
              "text": "@notice Hero getter function\n @param heroId The hero id\n @return level, hp, mana"
            },
            "functionSelector": "48772d79",
            "id": 1976,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1946,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1942,
                    "src": "26624:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1947,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1945,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 254,
                  "src": "26612:11:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "26612:19:25"
              }
            ],
            "name": "getHeroVitals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1944,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "26595:8:25"
            },
            "parameters": {
              "id": 1943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1942,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1976,
                  "src": "26541:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1941,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26541:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26540:16:25"
            },
            "returnParameters": {
              "id": 1956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1949,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1976,
                  "src": "26662:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1948,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "26662:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1951,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1976,
                  "src": "26690:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1950,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "26690:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1953,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1976,
                  "src": "26715:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1952,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "26715:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1955,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1976,
                  "src": "26742:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1954,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "26742:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26648:120:25"
            },
            "scope": 2155,
            "src": "26518:369:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5768
            ],
            "body": {
              "id": 2024,
              "nodeType": "Block",
              "src": "27392:269:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1998,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "27423:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 2000,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1999,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1979,
                            "src": "27431:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27423:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5610_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 2001,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "strength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5599,
                        "src": "27423:24:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2002,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "27461:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 2004,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2003,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1979,
                            "src": "27469:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27461:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5610_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 2005,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "dexterity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5601,
                        "src": "27461:25:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2006,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "27500:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 2008,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2007,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1979,
                            "src": "27508:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27500:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5610_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 2009,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "constitution",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5603,
                        "src": "27500:28:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2010,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "27542:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 2012,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2011,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1979,
                            "src": "27550:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27542:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5610_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 2013,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "intelligence",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5605,
                        "src": "27542:28:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2014,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "27584:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 2016,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2015,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1979,
                            "src": "27592:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27584:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5610_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 2017,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "wisdom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5607,
                        "src": "27584:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2018,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "27620:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5610_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 2020,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2019,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1979,
                            "src": "27628:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27620:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5610_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 2021,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "charisma",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5609,
                        "src": "27620:24:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 2022,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "27409:245:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(uint8,uint8,uint8,uint8,uint8,uint8)"
                    }
                  },
                  "functionReturnParameters": 1997,
                  "id": 2023,
                  "nodeType": "Return",
                  "src": "27402:252:25"
                }
              ]
            },
            "documentation": {
              "id": 1977,
              "nodeType": "StructuredDocumentation",
              "src": "26893:157:25",
              "text": "@notice Hero getter function\n @param heroId The hero id\n @return stamina, strength, dexterity, constitution, intelligence, wisdom, charisma"
            },
            "functionSelector": "835a4398",
            "id": 2025,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1983,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1979,
                    "src": "27160:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1984,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1982,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 254,
                  "src": "27148:11:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "27148:19:25"
              }
            ],
            "name": "getHeroStats",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1981,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "27131:8:25"
            },
            "parameters": {
              "id": 1980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1979,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2025,
                  "src": "27077:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1978,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27077:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "27076:16:25"
            },
            "returnParameters": {
              "id": 1997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1986,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2025,
                  "src": "27198:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1985,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "27198:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1988,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2025,
                  "src": "27229:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1987,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "27229:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1990,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2025,
                  "src": "27261:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1989,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "27261:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1992,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2025,
                  "src": "27296:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1991,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "27296:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1994,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2025,
                  "src": "27331:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1993,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "27331:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1996,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2025,
                  "src": "27360:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1995,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "27360:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "27184:203:25"
            },
            "scope": 2155,
            "src": "27055:606:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5793
            ],
            "body": {
              "id": 2038,
              "nodeType": "Block",
              "src": "27943:45:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2034,
                      "name": "_affinities",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "27960:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 2036,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2035,
                      "name": "affinity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2028,
                      "src": "27972:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "27960:21:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2033,
                  "id": 2037,
                  "nodeType": "Return",
                  "src": "27953:28:25"
                }
              ]
            },
            "documentation": {
              "id": 2026,
              "nodeType": "StructuredDocumentation",
              "src": "27667:172:25",
              "text": "@notice Fetches the feed address for a given affinity\n @param affinity The affinity being searched for\n @return The address of the affinity's feed address"
            },
            "functionSelector": "26d4d15a",
            "id": 2039,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAffinityFeedAddress",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2030,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "27916:8:25"
            },
            "parameters": {
              "id": 2029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2028,
                  "mutability": "mutable",
                  "name": "affinity",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2039,
                  "src": "27876:24:25",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2027,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "27876:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "27875:26:25"
            },
            "returnParameters": {
              "id": 2033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2032,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2039,
                  "src": "27934:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2031,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27934:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "27933:9:25"
            },
            "scope": 2155,
            "src": "27844:144:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5803
            ],
            "body": {
              "id": 2048,
              "nodeType": "Block",
              "src": "28189:36:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2046,
                    "name": "eldersInGame",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 67,
                    "src": "28206:12:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2045,
                  "id": 2047,
                  "nodeType": "Return",
                  "src": "28199:19:25"
                }
              ]
            },
            "documentation": {
              "id": 2040,
              "nodeType": "StructuredDocumentation",
              "src": "27994:119:25",
              "text": "@notice Fetches the number of elders currently in the game\n @return The current number of elders in the game"
            },
            "functionSelector": "4c52b2a9",
            "id": 2049,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNumEldersInGame",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2042,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "28162:8:25"
            },
            "parameters": {
              "id": 2041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28145:2:25"
            },
            "returnParameters": {
              "id": 2045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2044,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2049,
                  "src": "28180:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2043,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28180:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "28179:9:25"
            },
            "scope": 2155,
            "src": "28118:107:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5798
            ],
            "body": {
              "id": 2064,
              "nodeType": "Block",
              "src": "28504:63:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2061,
                        "name": "winningAffinity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2052,
                        "src": "28544:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2058,
                        "name": "winningAffinitiesByRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "28514:24:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 2060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "28514:29:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$__$",
                        "typeString": "function (string storage ref)"
                      }
                    },
                    "id": 2062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28514:46:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2063,
                  "nodeType": "ExpressionStatement",
                  "src": "28514:46:25"
                }
              ]
            },
            "documentation": {
              "id": 2050,
              "nodeType": "StructuredDocumentation",
              "src": "28231:175:25",
              "text": "@notice Declares a winning affinity for a round\n @dev This can only be called by a game admin contract\n @param winningAffinity The affinity that won the game"
            },
            "functionSelector": "9e315008",
            "id": 2065,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2056,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2055,
                  "name": "onlyGameAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 262,
                  "src": "28490:13:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "28490:13:25"
              }
            ],
            "name": "declareRoundWinner",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2054,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "28481:8:25"
            },
            "parameters": {
              "id": 2053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2052,
                  "mutability": "mutable",
                  "name": "winningAffinity",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2065,
                  "src": "28439:31:25",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2051,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "28439:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "28438:33:25"
            },
            "returnParameters": {
              "id": 2057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28504:0:25"
            },
            "scope": 2155,
            "src": "28411:156:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5806
            ],
            "body": {
              "id": 2108,
              "nodeType": "Block",
              "src": "28736:350:25",
              "statements": [
                {
                  "assignments": [
                    2073
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2073,
                      "mutability": "mutable",
                      "name": "priceWarsFactoryAddress",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2108,
                      "src": "28746:31:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2072,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "28746:7:25",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2078,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2076,
                        "name": "PRICE_WARS_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "28816:13:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2074,
                        "name": "_minigameFactoryRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "28780:24:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMinigameFactoryRegistry_$5840",
                          "typeString": "contract IMinigameFactoryRegistry"
                        }
                      },
                      "id": 2075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getFactory",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5839,
                      "src": "28780:35:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) external returns (address)"
                      }
                    },
                    "id": 2077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28780:50:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28746:84:25"
                },
                {
                  "assignments": [
                    2080
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2080,
                      "mutability": "mutable",
                      "name": "priceWarsFactory",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2108,
                      "src": "28840:33:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceWarsFactory_$5542",
                        "typeString": "contract PriceWarsFactory"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2079,
                        "name": "PriceWarsFactory",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5542,
                        "src": "28840:16:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceWarsFactory_$5542",
                          "typeString": "contract PriceWarsFactory"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2084,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2082,
                        "name": "priceWarsFactoryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2073,
                        "src": "28893:23:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2081,
                      "name": "PriceWarsFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5542,
                      "src": "28876:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_PriceWarsFactory_$5542_$",
                        "typeString": "type(contract PriceWarsFactory)"
                      }
                    },
                    "id": 2083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28876:41:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceWarsFactory_$5542",
                      "typeString": "contract PriceWarsFactory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28840:77:25"
                },
                {
                  "assignments": [
                    2086
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2086,
                      "mutability": "mutable",
                      "name": "priceWar",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2108,
                      "src": "28927:18:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceWars_$5504",
                        "typeString": "contract PriceWars"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2085,
                        "name": "PriceWars",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5504,
                        "src": "28927:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceWars_$5504",
                          "typeString": "contract PriceWars"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2094,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2091,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "28988:4:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CryptoChampions_$2155",
                              "typeString": "contract CryptoChampions"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CryptoChampions_$2155",
                              "typeString": "contract CryptoChampions"
                            }
                          ],
                          "id": 2090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "28980:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2089,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "28980:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28980:13:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2087,
                        "name": "priceWarsFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2080,
                        "src": "28948:16:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceWarsFactory_$5542",
                          "typeString": "contract PriceWarsFactory"
                        }
                      },
                      "id": 2088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createPriceWar",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5541,
                      "src": "28948:31:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_contract$_PriceWars_$5504_$",
                        "typeString": "function (address) external returns (contract PriceWars)"
                      }
                    },
                    "id": 2093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28948:46:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceWars_$5504",
                      "typeString": "contract PriceWars"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28927:67:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2096,
                        "name": "ROLE_GAME_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "29014:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2099,
                            "name": "priceWar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2086,
                            "src": "29039:8:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PriceWars_$5504",
                              "typeString": "contract PriceWars"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PriceWars_$5504",
                              "typeString": "contract PriceWars"
                            }
                          ],
                          "id": 2098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "29031:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2097,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "29031:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29031:17:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2095,
                      "name": "grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3697,
                      "src": "29004:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 2101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29004:45:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2102,
                  "nodeType": "ExpressionStatement",
                  "src": "29004:45:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2103,
                        "name": "priceWar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2086,
                        "src": "29059:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceWars_$5504",
                          "typeString": "contract PriceWars"
                        }
                      },
                      "id": 2105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startGame",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6482,
                      "src": "29059:18:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 2106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29059:20:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2107,
                  "nodeType": "ExpressionStatement",
                  "src": "29059:20:25"
                }
              ]
            },
            "documentation": {
              "id": 2066,
              "nodeType": "StructuredDocumentation",
              "src": "28573:101:25",
              "text": "@notice Starts a new price game\n @dev This can only be called by the admin of the contract"
            },
            "functionSelector": "fbc120f9",
            "id": 2109,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2070,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2069,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 270,
                  "src": "28726:9:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "28726:9:25"
              }
            ],
            "name": "startNewPriceGame",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2068,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "28717:8:25"
            },
            "parameters": {
              "id": 2067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28705:2:25"
            },
            "returnParameters": {
              "id": 2071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28736:0:25"
            },
            "scope": 2155,
            "src": "28679:407:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5813
            ],
            "body": {
              "id": 2130,
              "nodeType": "Block",
              "src": "29331:111:25",
              "statements": [
                {
                  "assignments": [
                    2119
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2119,
                      "mutability": "mutable",
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2130,
                      "src": "29341:17:25",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2118,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "29341:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2120,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29341:17:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2122,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "29385:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "29385:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2124,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2112,
                        "src": "29397:2:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2125,
                        "name": "IN_GAME_CURRENCY_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "29401:19:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2126,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2114,
                        "src": "29422:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2127,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2119,
                        "src": "29430:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2121,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4513,
                      "src": "29368:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 2128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29368:67:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2129,
                  "nodeType": "ExpressionStatement",
                  "src": "29368:67:25"
                }
              ]
            },
            "documentation": {
              "id": 2110,
              "nodeType": "StructuredDocumentation",
              "src": "29092:158:25",
              "text": "@notice Transfers in game currency tokens from one address to another\n @param to The receiving address\n @param amount The amount to transfer"
            },
            "functionSelector": "26f7af4f",
            "id": 2131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferInGameTokens",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2116,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "29322:8:25"
            },
            "parameters": {
              "id": 2115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2112,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2131,
                  "src": "29285:10:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29285:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2114,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2131,
                  "src": "29297:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29297:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "29284:28:25"
            },
            "returnParameters": {
              "id": 2117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29331:0:25"
            },
            "scope": 2155,
            "src": "29255:187:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5822
            ],
            "body": {
              "id": 2153,
              "nodeType": "Block",
              "src": "29891:105:25",
              "statements": [
                {
                  "assignments": [
                    2143
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2143,
                      "mutability": "mutable",
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2153,
                      "src": "29901:17:25",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2142,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "29901:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2144,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29901:17:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2146,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2134,
                        "src": "29945:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2147,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2136,
                        "src": "29951:2:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2148,
                        "name": "IN_GAME_CURRENCY_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "29955:19:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2149,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2138,
                        "src": "29976:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2150,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2143,
                        "src": "29984:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2145,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4513,
                      "src": "29928:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 2151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29928:61:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2152,
                  "nodeType": "ExpressionStatement",
                  "src": "29928:61:25"
                }
              ]
            },
            "documentation": {
              "id": 2132,
              "nodeType": "StructuredDocumentation",
              "src": "29448:309:25",
              "text": "@notice Transfers in game currency tokens from one address to another.\n @param from The sending address.  Note that the sender must be authorized to transfer funds if the sender is different from the from address.\n @param to The receiving address\n @param amount The amount to transfer"
            },
            "functionSelector": "b9280067",
            "id": 2154,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegatedTransferInGameTokens",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2140,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "29882:8:25"
            },
            "parameters": {
              "id": 2139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2134,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2154,
                  "src": "29810:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29810:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2136,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2154,
                  "src": "29832:10:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29832:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2138,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2154,
                  "src": "29852:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29852:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "29800:72:25"
            },
            "returnParameters": {
              "id": 2141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29891:0:25"
            },
            "scope": 2155,
            "src": "29762:234:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2156,
        "src": "743:29255:25"
      }
    ],
    "src": "39:29960:25"
  },
  "bytecode": "60c060405260006007556000600a553480156200001b57600080fd5b506040516200594f3803806200594f833981810160405260808110156200004157600080fd5b5080516020808301516040808501516060909501518151808301909252600382526275726960e81b9382019390935292939092909190839083906200008d6301ffc9a760e01b620001e0565b620000988162000268565b620000aa636cdb3d1360e11b620001e0565b620000bc6303a24d0760e21b620001e0565b506001600160601b0319606092831b811660a052911b16608052620000f16000805160206200592f8339815191528062000281565b6200011b6000805160206200590f8339815191526000805160206200592f83398151915262000281565b620001567fae0c232b87105e0a8134f8b92146dcd1d99373d32394be9d70f700f90b3a3db36000805160206200592f83398151915262000281565b620001716000805160206200592f83398151915233620002d3565b6200018c6000805160206200590f83398151915233620002df565b6703c2c9106e218000600e556000600f556006805460ff19169055601293909355505067016345785d8a0000601355601780546001600160a01b0319166001600160a01b039092169190911790556200051e565b6001600160e01b0319808216141562000240576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152600160208190526040909120805460ff19169091179055565b80516200027d90600490602084019062000482565b5050565b600082815260208190526040808220600201549051839285917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a460009182526020829052604090912060020155565b6200027d828262000343565b600082815260208190526040902060020154620003069062000300620003bc565b620003c0565b620002d35760405162461bcd60e51b815260040180806020018281038252602f815260200180620058e0602f913960400191505060405180910390fd5b60008281526020818152604090912062000368918390620034ad620003ed821b17901c565b156200027d5762000378620003bc565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b3390565b6000828152602081815260408220620003e4918490620034c262000404821b17901c565b90505b92915050565b6000620003e4836001600160a01b0384166200041b565b6000620003e4836001600160a01b0384166200046a565b60006200042983836200046a565b6200046157508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620003e7565b506000620003e7565b60009081526001919091016020526040902054151590565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620004c557805160ff1916838001178555620004f5565b82800160010185558215620004f5579182015b82811115620004f5578251825591602001919060010190620004d8565b506200050392915062000507565b5090565b5b8082111562000503576000815560010162000508565b60805160601c60a05160601c61538e6200055260003980612c4852806149ea525080613e1e52806149bb525061538e6000f3fe6080604052600436106102c85760003560e01c806379935fe011610175578063a4aeec53116100dc578063d547741f11610095578063e985e9c51161006f578063e985e9c5146111e2578063f242432a1461121d578063f32c4974146112f3578063fbc120f914611323576102c8565b8063d547741f14611155578063e3e983821461118e578063e5b0a993146111b8576102c8565b8063a4aeec531461107c578063b928006714611091578063bf61211f146110d4578063c03afb59146110e9578063ca15c87314611116578063caab7ef814611140576102c8565b806391d148541161012e57806391d1485414610ec457806394985ddd14610efd5780639d5b82c014610f2d5780639e31500814610fb1578063a217fddf1461102c578063a22cb46514611041576102c8565b806379935fe014610dc4578063835a439814610dd95780638423b07714610e405780638a19c8bc14610e6a5780639010d07c14610e7f57806390ded47e14610eaf576102c8565b80632efb8874116102345780634c2ed018116101ed57806356b4d760116101c757806356b4d76014610d1657806359ca19d314610d405780636de5135314610d7057806372eda5bb14610d9a576102c8565b80634c2ed01814610b575780634c52b2a914610b815780634e1273f414610b96576102c8565b80632efb8874146108e35780632f2ff15d1461095e57806336568abe1461099757806346e6f13d146109d057806348772d7914610a8a578063498e821914610ae2576102c8565b8063248a9ca311610286578063248a9ca31461056f57806326d4d15a1461059957806326f7af4f1461063057806327e50b181461066b5780632eb2c2d6146106955780632ee1f0a014610863576102c8565b8062fdd58e146102cd57806301ffc9a714610318578063055ad42e146103605780630e89341c146103965780630fbea8411461043557806321c2f72a146104af575b600080fd5b3480156102d957600080fd5b50610306600480360360408110156102f057600080fd5b506001600160a01b038135169060200135611338565b60408051918252519081900360200190f35b34801561032457600080fd5b5061034c6004803603602081101561033b57600080fd5b50356001600160e01b0319166113aa565b604080519115158252519081900360200190f35b34801561036c57600080fd5b506103756113cd565b6040518082600181111561038557fe5b815260200191505060405180910390f35b3480156103a257600080fd5b506103c0600480360360208110156103b957600080fd5b50356113d6565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103fa5781810151838201526020016103e2565b50505050905090810190601f1680156104275780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103066004803603606081101561044b57600080fd5b813591602081013591810190606081016040820135600160201b81111561047157600080fd5b82018360208201111561048357600080fd5b803590602001918460018302840111600160201b831117156104a457600080fd5b50909250905061146e565b3480156104bb57600080fd5b506104d9600480360360208110156104d257600080fd5b503561174d565b60405180861515815260200185815260200184815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610530578181015183820152602001610518565b50505050905090810190601f16801561055d5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b34801561057b57600080fd5b506103066004803603602081101561059257600080fd5b503561187b565b3480156105a557600080fd5b50610614600480360360208110156105bc57600080fd5b810190602081018135600160201b8111156105d657600080fd5b8201836020820111156105e857600080fd5b803590602001918460018302840111600160201b8311171561060957600080fd5b509092509050611890565b604080516001600160a01b039092168252519081900360200190f35b34801561063c57600080fd5b506106696004803603604081101561065357600080fd5b506001600160a01b0381351690602001356118ca565b005b34801561067757600080fd5b506106696004803603602081101561068e57600080fd5b50356118df565b3480156106a157600080fd5b50610669600480360360a08110156106b857600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b8111156106eb57600080fd5b8201836020820111156106fd57600080fd5b803590602001918460208302840111600160201b8311171561071e57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561076d57600080fd5b82018360208201111561077f57600080fd5b803590602001918460208302840111600160201b831117156107a057600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156107ef57600080fd5b82018360208201111561080157600080fd5b803590602001918460018302840111600160201b8311171561082257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611a2b945050505050565b34801561086f57600080fd5b5061088d6004803603602081101561088657600080fd5b5035611d2e565b604051808615158152602001806020018581526020018481526020018381526020018281038252868181518152602001915080519060200190808383600083811015610530578181015183820152602001610518565b3480156108ef57600080fd5b506106696004803603602081101561090657600080fd5b810190602081018135600160201b81111561092057600080fd5b82018360208201111561093257600080fd5b803590602001918460018302840111600160201b8311171561095357600080fd5b509092509050611e30565b34801561096a57600080fd5b506106696004803603604081101561098157600080fd5b50803590602001356001600160a01b0316611e4b565b3480156109a357600080fd5b50610669600480360360408110156109ba57600080fd5b50803590602001356001600160a01b0316611eb3565b3480156109dc57600080fd5b506109fa600480360360208110156109f357600080fd5b5035611f14565b60405180806020018581526020018481526020018360ff168152602001828103825286818151815260200191508051906020019080838360005b83811015610a4c578181015183820152602001610a34565b50505050905090810190601f168015610a795780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b348015610a9657600080fd5b50610ab460048036036020811015610aad57600080fd5b5035612011565b6040805160ff9586168152938516602085015291841683830152909216606082015290519081900360800190f35b61030660048036036040811015610af857600080fd5b81359190810190604081016020820135600160201b811115610b1957600080fd5b820183602082011115610b2b57600080fd5b803590602001918460018302840111600160201b83111715610b4c57600080fd5b509092509050612083565b348015610b6357600080fd5b50610ab460048036036020811015610b7a57600080fd5b50356127db565b348015610b8d57600080fd5b50610306612852565b348015610ba257600080fd5b50610cc660048036036040811015610bb957600080fd5b810190602081018135600160201b811115610bd357600080fd5b820183602082011115610be557600080fd5b803590602001918460208302840111600160201b83111715610c0657600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610c5557600080fd5b820183602082011115610c6757600080fd5b803590602001918460208302840111600160201b83111715610c8857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550612859945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610d02578181015183820152602001610cea565b505050509050019250505060405180910390f35b348015610d2257600080fd5b5061061460048036036020811015610d3957600080fd5b5035612945565b348015610d4c57600080fd5b5061030660048036036040811015610d6357600080fd5b50803590602001356129ae565b348015610d7c57600080fd5b506103c060048036036020811015610d9357600080fd5b50356129f9565b348015610da657600080fd5b5061061460048036036020811015610dbd57600080fd5b5035612a9f565b348015610dd057600080fd5b50610306612afa565b348015610de557600080fd5b50610e0360048036036020811015610dfc57600080fd5b5035612b00565b6040805160ff978816815295871660208701529386168585015291851660608501528416608084015290921660a082015290519081900360c00190f35b348015610e4c57600080fd5b50610ab460048036036020811015610e6357600080fd5b5035612b8c565b348015610e7657600080fd5b50610306612bfb565b348015610e8b57600080fd5b5061061460048036036040811015610ea257600080fd5b5080359060200135612c01565b348015610ebb57600080fd5b50610306612c20565b348015610ed057600080fd5b5061034c60048036036040811015610ee757600080fd5b50803590602001356001600160a01b0316612c25565b348015610f0957600080fd5b5061066960048036036040811015610f2057600080fd5b5080359060200135612c3d565b348015610f3957600080fd5b5061066960048036036040811015610f5057600080fd5b810190602081018135600160201b811115610f6a57600080fd5b820183602082011115610f7c57600080fd5b803590602001918460018302840111600160201b83111715610f9d57600080fd5b9193509150356001600160a01b0316612cc4565b348015610fbd57600080fd5b5061066960048036036020811015610fd457600080fd5b810190602081018135600160201b811115610fee57600080fd5b82018360208201111561100057600080fd5b803590602001918460018302840111600160201b8311171561102157600080fd5b509092509050612d66565b34801561103857600080fd5b50610306612dcc565b34801561104d57600080fd5b506106696004803603604081101561106457600080fd5b506001600160a01b0381351690602001351515612dd1565b34801561108857600080fd5b50610669612ec0565b34801561109d57600080fd5b50610669600480360360608110156110b457600080fd5b506001600160a01b03813581169160208101359091169060400135612f56565b3480156110e057600080fd5b50610306612f66565b3480156110f557600080fd5b506106696004803603602081101561110c57600080fd5b503560ff16612f6c565b34801561112257600080fd5b506103066004803603602081101561113957600080fd5b5035612fa3565b34801561114c57600080fd5b50610306612fba565b34801561116157600080fd5b506106696004803603604081101561117857600080fd5b50803590602001356001600160a01b0316612fc0565b34801561119a57600080fd5b50610669600480360360208110156111b157600080fd5b5035613019565b3480156111c457600080fd5b506103c0600480360360208110156111db57600080fd5b5035613035565b3480156111ee57600080fd5b5061034c6004803603604081101561120557600080fd5b506001600160a01b0381358116916020013516613042565b34801561122957600080fd5b50610669600480360360a081101561124057600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a081016080820135600160201b81111561127f57600080fd5b82018360208201111561129157600080fd5b803590602001918460018302840111600160201b831117156112b257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550613070945050505050565b3480156112ff57600080fd5b506103066004803603604081101561131657600080fd5b508035906020013561323b565b34801561132f57600080fd5b506106696132a0565b60006001600160a01b03831661137f5760405162461bcd60e51b815260040180806020018281038252602b815260200180615102602b913960400191505060405180910390fd5b5060008181526002602090815260408083206001600160a01b03861684529091529020545b92915050565b6001600160e01b0319811660009081526001602052604090205460ff165b919050565b60065460ff1681565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156114625780601f1061143757610100808354040283529160200191611462565b820191906000526020600020905b81548152906001019060200180831161144557829003601f168201915b50505050509050919050565b60008060065460ff16600181111561148257fe5b1461148c57600080fd5b600780541061149a57600080fd5b600e543410156114a957600080fd5b60006001600160a01b0316601084846040518083838082843791909101948552505060405192839003602001909220546001600160a01b0316929092141591506114f4905057600080fd5b6007546000906115059060016134d7565b6000818152600860205260409020549091506001600160a01b03161561152757fe5b60008181526009602052604090205460ff161561154057fe5b600060108585604051808383808284379190910194855250506040805193849003602001842054633fabe5a360e21b855290516001600160a01b039091169363feaf968c93506004808201935060a09291829003018186803b1580156115a557600080fd5b505afa1580156115b9573d6000803e3d6000fd5b505050506040513d60a08110156115cf57600080fd5b506020015190506115de614d9a565b60018152602080820189905260408083018990528051601f8801839004830281018301909152868152908790879081908401838280828437600092019190915250505050606082015260808101829052611651611639613531565b84600160405180602001604052806000815250613535565b611659613531565b600084815260086020908152604080832080546001600160a01b0319166001600160a01b03959095169490941790935560098152908290208351815460ff1916901515178155838201516001820155918301516002830155606083015180518493926116cc926003850192910190614dcb565b50608091909101516004909101556007546116e89060016134d7565b600755600e546116f79061363d565b7f3560f0337e62819199860ba21b425b8bde9a01fa6e514dd58ab6edf7daf1d1f183611721613531565b604080519283526001600160a01b0390911660208301528051918290030190a150909695505050505050565b60008060006060600085600081118015611768575060078111155b61177157600080fd5b611779614d9a565b600088815260096020908152604091829020825160a081018452815460ff1615158152600180830154828501526002808401548387015260038401805487516101009482161594909402600019011691909104601f81018690048602830186019096528582529194929360608601939192919083018282801561183d5780601f106118125761010080835404028352916020019161183d565b820191906000526020600020905b81548152906001019060200180831161182057829003601f168201915b50505091835250506004919091015460209182015281519082015160408301516060840151608090940151929c919b50995091975095509350505050565b60009081526020819052604090206002015490565b6000601083836040518083838082843791909101948552505060405192839003602001909220546001600160a01b03169250505092915050565b60606118da338460008585613070565b505050565b80600781116118ed57600080fd5b6000818152600c602052604090205460ff1661190857600080fd5b6000828152600c602052604090205460ff1661192357600080fd5b61192b613531565b6000838152600b60205260409020546001600160a01b0390811691161461195157600080fd5b6000828152600b6020526040902054611975906001600160a01b03168360016136ae565b6000828152600c602090815260408083206005810154600490910154808552600d84528285208286529093529220546119af9060016137e1565b6000828152600d60209081526040808320868452825280832093909355868252600b815282822080546001600160a01b0319169055600c815290829020805460ff19169055815186815291517f76126f33d318abe88f8b82c5136b7e5a52091ab897679a40f612d7590adfc9979281900390910190a150505050565b8151835114611a6b5760405162461bcd60e51b81526004018080602001828103825260288152602001806152e16028913960400191505060405180910390fd5b6001600160a01b038416611ab05760405162461bcd60e51b81526004018080602001828103825260258152602001806151aa6025913960400191505060405180910390fd5b611ab8613531565b6001600160a01b0316856001600160a01b03161480611ae35750611ae385611ade613531565b613042565b611b1e5760405162461bcd60e51b81526004018080602001828103825260328152602001806151cf6032913960400191505060405180910390fd5b6000611b28613531565b9050611b3881878787878761383e565b60005b8451811015611c3e576000858281518110611b5257fe5b602002602001015190506000858381518110611b6a57fe5b60200260200101519050611bd7816040518060600160405280602a8152602001615244602a91396002600086815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020546139509092919063ffffffff16565b60008381526002602090815260408083206001600160a01b038e811685529252808320939093558a1681522054611c0e90826134d7565b60009283526002602090815260408085206001600160a01b038c1686529091529092209190915550600101611b3b565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015611cc4578181015183820152602001611cac565b50505050905001838103825284818151815260200191508051906020019060200280838360005b83811015611d03578181015183820152602001611ceb565b5050505090500194505050505060405180910390a4611d268187878787876139e7565b505050505050565b6000606060008060008560078111611d4557600080fd5b6000818152600c602052604090205460ff16611d6057600080fd5b6000878152600c602090815260409182902080546003820154600483015460058401546002948501805488516101006001831615026000190190911696909604601f810188900488028701880190985287865260ff909416969395929491939092869190830182828015611e155780601f10611dea57610100808354040283529160200191611e15565b820191906000526020600020905b815481529060010190602001808311611df857829003601f168201915b50505050509350955095509550955095505091939590929450565b611e47600080516020615201833981519152613c5d565b5050565b600082815260208190526040902060020154611e6e90611e69613531565b612c25565b611ea95760405162461bcd60e51b815260040180806020018281038252602f8152602001806150d3602f913960400191505060405180910390fd5b611e478282613c70565b611ebb613531565b6001600160a01b0316816001600160a01b031614611f0a5760405162461bcd60e51b815260040180806020018281038252602f81526020018061532a602f913960400191505060405180910390fd5b611e478282613cd9565b606060008060008460078111611f2957600080fd5b6000818152600c602052604090205460ff16611f4457600080fd5b6000868152600c6020908152604091829020600681015460078201546008830154600193840180548751600261010097831615979097026000190190911695909504601f8101879004870286018701909752868552959294919360ff909116929091869190830182828015611ffa5780601f10611fcf57610100808354040283529160200191611ffa565b820191906000526020600020905b815481529060010190602001808311611fdd57829003601f168201915b505050505093509450945094509450509193509193565b600080600080846007811161202557600080fd5b6000818152600c602052604090205460ff1661204057600080fd5b50505060009283525050600c602052604090206008015460ff600160481b8204811692600160501b8304821692600160581b8104831692600160601b9091041690565b600083600081118015612097575060078111155b6120a057600080fd5b600160065460ff1660018111156120b357fe5b146120bd57600080fd5b60008581526009602052604090205460ff166120d857600080fd5b6120e185613d42565b6120ea57600080fd5b60006120f8600f548761323b565b90508034101561210757600080fd5b600060076121216001600a546134d790919063ffffffff16565b016000818152600b60205260409020549091506001600160a01b03161561214457fe5b6000818152600c602052604090205460ff161561215d57fe5b612165614e49565b60018152604080516020601f8901819004810282018101909252878152908890889081908401838280828437600081840152601f19601f820116905080830192505050505050508160200181905250600f54816080018181525050878160a001818152505060096000898152602001908152602001600020600101548160c001818152505060096000898152602001908152602001600020600201548160e0018181525050600960008981526020019081526020016000206003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122b45780601f10612289576101008083540402835291602001916122b4565b820191906000526020600020905b81548152906001019060200180831161229757829003601f168201915b50505050506040828101919091526000838152600c60209081529190208251815460ff191690151517815581830151805184936122f8926001850192910190614dcb565b5060408201518051612314916002840191602090910190614dcb565b50606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080160006101000a81548160ff021916908360ff1602179055506101208201518160080160016101000a81548160ff021916908360ff1602179055506101408201518160080160026101000a81548160ff021916908360ff1602179055506101608201518160080160036101000a81548160ff021916908360ff1602179055506101808201518160080160046101000a81548160ff021916908360ff1602179055506101a08201518160080160056101000a81548160ff021916908360ff1602179055506101c08201518160080160066101000a81548160ff021916908360ff1602179055506101e08201518160080160076101000a81548160ff021916908360ff1602179055506102008201518160080160086101000a81548160ff021916908360ff1602179055506102208201518160080160096101000a81548160ff021916908360ff16021790555061024082015181600801600a6101000a81548160ff021916908360ff16021790555061026082015181600801600b6101000a81548160ff021916908360ff16021790555061028082015181600801600c6101000a81548160ff021916908360ff1602179055506102a082015181600801600d6101000a81548160ff021916908360ff1602179055506102c082015181600801600e6101000a81548160ff021916908360ff1602179055506102e082015181600801600f6101000a81548160ff021916908360ff1602179055506103008201518160080160106101000a81548160ff021916908360ff1602179055506103208201518160080160116101000a81548160ff021916908360ff1602179055506103408201518160080160126101000a81548160ff021916908360ff16021790555090505060006125db83613e17565b600081815260146020526040902084905590506125f781613ecf565b612602611639613531565b61262e61260d613531565b6000681b1ae4d6e2ef50000060405180602001604052806000815250613535565b612636613531565b6000848152600b6020526040902080546001600160a01b0319166001600160a01b0392909216919091179055600a546126709060016134d7565b600a55600f546000908152600d602090815260408083208c845290915290205461269b9060016134d7565b600f546000908152600d602090815260408083208d84529091528120919091556126d1600a6126cb8760086145a6565b906145ff565b60008b8152600860205260408082205490519293506001600160a01b031691829084908381818185875af1925050503d806000811461272c576040519150601f19603f3d011682016040523d82523d6000602084013e612731565b606091505b5050905080612778576040805162461bcd60e51b815260206004820152600e60248201526d14185e5b595b9d0819985a5b195960921b604482015290519081900360640190fd5b6127818761363d565b7ff34a510082f5a02e39555458564800fc1fe73bfd8d3aa07cbf063fe662e7657e866127ab613531565b604080519283526001600160a01b0390911660208301528051918290030190a150939a9950505050505050505050565b60008060008084600781116127ef57600080fd5b6000818152600c602052604090205460ff1661280a57600080fd5b50505060009283525050600c602052604090206008015460ff65010000000000820481169266010000000000008304821692600160381b8104831692600160401b9091041690565b6007545b90565b6060815183511461289b5760405162461bcd60e51b81526004018080602001828103825260298152602001806152b86029913960400191505060405180910390fd5b6060835167ffffffffffffffff811180156128b557600080fd5b506040519080825280602002602001820160405280156128df578160200160208202803683370190505b50905060005b845181101561293d5761291e8582815181106128fd57fe5b602002602001015185838151811061291157fe5b6020026020010151611338565b82828151811061292a57fe5b60209081029190910101526001016128e5565b509392505050565b6000816007811161295557600080fd5b6000818152600c602052604090205460ff1661297057600080fd5b6000838152600b60205260409020546001600160a01b031661299157600080fd5b50506000908152600b60205260409020546001600160a01b031690565b6000816000811180156129c2575060078111155b6129cb57600080fd5b600f548411156129da57600080fd5b50506000918252600d6020908152604080842092845291905290205490565b60168181548110612a0657fe5b600091825260209182902001805460408051601f6002600019610100600187161502019094169390930492830185900485028101850190915281815293509091830182828015612a975780601f10612a6c57610100808354040283529160200191612a97565b820191906000526020600020905b815481529060010190602001808311612a7a57829003601f168201915b505050505081565b600081600081118015612ab3575060078111155b612abc57600080fd5b6000838152600860205260409020546001600160a01b0316612add57600080fd5b50506000908152600860205260409020546001600160a01b031690565b600e5481565b6000806000806000808660078111612b1757600080fd5b6000818152600c602052604090205460ff16612b3257600080fd5b50505060009485525050600c6020525050604090206008015460ff600160681b8204811692600160701b8304821692600160781b8104831692600160801b8204811692600160881b8304821692600160901b900490911690565b6000806000808460078111612ba057600080fd5b6000818152600c602052604090205460ff16612bbb57600080fd5b50505060009283525050600c602052604090206008015460ff610100820481169262010000830482169263010000008104831692600160201b9091041690565b600f5481565b6000828152602081905260408120612c199083614666565b9392505050565b600781565b6000828152602081905260408120612c1990836134c2565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614612cba576040805162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00604482015290519081900360640190fd5b611e478282614672565b612cdb600080516020615201833981519152613c5d565b8060108484604051808383808284379190910194855250506040519283900360200190922080546001600160a01b03949094166001600160a01b031990941693909317909255505060118054600181018255600091909152612d60907f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c68018484614f26565b50505050565b612d8f7fae0c232b87105e0a8134f8b92146dcd1d99373d32394be9d70f700f90b3a3db3613c5d565b601680546001810182556000919091526118da907fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b5124289018383614f26565b600081565b816001600160a01b0316612de3613531565b6001600160a01b03161415612e295760405162461bcd60e51b815260040180806020018281038252602981526020018061528f6029913960400191505060405180910390fd5b8060036000612e36613531565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155612e7a613531565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b612ed7600080516020615201833981519152613c5d565b600060075411612ee657600080fd5b60015b60078111612f195760008181526009602052604090205460ff1615612f1157612f118161468c565b600101612ee9565b50600f54612f289060016134d7565b600f556040517f0143b2c36fac98f86168603d28d499bde9ce0367d41e111cef9f2ecbc9eeabfc90600090a1565b6060612d60848460008585613070565b60075481565b612f83600080516020615201833981519152613c5d565b6006805482919060ff191660018381811115612f9b57fe5b021790555050565b60008181526020819052604081206113a490614728565b600a5481565b600082815260208190526040902060020154612fde90611e69613531565b611f0a5760405162461bcd60e51b815260040180806020018281038252603081526020018061517a6030913960400191505060405180910390fd5b613030600080516020615201833981519152613c5d565b600e55565b60118181548110612a0657fe5b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205460ff1690565b6001600160a01b0384166130b55760405162461bcd60e51b81526004018080602001828103825260258152602001806151aa6025913960400191505060405180910390fd5b6130bd613531565b6001600160a01b0316856001600160a01b031614806130e357506130e385611ade613531565b61311e5760405162461bcd60e51b81526004018080602001828103825260298152602001806151516029913960400191505060405180910390fd5b6000613128613531565b905061314881878761313988614733565b61314288614733565b8761383e565b61318f836040518060600160405280602a8152602001615244602a913960008781526002602090815260408083206001600160a01b038d1684529091529020549190613950565b60008581526002602090815260408083206001600160a01b038b811685529252808320939093558716815220546131c690846134d7565b60008581526002602090815260408083206001600160a01b03808b168086529184529382902094909455805188815291820187905280518a8416938616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a4611d26818787878787614777565b60008160008111801561324f575060078111155b61325857600080fd5b600f5484111561326757600080fd5b6000848152600d6020908152604080832086845290915281205461328c9060016134d7565b9050613297816148e8565b95945050505050565b6132b7600080516020615201833981519152613c5d565b601754604080518082018252600a81526950524943455f5741525360b01b60208083019182529251636cadcd7960e11b8152600481019384528251602482015282516000956001600160a01b03169463d95b9af2949390928392604490910191908083838b5b8381101561333557818101518382015260200161331d565b50505050905090810190601f1680156133625780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561338157600080fd5b505af1158015613395573d6000803e3d6000fd5b505050506040513d60208110156133ab57600080fd5b5051604080516372d7f66560e11b8152306004820152905191925082916000916001600160a01b0384169163e5afecca9160248082019260209290919082900301818787803b1580156133fd57600080fd5b505af1158015613411573d6000803e3d6000fd5b505050506040513d602081101561342757600080fd5b505190506134557fae0c232b87105e0a8134f8b92146dcd1d99373d32394be9d70f700f90b3a3db382611e4b565b806001600160a01b031663d65ab5f26040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561349057600080fd5b505af11580156134a4573d6000803e3d6000fd5b50505050505050565b6000612c19836001600160a01b03841661493a565b6000612c19836001600160a01b038416614984565b600082820183811015612c19576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b3390565b6001600160a01b03841661357a5760405162461bcd60e51b81526004018080602001828103825260218152602001806153096021913960400191505060405180910390fd5b6000613584613531565b90506135968160008761313988614733565b60008481526002602090815260408083206001600160a01b03891684529091529020546135c390846134d7565b60008581526002602090815260408083206001600160a01b03808b16808652918452828520959095558151898152928301889052815190948616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a461363681600087878787614777565b5050505050565b600061364934836137e1565b11156136ab5760003361365c34846137e1565b604051600081818185875af1925050503d8060008114613698576040519150601f19603f3d011682016040523d82523d6000602084013e61369d565b606091505b5050905080611e4757600080fd5b50565b6001600160a01b0383166136f35760405162461bcd60e51b81526004018080602001828103825260238152602001806152216023913960400191505060405180910390fd5b60006136fd613531565b905061372d8185600061370f87614733565b61371887614733565b6040518060200160405280600081525061383e565b6137748260405180606001604052806024815260200161512d6024913960008681526002602090815260408083206001600160a01b038b1684529091529020549190613950565b60008481526002602090815260408083206001600160a01b03808a16808652918452828520959095558151888152928301879052815193949093908616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a450505050565b600082821115613838576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b61384c868686868686611d26565b60005b83518110156134a457600084828151811061386657fe5b602002602001015111801561388f5750600784828151811061388457fe5b602002602001015111155b156138e05784600860008684815181106138a557fe5b6020026020010151815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b60078482815181106138ee57fe5b602002602001015111156139485784600b600086848151811061390d57fe5b6020026020010151815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b60010161384f565b600081848411156139df5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156139a457818101518382015260200161398c565b50505050905090810190601f1680156139d15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6139f9846001600160a01b031661499c565b15611d2657836001600160a01b031663bc197c8187878686866040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015613a87578181015183820152602001613a6f565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015613ac6578181015183820152602001613aae565b50505050905001848103825285818151815260200191508051906020019080838360005b83811015613b02578181015183820152602001613aea565b50505050905090810190601f168015613b2f5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b158015613b5457600080fd5b505af1925050508015613b7957506040513d6020811015613b7457600080fd5b505160015b613c0e57613b85614faf565b80613b905750613bd7565b60405162461bcd60e51b81526020600482018181528351602484015283518493919283926044019190850190808383600083156139a457818101518382015260200161398c565b60405162461bcd60e51b81526004018080602001828103825260348152602001806150556034913960400191505060405180910390fd5b6001600160e01b0319811663bc197c8160e01b146134a45760405162461bcd60e51b81526004018080602001828103825260288152602001806150ab6028913960400191505060405180910390fd5b613c678133612c25565b6136ab57600080fd5b6000828152602081905260409020613c8890826134ad565b15611e4757613c95613531565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152602081905260409020613cf190826149a2565b15611e4757613cfe613531565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600f546000908152600d6020908152604080832084845290915281205460041115613d6f575060016113c8565b600f546000908152600d6020908152604080832085845290915290205460015b6007548111613de457600f546000908152600d60209081526040808320848452909152902054821115613ddc57600f546000908152600d6020908152604080832084845290915290205491505b600101613d8f565b50613df08160026145a6565b600f546000908152600d602090815260408083208784529091529020541115915050919050565b60006013547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015613e8957600080fd5b505afa158015613e9d573d6000803e3d6000fd5b505050506040513d6020811015613eb357600080fd5b50511015613ec057600080fd5b6113a4601254601354846149b7565b60008181526014602052604090205460078111613eeb57600080fd5b6000818152600c602052604090205460ff16613f0657600080fd5b6000828152601460209081526040808320546015835281842054818552600c909352908320600801805469ff0000000000000000001916600160481b17905591613f51600283614b61565b6000858152600c60205260409020600801805460ff191660ff93909316929092179091559050613f82600482614b61565b6000858152600c60205260409020600801805460ff9093166101000261ff0019909316929092179091559050613fb9600482614b61565b6000858152600c60205260409020600801805460ff909316620100000262ff000019909316929092179091559050613ff2600482614b61565b6000858152600c60205260409020600801805460ff90931663010000000263ff0000001990931692909217909155905061402d600482614b61565b6000858152600c60205260409020600801805460ff909316600160201b0264ff0000000019909316929092179091559050614069600982614b61565b6000858152600c60205260409020600801805460ff909316650100000000000265ff0000000000199093169290921790915590506140a8601e82614b61565b6000858152600c60205260409020600801805460ff90931666010000000000000266ff000000000000199093169290921790915590506140e9601882614b61565b6000858152600c60205260409020600801805460ff909316600160381b0267ff0000000000000019909316929092179091559050614128600782614b61565b6000858152600c60205260409020600801805460ff909316600160401b0268ff000000000000000019909316929092179091559050614168601582614b61565b6000858152600c60205260409020600801805460ff60501b1916600160501b60ff948516810291909117918290559193506141a8929190041660096134d7565b6000848152600c60205260409020600801805460ff92909216600160501b0260ff60501b199092169190911790556141e1601582614b61565b6000858152600c60205260409020600801805460ff60581b1916600160581b60ff94851681029190911791829055919350614221929190041660096134d7565b6000848152600c60205260409020600801805460ff92909216600160581b0260ff60581b1990921691909117905561425a601f82614b61565b6000858152600c60205260409020600801805460ff60601b1916600160601b60ff9485168102919091179182905591935061429a929190041660096134d7565b6000848152600c60205260409020600801805460ff92909216600160601b0260ff60601b199092169190911790556142d3601082614b61565b6000858152600c60205260409020600801805460ff60681b1916600160681b60ff94851681029190911791829055919350614313929190041660026134d7565b6000848152600c60205260409020600801805460ff92909216600160681b0260ff60681b1990921691909117905561434c601082614b61565b6000858152600c60205260409020600801805460ff60701b1916600160701b60ff9485168102919091179182905591935061438c929190041660026134d7565b6000848152600c60205260409020600801805460ff92909216600160701b0260ff60701b199092169190911790556143c5601082614b61565b6000858152600c60205260409020600801805460ff60781b1916600160781b60ff94851681029190911791829055919350614405929190041660026134d7565b6000848152600c60205260409020600801805460ff92909216600160781b0260ff60781b1990921691909117905561443e601082614b61565b6000858152600c60205260409020600801805460ff60801b1916600160801b60ff9485168102919091179182905591935061447e929190041660026134d7565b6000848152600c60205260409020600801805460ff92909216600160801b0260ff60801b199092169190911790556144b7601082614b61565b6000858152600c60205260409020600801805460ff60881b1916600160881b60ff948516810291909117918290559193506144f7929190041660026134d7565b6000848152600c60205260409020600801805460ff92909216600160881b0260ff60881b19909216919091179055614530601082614b61565b6000858152600c60205260409020600801805460ff60901b1916600160901b60ff94851681029190911791829055919350614570929190041660026134d7565b6000938452600c6020526040909320600801805460ff94909416600160901b0260ff60901b199094169390931790925550505050565b6000826145b5575060006113a4565b828202828482816145c257fe5b0414612c195760405162461bcd60e51b815260040180806020018281038252602181526020018061526e6021913960400191505060405180910390fd5b6000808211614655576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161465e57fe5b049392505050565b6000612c198383614b92565b6000828152601560205260409020819055611e4782613ecf565b8060008111801561469e575060078111155b6146a757600080fd5b60008281526009602052604090205460ff166146c257600080fd5b6000828152600860205260409020546146e6906001600160a01b03168360016136ae565b6007546146f49060016137e1565b60075550600090815260086020908152604080832080546001600160a01b031916905560099091529020805460ff19169055565b60006113a482614bf6565b60408051600180825281830190925260609182919060208083019080368337019050509050828160008151811061476657fe5b602090810291909101015292915050565b614789846001600160a01b031661499c565b15611d2657836001600160a01b031663f23a6e6187878686866040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015614818578181015183820152602001614800565b50505050905090810190601f1680156148455780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b15801561486857600080fd5b505af192505050801561488d57506040513d602081101561488857600080fd5b505160015b61489957613b85614faf565b6001600160e01b0319811663f23a6e6160e01b146134a45760405162461bcd60e51b81526004018080602001828103825260288152602001806150ab6028913960400191505060405180910390fd5b600080600161490f60646126cb600261490988670de0b6b3a76400006145a6565b906145a6565b915061493261492b600a6126cb84670de0b6b3a76400006145a6565b83906134d7565b949350505050565b60006149468383614984565b61497c575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556113a4565b5060006113a4565b60009081526001919091016020526040902054151590565b3b151590565b6000612c19836001600160a01b038416614bfa565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000085878660405160200180838152602001828152602001925050506040516020818303038152906040526040518463ffffffff1660e01b815260040180846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015614a93578181015183820152602001614a7b565b50505050905090810190601f168015614ac05780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b158015614ae157600080fd5b505af1158015614af5573d6000803e3d6000fd5b505050506040513d6020811015614b0b57600080fd5b5050600084815260056020526040812054614b2b90869085903090614cc0565b600086815260056020526040902054909150614b489060016134d7565b6000868152600560205260409020556132978582614d07565b600080614b7c6001614b768560ff8816614d33565b906134d7565b614b8784600a6145ff565b915091509250929050565b81546000908210614bd45760405162461bcd60e51b81526004018080602001828103825260228152602001806150896022913960400191505060405180910390fd5b826000018281548110614be357fe5b9060005260206000200154905092915050565b5490565b60008181526001830160205260408120548015614cb65783546000198083019190810190600090879083908110614c2d57fe5b9060005260206000200154905080876000018481548110614c4a57fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080614c7a57fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506113a4565b60009150506113a4565b60408051602080820196909652808201949094526001600160a01b039290921660608401526080808401919091528151808403909101815260a09092019052805191012090565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b6000808211614d89576040805162461bcd60e51b815260206004820152601860248201527f536166654d6174683a206d6f64756c6f206279207a65726f0000000000000000604482015290519081900360640190fd5b818381614d9257fe5b069392505050565b6040518060a00160405280600015158152602001600081526020016000815260200160608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10614e0c57805160ff1916838001178555614e39565b82800160010185558215614e39579182015b82811115614e39578251825591602001919060010190614e1e565b50614e45929150614f94565b5090565b604080516103608101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081018290526101c081018290526101e08101829052610200810182905261022081018290526102408101829052610260810182905261028081018290526102a081018290526102c081018290526102e081018290526103008101829052610320810182905261034081019190915290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10614f675782800160ff19823516178555614e39565b82800160010185558215614e39579182015b82811115614e39578235825591602001919060010190614f79565b5b80821115614e455760008155600101614f95565b60e01c90565b600060443d1015614fbf57612856565b600481823e6308c379a0614fd38251614fa9565b14614fdd57612856565b6040513d600319016004823e80513d67ffffffffffffffff816024840111818411171561500d5750505050612856565b828401925082519150808211156150275750505050612856565b503d8301602082840101111561503f57505050612856565b601f01601f191681016020016040529150509056fe455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665642172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368455243313135353a206d696e7420746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a26469706673582212203a1ce4ed0b10f7158ad6350e89503e9fdd47146642f8b7f998dcacf7de897d1e64736f6c634300060c0033416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e742172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca0250969f4e1c871d5fdd0aee1cd182666698a4492b24c6832aac230d07b11046af5a89",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "CryptoChampions",
  "coverageMap": {
    "branches": {
      "0": {
        "AccessControl._grantRole": {
          "255": [
            7098,
            7131,
            false
          ]
        },
        "AccessControl._revokeRole": {
          "256": [
            7289,
            7325,
            false
          ]
        },
        "AccessControl.grantRole": {
          "252": [
            4727,
            4772,
            true
          ]
        },
        "AccessControl.renounceRole": {
          "253": [
            5904,
            5927,
            true
          ]
        },
        "AccessControl.revokeRole": {
          "254": [
            5185,
            5230,
            true
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {},
      "12": {
        "EnumerableSet._add": {
          "273": [
            1724,
            1745,
            false
          ]
        },
        "EnumerableSet._at": {
          "274": [
            4546,
            4572,
            true
          ]
        },
        "EnumerableSet._remove": {
          "275": [
            2449,
            2464,
            false
          ]
        }
      },
      "2": {},
      "25": {
        "CryptoChampions._beforeTokenTransfer": {
          "242": [
            22172,
            22200,
            false
          ],
          "243": [
            22204,
            22234,
            false
          ],
          "244": [
            22320,
            22349,
            false
          ]
        },
        "CryptoChampions._burnElder": {
          "250": [
            5772,
            5803,
            true
          ],
          "251": [
            19135,
            19163,
            true
          ]
        },
        "CryptoChampions._canMintHero": {
          "246": [
            14204,
            14260,
            false
          ]
        },
        "CryptoChampions._getRandomNumber": {
          "247": [
            6560,
            6597,
            true
          ]
        },
        "CryptoChampions._hasRole": {
          "245": [
            7401,
            7426,
            true
          ]
        },
        "CryptoChampions._refundSender": {
          "240": [
            23138,
            23161,
            false
          ],
          "241": [
            23267,
            23274,
            true
          ]
        },
        "CryptoChampions._trainHero": {
          "248": [
            5914,
            5943,
            true
          ],
          "249": [
            5993,
            6014,
            true
          ]
        },
        "CryptoChampions.burnElders": {
          "237": [
            18564,
            18580,
            true
          ],
          "238": [
            18697,
            18719,
            false
          ]
        },
        "CryptoChampions.burnHero": {
          "229": [
            19879,
            19900,
            true
          ],
          "230": [
            19965,
            20000,
            true
          ]
        },
        "CryptoChampions.getElderSpawnsAmount": {
          "236": [
            22884,
            22905,
            true
          ]
        },
        "CryptoChampions.getHeroMintPrice": {
          "239": [
            20963,
            20984,
            true
          ]
        },
        "CryptoChampions.mintElderSpirit": {
          "225": [
            8833,
            8865,
            true
          ],
          "226": [
            8926,
            8961,
            true
          ],
          "227": [
            9025,
            9052,
            true
          ],
          "228": [
            9101,
            9136,
            true
          ]
        },
        "CryptoChampions.mintHero": {
          "231": [
            11148,
            11179,
            true
          ],
          "232": [
            11236,
            11264,
            true
          ],
          "233": [
            11335,
            11356,
            true
          ],
          "234": [
            11504,
            11526,
            true
          ],
          "235": [
            13194,
            13201,
            true
          ]
        }
      },
      "26": {},
      "27": {},
      "28": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "283": [
            9592,
            9620,
            true
          ]
        }
      },
      "29": {},
      "3": {
        "SafeMath.add": {
          "276": [
            2802,
            2808,
            true
          ]
        },
        "SafeMath.div": {
          "281": [
            4302,
            4307,
            true
          ]
        },
        "SafeMath.mod": {
          "282": [
            4905,
            4910,
            true
          ]
        },
        "SafeMath.mul": {
          "279": [
            3619,
            3625,
            false
          ],
          "280": [
            3680,
            3690,
            true
          ]
        },
        "SafeMath.sub": {
          "277": [
            3221,
            3227,
            true
          ],
          "278": [
            5545,
            5551,
            true
          ]
        }
      },
      "30": {},
      "31": {},
      "32": {},
      "36": {},
      "37": {},
      "4": {},
      "5": {
        "ERC1155._burn": {
          "268": [
            9976,
            9997,
            true
          ]
        },
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "269": [
            13484,
            13499,
            false
          ],
          "270": [
            13647,
            13711,
            false
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "271": [
            12712,
            12727,
            false
          ],
          "272": [
            12868,
            12927,
            false
          ]
        },
        "ERC1155._mint": {
          "267": [
            8129,
            8150,
            true
          ]
        },
        "ERC1155.balanceOf": {
          "257": [
            3089,
            3110,
            true
          ]
        },
        "ERC1155.balanceOfBatch": {
          "262": [
            3574,
            3603,
            true
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "258": [
            5774,
            5802,
            true
          ],
          "259": [
            5865,
            5881,
            true
          ],
          "260": [
            5954,
            5974,
            true
          ],
          "261": [
            5978,
            6014,
            true
          ]
        },
        "ERC1155.safeTransferFrom": {
          "264": [
            4780,
            4796,
            true
          ],
          "265": [
            4869,
            4889,
            true
          ],
          "266": [
            4893,
            4929,
            true
          ]
        },
        "ERC1155.setApprovalForAll": {
          "263": [
            4061,
            4085,
            true
          ]
        }
      },
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "AccessControl._grantRole": {
          "147": [
            7147,
            7192
          ]
        },
        "AccessControl._revokeRole": {
          "148": [
            7341,
            7386
          ]
        },
        "AccessControl.getRoleAdmin": {
          "24": [
            4358,
            4387
          ]
        },
        "AccessControl.getRoleMember": {
          "89": [
            4057,
            4094
          ]
        },
        "AccessControl.getRoleMemberCount": {
          "106": [
            3337,
            3373
          ]
        },
        "AccessControl.grantRole": {
          "44": [
            4719,
            4824
          ],
          "45": [
            4835,
            4860
          ]
        },
        "AccessControl.hasRole": {
          "90": [
            3035,
            3080
          ]
        },
        "AccessControl.renounceRole": {
          "46": [
            5896,
            5979
          ],
          "47": [
            5990,
            6016
          ]
        },
        "AccessControl.revokeRole": {
          "107": [
            5177,
            5283
          ]
        }
      },
      "1": {
        "ERC165.supportsInterface": {
          "2": [
            1066,
            1106
          ]
        }
      },
      "10": {
        "Address.isContract": {
          "206": [
            1117,
            1132
          ]
        }
      },
      "11": {
        "Context._msgSender": {
          "124": [
            678,
            695
          ]
        }
      },
      "12": {
        "EnumerableSet._add": {
          "201": [
            1761,
            1784
          ],
          "202": [
            1919,
            1959
          ],
          "203": [
            1973,
            1984
          ],
          "204": [
            2015,
            2027
          ]
        },
        "EnumerableSet._at": {
          "212": [
            4538,
            4611
          ],
          "213": [
            4621,
            4646
          ]
        },
        "EnumerableSet._contains": {
          "205": [
            3894,
            3925
          ]
        },
        "EnumerableSet._length": {
          "214": [
            4088,
            4113
          ]
        },
        "EnumerableSet._remove": {
          "215": [
            3274,
            3312
          ],
          "216": [
            3378,
            3421
          ],
          "217": [
            3527,
            3544
          ],
          "218": [
            3612,
            3638
          ],
          "219": [
            3653,
            3664
          ],
          "220": [
            3695,
            3707
          ]
        },
        "EnumerableSet.add": {
          "121": [
            6515,
            6572
          ]
        },
        "EnumerableSet.at": {
          "187": [
            7770,
            7826
          ]
        },
        "EnumerableSet.contains": {
          "122": [
            7080,
            7142
          ]
        },
        "EnumerableSet.length": {
          "195": [
            7312,
            7338
          ]
        },
        "EnumerableSet.remove": {
          "207": [
            6836,
            6896
          ]
        }
      },
      "2": {},
      "25": {
        "CryptoChampions._beforeTokenTransfer": {
          "137": [
            21951,
            22017
          ],
          "138": [
            22254,
            22288
          ],
          "139": [
            22369,
            22393
          ],
          "140": [
            22064,
            22067
          ]
        },
        "CryptoChampions._burnElder": {
          "190": [
            19127,
            19164
          ],
          "191": [
            19396,
            19436
          ],
          "192": [
            19490,
            19524
          ],
          "193": [
            19534,
            19568
          ],
          "194": [
            19578,
            19614
          ]
        },
        "CryptoChampions._canMintHero": {
          "149": [
            13965,
            13976
          ],
          "150": [
            14280,
            14336
          ],
          "151": [
            14181,
            14184
          ],
          "152": [
            14371,
            14448
          ]
        },
        "CryptoChampions._getRandomNumber": {
          "153": [
            6552,
            6598
          ],
          "154": [
            6660,
            6718
          ]
        },
        "CryptoChampions._hasRole": {
          "146": [
            7393,
            7427
          ]
        },
        "CryptoChampions._priceFormula": {
          "199": [
            21524,
            21569
          ],
          "200": [
            21579,
            21622
          ]
        },
        "CryptoChampions._refundSender": {
          "130": [
            23259,
            23275
          ]
        },
        "CryptoChampions._rollDice": {
          "211": [
            17687,
            17759
          ]
        },
        "CryptoChampions._trainHero": {
          "155": [
            14819,
            14844
          ],
          "156": [
            14870,
            14944
          ],
          "157": [
            14969,
            15042
          ],
          "158": [
            15066,
            15139
          ],
          "159": [
            15163,
            15236
          ],
          "160": [
            15260,
            15333
          ],
          "161": [
            15358,
            15434
          ],
          "162": [
            15458,
            15536
          ],
          "163": [
            15561,
            15637
          ],
          "164": [
            15662,
            15736
          ],
          "165": [
            15761,
            15831
          ],
          "166": [
            15855,
            15908
          ],
          "167": [
            15918,
            15990
          ],
          "168": [
            16014,
            16071
          ],
          "169": [
            16081,
            16156
          ],
          "170": [
            16180,
            16243
          ],
          "171": [
            16254,
            16330
          ],
          "172": [
            16353,
            16418
          ],
          "173": [
            16428,
            16505
          ],
          "174": [
            16528,
            16595
          ],
          "175": [
            16605,
            16685
          ],
          "176": [
            16708,
            16781
          ],
          "177": [
            16791,
            16871
          ],
          "178": [
            16894,
            16967
          ],
          "179": [
            16977,
            17051
          ],
          "180": [
            17074,
            17135
          ],
          "181": [
            17145,
            17221
          ],
          "182": [
            17244,
            17309
          ]
        },
        "CryptoChampions.burnElders": {
          "99": [
            18556,
            18581
          ],
          "100": [
            18739,
            18752
          ],
          "101": [
            18674,
            18677
          ],
          "102": [
            18818,
            18852
          ],
          "103": [
            18863,
            18888
          ]
        },
        "CryptoChampions.burnHero": {
          "27": [
            19871,
            19901
          ],
          "28": [
            19957,
            20001
          ],
          "29": [
            20056,
            20093
          ],
          "30": [
            20275,
            20359
          ],
          "31": [
            20411,
            20443
          ],
          "32": [
            20453,
            20482
          ],
          "33": [
            20493,
            20516
          ]
        },
        "CryptoChampions.createAffinity": {
          "93": [
            7889,
            7927
          ],
          "94": [
            7937,
            7965
          ]
        },
        "CryptoChampions.declareRoundWinner": {
          "95": [
            28514,
            28560
          ]
        },
        "CryptoChampions.delegatedTransferInGameTokens": {
          "104": [
            29928,
            29989
          ]
        },
        "CryptoChampions.fulfillRandomness": {
          "188": [
            6968,
            7009
          ],
          "189": [
            7019,
            7040
          ]
        },
        "CryptoChampions.getAffinityFeedAddress": {
          "25": [
            27953,
            27981
          ]
        },
        "CryptoChampions.getElderOwner": {
          "85": [
            10657,
            10701
          ],
          "86": [
            10756,
            10784
          ]
        },
        "CryptoChampions.getElderSpawnsAmount": {
          "83": [
            22876,
            22906
          ],
          "84": [
            22939,
            22979
          ]
        },
        "CryptoChampions.getElderSpirit": {
          "23": [
            23877,
            24063
          ]
        },
        "CryptoChampions.getHeroGameData": {
          "43": [
            24550,
            24761
          ]
        },
        "CryptoChampions.getHeroLore": {
          "75": [
            26231,
            26402
          ]
        },
        "CryptoChampions.getHeroMintPrice": {
          "117": [
            20955,
            20985
          ],
          "118": [
            21115,
            21147
          ]
        },
        "CryptoChampions.getHeroOwner": {
          "81": [
            18004,
            18046
          ],
          "82": [
            18100,
            18126
          ]
        },
        "CryptoChampions.getHeroStats": {
          "87": [
            27402,
            27654
          ]
        },
        "CryptoChampions.getHeroTraitsSkills": {
          "88": [
            25708,
            25811
          ]
        },
        "CryptoChampions.getHeroVisuals": {
          "48": [
            25186,
            25292
          ]
        },
        "CryptoChampions.getHeroVitals": {
          "49": [
            26783,
            26880
          ]
        },
        "CryptoChampions.getNumEldersInGame": {
          "76": [
            28199,
            28218
          ]
        },
        "CryptoChampions.mintElderSpirit": {
          "4": [
            8825,
            8866
          ],
          "5": [
            8918,
            8962
          ],
          "6": [
            9017,
            9053
          ],
          "7": [
            9093,
            9137
          ],
          "8": [
            9300,
            9343
          ],
          "9": [
            9394,
            9439
          ],
          "10": [
            9579,
            9667
          ],
          "11": [
            9747,
            9765
          ],
          "12": [
            9775,
            9796
          ],
          "13": [
            9806,
            9829
          ],
          "14": [
            9839,
            9864
          ],
          "15": [
            9874,
            9909
          ],
          "16": [
            9944,
            9979
          ],
          "17": [
            10073,
            10109
          ],
          "18": [
            10119,
            10149
          ],
          "19": [
            10195,
            10229
          ],
          "20": [
            10280,
            10309
          ],
          "21": [
            10320,
            10365
          ],
          "22": [
            10376,
            10390
          ]
        },
        "CryptoChampions.mintHero": {
          "50": [
            11140,
            11180
          ],
          "51": [
            11228,
            11265
          ],
          "52": [
            11327,
            11357
          ],
          "53": [
            11496,
            11527
          ],
          "54": [
            11669,
            11710
          ],
          "55": [
            11763,
            11801
          ],
          "56": [
            11914,
            11931
          ],
          "57": [
            11941,
            11961
          ],
          "58": [
            11971,
            12002
          ],
          "59": [
            12012,
            12034
          ],
          "60": [
            12044,
            12087
          ],
          "61": [
            12097,
            12142
          ],
          "62": [
            12152,
            12199
          ],
          "63": [
            12209,
            12231
          ],
          "64": [
            12357,
            12395
          ],
          "65": [
            12405,
            12426
          ],
          "66": [
            12461,
            12495
          ],
          "67": [
            12568,
            12631
          ],
          "68": [
            12705,
            12739
          ],
          "69": [
            12810,
            12844
          ],
          "70": [
            12854,
            12944
          ],
          "71": [
            13186,
            13220
          ],
          "72": [
            13320,
            13344
          ],
          "73": [
            13355,
            13392
          ],
          "74": [
            13403,
            13416
          ]
        },
        "CryptoChampions.setElderMintPrice": {
          "108": [
            8198,
            8220
          ]
        },
        "CryptoChampions.setPhase": {
          "105": [
            7216,
            7236
          ]
        },
        "CryptoChampions.startNewPriceGame": {
          "119": [
            29004,
            29049
          ],
          "120": [
            29059,
            29079
          ]
        },
        "CryptoChampions.transferInGameTokens": {
          "26": [
            29368,
            29435
          ]
        }
      },
      "26": {},
      "27": {},
      "28": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "91": [
            9584,
            9656
          ],
          "92": [
            9666,
            9706
          ]
        },
        "VRFConsumerBase.requestRandomness": {
          "208": [
            7678,
            7749
          ],
          "209": [
            8519,
            8561
          ],
          "210": [
            8571,
            8610
          ]
        }
      },
      "29": {
        "VRFRequestIDBase.makeRequestId": {
          "222": [
            1596,
            1655
          ]
        },
        "VRFRequestIDBase.makeVRFInputSeed": {
          "221": [
            1005,
            1083
          ]
        }
      },
      "3": {
        "SafeMath.add": {
          "123": [
            2794,
            2840
          ]
        },
        "SafeMath.div": {
          "185": [
            4294,
            4338
          ],
          "186": [
            4348,
            4360
          ]
        },
        "SafeMath.mod": {
          "223": [
            4897,
            4939
          ],
          "224": [
            4949,
            4961
          ]
        },
        "SafeMath.mul": {
          "183": [
            3627,
            3635
          ],
          "184": [
            3672,
            3728
          ]
        },
        "SafeMath.sub": {
          "135": [
            3213,
            3262
          ],
          "136": [
            3272,
            3284
          ],
          "141": [
            5537,
            5566
          ],
          "142": [
            5576,
            5588
          ]
        }
      },
      "30": {},
      "31": {},
      "32": {},
      "36": {},
      "37": {},
      "4": {},
      "5": {
        "ERC1155._asSingletonArray": {
          "196": [
            14169,
            14187
          ],
          "197": [
            14198,
            14210
          ]
        },
        "ERC1155._burn": {
          "131": [
            9968,
            10037
          ],
          "132": [
            10090,
            10195
          ],
          "133": [
            10206,
            10339
          ],
          "134": [
            10350,
            10412
          ]
        },
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "143": [
            13871,
            13885
          ],
          "144": [
            13925,
            13987
          ],
          "145": [
            13735,
            13785
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "198": [
            12951,
            13001
          ]
        },
        "ERC1155._mint": {
          "125": [
            8121,
            8188
          ],
          "126": [
            8241,
            8348
          ],
          "127": [
            8359,
            8418
          ],
          "128": [
            8428,
            8490
          ],
          "129": [
            8501,
            8580
          ]
        },
        "ERC1155.balanceOf": {
          "0": [
            3081,
            3158
          ],
          "1": [
            3168,
            3197
          ]
        },
        "ERC1155.balanceOfBatch": {
          "77": [
            3566,
            3649
          ],
          "78": [
            3794,
            3843
          ],
          "79": [
            3775,
            3778
          ],
          "80": [
            3864,
            3884
          ]
        },
        "ERC1155.isApprovedForAll": {
          "109": [
            4447,
            4491
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "34": [
            5766,
            5847
          ],
          "35": [
            5857,
            5923
          ],
          "36": [
            5933,
            6090
          ],
          "37": [
            6143,
            6203
          ],
          "38": [
            6344,
            6489
          ],
          "39": [
            6503,
            6552
          ],
          "40": [
            6250,
            6253
          ],
          "41": [
            6573,
            6625
          ],
          "42": [
            6636,
            6711
          ]
        },
        "ERC1155.safeTransferFrom": {
          "110": [
            4772,
            4838
          ],
          "111": [
            4848,
            4996
          ],
          "112": [
            5049,
            5145
          ],
          "113": [
            5156,
            5255
          ],
          "114": [
            5265,
            5314
          ],
          "115": [
            5325,
            5376
          ],
          "116": [
            5387,
            5455
          ]
        },
        "ERC1155.setApprovalForAll": {
          "96": [
            4053,
            4131
          ],
          "97": [
            4142,
            4195
          ],
          "98": [
            4205,
            4258
          ]
        },
        "ERC1155.uri": {
          "3": [
            2816,
            2827
          ]
        }
      },
      "7": {},
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.4.0/AccessControl",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Address",
    "AggregatorV3Interface",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Context",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ERC1155",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/EnumerableSet",
    "ICryptoChampions",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC1155",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC1155MetadataURI",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC1155Receiver",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC165",
    "IMinigameFactoryRegistry",
    "LinkTokenInterface",
    "Minigame",
    "PriceWars",
    "PriceWarsFactory",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeMath",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SignedSafeMath",
    "VRFConsumerBase",
    "VRFRequestIDBase"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "743:29255:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2976:228:5;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2976:228:5;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;965:148:1;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;965:148:1;-1:-1:-1;;;;;;965:148:1;;:::i;:::-;;;;;;;;;;;;;;;;;;1117:25:25;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;2729:105:5;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2729:105:5;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8657:1740:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8657:1740:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8657:1740:25;;;;;;;;;;-1:-1:-1;8657:1740:25;;-1:-1:-1;8657:1740:25;-1:-1:-1;8657:1740:25;:::i;23538:532::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23538:532:25;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4282:112:0;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4282:112:0;;:::i;27844:144:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;27844:144:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;27844:144:25;;;;;;;;;;-1:-1:-1;27844:144:25;;-1:-1:-1;27844:144:25;-1:-1:-1;27844:144:25;:::i;:::-;;;;-1:-1:-1;;;;;27844:144:25;;;;;;;;;;;;;;29255:187;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;29255:187:25;;;;;;;;:::i;:::-;;19789:734;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19789:734:25;;:::i;5534:1184:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5534:1184:5;;;;;;;;-1:-1:-1;5534:1184:5;;-1:-1:-1;;;;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5534:1184:5;;;;;;;;-1:-1:-1;5534:1184:5;;-1:-1:-1;;;;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5534:1184:5;;-1:-1:-1;5534:1184:5;;-1:-1:-1;;;;;5534:1184:5:i;24219:549:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24219:549:25;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18350:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;18350:88:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;18350:88:25;;;;;;;;;;-1:-1:-1;18350:88:25;;-1:-1:-1;18350:88:25;-1:-1:-1;18350:88:25;:::i;4644:223:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4644:223:0;;;;;;-1:-1:-1;;;;;4644:223:0;;:::i;5818:205::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5818:205:0;;;;;;-1:-1:-1;;;;;5818:205:0;;:::i;24897:402:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24897:402:25;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26518:369;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26518:369:25;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10951:2472;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10951:2472:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10951:2472:25;;;;;;;;;;-1:-1:-1;10951:2472:25;;-1:-1:-1;10951:2472:25;-1:-1:-1;10951:2472:25;:::i;25952:457::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25952:457:25;;:::i;28118:107::-;;;;;;;;;;;;;:::i;3361:530:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3361:530:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3361:530:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3361:530:5;;;;;;;;-1:-1:-1;3361:530:5;;-1:-1:-1;;;;;3361:530:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3361:530:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3361:530:5;;-1:-1:-1;3361:530:5;;-1:-1:-1;;;;;3361:530:5:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17897:236:25;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17897:236:25;;:::i;22691:295::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22691:295:25;;;;;;;:::i;3746:40::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3746:40:25;;:::i;10538:253::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10538:253:25;;:::i;3069:29::-;;;;;;;;;;;;;:::i;27055:606::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27055:606:25;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25427:391;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25427:391:25;;:::i;3136:27::-;;;;;;;;;;;;;:::i;3965:136:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3965:136:0;;;;;;;:::i;2088:48:25:-;;;;;;;;;;;;;:::i;2950:137:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2950:137:0;;;;;;-1:-1:-1;;;;;2950:137:0;;:::i;9496:217:28:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9496:217:28;;;;;;;:::i;7777:195:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7777:195:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7777:195:25;;;;;;;;;;;;-1:-1:-1;7777:195:25;-1:-1:-1;7777:195:25;-1:-1:-1;;;;;7777:195:25;;:::i;28411:156::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;28411:156:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;28411:156:25;;;;;;;;;;-1:-1:-1;28411:156:25;;-1:-1:-1;28411:156:25;-1:-1:-1;28411:156:25;:::i;1727:49:0:-;;;;;;;;;;;;;:::i;3959:306:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3959:306:5;;;;;;;;;;:::i;18496:399:25:-;;;;;;;;;;;;;:::i;29762:234::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;29762:234:25;;;;;;;;;;;;;;;;;:::i;2241:31::-;;;;;;;;;;;;;:::i;7156:87::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7156:87:25;;;;:::i;3255:125:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3255:125:0;;:::i;2586:31:25:-;;;;;;;;;;;;;:::i;5101:226:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5101:226:0;;;;;;-1:-1:-1;;;;;5101:226:0;;:::i;8118:109:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8118:109:25;;:::i;3330:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3330:26:25;;:::i;4332:166:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4332:166:5;;;;;;;;;;:::i;4565:897::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4565:897:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4565:897:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4565:897:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4565:897:5;;-1:-1:-1;4565:897:5;;-1:-1:-1;;;;;4565:897:5:i;20774:380:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20774:380:25;;;;;;;:::i;28679:407::-;;;;;;;;;;;;;:::i;2976:228:5:-;3062:7;-1:-1:-1;;;;;3089:21:5;;3081:77;;;;-1:-1:-1;;;3081:77:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3175:13:5;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;3175:22:5;;;;;;;;;;2976:228;;;;;:::o;965:148:1:-;-1:-1:-1;;;;;;1073:33:1;;1050:4;1073:33;;;:20;:33;;;;;;;;965:148;;;;:::o;1117:25:25:-;;;;;;:::o;2729:105:5:-;2823:4;2816:11;;;;;;;;-1:-1:-1;;2816:11:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2791:13;;2816:11;;2823:4;;2816:11;;2823:4;2816:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2729:105;;;:::o;8657:1740:25:-;8806:7;;8833:12;;;;;:32;;;;;;;;8825:41;;;;;;2135:1;8926:12;;:35;8918:44;;;;;;9038:14;;9025:9;:27;;9017:36;;;;;;9134:1;-1:-1:-1;;;;;9101:35:25;:11;9113:8;;9101:21;;;;;;;;;;;;;;;;-1:-1:-1;;9101:21:25;;;;;;;;;;;;-1:-1:-1;;;;;9101:21:25;:35;;;;;;-1:-1:-1;9093:44:25;;-1:-1:-1;9093:44:25;;;;;9271:12;;9253:15;;9271:19;;9288:1;9271:16;:19::i;:::-;9340:1;9307:21;;;:12;:21;;;;;;9253:37;;-1:-1:-1;;;;;;9307:21:25;:35;9300:43;;;;9401:22;;;;:13;:22;;;;;:28;;;:37;9394:45;;;;9549:20;9627:11;9639:8;;9627:21;;;;;;;;;;;;;;;;-1:-1:-1;;9627:21:25;;;;;;;;;;;;-1:-1:-1;;;9605:62:25;;;;-1:-1:-1;;;;;9627:21:25;;;;9605:60;;-1:-1:-1;9605:62:25;;;;;-1:-1:-1;9605:62:25;;;;;;;;9627:21;9605:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9605:62:25;;;;-1:-1:-1;9713:24:25;;:::i;:::-;9761:4;9747:18;;9775:12;;;;:21;;;9806:13;;;;:23;;;9839:25;;;;;;;;;;;;;;;;;;;;;9856:8;;;;;;9839:25;;9856:8;;;;9839:25;;;;;;;;;-1:-1:-1;;;;9839:14:25;;;:25;9874:19;;;:35;;;9944;9950:12;:10;:12::i;:::-;9964:7;9973:1;9944:35;;;;;;;;;;;;:5;:35::i;:::-;10097:12;:10;:12::i;:::-;10073:21;;;;:12;:21;;;;;;;;:36;;-1:-1:-1;;;;;;10073:36:25;-1:-1:-1;;;;;10073:36:25;;;;;;;;;;;10119:13;:22;;;;;;:30;;;;-1:-1:-1;;10119:30:25;;;;;;;;;;;-1:-1:-1;10119:30:25;;;;;;;;;;;;;;;;;;;:22;:30;;;;;;;;;;:::i;:::-;-1:-1:-1;10119:30:25;;;;;;;;;;;10210:12;;:19;;10227:1;10210:16;:19::i;:::-;10195:12;:34;10294:14;;10280:29;;:13;:29::i;:::-;10325:40;10343:7;10352:12;:10;:12::i;:::-;10325:40;;;;;;-1:-1:-1;;;;;10325:40:25;;;;;;;;;;;;;;;;-1:-1:-1;10383:7:25;;8657:1740;-1:-1:-1;;;;;;8657:1740:25:o;23538:532::-;23694:4;23712:7;23733;23754:13;23781:6;23655:7;1766:1;5739:7;:29;:64;;;;;2135:1;5772:7;:31;;5739:64;5731:73;;;;;;23812:30:::1;;:::i;:::-;23845:22;::::0;;;:13:::1;:22;::::0;;;;;;;;23812:55;;::::1;::::0;::::1;::::0;;;;::::1;;;;::::0;;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;::::1;;::::0;;;::::1;-1:-1:-1::0;;23812:55:25;::::1;::::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;23845:22;;23812:55;;;;;;;;;::::1;::::0;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;23812:55:25;;;-1:-1:-1;;23812:55:25::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;23898:17;;23929:18;;::::1;::::0;23961:19:::1;::::0;::::1;::::0;23994:20:::1;::::0;::::1;::::0;24028:25:::1;::::0;;::::1;::::0;23898:17;;23929:18;;-1:-1:-1;23961:19:25;-1:-1:-1;23994:20:25;;-1:-1:-1;24028:25:25;-1:-1:-1;23538:532:25;-1:-1:-1;;;;23538:532:25:o;4282:112:0:-;4339:7;4365:12;;;;;;;;;;:22;;;;4282:112::o;27844:144:25:-;27934:7;27960:11;27972:8;;27960:21;;;;;;;;;;;;;;;;-1:-1:-1;;27960:21:25;;;;;;;;;;;;-1:-1:-1;;;;;27960:21:25;;-1:-1:-1;;;27844:144:25;;;;:::o;29255:187::-;29341:17;29368:67;29385:10;29397:2;1766:1;29422:6;29430:4;29368:16;:67::i;:::-;29255:187;;;:::o;19789:734::-;19853:6;2135:1;5914:6;:29;5906:38;;;;;;5993:15;;;;:7;:15;;;;;:21;;;5985:30;;;;;;19879:15:::1;::::0;;;:7:::1;:15;::::0;;;;:21;::::1;;19871:30;;;::::0;::::1;;19988:12;:10;:12::i;:::-;19965:19;::::0;;;:11:::1;:19;::::0;;;;;-1:-1:-1;;;;;19965:19:25;;::::1;:35:::0;::::1;;19957:44;;;::::0;::::1;;20062:19;::::0;;;:11:::1;:19;::::0;;;;;20056:37:::1;::::0;-1:-1:-1;;;;;20062:19:25::1;20074:6:::0;20062:19;20056:5:::1;:37::i;:::-;20167:15;20185::::0;;;:7:::1;:15;::::0;;;;;;;:23:::1;::::0;::::1;::::0;20238:27:::1;::::0;;::::1;::::0;20315:28;;;:17:::1;:28:::0;;;;;:37;;;;;;;;;:44:::1;::::0;20357:1:::1;20315:41;:44::i;:::-;20275:28;::::0;;;:17:::1;:28;::::0;;;;;;;:37;;;;;;;;:84;;;;20411:19;;;:11:::1;:19:::0;;;;;:32;;-1:-1:-1;;;;;;20411:32:25::1;::::0;;20453:7:::1;:15:::0;;;;;;:29;;-1:-1:-1;;20453:29:25::1;::::0;;20498:18;;;;;;;::::1;::::0;;;;;;;;::::1;6052:1;;19789:734:::0;;:::o;5534:1184:5:-;5788:7;:14;5774:3;:10;:28;5766:81;;;;-1:-1:-1;;;5766:81:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5865:16:5;;5857:66;;;;-1:-1:-1;;;5857:66:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5962:12;:10;:12::i;:::-;-1:-1:-1;;;;;5954:20:5;:4;-1:-1:-1;;;;;5954:20:5;;:60;;;;5978:36;5995:4;6001:12;:10;:12::i;:::-;5978:16;:36::i;:::-;5933:157;;;;-1:-1:-1;;;5933:157:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6101:16;6120:12;:10;:12::i;:::-;6101:31;;6143:60;6164:8;6174:4;6180:2;6184:3;6189:7;6198:4;6143:20;:60::i;:::-;6219:9;6214:349;6238:3;:10;6234:1;:14;6214:349;;;6269:10;6282:3;6286:1;6282:6;;;;;;;;;;;;;;6269:19;;6302:14;6319:7;6327:1;6319:10;;;;;;;;;;;;;;6302:27;;6366:123;6407:6;6366:123;;;;;;;;;;;;;;;;;:9;:13;6376:2;6366:13;;;;;;;;;;;:19;6380:4;-1:-1:-1;;;;;6366:19:5;-1:-1:-1;;;;;6366:19:5;;;;;;;;;;;;;:23;;:123;;;;;:::i;:::-;6344:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;6344:19:5;;;;;;;;;;:145;;;;6523:17;;;;;;:29;;6545:6;6523:21;:29::i;:::-;6503:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;6503:17:5;;;;;;;;;;:49;;;;-1:-1:-1;6250:3:5;;6214:349;;;;6608:2;-1:-1:-1;;;;;6578:47:5;6602:4;-1:-1:-1;;;;;6578:47:5;6592:8;-1:-1:-1;;;;;6578:47:5;;6612:3;6617:7;6578:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6636:75;6672:8;6682:4;6688:2;6692:3;6697:7;6706:4;6636:35;:75::i;:::-;5534:1184;;;;;;:::o;24219:549:25:-;24365:4;24392:13;24431:6;24469:7;24506;24327:6;2135:1;5914:6;:29;5906:38;;;;;;5993:15;;;;:7;:15;;;;;:21;;;5985:30;;;;;;24571:15:::1;::::0;;;:7:::1;:15;::::0;;;;;;;;:21;;24644:29:::1;::::0;::::1;::::0;24687:27:::1;::::0;::::1;::::0;24728:23:::1;::::0;::::1;::::0;24606:24:::1;::::0;;::::1;24550:211:::0;;;;24571:21:::1;::::0;24550:211;::::1;;;-1:-1:-1::0;;24550:211:25;;;::::1;::::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;24571:21:::1;::::0;;::::1;::::0;24606:24;;24644:29;;24687:27;;24728:23;;24606:24;;24550:211;;::::1;24606:24:::0;24550:211;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24219:549:::0;;;;;;;;:::o;18350:88::-;6252:20;-1:-1:-1;;;;;;;;;;;6252:8:25;:20::i;:::-;18350:88;;:::o;4644:223:0:-;4735:6;:12;;;;;;;;;;:22;;;4727:45;;4759:12;:10;:12::i;:::-;4727:7;:45::i;:::-;4719:105;;;;-1:-1:-1;;;4719:105:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4835:25;4846:4;4852:7;4835:10;:25::i;5818:205::-;5915:12;:10;:12::i;:::-;-1:-1:-1;;;;;5904:23:0;:7;-1:-1:-1;;;;;5904:23:0;;5896:83;;;;-1:-1:-1;;;5896:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5990:26;6002:4;6008:7;5990:11;:26::i;24897:402:25:-;25042:13;25077:7;25109;25142:5;25004:6;2135:1;5914:6;:29;5906:38;;;;;;5993:15;;;;:7;:15;;;;;:21;;;5985:30;;;;;;25194:15:::1;::::0;;;:7:::1;:15;::::0;;;;;;;;25216:22:::1;::::0;::::1;::::0;25240:23:::1;::::0;::::1;::::0;25265:26:::1;::::0;::::1;::::0;25194:20:::1;::::0;;::::1;25186:106:::0;;;;::::1;25265:26;25186:106:::0;;::::1;;::::0;;;::::1;-1:-1:-1::0;;25186:106:25;;;::::1;::::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;25194:20;25216:22;;25240:23;;25265:26:::1;::::0;;::::1;::::0;25186:106;;25194:20;;25186:106;;::::1;25194:20:::0;25186:106;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24897:402:::0;;;;;;:::o;26518:369::-;26662:5;26690;26715;26742;26624:6;2135:1;5914:6;:29;5906:38;;;;;;5993:15;;;;:7;:15;;;;;:21;;;5985:30;;;;;;-1:-1:-1;;;26791:15:25::1;::::0;;;-1:-1:-1;;26791:7:25::1;:15;::::0;;;;:21:::1;;::::0;::::1;-1:-1:-1::0;;;26791:21:25;::::1;::::0;::::1;::::0;-1:-1:-1;;;26814:18:25;::::1;::::0;::::1;::::0;-1:-1:-1;;;26834:20:25;::::1;::::0;::::1;::::0;-1:-1:-1;;;26856:23:25;;::::1;;::::0;26518:369::o;10951:2472::-;11117:7;11091;1766:1;5739:7;:29;:64;;;;;2135:1;5772:7;:31;;5739:64;5731:73;;;;;;11164:15:::1;11148:12;::::0;::::1;;::::0;:31;::::1;;;;;;;11140:40;;;::::0;::::1;;11236:22;::::0;;;:13:::1;:22;::::0;;;;:28;::::1;;11228:37;;;::::0;::::1;;11335:21;11348:7;11335:12;:21::i;:::-;11327:30;;;::::0;::::1;;11427:17;11447:39;11464:12;;11478:7;11447:16;:39::i;:::-;11427:59;;11517:9;11504;:22;;11496:31;;;::::0;::::1;;11600:14;2135:1;11617:19;11634:1;11617:12;;:16;;:19;;;;:::i;:::-;:42;11707:1;11676:19:::0;;;:11:::1;:19;::::0;;;;;11617:42;;-1:-1:-1;;;;;;11676:19:25::1;:33:::0;11669:41:::1;;;;11770:15;::::0;;;:7:::1;:15;::::0;;;;:21;::::1;;:30;11763:38;;;;11888:16;;:::i;:::-;11927:4;11914:17:::0;;11941:20:::1;::::0;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;11953:8;;;;;;11941:20;::::1;11953:8:::0;;;;11941:20;::::1;;;;;;;;;;;;;;;;;;;;;;;;;:4;:9;;:20;;;;11990:12;;11971:4;:16;;:31;;;::::0;::::1;12027:7;12012:4;:12;;:22;;;::::0;::::1;12058:13;:22;12072:7;12058:22;;;;;;;;;;;:29;;;12044:4;:11;;:43;;;::::0;::::1;12112:13;:22;12126:7;12112:22;;;;;;;;;;;:30;;;12097:4;:12;;:45;;;::::0;::::1;12168:13;:22;12182:7;12168:22;;;;;;;;;;;:31;;12152:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;12152:13:25::1;::::0;;::::1;:47:::0;;;;12209:15:::1;::::0;;;:7:::1;:15;::::0;;;;;;:22;;;;-1:-1:-1;;12209:22:25::1;::::0;::::1;;;::::0;;;;::::1;::::0;;;12152:13;;12209:22:::1;::::0;-1:-1:-1;12209:22:25;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;12209:22:25::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;:::ii;:::-;12357:29;::::0;;;:18:::1;:29;::::0;;;;:38;;;12303:44;-1:-1:-1;12405:21:25::1;12303:44:::0;12405:10:::1;:21::i;:::-;12461:34;12467:12;:10;:12::i;12461:34::-;12568:63;12574:12;:10;:12::i;:::-;1766:1;1255:12;12568:63;;;;;;;;;;;::::0;:5:::1;:63::i;:::-;12727:12;:10;:12::i;:::-;12705:19;::::0;;;:11:::1;:19;::::0;;;;:34;;-1:-1:-1;;;;;;12705:34:25::1;-1:-1:-1::0;;;;;12705:34:25;;;::::1;::::0;;;::::1;::::0;;12825:12:::1;::::0;:19:::1;::::0;-1:-1:-1;12825:16:25::1;:19::i;:::-;12810:12;:34:::0;12915:12:::1;::::0;12897:31:::1;::::0;;;:17:::1;:31;::::0;;;;;;;:40;;;;;;;;;:47:::1;::::0;12942:1:::1;12897:44;:47::i;:::-;12872:12;::::0;12854:31:::1;::::0;;;:17:::1;:31;::::0;;;;;;;:40;;;;;;;;:90;;;;13006:51:::1;13054:2;13006:43;:9:::0;1923:1:::1;13006:13;:43::i;:::-;:47:::0;::::1;:51::i;:::-;13067:17;13087:21:::0;;;:12:::1;:21;::::0;;;;;;13137:39;;12985:72;;-1:-1:-1;;;;;;13087:21:25::1;::::0;;;12985:72;;13067:17;13137:39;13067:17;13137:39;12985:72;13087:21;13137:39:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13118:58;;;13194:7;13186:34;;;::::0;;-1:-1:-1;;;13186:34:25;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;13186:34:25;;;;;;;;;;;;;::::1;;13320:24;13334:9;13320:13;:24::i;:::-;13360:32;13371:6;13379:12;:10;:12::i;:::-;13360:32;::::0;;;;;-1:-1:-1;;;;;13360:32:25;;::::1;;::::0;::::1;::::0;;;;;;;;;::::1;-1:-1:-1::0;13410:6:25;;10951:2472;-1:-1:-1;;;;;;;;;;10951:2472:25:o;25952:457::-;26094:5;26126;26159;26190;26056:6;2135:1;5914:6;:29;5906:38;;;;;;5993:15;;;;:7;:15;;;;;:21;;;5985:30;;;;;;-1:-1:-1;;;26252:15:25::1;::::0;;;-1:-1:-1;;26252:7:25::1;:15;::::0;;;;:25:::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;26291:26;;::::1;::::0;::::1;::::0;-1:-1:-1;;;26331:24:25;::::1;::::0;::::1;::::0;-1:-1:-1;;;26369:23:25;;::::1;;::::0;25952:457::o;28118:107::-;28206:12;;28118:107;;:::o;3361:530:5:-;3534:16;3593:3;:10;3574:8;:15;:29;3566:83;;;;-1:-1:-1;;;3566:83:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3660:30;3707:8;:15;3693:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3693:30:5;;3660:63;;3739:9;3734:120;3758:8;:15;3754:1;:19;3734:120;;;3813:30;3823:8;3832:1;3823:11;;;;;;;;;;;;;;3836:3;3840:1;3836:6;;;;;;;;;;;;;;3813:9;:30::i;:::-;3794:13;3808:1;3794:16;;;;;;;;;;;;;;;;;:49;3775:3;;3734:120;;;-1:-1:-1;3871:13:5;3361:530;-1:-1:-1;;;3361:530:5:o;17897:236:25:-;17985:7;17968:6;2135:1;5914:6;:29;5906:38;;;;;;5993:15;;;;:7;:15;;;;;:21;;;5985:30;;;;;;18043:1:::1;18012:19:::0;;;:11:::1;:19;::::0;;;;;-1:-1:-1;;;;;18012:19:25::1;18004:42;;;::::0;::::1;;-1:-1:-1::0;;18107:19:25::1;::::0;;;:11:::1;:19;::::0;;;;;-1:-1:-1;;;;;18107:19:25::1;::::0;17897:236::o;22691:295::-;22853:7;22827;1766:1;5739:7;:29;:64;;;;;2135:1;5772:7;:31;;5739:64;5731:73;;;;;;22893:12:::1;;22884:5;:21;;22876:30;;;::::0;::::1;;-1:-1:-1::0;;22946:24:25::1;::::0;;;:17:::1;:24;::::0;;;;;;;:33;;;;;;;;;;22691:295::o;3746:40::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3746:40:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3746:40:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10538:253::-;10638:7;10620;1766:1;5739:7;:29;:64;;;;;2135:1;5772:7;:31;;5739:64;5731:73;;;;;;10698:1:::1;10665:21:::0;;;:12:::1;:21;::::0;;;;;-1:-1:-1;;;;;10665:21:25::1;10657:44;;;::::0;::::1;;-1:-1:-1::0;;10763:21:25::1;::::0;;;:12:::1;:21;::::0;;;;;-1:-1:-1;;;;;10763:21:25::1;::::0;10538:253::o;3069:29::-;;;;:::o;27055:606::-;27198:5;27229;27261;27296;27331;27360;27160:6;2135:1;5914:6;:29;5906:38;;;;;;5993:15;;;;:7;:15;;;;;:21;;;5985:30;;;;;;-1:-1:-1;;;27423:15:25::1;::::0;;;-1:-1:-1;;27423:7:25::1;:15;::::0;-1:-1:-1;;27423:15:25;;;:24:::1;;::::0;::::1;-1:-1:-1::0;;;27423:24:25;::::1;::::0;::::1;::::0;-1:-1:-1;;;27461:25:25;::::1;::::0;::::1;::::0;-1:-1:-1;;;27500:28:25;::::1;::::0;::::1;::::0;-1:-1:-1;;;27542:28:25;::::1;::::0;::::1;::::0;-1:-1:-1;;;27584:22:25;::::1;::::0;::::1;::::0;-1:-1:-1;;;27620:24:25;::::1;::::0;;::::1;::::0;27055:606::o;25427:391::-;25577:5;25607;25637;25667;25539:6;2135:1;5914:6;:29;5906:38;;;;;;5993:15;;;;:7;:15;;;;;:21;;;5985:30;;;;;;-1:-1:-1;;;25716:15:25::1;::::0;;;-1:-1:-1;;25716:7:25::1;:15;::::0;;;;:22:::1;;::::0;::::1;;::::0;::::1;::::0;::::1;::::0;25740;;::::1;::::0;::::1;::::0;25764;;::::1;::::0;::::1;::::0;-1:-1:-1;;;25788:22:25;;::::1;;::::0;25427:391::o;3136:27::-;;;;:::o;3965:136:0:-;4038:7;4064:12;;;;;;;;;;:30;;4088:5;4064:23;:30::i;:::-;4057:37;3965:136;-1:-1:-1;;;3965:136:0:o;2088:48:25:-;2135:1;2088:48;:::o;2950:137:0:-;3019:4;3042:12;;;;;;;;;;:38;;3072:7;3042:29;:38::i;9496:217:28:-;9592:10;-1:-1:-1;;;;;9606:14:28;9592:28;;9584:72;;;;;-1:-1:-1;;;9584:72:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;9666:40;9684:9;9695:10;9666:17;:40::i;7777:195:25:-;6252:20;-1:-1:-1;;;;;;;;;;;6252:8:25;:20::i;:::-;7916:11:::1;7889;7901;;7889:24;;;;;;;;;::::0;;;::::1;::::0;;;-1:-1:-1;;7889:24:25::1;::::0;;;;;::::1;::::0;;;;:38;;-1:-1:-1;;;;;7889:38:25;;;::::1;-1:-1:-1::0;;;;;;7889:38:25;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;7937:10:25::1;:28:::0;;7889:38;7937:28;::::1;::::0;;7889:24:::1;7937:28:::0;;;;::::1;::::0;;::::1;7953:11:::0;;7937:28:::1;:::i;:::-;;7777:195:::0;;;:::o;28411:156::-;6143:25;1639:28;6143:8;:25::i;:::-;28514:24:::1;:46:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;28514:46:25;;;;::::1;::::0;;::::1;28544:15:::0;;28514:46:::1;:::i;1727:49:0:-:0;1772:4;1727:49;:::o;3959:306:5:-;4077:8;-1:-1:-1;;;;;4061:24:5;:12;:10;:12::i;:::-;-1:-1:-1;;;;;4061:24:5;;;4053:78;;;;-1:-1:-1;;;4053:78:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4187:8;4142:18;:32;4161:12;:10;:12::i;:::-;-1:-1:-1;;;;;4142:32:5;;;;;;;;;;;;;;;;;-1:-1:-1;4142:32:5;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;4142:53:5;;;;;;;;;;;4225:12;:10;:12::i;:::-;-1:-1:-1;;;;;4210:48:5;;4249:8;4210:48;;;;;;;;;;;;;;;;;;;;3959:306;;:::o;18496:399:25:-;6252:20;-1:-1:-1;;;;;;;;;;;6252:8:25;:20::i;:::-;18579:1:::1;18564:12;;:16;18556:25;;;::::0;::::1;;18644:1;18627:150;2135:1;18647;:25;18627:150;;18697:16;::::0;;;:13:::1;:16;::::0;;;;:22;::::1;;18693:74;;;18739:13;18750:1;18739:10;:13::i;:::-;18674:3;;18627:150;;;-1:-1:-1::0;18833:12:25::1;::::0;:19:::1;::::0;18850:1:::1;18833:16;:19::i;:::-;18818:12;:34:::0;18868:20:::1;::::0;::::1;::::0;;;::::1;18496:399::o:0;29762:234::-;29901:17;29928:61;29945:4;29951:2;1766:1;29976:6;29984:4;29928:16;:61::i;2241:31::-;;;;:::o;7156:87::-;6252:20;-1:-1:-1;;;;;;;;;;;6252:8:25;:20::i;:::-;7216:12:::1;:20:::0;;7231:5;;7216:12;-1:-1:-1;;7216:20:25::1;::::0;7231:5;7216:20;;::::1;;;;;;;;;;;7156:87:::0;:::o;3255:125:0:-;3318:7;3344:12;;;;;;;;;;:29;;:27;:29::i;2586:31:25:-;;;;:::o;5101:226:0:-;5193:6;:12;;;;;;;;;;:22;;;5185:45;;5217:12;:10;:12::i;5185:45::-;5177:106;;;;-1:-1:-1;;;5177:106:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8118:109:25;6252:20;-1:-1:-1;;;;;;;;;;;6252:8:25;:20::i;:::-;8198:14:::1;:22:::0;8118:109::o;3330:26::-;;;;;;;;;;4332:166:5;-1:-1:-1;;;;;4454:27:5;;;4431:4;4454:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;4332:166::o;4565:897::-;-1:-1:-1;;;;;4780:16:5;;4772:66;;;;-1:-1:-1;;;4772:66:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4877:12;:10;:12::i;:::-;-1:-1:-1;;;;;4869:20:5;:4;-1:-1:-1;;;;;4869:20:5;;:60;;;;4893:36;4910:4;4916:12;:10;:12::i;4893:36::-;4848:148;;;;-1:-1:-1;;;4848:148:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5007:16;5026:12;:10;:12::i;:::-;5007:31;;5049:96;5070:8;5080:4;5086:2;5090:21;5108:2;5090:17;:21::i;:::-;5113:25;5131:6;5113:17;:25::i;:::-;5140:4;5049:20;:96::i;:::-;5178:77;5202:6;5178:77;;;;;;;;;;;;;;;;;:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5178:19:5;;;;;;;;;;;:77;:23;:77::i;:::-;5156:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5156:19:5;;;;;;;;;;:99;;;;5285:17;;;;;;:29;;5307:6;5285:21;:29::i;:::-;5265:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5265:17:5;;;;;;;;;;;;;:49;;;;5330:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5387:68;5418:8;5428:4;5434:2;5438;5442:6;5450:4;5387:30;:68::i;20774:380:25:-;20932:7;20906;1766:1;5739:7;:29;:64;;;;;2135:1;5772:7;:31;;5739:64;5731:73;;;;;;20972:12:::1;;20963:5;:21;;20955:30;;;::::0;::::1;;21043:18;21064:24:::0;;;:17:::1;:24;::::0;;;;;;;:33;;;;;;;;;:40:::1;::::0;21102:1:::1;21064:37;:40::i;:::-;21043:61;;21122:25;21136:10;21122:13;:25::i;:::-;21115:32:::0;20774:380;-1:-1:-1;;;;;20774:380:25:o;28679:407::-;6252:20;-1:-1:-1;;;;;;;;;;;6252:8:25;:20::i;:::-;28780:24:::1;::::0;28816:13:::1;::::0;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;28816:13:25::1;::::0;;::::1;::::0;;;28780:50;;-1:-1:-1;;;28780:50:25;;::::1;::::0;::::1;::::0;;;;;;;;;;;28746:31:::1;::::0;-1:-1:-1;;;;;28780:24:25::1;::::0;:35:::1;::::0;28816:13;28780:50;;;;;;;;;28816:13;28780:50;;28816:13;28746:31;28780:50:::1;;;;;;;::::0;;::::1;::::0;;;::::1;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;28780:50:25;28948:46:::1;::::0;;-1:-1:-1;;;28948:46:25;;28988:4:::1;28948:46;::::0;::::1;::::0;;;28780:50;;-1:-1:-1;28780:50:25;;28840:33:::1;::::0;-1:-1:-1;;;;;28948:31:25;::::1;::::0;::::1;::::0;:46;;;;;28780:50:::1;::::0;28948:46;;;;;;;;28840:33;28948:31;:46;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;28948:46:25;;-1:-1:-1;29004:45:25::1;1639:28;28948:46:::0;29004:9:::1;:45::i;:::-;29059:8;-1:-1:-1::0;;;;;29059:18:25::1;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;6282:1;;;28679:407::o:0;6429:150:12:-;6499:4;6522:50;6527:3;-1:-1:-1;;;;;6547:23:12;;6522:4;:50::i;6984:165::-;7064:4;7087:55;7097:3;-1:-1:-1;;;;;7117:23:12;;7087:9;:55::i;2690:175:3:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;598:104:11;685:10;598:104;:::o;8015:572:5:-;-1:-1:-1;;;;;8129:21:5;;8121:67;;;;-1:-1:-1;;;8121:67:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8199:16;8218:12;:10;:12::i;:::-;8199:31;;8241:107;8262:8;8280:1;8284:7;8293:21;8311:2;8293:17;:21::i;8241:107::-;8384:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;8384:22:5;;;;;;;;;;:34;;8411:6;8384:26;:34::i;:::-;8359:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;8359:22:5;;;;;;;;;;;;:59;;;;8433:57;;;;;;;;;;;;;8359:22;;8433:57;;;;;;;;;;;;8501:79;8532:8;8550:1;8554:7;8563:2;8567:6;8575:4;8501:30;:79::i;:::-;8015:572;;;;;:::o;23078:237:25:-;23160:1;23138:19;:9;23152:4;23138:13;:19::i;:::-;:23;23134:175;;;23178:12;23196:10;23220:19;:9;23234:4;23220:13;:19::i;:::-;23196:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23177:68;;;23267:7;23259:16;;;;;23134:175;23078:237;:::o;9881:538:5:-;-1:-1:-1;;;;;9976:21:5;;9968:69;;;;-1:-1:-1;;;9968:69:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10048:16;10067:12;:10;:12::i;:::-;10048:31;;10090:105;10111:8;10121:7;10138:1;10142:21;10160:2;10142:17;:21::i;:::-;10165:25;10183:6;10165:17;:25::i;:::-;10090:105;;;;;;;;;;;;:20;:105::i;:::-;10231:108;10271:6;10231:108;;;;;;;;;;;;;;;;;:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;10231:22:5;;;;;;;;;;;:108;:26;:108::i;:::-;10206:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;10206:22:5;;;;;;;;;;;;:133;;;;10355:57;;;;;;;;;;;;;10206:13;;:22;;10355:57;;;;;;;;;;;;;9881:538;;;;:::o;3136:155:3:-;3194:7;3226:1;3221;:6;;3213:49;;;;;-1:-1:-1;;;3213:49:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3279:5:3;;;3136:155::o;21720:704:25:-;21951:66;21978:8;21988:4;21994:2;21998:3;22003:7;22012:4;21951:26;:66::i;:::-;22033:9;22028:390;22052:3;:10;22048:1;:14;22028:390;;;1766:1;22172:3;22176:1;22172:6;;;;;;;;;;;;;;:28;:62;;;;;2135:1;22204:3;22208:1;22204:6;;;;;;;;;;;;;;:30;;22172:62;22168:135;;;22285:2;22254:12;:20;22267:3;22271:1;22267:6;;;;;;;;;;;;;;22254:20;;;;;;;;;;;;:34;;;;;-1:-1:-1;;;;;22254:34:25;;;;;-1:-1:-1;;;;;22254:34:25;;;;;;22168:135;2135:1;22320:3;22324:1;22320:6;;;;;;;;;;;;;;:29;22316:92;;;22391:2;22369:11;:19;22381:3;22385:1;22381:6;;;;;;;;;;;;;;22369:19;;;;;;;;;;;;:24;;;;;-1:-1:-1;;;;;22369:24:25;;;;;-1:-1:-1;;;;;22369:24:25;;;;;;22316:92;22064:3;;22028:390;;5432:163:3;5518:7;5553:12;5545:6;;;;5537:29;;;;-1:-1:-1;;;5537:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5583:5:3;;;5432:163::o;13240:778:5:-;13484:15;:2;-1:-1:-1;;;;;13484:13:5;;:15::i;:::-;13480:532;;;13536:2;-1:-1:-1;;;;;13519:43:5;;13563:8;13573:4;13579:3;13584:7;13593:4;13519:79;;;;;;;;;;;;;-1:-1:-1;;;;;13519:79:5;;;;;;-1:-1:-1;;;;;13519:79:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13519:79:5;;;13515:487;;;;:::i;:::-;;;;;;;;13871:14;;-1:-1:-1;;;13871:14:5;;;;;;;;;;;;;;;;;13878:6;;13871:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13515:487;13925:62;;-1:-1:-1;;;13925:62:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13515:487;-1:-1:-1;;;;;;13647:64:5;;-1:-1:-1;;;13647:64:5;13643:161;;13735:50;;-1:-1:-1;;;13735:50:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7337:120:25;7401:25;7409:4;7415:10;7401:7;:25::i;:::-;7393:34;;;;;7025:184:0;7098:6;:12;;;;;;;;;;:33;;7123:7;7098:24;:33::i;:::-;7094:109;;;7179:12;:10;:12::i;:::-;-1:-1:-1;;;;;7152:40:0;7170:7;-1:-1:-1;;;;;7152:40:0;7164:4;7152:40;;;;;;;;;;7025:184;;:::o;7215:188::-;7289:6;:12;;;;;;;;;;:36;;7317:7;7289:27;:36::i;:::-;7285:112;;;7373:12;:10;:12::i;:::-;-1:-1:-1;;;;;7346:40:0;7364:7;-1:-1:-1;;;;;7346:40:0;7358:4;7346:40;;;;;;;;;;7215:188;;:::o;13789:666:25:-;13923:12;;13851:4;13905:31;;;:17;:31;;;;;;;;:40;;;;;;;;;13948:1;-1:-1:-1;13901:86:25;;;-1:-1:-1;13972:4:25;13965:11;;13901:86;14110:12;;14062:27;14092:31;;;:17;:31;;;;;;;;:40;;;;;;;;;14159:1;14142:219;14167:12;;14162:1;:17;14142:219;;14222:12;;14204:31;;;;:17;:31;;;;;;;;:34;;;;;;;;;:56;-1:-1:-1;14200:151:25;;;14320:12;;14302:31;;;;:17;:31;;;;;;;;:34;;;;;;;;;;-1:-1:-1;14200:151:25;14181:3;;14142:219;;;-1:-1:-1;14422:26:25;:19;14446:1;14422:23;:26::i;:::-;14396:12;;14378:31;;;;:17;:31;;;;;;;;:40;;;;;;;;;:70;;;-1:-1:-1;;13789:666:25;;;:::o;6453:272::-;6523:17;6593:4;;6560;-1:-1:-1;;;;;6560:14:25;;6583:4;6560:29;;;;;;;;;;;;;-1:-1:-1;;;;;6560:29:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6560:29:25;:37;;6552:46;;;;;;6667:51;6685:8;;6695:4;;6701:16;6667:17;:51::i;14567:2749::-;14627:29;;;;:18;:29;;;;;;2135:1;5914:29;;5906:38;;;;;;5993:15;;;;:7;:15;;;;;:21;;;5985:30;;;;;;14668:14:::1;14685:29:::0;;;:18:::1;:29;::::0;;;;;;;;14747:17:::1;:28:::0;;;;;;14819:15;;;:7:::1;:15:::0;;;;;;:21:::1;;:25:::0;;-1:-1:-1;;14819:25:25::1;-1:-1:-1::0;;;14819:25:25::1;::::0;;14685:29;14918:26:::1;14928:1;14747:28:::0;14918:9:::1;:26::i;:::-;14871:15;::::0;;;:7:::1;:15;::::0;;;;:26:::1;;14870:74:::0;;-1:-1:-1;;14870:74:25::1;;::::0;;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;15013:29:25::1;15023:1;14870:74:::0;15013:9:::1;:29::i;:::-;14970:15;::::0;;;:7:::1;:15;::::0;;;;:22:::1;;14969:73:::0;;::::1;::::0;;::::1;;;-1:-1:-1::0;;14969:73:25;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;15110:29:25::1;15120:1;14969:73:::0;15110:9:::1;:29::i;:::-;15067:15;::::0;;;:7:::1;:15;::::0;;;;:22:::1;;15066:73:::0;;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;15066:73:25;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;15207:29:25::1;15217:1;15066:73:::0;15207:9:::1;:29::i;:::-;15164:15;::::0;;;:7:::1;:15;::::0;;;;:22:::1;;15163:73:::0;;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;15163:73:25;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;15304:29:25::1;15314:1;15163:73:::0;15304:9:::1;:29::i;:::-;15261:15;::::0;;;:7:::1;:15;::::0;;;;:22:::1;;15260:73:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;15260:73:25::1;-1:-1:-1::0;;15260:73:25;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;15405:29:25::1;15415:1;15260:73:::0;15405:9:::1;:29::i;:::-;15359:15;::::0;;;:7:::1;:15;::::0;;;;:25:::1;;15358:76:::0;;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;15358:76:25;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;15506:30:25::1;15516:2;15358:76:::0;15506:9:::1;:30::i;:::-;15459:15;::::0;;;:7:::1;:15;::::0;;;;:26:::1;;15458:78:::0;;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;15458:78:25;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;15607:30:25::1;15617:2;15458:78:::0;15607:9:::1;:30::i;:::-;15562:15;::::0;;;:7:::1;:15;::::0;;;;:24:::1;;15561:76:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;15561:76:25::1;-1:-1:-1::0;;15561:76:25;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;15707:29:25::1;15562:24;15561:76:::0;15707:9:::1;:29::i;:::-;15663:15;::::0;;;:7:::1;:15;::::0;;;;:23:::1;;15662:74:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;15662:74:25::1;-1:-1:-1::0;;15662:74:25;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;15801:30:25::1;15811:2;15662:74:::0;15801:9:::1;:30::i;:::-;15762:15;::::0;;;:7:::1;:15;::::0;;;;:18:::1;;15761:70:::0;;-1:-1:-1;;;;15761:70:25::1;-1:-1:-1::0;;;15761:70:25::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;15882:25:25::1;::::0;:18;;::::1;;15905:1;15882:22;:25::i;:::-;15855:15;::::0;;;:7:::1;:15;::::0;;;;:18:::1;;:53:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;15855:53:25::1;-1:-1:-1::0;;;;15855:53:25;;::::1;::::0;;;::::1;::::0;;15960:30:::1;15970:2;15974:15:::0;15960:9:::1;:30::i;:::-;15919:15;::::0;;;:7:::1;:15;::::0;;;;:20:::1;;15918:72:::0;;-1:-1:-1;;;;15918:72:25::1;-1:-1:-1::0;;;15918:72:25::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;16043:27:25::1;::::0;:20;;::::1;;16068:1;16043:24;:27::i;:::-;16014:15;::::0;;;:7:::1;:15;::::0;;;;:20:::1;;:57:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;16014:57:25::1;-1:-1:-1::0;;;;16014:57:25;;::::1;::::0;;;::::1;::::0;;16126:30:::1;16136:2;16140:15:::0;16126:9:::1;:30::i;:::-;16082:15;::::0;;;:7:::1;:15;::::0;;;;:23:::1;;16081:75:::0;;-1:-1:-1;;;;16081:75:25::1;-1:-1:-1::0;;;16081:75:25::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;16212:30:25::1;::::0;:23;;::::1;;16240:1;16212:27;:30::i;:::-;16180:15;::::0;;;:7:::1;:15;::::0;;;;:23:::1;;:63:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;16180:63:25::1;-1:-1:-1::0;;;;16180:63:25;;::::1;::::0;;;::::1;::::0;;16300:30:::1;16310:2;16314:15:::0;16300:9:::1;:30::i;:::-;16255:15;::::0;;;:7:::1;:15;::::0;;;;:24:::1;;16254:76:::0;;-1:-1:-1;;;;16254:76:25::1;-1:-1:-1::0;;;16254:76:25::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;16386:31:25::1;::::0;:24;;::::1;;16415:1;16386:28;:31::i;:::-;16353:15;::::0;;;:7:::1;:15;::::0;;;;:24:::1;;:65:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;16353:65:25::1;-1:-1:-1::0;;;;16353:65:25;;::::1;::::0;;;::::1;::::0;;16475:30:::1;16485:2;16489:15:::0;16475:9:::1;:30::i;:::-;16429:15;::::0;;;:7:::1;:15;::::0;;;;:25:::1;;16428:77:::0;;-1:-1:-1;;;;16428:77:25::1;-1:-1:-1::0;;;16428:77:25::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;16562:32:25::1;::::0;:25;;::::1;;16592:1;16562:29;:32::i;:::-;16528:15;::::0;;;:7:::1;:15;::::0;;;;:25:::1;;:67:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;16528:67:25::1;-1:-1:-1::0;;;;16528:67:25;;::::1;::::0;;;::::1;::::0;;16655:30:::1;16665:2;16669:15:::0;16655:9:::1;:30::i;:::-;16606:15;::::0;;;:7:::1;:15;::::0;;;;:28:::1;;16605:80:::0;;-1:-1:-1;;;;16605:80:25::1;-1:-1:-1::0;;;16605:80:25::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;16745:35:25::1;::::0;:28;;::::1;;16778:1;16745:32;:35::i;:::-;16708:15;::::0;;;:7:::1;:15;::::0;;;;:28:::1;;:73:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;16708:73:25::1;-1:-1:-1::0;;;;16708:73:25;;::::1;::::0;;;::::1;::::0;;16841:30:::1;16851:2;16855:15:::0;16841:9:::1;:30::i;:::-;16792:15;::::0;;;:7:::1;:15;::::0;;;;:28:::1;;16791:80:::0;;-1:-1:-1;;;;16791:80:25::1;-1:-1:-1::0;;;16791:80:25::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;16931:35:25::1;::::0;:28;;::::1;;16964:1;16931:32;:35::i;:::-;16894:15;::::0;;;:7:::1;:15;::::0;;;;:28:::1;;:73:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;16894:73:25::1;-1:-1:-1::0;;;;16894:73:25;;::::1;::::0;;;::::1;::::0;;17021:30:::1;16894:28;17035:15:::0;17021:9:::1;:30::i;:::-;16978:15;::::0;;;:7:::1;:15;::::0;;;;:22:::1;;16977:74:::0;;-1:-1:-1;;;;16977:74:25::1;-1:-1:-1::0;;;16977:74:25::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;17105:29:25::1;::::0;:22;;::::1;;17132:1;17105:26;:29::i;:::-;17074:15;::::0;;;:7:::1;:15;::::0;;;;:22:::1;;:61:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;17074:61:25::1;-1:-1:-1::0;;;;17074:61:25;;::::1;::::0;;;::::1;::::0;;17191:30:::1;17201:2;17205:15:::0;17191:9:::1;:30::i;:::-;17146:15;::::0;;;:7:::1;:15;::::0;;;;:24:::1;;17145:76:::0;;-1:-1:-1;;;;17145:76:25::1;-1:-1:-1::0;;;17145:76:25::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;17277:31:25::1;::::0;:24;;::::1;;17306:1;17277:28;:31::i;:::-;17244:15;::::0;;;:7:::1;:15;::::0;;;;;:24:::1;;:65:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;17244:65:25::1;-1:-1:-1::0;;;;17244:65:25;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;;;14567:2749:25:o;3538:215:3:-;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:3;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4217:150;4275:7;4306:1;4302;:5;4294:44;;;;;-1:-1:-1;;;4294:44:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;;4217:150;-1:-1:-1;;;4217:150:3:o;7677:156:12:-;7751:7;7801:22;7805:3;7817:5;7801:3;:22::i;6874:173:25:-;6968:28;;;;:17;:28;;;;;:41;;;7019:21;6986:9;7019:10;:21::i;19041:580::-;19108:7;1766:1;5739:7;:29;:64;;;;;2135:1;5772:7;:31;;5739:64;5731:73;;;;;;19135:22:::1;::::0;;;:13:::1;:22;::::0;;;;:28;::::1;;19127:37;;;::::0;::::1;;19402:21;::::0;;;:12:::1;:21;::::0;;;;;19396:40:::1;::::0;-1:-1:-1;;;;;19402:21:25::1;19415:7:::0;19402:21;19396:5:::1;:40::i;:::-;19505:12;::::0;:19:::1;::::0;19522:1:::1;19505:16;:19::i;:::-;19490:12;:34:::0;-1:-1:-1;19566:1:25::1;19534:21:::0;;;:12:::1;:21;::::0;;;;;;;:34;;-1:-1:-1;;;;;;19534:34:25::1;::::0;;19578:13:::1;:22:::0;;;;;:36;;-1:-1:-1;;19578:36:25::1;::::0;;19041:580::o;7230:115:12:-;7293:7;7319:19;7327:3;7319:7;:19::i;14024:193:5:-;14143:16;;;14157:1;14143:16;;;;;;;;;14090;;;;14143;;;;;;;;;;;;-1:-1:-1;14143:16:5;14118:41;;14180:7;14169:5;14175:1;14169:8;;;;;;;;;;;;;;;;;:18;14205:5;14024:193;-1:-1:-1;;14024:193:5:o;12493:741::-;12712:15;:2;-1:-1:-1;;;;;12712:13:5;;:15::i;:::-;12708:520;;;12764:2;-1:-1:-1;;;;;12747:38:5;;12786:8;12796:4;12802:2;12806:6;12814:4;12747:72;;;;;;;;;;;;;-1:-1:-1;;;;;12747:72:5;;;;;;-1:-1:-1;;;;;12747:72:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12747:72:5;;;12743:475;;;;:::i;:::-;-1:-1:-1;;;;;;12868:59:5;;-1:-1:-1;;;12868:59:5;12864:156;;12951:50;;-1:-1:-1;;;12951:50:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21391:261:25;21456:7;;21513:1;21532:37;21565:3;21532:28;21558:1;21532:21;:9;21546:6;21532:13;:21::i;:::-;:25;;:28::i;:37::-;21524:45;-1:-1:-1;21587:35:25;21597:24;21618:2;21597:16;:4;21606:6;21597:8;:16::i;:24::-;21587:5;;:9;:35::i;:::-;21579:43;21391:261;-1:-1:-1;;;;21391:261:25:o;1640:404:12:-;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;-1:-1:-1;1761:23:12;;;;;;;;:11;:23;;;;;;;;;;;;;1941:18;;1919:19;;;:12;;;:19;;;;;;:40;;;;1973:11;;1719:319;-1:-1:-1;2022:5:12;2015:12;;3805:127;3878:4;3901:19;;;:12;;;;;:19;;;;;;:24;;;3805:127::o;726:413:10:-;1086:20;1124:8;;;726:413::o;6747:156:12:-;6820:4;6843:53;6851:3;-1:-1:-1;;;;;6871:23:12;;6843:7;:53::i;7527:1090:28:-;7649:17;7678:4;-1:-1:-1;;;;;7678:20:28;;7699:14;7715:4;7732:8;7742:5;7721:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7678:71;;;;;;;;;;;;;-1:-1:-1;;;;;7678:71:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7996:15:28;8063:16;;;:6;7678:71;8063:16;;;;;8014:66;;8031:8;;8041:5;;8056:4;;8014:16;:66::i;:::-;8538:16;;;;:6;:16;;;;;;7996:84;;-1:-1:-1;8538:23:28;;8559:1;8538:20;:23::i;:::-;8519:16;;;;:6;:16;;;;;:42;8578:32;8526:8;8602:7;8578:13;:32::i;17580:186:25:-;17661:5;;17701:34;17733:1;17701:27;:12;:27;;;:16;:27::i;:::-;:31;;:34::i;:::-;17738:20;:12;17755:2;17738:16;:20::i;:::-;17687:72;;;;17580:186;;;;;:::o;4452:201:12:-;4546:18;;4519:7;;4546:26;-1:-1:-1;4538:73:12;;;;-1:-1:-1;;;4538:73:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;4013:107::-;4095:18;;4013:107::o;2212:1512::-;2278:4;2415:19;;;:12;;;:19;;;;;;2449:15;;2445:1273;;2878:18;;-1:-1:-1;;2830:14:12;;;;2878:22;;;;2806:21;;2878:3;;:22;;3160;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;;;;;:38;;;;3378:23;;;3420:1;3378:12;;;:23;;;;;;3404:17;;;3378:43;;3527:17;;3378:3;;3527:17;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;;;826:264:29;1030:51;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1030:51:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1020:62;;;;;;826:264::o;1490:172::-;1613:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1603:52;;;;;;1490:172::o;4820:148:3:-;4878:7;4909:1;4905;:5;4897:42;;;;;-1:-1:-1;;;4897:42:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;4960:1;4956;:5;;;;;;;4820:148;-1:-1:-1;;;4820:148:3:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;110:106;195:3;191:15;;163:53::o;224:739::-;;297:4;279:16;276:26;273:2;;;305:5;;273:2;339:1;-1:-1;;318:23;414:10;357:34;-1:-1;382:8;357:34;:::i;:::-;406:19;396:2;;429:5;;396:2;460;454:9;496:16;-1:-1;;492:24;339:1;454:9;468:49;543:4;537:11;624:16;576:18;624:16;617:4;609:6;605:17;602:39;576:18;568:6;565:30;556:91;553:2;;;655:5;;;;;;553:2;693:6;687:4;683:17;672:28;;725:3;719:10;705:24;;576:18;740:6;737:30;734:2;;;770:5;;;;;;734:2;;847:16;841:4;837:27;807:4;814:6;802:3;794:27;;829:36;826:2;;;868:5;;;;;826:2;89:7;73:14;-1:-1;;69:28;892:50;;807:4;892:50;460:2;881:62;900:3;-1:-1;;267:696;:::o",
  "language": "Solidity",
  "natspec": {
    "author": "Oozyx",
    "events": {
      "ElderSpiritMinted(uint256,address)": {
        "params": {
          "elderId": "The elder id belonging to the minted elder",
          "owner": "The address of the owner"
        }
      },
      "HeroBurned(uint256)": {
        "params": {
          "heroId": "The hero id of the hero that was burned"
        }
      },
      "HeroMinted(uint256,address)": {
        "params": {
          "heroId": "The hero id belonging to the hero that was minted",
          "owner": "The address of the owner"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "balanceOf(address,uint256)": {
        "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
      },
      "burnElders()": {
        "notice": "Burns all the elder spirits in game"
      },
      "burnHero(uint256)": {
        "details": "This will only be able to be called from the owner of the hero",
        "notice": "Burns the hero for a refund",
        "params": {
          "heroId": "The hero id to burn"
        }
      },
      "createAffinity(string,address)": {
        "details": "This will be called by a priviledged address. It will allow to create new affinities. May need to add a remove affinity function as well.",
        "notice": "Creates a new token affinity",
        "params": {
          "feedAddress": "The price feed address",
          "tokenTicker": "The token ticker of the affinity"
        }
      },
      "declareRoundWinner(string)": {
        "details": "This can only be called by a game admin contract",
        "notice": "Declares a winning affinity for a round",
        "params": {
          "winningAffinity": "The affinity that won the game"
        }
      },
      "delegatedTransferInGameTokens(address,address,uint256)": {
        "notice": "Transfers in game currency tokens from one address to another.",
        "params": {
          "amount": "The amount to transfer",
          "from": "The sending address.  Note that the sender must be authorized to transfer funds if the sender is different from the from address.",
          "to": "The receiving address"
        }
      },
      "disburseRewards(string)": {
        "details": "This will be called from a priviledged address",
        "notice": "Disburses the rewards evenly among the heroes of the winning affinity",
        "params": {
          "winningAffinity": "The winning affinity token ticker"
        }
      },
      "getAffinityFeedAddress(string)": {
        "notice": "Fetches the feed address for a given affinity",
        "params": {
          "affinity": "The affinity being searched for"
        },
        "returns": {
          "_0": "The address of the affinity's feed address"
        }
      },
      "getElderOwner(uint256)": {
        "notice": "Gets the elder owner for the given elder id",
        "params": {
          "elderId": "The elder id"
        },
        "returns": {
          "_0": "The owner of the elder"
        }
      },
      "getElderSpawnsAmount(uint256,uint256)": {
        "notice": "Gets the amount of heroes spawn from the elder with the specified id during the specified round",
        "params": {
          "elderId": "The elder id",
          "round": "The round the elder was created"
        },
        "returns": {
          "_0": "The amount of heroes spawned from the elder"
        }
      },
      "getElderSpirit(uint256)": {
        "notice": "Fetches the data of a single elder spirit",
        "params": {
          "elderId": "The id of the elder being searched for"
        },
        "returns": {
          "_0": "The elder's attributes in the following order (valid, raceId, classId, affinity)"
        }
      },
      "getHeroGameData(uint256)": {
        "notice": "Hero getter function",
        "params": {
          "heroId": "The hero id"
        },
        "returns": {
          "_0": "valid, affinity, affinity price, round minted, elder id"
        }
      },
      "getHeroLore(uint256)": {
        "notice": "Hero getter function",
        "params": {
          "heroId": "The hero id"
        },
        "returns": {
          "_0": "alignment, background, hometown, weather"
        }
      },
      "getHeroMintPrice(uint256,uint256)": {
        "notice": "Gets the minting price of a hero based on specified elder spirit",
        "params": {
          "elderId": "The elder id for which the hero will be based on",
          "round": "The round of the hero to be minted"
        },
        "returns": {
          "_0": "The hero mint price"
        }
      },
      "getHeroOwner(uint256)": {
        "notice": "Get the hero owner for the given hero id",
        "params": {
          "heroId": "The hero id"
        },
        "returns": {
          "_0": "The owner address"
        }
      },
      "getHeroStats(uint256)": {
        "notice": "Hero getter function",
        "params": {
          "heroId": "The hero id"
        },
        "returns": {
          "_0": "stamina, strength, dexterity, constitution, intelligence, wisdom, charisma"
        }
      },
      "getHeroTraitsSkills(uint256)": {
        "notice": "Hero getter function",
        "params": {
          "heroId": "The hero id"
        },
        "returns": {
          "_0": "trait 1, trait 2, skill 1, skill 2"
        }
      },
      "getHeroVisuals(uint256)": {
        "notice": "Hero getter function",
        "params": {
          "heroId": "The hero id"
        },
        "returns": {
          "_0": "name, race id, class id, appearance"
        }
      },
      "getHeroVitals(uint256)": {
        "notice": "Hero getter function",
        "params": {
          "heroId": "The hero id"
        },
        "returns": {
          "_0": "level, hp, mana"
        }
      },
      "getNumEldersInGame()": {
        "notice": "Fetches the number of elders currently in the game",
        "returns": {
          "_0": "The current number of elders in the game"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC1155-isApprovedForAll}."
      },
      "mintElderSpirit(uint256,uint256,string)": {
        "details": "For now only race, class, and token (affinity) are needed. This will change. The race and class ids will probably be public constants defined in the crypto champions contract, this is subject to change.",
        "notice": "Mints an elder spirit",
        "params": {
          "affinity": "The affinity of the minted hero",
          "classId": "The class id",
          "raceId": "The race id"
        },
        "returns": {
          "_0": "The elder spirit id"
        }
      },
      "mintHero(uint256,string)": {
        "notice": "Mints a hero based on an elder spirit",
        "params": {
          "elderId": "The id of the elder spirit this hero is based on"
        },
        "returns": {
          "_0": "The hero id"
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "See {IERC1155-safeBatchTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "See {IERC1155-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC1155-setApprovalForAll}."
      },
      "setElderMintPrice(uint256)": {
        "details": "Can only be called by an admin address",
        "notice": "Sets the elder mint price",
        "params": {
          "price": "The new elder mint price"
        }
      },
      "setPhase(uint8)": {
        "notice": "Sets the contract's phase",
        "params": {
          "phase": "The phase the contract should be set to"
        }
      },
      "startNewPriceGame()": {
        "details": "This can only be called by the admin of the contract",
        "notice": "Starts a new price game"
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "transferInGameTokens(address,uint256)": {
        "notice": "Transfers in game currency tokens from one address to another",
        "params": {
          "amount": "The amount to transfer",
          "to": "The receiving address"
        }
      },
      "uri(uint256)": {
        "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
      }
    },
    "notice": "This is the crypto champions class",
    "title": "Crypto Champions Interface",
    "version": 1
  },
  "offset": [
    743,
    29998
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2C8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79935FE0 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0xA4AEEC53 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x11E2 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x121D JUMPI DUP1 PUSH4 0xF32C4974 EQ PUSH2 0x12F3 JUMPI DUP1 PUSH4 0xFBC120F9 EQ PUSH2 0x1323 JUMPI PUSH2 0x2C8 JUMP JUMPDEST DUP1 PUSH4 0xD547741F EQ PUSH2 0x1155 JUMPI DUP1 PUSH4 0xE3E98382 EQ PUSH2 0x118E JUMPI DUP1 PUSH4 0xE5B0A993 EQ PUSH2 0x11B8 JUMPI PUSH2 0x2C8 JUMP JUMPDEST DUP1 PUSH4 0xA4AEEC53 EQ PUSH2 0x107C JUMPI DUP1 PUSH4 0xB9280067 EQ PUSH2 0x1091 JUMPI DUP1 PUSH4 0xBF61211F EQ PUSH2 0x10D4 JUMPI DUP1 PUSH4 0xC03AFB59 EQ PUSH2 0x10E9 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x1116 JUMPI DUP1 PUSH4 0xCAAB7EF8 EQ PUSH2 0x1140 JUMPI PUSH2 0x2C8 JUMP JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0xEC4 JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0xEFD JUMPI DUP1 PUSH4 0x9D5B82C0 EQ PUSH2 0xF2D JUMPI DUP1 PUSH4 0x9E315008 EQ PUSH2 0xFB1 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x102C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1041 JUMPI PUSH2 0x2C8 JUMP JUMPDEST DUP1 PUSH4 0x79935FE0 EQ PUSH2 0xDC4 JUMPI DUP1 PUSH4 0x835A4398 EQ PUSH2 0xDD9 JUMPI DUP1 PUSH4 0x8423B077 EQ PUSH2 0xE40 JUMPI DUP1 PUSH4 0x8A19C8BC EQ PUSH2 0xE6A JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0xE7F JUMPI DUP1 PUSH4 0x90DED47E EQ PUSH2 0xEAF JUMPI PUSH2 0x2C8 JUMP JUMPDEST DUP1 PUSH4 0x2EFB8874 GT PUSH2 0x234 JUMPI DUP1 PUSH4 0x4C2ED018 GT PUSH2 0x1ED JUMPI DUP1 PUSH4 0x56B4D760 GT PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x56B4D760 EQ PUSH2 0xD16 JUMPI DUP1 PUSH4 0x59CA19D3 EQ PUSH2 0xD40 JUMPI DUP1 PUSH4 0x6DE51353 EQ PUSH2 0xD70 JUMPI DUP1 PUSH4 0x72EDA5BB EQ PUSH2 0xD9A JUMPI PUSH2 0x2C8 JUMP JUMPDEST DUP1 PUSH4 0x4C2ED018 EQ PUSH2 0xB57 JUMPI DUP1 PUSH4 0x4C52B2A9 EQ PUSH2 0xB81 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0xB96 JUMPI PUSH2 0x2C8 JUMP JUMPDEST DUP1 PUSH4 0x2EFB8874 EQ PUSH2 0x8E3 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x95E JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x997 JUMPI DUP1 PUSH4 0x46E6F13D EQ PUSH2 0x9D0 JUMPI DUP1 PUSH4 0x48772D79 EQ PUSH2 0xA8A JUMPI DUP1 PUSH4 0x498E8219 EQ PUSH2 0xAE2 JUMPI PUSH2 0x2C8 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x286 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x56F JUMPI DUP1 PUSH4 0x26D4D15A EQ PUSH2 0x599 JUMPI DUP1 PUSH4 0x26F7AF4F EQ PUSH2 0x630 JUMPI DUP1 PUSH4 0x27E50B18 EQ PUSH2 0x66B JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x695 JUMPI DUP1 PUSH4 0x2EE1F0A0 EQ PUSH2 0x863 JUMPI PUSH2 0x2C8 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x55AD42E EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xFBEA841 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x21C2F72A EQ PUSH2 0x4AF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1338 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x13AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x375 PUSH2 0x13CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x385 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x13D6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3FA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3E2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x427 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x146E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x174D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x530 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x518 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x55D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x187B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x614 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x5E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x669 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x653 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x18CA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x669 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x68E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x18DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x669 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x6B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x6EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x71E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x76D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x77F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x7A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x7EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x801 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x1A2B SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x88D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x886 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1D2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 DUP2 LT ISZERO PUSH2 0x530 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x518 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x669 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x920 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x953 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1E30 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x669 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x981 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E4B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x669 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1EB3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9FA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1F14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA4C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xA34 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xA79 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2011 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP6 DUP7 AND DUP2 MSTORE SWAP4 DUP6 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP5 AND DUP4 DUP4 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0x60 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xAF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xB19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xB2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xB4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x2083 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x27DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 PUSH2 0x2852 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCC6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xBB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xBD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xBE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xC06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xC55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xC67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xC88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x2859 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD02 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xCEA JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x614 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2945 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xD63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x29AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x29F9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x614 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2A9F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 PUSH2 0x2AFA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE03 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2B00 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP8 DUP9 AND DUP2 MSTORE SWAP6 DUP8 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP4 DUP7 AND DUP6 DUP6 ADD MSTORE SWAP2 DUP6 AND PUSH1 0x60 DUP6 ADD MSTORE DUP5 AND PUSH1 0x80 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2B8C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 PUSH2 0x2BFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x614 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xEA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2C01 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 PUSH2 0x2C20 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xED0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xEE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2C25 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x669 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xF20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2C3D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x669 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xF50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xF6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xF7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xF9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 POP SWAP2 POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2CC4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x669 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xFEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1000 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x1021 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x2D66 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1038 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 PUSH2 0x2DCC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x669 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1064 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x2DD1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1088 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x669 PUSH2 0x2EC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x109D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x669 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x10B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x2F56 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 PUSH2 0x2F66 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x669 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x110C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0xFF AND PUSH2 0x2F6C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2FA3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 PUSH2 0x2FBA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x669 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2FC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x119A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x669 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3019 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3035 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x3042 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x669 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x1240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0xA0 DUP2 ADD PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x127F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x12B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x3070 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x323B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x132F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x669 PUSH2 0x32A0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x137F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5102 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1462 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1437 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1462 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1445 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1482 JUMPI INVALID JUMPDEST EQ PUSH2 0x148C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD LT PUSH2 0x149A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE SLOAD CALLVALUE LT ISZERO PUSH2 0x14A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x10 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD SWAP5 DUP6 MSTORE POP POP PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP1 SUB PUSH1 0x20 ADD SWAP1 SWAP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP1 SWAP3 EQ ISZERO SWAP2 POP PUSH2 0x14F4 SWAP1 POP JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1505 SWAP1 PUSH1 0x1 PUSH2 0x34D7 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1527 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1540 JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD SWAP5 DUP6 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 SWAP1 SUB PUSH1 0x20 ADD DUP5 KECCAK256 SLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP6 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 PUSH4 0xFEAF968C SWAP4 POP PUSH1 0x4 DUP1 DUP3 ADD SWAP4 POP PUSH1 0xA0 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x15CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH2 0x15DE PUSH2 0x4D9A JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 ADD DUP10 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x1F DUP9 ADD DUP4 SWAP1 DIV DUP4 MUL DUP2 ADD DUP4 ADD SWAP1 SWAP2 MSTORE DUP7 DUP2 MSTORE SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP POP PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1651 PUSH2 0x1639 PUSH2 0x3531 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x3535 JUMP JUMPDEST PUSH2 0x1659 PUSH2 0x3531 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x9 DUP2 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO OR DUP2 SSTORE DUP4 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD DUP1 MLOAD DUP5 SWAP4 SWAP3 PUSH2 0x16CC SWAP3 PUSH1 0x3 DUP6 ADD SWAP3 SWAP2 ADD SWAP1 PUSH2 0x4DCB JUMP JUMPDEST POP PUSH1 0x80 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE PUSH1 0x7 SLOAD PUSH2 0x16E8 SWAP1 PUSH1 0x1 PUSH2 0x34D7 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0xE SLOAD PUSH2 0x16F7 SWAP1 PUSH2 0x363D JUMP JUMPDEST PUSH32 0x3560F0337E62819199860BA21B425B8BDE9A01FA6E514DD58AB6EDF7DAF1D1F1 DUP4 PUSH2 0x1721 PUSH2 0x3531 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP6 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x1768 JUMPI POP PUSH1 0x7 DUP2 GT ISZERO JUMPDEST PUSH2 0x1771 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1779 PUSH2 0x4D9A JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD DUP3 DUP6 ADD MSTORE PUSH1 0x2 DUP1 DUP5 ADD SLOAD DUP4 DUP8 ADD MSTORE PUSH1 0x3 DUP5 ADD DUP1 SLOAD DUP8 MLOAD PUSH2 0x100 SWAP5 DUP3 AND ISZERO SWAP5 SWAP1 SWAP5 MUL PUSH1 0x0 NOT ADD AND SWAP2 SWAP1 SWAP2 DIV PUSH1 0x1F DUP2 ADD DUP7 SWAP1 DIV DUP7 MUL DUP4 ADD DUP7 ADD SWAP1 SWAP7 MSTORE DUP6 DUP3 MSTORE SWAP2 SWAP5 SWAP3 SWAP4 PUSH1 0x60 DUP7 ADD SWAP4 SWAP2 SWAP3 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x183D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1812 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x183D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1820 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD SWAP1 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 SWAP1 SWAP5 ADD MLOAD SWAP3 SWAP13 SWAP2 SWAP12 POP SWAP10 POP SWAP2 SWAP8 POP SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD SWAP5 DUP6 MSTORE POP POP PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP1 SUB PUSH1 0x20 ADD SWAP1 SWAP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x18DA CALLER DUP5 PUSH1 0x0 DUP6 DUP6 PUSH2 0x3070 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x7 DUP2 GT PUSH2 0x18ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1908 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1923 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x192B PUSH2 0x3531 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1975 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH2 0x36AE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD DUP1 DUP6 MSTORE PUSH1 0xD DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP3 DUP7 MSTORE SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SLOAD PUSH2 0x19AF SWAP1 PUSH1 0x1 PUSH2 0x37E1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP7 DUP3 MSTORE PUSH1 0xB DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0xC DUP2 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP2 MLOAD DUP7 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x76126F33D318ABE88F8B82C5136B7E5A52091AB897679A40F612D7590ADFC997 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x1A6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x52E1 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1AB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x51AA PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AB8 PUSH2 0x3531 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1AE3 JUMPI POP PUSH2 0x1AE3 DUP6 PUSH2 0x1ADE PUSH2 0x3531 JUMP JUMPDEST PUSH2 0x3042 JUMP JUMPDEST PUSH2 0x1B1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x51CF PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B28 PUSH2 0x3531 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B38 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x383E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1C3E JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1B52 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B6A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x1BD7 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5244 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3950 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1C0E SWAP1 DUP3 PUSH2 0x34D7 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1B3B JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CC4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1CAC JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D03 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1CEB JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1D26 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x39E7 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH1 0x7 DUP2 GT PUSH2 0x1D45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1D60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x2 SWAP5 DUP6 ADD DUP1 SLOAD DUP9 MLOAD PUSH2 0x100 PUSH1 0x1 DUP4 AND ISZERO MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP7 SWAP1 SWAP7 DIV PUSH1 0x1F DUP2 ADD DUP9 SWAP1 DIV DUP9 MUL DUP8 ADD DUP9 ADD SWAP1 SWAP9 MSTORE DUP8 DUP7 MSTORE PUSH1 0xFF SWAP1 SWAP5 AND SWAP7 SWAP4 SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 DUP7 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1E15 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1DEA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E15 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1DF8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP4 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH2 0x1E47 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5201 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x3C5D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1E6E SWAP1 PUSH2 0x1E69 PUSH2 0x3531 JUMP JUMPDEST PUSH2 0x2C25 JUMP JUMPDEST PUSH2 0x1EA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x50D3 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E47 DUP3 DUP3 PUSH2 0x3C70 JUMP JUMPDEST PUSH2 0x1EBB PUSH2 0x3531 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1F0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x532A PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E47 DUP3 DUP3 PUSH2 0x3CD9 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x7 DUP2 GT PUSH2 0x1F29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1F44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0x8 DUP4 ADD SLOAD PUSH1 0x1 SWAP4 DUP5 ADD DUP1 SLOAD DUP8 MLOAD PUSH1 0x2 PUSH2 0x100 SWAP8 DUP4 AND ISZERO SWAP8 SWAP1 SWAP8 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP6 SWAP1 SWAP6 DIV PUSH1 0x1F DUP2 ADD DUP8 SWAP1 DIV DUP8 MUL DUP7 ADD DUP8 ADD SWAP1 SWAP8 MSTORE DUP7 DUP6 MSTORE SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 PUSH1 0xFF SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 DUP7 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1FFA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FCF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1FFA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FDD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP4 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH1 0x7 DUP2 GT PUSH2 0x2025 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2040 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP3 DUP4 MSTORE POP POP PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF PUSH1 0x1 PUSH1 0x48 SHL DUP3 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0x50 SHL DUP4 DIV DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x58 SHL DUP2 DIV DUP4 AND SWAP3 PUSH1 0x1 PUSH1 0x60 SHL SWAP1 SWAP2 DIV AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x2097 JUMPI POP PUSH1 0x7 DUP2 GT ISZERO JUMPDEST PUSH2 0x20A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x20B3 JUMPI INVALID JUMPDEST EQ PUSH2 0x20BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x20D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20E1 DUP6 PUSH2 0x3D42 JUMP JUMPDEST PUSH2 0x20EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x20F8 PUSH1 0xF SLOAD DUP8 PUSH2 0x323B JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x2107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH2 0x2121 PUSH1 0x1 PUSH1 0xA SLOAD PUSH2 0x34D7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x2144 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x215D JUMPI INVALID JUMPDEST PUSH2 0x2165 PUSH2 0x4E49 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP10 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP8 DUP2 MSTORE SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 PUSH1 0x20 ADD DUP2 SWAP1 MSTORE POP PUSH1 0xF SLOAD DUP2 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP8 DUP2 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 PUSH1 0xC0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 PUSH1 0xE0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x22B4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2289 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x22B4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2297 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH1 0x40 DUP3 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP2 SWAP1 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO OR DUP2 SSTORE DUP2 DUP4 ADD MLOAD DUP1 MLOAD DUP5 SWAP4 PUSH2 0x22F8 SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 SWAP2 ADD SWAP1 PUSH2 0x4DCB JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x2314 SWAP2 PUSH1 0x2 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x4DCB JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x180 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1A0 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1C0 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1E0 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x200 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x220 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x9 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x240 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0xA PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x260 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0xB PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x280 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x2A0 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0xD PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x2C0 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0xE PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x2E0 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0xF PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x300 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x320 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x11 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x340 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x12 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x0 PUSH2 0x25DB DUP4 PUSH2 0x3E17 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE SWAP1 POP PUSH2 0x25F7 DUP2 PUSH2 0x3ECF JUMP JUMPDEST PUSH2 0x2602 PUSH2 0x1639 PUSH2 0x3531 JUMP JUMPDEST PUSH2 0x262E PUSH2 0x260D PUSH2 0x3531 JUMP JUMPDEST PUSH1 0x0 PUSH9 0x1B1AE4D6E2EF500000 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x3535 JUMP JUMPDEST PUSH2 0x2636 PUSH2 0x3531 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xA SLOAD PUSH2 0x2670 SWAP1 PUSH1 0x1 PUSH2 0x34D7 JUMP JUMPDEST PUSH1 0xA SSTORE PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP13 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x269B SWAP1 PUSH1 0x1 PUSH2 0x34D7 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP14 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x26D1 PUSH1 0xA PUSH2 0x26CB DUP8 PUSH1 0x8 PUSH2 0x45A6 JUMP JUMPDEST SWAP1 PUSH2 0x45FF JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x272C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2731 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2778 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x14185E5B595B9D0819985A5B1959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2781 DUP8 PUSH2 0x363D JUMP JUMPDEST PUSH32 0xF34A510082F5A02E39555458564800FC1FE73BFD8D3AA07CBF063FE662E7657E DUP7 PUSH2 0x27AB PUSH2 0x3531 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 POP SWAP4 SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH1 0x7 DUP2 GT PUSH2 0x27EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x280A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP3 DUP4 MSTORE POP POP PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF PUSH6 0x10000000000 DUP3 DIV DUP2 AND SWAP3 PUSH7 0x1000000000000 DUP4 DIV DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x38 SHL DUP2 DIV DUP4 AND SWAP3 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 SWAP2 DIV AND SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x289B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x52B8 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x28B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x28DF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x293D JUMPI PUSH2 0x291E DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x28FD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2911 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1338 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x292A JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x28E5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x7 DUP2 GT PUSH2 0x2955 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2970 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2991 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x29C2 JUMPI POP PUSH1 0x7 DUP2 GT ISZERO JUMPDEST PUSH2 0x29CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xF SLOAD DUP5 GT ISZERO PUSH2 0x29DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x16 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2A06 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP8 AND ISZERO MUL ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV SWAP3 DUP4 ADD DUP6 SWAP1 DIV DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP2 MSTORE DUP2 DUP2 MSTORE SWAP4 POP SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2A97 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A6C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2A97 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A7A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x2AB3 JUMPI POP PUSH1 0x7 DUP2 GT ISZERO JUMPDEST PUSH2 0x2ABC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2ADD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP7 PUSH1 0x7 DUP2 GT PUSH2 0x2B17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2B32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP5 DUP6 MSTORE POP POP PUSH1 0xC PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF PUSH1 0x1 PUSH1 0x68 SHL DUP3 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0x70 SHL DUP4 DIV DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x78 SHL DUP2 DIV DUP4 AND SWAP3 PUSH1 0x1 PUSH1 0x80 SHL DUP3 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0x88 SHL DUP4 DIV DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV SWAP1 SWAP2 AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH1 0x7 DUP2 GT PUSH2 0x2BA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2BBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP3 DUP4 MSTORE POP POP PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP3 PUSH3 0x10000 DUP4 DIV DUP3 AND SWAP3 PUSH4 0x1000000 DUP2 DIV DUP4 AND SWAP3 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP2 DIV AND SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x2C19 SWAP1 DUP4 PUSH2 0x4666 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x2C19 SWAP1 DUP4 PUSH2 0x34C2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x2CBA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1E47 DUP3 DUP3 PUSH2 0x4672 JUMP JUMPDEST PUSH2 0x2CDB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5201 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x3C5D JUMP JUMPDEST DUP1 PUSH1 0x10 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD SWAP5 DUP6 MSTORE POP POP PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP1 SUB PUSH1 0x20 ADD SWAP1 SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE POP POP PUSH1 0x11 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x2D60 SWAP1 PUSH32 0x31ECC21A745E3968A04E9570E4425BC18FA8019C68028196B546D1669C200C68 ADD DUP5 DUP5 PUSH2 0x4F26 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2D8F PUSH32 0xAE0C232B87105E0A8134F8B92146DCD1D99373D32394BE9D70F700F90B3A3DB3 PUSH2 0x3C5D JUMP JUMPDEST PUSH1 0x16 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x18DA SWAP1 PUSH32 0xD833147D7DC355BA459FC788F669E58CFAF9DC25DDCD0702E87D69C7B5124289 ADD DUP4 DUP4 PUSH2 0x4F26 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2DE3 PUSH2 0x3531 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2E29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x528F PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x2E36 PUSH2 0x3531 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0x2E7A PUSH2 0x3531 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x2ED7 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5201 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x3C5D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD GT PUSH2 0x2EE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x7 DUP2 GT PUSH2 0x2F19 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2F11 JUMPI PUSH2 0x2F11 DUP2 PUSH2 0x468C JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2EE9 JUMP JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x2F28 SWAP1 PUSH1 0x1 PUSH2 0x34D7 JUMP JUMPDEST PUSH1 0xF SSTORE PUSH1 0x40 MLOAD PUSH32 0x143B2C36FAC98F86168603D28D499BDE9CE0367D41E111CEF9F2ECBC9EEABFC SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2D60 DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 PUSH2 0x3070 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2F83 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5201 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x3C5D JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 DUP2 DUP2 GT ISZERO PUSH2 0x2F9B JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x13A4 SWAP1 PUSH2 0x4728 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x2FDE SWAP1 PUSH2 0x1E69 PUSH2 0x3531 JUMP JUMPDEST PUSH2 0x1F0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x517A PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3030 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5201 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x3C5D JUMP JUMPDEST PUSH1 0xE SSTORE JUMP JUMPDEST PUSH1 0x11 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2A06 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x30B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x51AA PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x30BD PUSH2 0x3531 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x30E3 JUMPI POP PUSH2 0x30E3 DUP6 PUSH2 0x1ADE PUSH2 0x3531 JUMP JUMPDEST PUSH2 0x311E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5151 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3128 PUSH2 0x3531 JUMP JUMPDEST SWAP1 POP PUSH2 0x3148 DUP2 DUP8 DUP8 PUSH2 0x3139 DUP9 PUSH2 0x4733 JUMP JUMPDEST PUSH2 0x3142 DUP9 PUSH2 0x4733 JUMP JUMPDEST DUP8 PUSH2 0x383E JUMP JUMPDEST PUSH2 0x318F DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5244 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x3950 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x31C6 SWAP1 DUP5 PUSH2 0x34D7 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP9 DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE DUP1 MLOAD DUP11 DUP5 AND SWAP4 DUP7 AND SWAP3 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG4 PUSH2 0x1D26 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x4777 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x324F JUMPI POP PUSH1 0x7 DUP2 GT ISZERO JUMPDEST PUSH2 0x3258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xF SLOAD DUP5 GT ISZERO PUSH2 0x3267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH2 0x328C SWAP1 PUSH1 0x1 PUSH2 0x34D7 JUMP JUMPDEST SWAP1 POP PUSH2 0x3297 DUP2 PUSH2 0x48E8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x32B7 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5201 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x3C5D JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x50524943455F57415253 PUSH1 0xB0 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE SWAP3 MLOAD PUSH4 0x6CADCD79 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 DUP5 MSTORE DUP3 MLOAD PUSH1 0x24 DUP3 ADD MSTORE DUP3 MLOAD PUSH1 0x0 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 PUSH4 0xD95B9AF2 SWAP5 SWAP4 SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP1 DUP4 DUP4 DUP12 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3335 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x331D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3362 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3395 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x72D7F665 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0xE5AFECCA SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x33FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3411 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3427 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x3455 PUSH32 0xAE0C232B87105E0A8134F8B92146DCD1D99373D32394BE9D70F700F90B3A3DB3 DUP3 PUSH2 0x1E4B JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD65AB5F2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x34A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C19 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x493A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C19 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x4984 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x2C19 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x357A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5309 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3584 PUSH2 0x3531 JUMP JUMPDEST SWAP1 POP PUSH2 0x3596 DUP2 PUSH1 0x0 DUP8 PUSH2 0x3139 DUP9 PUSH2 0x4733 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x35C3 SWAP1 DUP5 PUSH2 0x34D7 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP2 MLOAD DUP10 DUP2 MSTORE SWAP3 DUP4 ADD DUP9 SWAP1 MSTORE DUP2 MLOAD SWAP1 SWAP5 DUP7 AND SWAP3 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG4 PUSH2 0x3636 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x4777 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3649 CALLVALUE DUP4 PUSH2 0x37E1 JUMP JUMPDEST GT ISZERO PUSH2 0x36AB JUMPI PUSH1 0x0 CALLER PUSH2 0x365C CALLVALUE DUP5 PUSH2 0x37E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3698 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x369D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1E47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x36F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5221 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x36FD PUSH2 0x3531 JUMP JUMPDEST SWAP1 POP PUSH2 0x372D DUP2 DUP6 PUSH1 0x0 PUSH2 0x370F DUP8 PUSH2 0x4733 JUMP JUMPDEST PUSH2 0x3718 DUP8 PUSH2 0x4733 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x383E JUMP JUMPDEST PUSH2 0x3774 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x512D PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x3950 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP2 MLOAD DUP9 DUP2 MSTORE SWAP3 DUP4 ADD DUP8 SWAP1 MSTORE DUP2 MLOAD SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 DUP7 AND SWAP3 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x3838 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x384C DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1D26 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x34A4 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3866 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT DUP1 ISZERO PUSH2 0x388F JUMPI POP PUSH1 0x7 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3884 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0x38E0 JUMPI DUP5 PUSH1 0x8 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x38A5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x7 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x38EE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x3948 JUMPI DUP5 PUSH1 0xB PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x390D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x384F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x39DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x39A4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x398C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x39D1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x39F9 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x499C JUMP JUMPDEST ISZERO PUSH2 0x1D26 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3A87 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3A6F JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3AC6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3AAE JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B02 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3AEA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3B2F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3B79 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 JUMPDEST PUSH2 0x3C0E JUMPI PUSH2 0x3B85 PUSH2 0x4FAF JUMP JUMPDEST DUP1 PUSH2 0x3B90 JUMPI POP PUSH2 0x3BD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD DUP5 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x39A4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x398C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5055 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x34A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x50AB PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3C67 DUP2 CALLER PUSH2 0x2C25 JUMP JUMPDEST PUSH2 0x36AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x3C88 SWAP1 DUP3 PUSH2 0x34AD JUMP JUMPDEST ISZERO PUSH2 0x1E47 JUMPI PUSH2 0x3C95 PUSH2 0x3531 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x3CF1 SWAP1 DUP3 PUSH2 0x49A2 JUMP JUMPDEST ISZERO PUSH2 0x1E47 JUMPI PUSH2 0x3CFE PUSH2 0x3531 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x4 GT ISZERO PUSH2 0x3D6F JUMPI POP PUSH1 0x1 PUSH2 0x13C8 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 JUMPDEST PUSH1 0x7 SLOAD DUP2 GT PUSH2 0x3DE4 JUMPI PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x3DDC JUMPI PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x3D8F JUMP JUMPDEST POP PUSH2 0x3DF0 DUP2 PUSH1 0x2 PUSH2 0x45A6 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD GT ISZERO SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x13 SLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3E89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3E9D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3EB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT ISZERO PUSH2 0x3EC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13A4 PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD DUP5 PUSH2 0x49B7 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x7 DUP2 GT PUSH2 0x3EEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3F06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x15 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP2 DUP6 MSTORE PUSH1 0xC SWAP1 SWAP4 MSTORE SWAP1 DUP4 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH10 0xFF000000000000000000 NOT AND PUSH1 0x1 PUSH1 0x48 SHL OR SWAP1 SSTORE SWAP2 PUSH2 0x3F51 PUSH1 0x2 DUP4 PUSH2 0x4B61 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x3F82 PUSH1 0x4 DUP3 PUSH2 0x4B61 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP4 AND PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x3FB9 PUSH1 0x4 DUP3 PUSH2 0x4B61 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP4 AND PUSH3 0x10000 MUL PUSH3 0xFF0000 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x3FF2 PUSH1 0x4 DUP3 PUSH2 0x4B61 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP4 AND PUSH4 0x1000000 MUL PUSH4 0xFF000000 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x402D PUSH1 0x4 DUP3 PUSH2 0x4B61 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x20 SHL MUL PUSH5 0xFF00000000 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x4069 PUSH1 0x9 DUP3 PUSH2 0x4B61 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP4 AND PUSH6 0x10000000000 MUL PUSH6 0xFF0000000000 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x40A8 PUSH1 0x1E DUP3 PUSH2 0x4B61 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP4 AND PUSH7 0x1000000000000 MUL PUSH7 0xFF000000000000 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x40E9 PUSH1 0x18 DUP3 PUSH2 0x4B61 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x38 SHL MUL PUSH8 0xFF00000000000000 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x4128 PUSH1 0x7 DUP3 PUSH2 0x4B61 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x40 SHL MUL PUSH9 0xFF0000000000000000 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x4168 PUSH1 0x15 DUP3 PUSH2 0x4B61 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x50 SHL NOT AND PUSH1 0x1 PUSH1 0x50 SHL PUSH1 0xFF SWAP5 DUP6 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP2 SWAP4 POP PUSH2 0x41A8 SWAP3 SWAP2 SWAP1 DIV AND PUSH1 0x9 PUSH2 0x34D7 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x50 SHL MUL PUSH1 0xFF PUSH1 0x50 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x41E1 PUSH1 0x15 DUP3 PUSH2 0x4B61 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x58 SHL NOT AND PUSH1 0x1 PUSH1 0x58 SHL PUSH1 0xFF SWAP5 DUP6 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP2 SWAP4 POP PUSH2 0x4221 SWAP3 SWAP2 SWAP1 DIV AND PUSH1 0x9 PUSH2 0x34D7 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x58 SHL MUL PUSH1 0xFF PUSH1 0x58 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x425A PUSH1 0x1F DUP3 PUSH2 0x4B61 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x60 SHL NOT AND PUSH1 0x1 PUSH1 0x60 SHL PUSH1 0xFF SWAP5 DUP6 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP2 SWAP4 POP PUSH2 0x429A SWAP3 SWAP2 SWAP1 DIV AND PUSH1 0x9 PUSH2 0x34D7 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x60 SHL MUL PUSH1 0xFF PUSH1 0x60 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x42D3 PUSH1 0x10 DUP3 PUSH2 0x4B61 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x68 SHL NOT AND PUSH1 0x1 PUSH1 0x68 SHL PUSH1 0xFF SWAP5 DUP6 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP2 SWAP4 POP PUSH2 0x4313 SWAP3 SWAP2 SWAP1 DIV AND PUSH1 0x2 PUSH2 0x34D7 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x68 SHL MUL PUSH1 0xFF PUSH1 0x68 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x434C PUSH1 0x10 DUP3 PUSH2 0x4B61 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x70 SHL NOT AND PUSH1 0x1 PUSH1 0x70 SHL PUSH1 0xFF SWAP5 DUP6 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP2 SWAP4 POP PUSH2 0x438C SWAP3 SWAP2 SWAP1 DIV AND PUSH1 0x2 PUSH2 0x34D7 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x70 SHL MUL PUSH1 0xFF PUSH1 0x70 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x43C5 PUSH1 0x10 DUP3 PUSH2 0x4B61 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x78 SHL NOT AND PUSH1 0x1 PUSH1 0x78 SHL PUSH1 0xFF SWAP5 DUP6 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP2 SWAP4 POP PUSH2 0x4405 SWAP3 SWAP2 SWAP1 DIV AND PUSH1 0x2 PUSH2 0x34D7 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x78 SHL MUL PUSH1 0xFF PUSH1 0x78 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x443E PUSH1 0x10 DUP3 PUSH2 0x4B61 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL PUSH1 0xFF SWAP5 DUP6 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP2 SWAP4 POP PUSH2 0x447E SWAP3 SWAP2 SWAP1 DIV AND PUSH1 0x2 PUSH2 0x34D7 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x80 SHL MUL PUSH1 0xFF PUSH1 0x80 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x44B7 PUSH1 0x10 DUP3 PUSH2 0x4B61 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x88 SHL NOT AND PUSH1 0x1 PUSH1 0x88 SHL PUSH1 0xFF SWAP5 DUP6 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP2 SWAP4 POP PUSH2 0x44F7 SWAP3 SWAP2 SWAP1 DIV AND PUSH1 0x2 PUSH2 0x34D7 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x88 SHL MUL PUSH1 0xFF PUSH1 0x88 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x4530 PUSH1 0x10 DUP3 PUSH2 0x4B61 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x90 SHL NOT AND PUSH1 0x1 PUSH1 0x90 SHL PUSH1 0xFF SWAP5 DUP6 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP2 SWAP4 POP PUSH2 0x4570 SWAP3 SWAP2 SWAP1 DIV AND PUSH1 0x2 PUSH2 0x34D7 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP4 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x90 SHL MUL PUSH1 0xFF PUSH1 0x90 SHL NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x45B5 JUMPI POP PUSH1 0x0 PUSH2 0x13A4 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x45C2 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2C19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x526E PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x4655 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x465E JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C19 DUP4 DUP4 PUSH2 0x4B92 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x1E47 DUP3 PUSH2 0x3ECF JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x469E JUMPI POP PUSH1 0x7 DUP2 GT ISZERO JUMPDEST PUSH2 0x46A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x46C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x46E6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH2 0x36AE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x46F4 SWAP1 PUSH1 0x1 PUSH2 0x37E1 JUMP JUMPDEST PUSH1 0x7 SSTORE POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13A4 DUP3 PUSH2 0x4BF6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x4766 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4789 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x499C JUMP JUMPDEST ISZERO PUSH2 0x1D26 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4818 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4800 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4845 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x488D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 JUMPDEST PUSH2 0x4899 JUMPI PUSH2 0x3B85 PUSH2 0x4FAF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x34A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x50AB PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x490F PUSH1 0x64 PUSH2 0x26CB PUSH1 0x2 PUSH2 0x4909 DUP9 PUSH8 0xDE0B6B3A7640000 PUSH2 0x45A6 JUMP JUMPDEST SWAP1 PUSH2 0x45A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x4932 PUSH2 0x492B PUSH1 0xA PUSH2 0x26CB DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x45A6 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x34D7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4946 DUP4 DUP4 PUSH2 0x4984 JUMP JUMPDEST PUSH2 0x497C JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x13A4 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C19 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x4BFA JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP6 DUP8 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4A93 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4A7B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4AC0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4AE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4AF5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4B0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x4B2B SWAP1 DUP7 SWAP1 DUP6 SWAP1 ADDRESS SWAP1 PUSH2 0x4CC0 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x4B48 SWAP1 PUSH1 0x1 PUSH2 0x34D7 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x3297 DUP6 DUP3 PUSH2 0x4D07 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4B7C PUSH1 0x1 PUSH2 0x4B76 DUP6 PUSH1 0xFF DUP9 AND PUSH2 0x4D33 JUMP JUMPDEST SWAP1 PUSH2 0x34D7 JUMP JUMPDEST PUSH2 0x4B87 DUP5 PUSH1 0xA PUSH2 0x45FF JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x4BD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5089 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4BE3 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x4CB6 JUMPI DUP4 SLOAD PUSH1 0x0 NOT DUP1 DUP4 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x4C2D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x4C4A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0x4C7A JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x4D89 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D6F64756C6F206279207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x4D92 JUMPI INVALID JUMPDEST MOD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x4E0C JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x4E39 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x4E39 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x4E39 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x4E1E JUMP JUMPDEST POP PUSH2 0x4E45 SWAP3 SWAP2 POP PUSH2 0x4F94 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x360 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x60 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD DUP4 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x140 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x160 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x180 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1A0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1C0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1E0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x200 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x220 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x240 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x260 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x280 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2A0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2C0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2E0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x300 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x320 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x340 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x4F67 JUMPI DUP3 DUP1 ADD PUSH1 0xFF NOT DUP3 CALLDATALOAD AND OR DUP6 SSTORE PUSH2 0x4E39 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x4E39 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x4E39 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x4F79 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x4E45 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4F95 JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x4FBF JUMPI PUSH2 0x2856 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY PUSH4 0x8C379A0 PUSH2 0x4FD3 DUP3 MLOAD PUSH2 0x4FA9 JUMP JUMPDEST EQ PUSH2 0x4FDD JUMPI PUSH2 0x2856 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x3 NOT ADD PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x500D JUMPI POP POP POP POP PUSH2 0x2856 JUMP JUMPDEST DUP3 DUP5 ADD SWAP3 POP DUP3 MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x5027 JUMPI POP POP POP POP PUSH2 0x2856 JUMP JUMPDEST POP RETURNDATASIZE DUP4 ADD PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x503F JUMPI POP POP POP PUSH2 0x2856 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F206E6F6E20455243313135 CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH10 0x6D706C656D656E746572 GASLIMIT PUSH15 0x756D657261626C655365743A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E6473455243313135353A204552 NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH19 0x656A656374656420746F6B656E734163636573 PUSH20 0x436F6E74726F6C3A2073656E646572206D757374 KECCAK256 PUSH3 0x652061 PUSH15 0x2061646D696E20746F206772616E74 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH3 0x616C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x657373455243313135353A206275726E20616D PUSH16 0x756E7420657863656564732062616C61 PUSH15 0x6365455243313135353A2063616C6C PUSH6 0x72206973206E PUSH16 0x74206F776E6572206E6F722061707072 PUSH16 0x766564416363657373436F6E74726F6C GASPRICE KECCAK256 PUSH20 0x656E646572206D75737420626520616E2061646D PUSH10 0x6E20746F207265766F6B PUSH6 0x455243313135 CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E736665722063616C6C6572206973206E6F74 KECCAK256 PUSH16 0x776E6572206E6F7220617070726F7665 PUSH5 0x2172861495 0xE7 0xB8 0x5E 0xDA 0xC7 RETURNDATACOPY EXTCODECOPY 0xD5 0xFB 0xB4 0x2D 0xD6 PUSH22 0xBAADF627720E687BCFDACA025096455243313135353A KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F2061646472657373455243313135353A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F72207472616E73666572 MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77455243313135353A20 PUSH20 0x657474696E6720617070726F76616C2073746174 PUSH22 0x7320666F722073656C66455243313135353A20616363 PUSH16 0x756E747320616E6420696473206C656E PUSH8 0x7468206D69736D61 PUSH21 0x6368455243313135353A2069647320616E6420616D PUSH16 0x756E7473206C656E677468206D69736D PUSH2 0x7463 PUSH9 0x455243313135353A20 PUSH14 0x696E7420746F20746865207A6572 PUSH16 0x2061646472657373416363657373436F PUSH15 0x74726F6C3A2063616E206F6E6C7920 PUSH19 0x656E6F756E636520726F6C657320666F722073 PUSH6 0x6C66A2646970 PUSH7 0x73582212203A1C 0xE4 0xED SIGNEXTEND LT 0xF7 ISZERO DUP11 0xD6 CALLDATALOAD 0xE DUP10 POP RETURNDATACOPY SWAP16 0xDD SELFBALANCE EQ PUSH7 0x42F8B7F998DCAC 0xF7 0xDE DUP10 PUSH30 0x1E64736F6C634300060C0033000000000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        743,
        29998
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "8": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "LT",
      "path": "25"
    },
    "9": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2C8"
    },
    "12": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "13": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "16": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "SHR",
      "path": "25"
    },
    "19": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "20": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x79935FE0"
    },
    "25": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "GT",
      "path": "25"
    },
    "26": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x175"
    },
    "29": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "30": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "31": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xA4AEEC53"
    },
    "36": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "GT",
      "path": "25"
    },
    "37": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xDC"
    },
    "40": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "41": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "42": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xD547741F"
    },
    "47": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "GT",
      "path": "25"
    },
    "48": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x95"
    },
    "51": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "52": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "53": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xE985E9C5"
    },
    "58": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "GT",
      "path": "25"
    },
    "59": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x6F"
    },
    "62": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "63": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "64": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xE985E9C5"
    },
    "69": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "70": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x11E2"
    },
    "73": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "74": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "75": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xF242432A"
    },
    "80": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "81": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x121D"
    },
    "84": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "85": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "86": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xF32C4974"
    },
    "91": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "92": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x12F3"
    },
    "95": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "96": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "97": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xFBC120F9"
    },
    "102": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "103": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1323"
    },
    "106": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "107": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2C8"
    },
    "110": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMP",
      "path": "25"
    },
    "111": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "112": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "113": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xD547741F"
    },
    "118": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "119": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1155"
    },
    "122": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "123": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "124": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xE3E98382"
    },
    "129": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "130": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x118E"
    },
    "133": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "134": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "135": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xE5B0A993"
    },
    "140": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "141": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x11B8"
    },
    "144": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "145": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2C8"
    },
    "148": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMP",
      "path": "25"
    },
    "149": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "150": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "151": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xA4AEEC53"
    },
    "156": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "157": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x107C"
    },
    "160": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "161": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "162": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xB9280067"
    },
    "167": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "168": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1091"
    },
    "171": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "172": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "173": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xBF61211F"
    },
    "178": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "179": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x10D4"
    },
    "182": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "183": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "184": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xC03AFB59"
    },
    "189": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "190": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x10E9"
    },
    "193": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "194": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "195": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xCA15C873"
    },
    "200": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "201": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1116"
    },
    "204": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "205": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "206": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xCAAB7EF8"
    },
    "211": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "212": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1140"
    },
    "215": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "216": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2C8"
    },
    "219": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMP",
      "path": "25"
    },
    "220": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "221": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "222": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x91D14854"
    },
    "227": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "GT",
      "path": "25"
    },
    "228": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x12E"
    },
    "231": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "232": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "233": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x91D14854"
    },
    "238": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "239": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xEC4"
    },
    "242": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "243": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "244": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x94985DDD"
    },
    "249": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "250": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xEFD"
    },
    "253": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "254": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "255": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x9D5B82C0"
    },
    "260": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "261": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xF2D"
    },
    "264": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "265": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "266": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x9E315008"
    },
    "271": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "272": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xFB1"
    },
    "275": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "276": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "277": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xA217FDDF"
    },
    "282": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "283": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x102C"
    },
    "286": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "287": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "288": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xA22CB465"
    },
    "293": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "294": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1041"
    },
    "297": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "298": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2C8"
    },
    "301": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMP",
      "path": "25"
    },
    "302": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "303": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "304": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x79935FE0"
    },
    "309": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "310": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xDC4"
    },
    "313": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "314": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "315": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x835A4398"
    },
    "320": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "321": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xDD9"
    },
    "324": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "325": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "326": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x8423B077"
    },
    "331": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "332": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xE40"
    },
    "335": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "336": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "337": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x8A19C8BC"
    },
    "342": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "343": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xE6A"
    },
    "346": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "347": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "348": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x9010D07C"
    },
    "353": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "354": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xE7F"
    },
    "357": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "358": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "359": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x90DED47E"
    },
    "364": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "365": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xEAF"
    },
    "368": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "369": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2C8"
    },
    "372": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMP",
      "path": "25"
    },
    "373": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "374": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "375": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x2EFB8874"
    },
    "380": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "GT",
      "path": "25"
    },
    "381": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x234"
    },
    "384": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "385": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "386": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x4C2ED018"
    },
    "391": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "GT",
      "path": "25"
    },
    "392": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1ED"
    },
    "395": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "396": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "397": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x56B4D760"
    },
    "402": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "GT",
      "path": "25"
    },
    "403": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1C7"
    },
    "406": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "407": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "408": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x56B4D760"
    },
    "413": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "414": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xD16"
    },
    "417": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "418": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "419": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x59CA19D3"
    },
    "424": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "425": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xD40"
    },
    "428": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "429": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "430": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x6DE51353"
    },
    "435": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "436": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xD70"
    },
    "439": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "440": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "441": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x72EDA5BB"
    },
    "446": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "447": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xD9A"
    },
    "450": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "451": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2C8"
    },
    "454": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMP",
      "path": "25"
    },
    "455": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "456": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "457": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x4C2ED018"
    },
    "462": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "463": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xB57"
    },
    "466": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "467": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "468": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x4C52B2A9"
    },
    "473": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "474": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xB81"
    },
    "477": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "478": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "479": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x4E1273F4"
    },
    "484": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "485": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xB96"
    },
    "488": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "489": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2C8"
    },
    "492": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMP",
      "path": "25"
    },
    "493": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "494": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "495": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x2EFB8874"
    },
    "500": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "501": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x8E3"
    },
    "504": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "505": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "506": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x2F2FF15D"
    },
    "511": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "512": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x95E"
    },
    "515": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "516": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "517": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x36568ABE"
    },
    "522": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "523": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x997"
    },
    "526": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "527": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "528": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x46E6F13D"
    },
    "533": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "534": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x9D0"
    },
    "537": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "538": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "539": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x48772D79"
    },
    "544": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "545": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xA8A"
    },
    "548": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "549": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "550": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x498E8219"
    },
    "555": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "556": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xAE2"
    },
    "559": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "560": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2C8"
    },
    "563": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMP",
      "path": "25"
    },
    "564": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "565": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "566": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x248A9CA3"
    },
    "571": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "GT",
      "path": "25"
    },
    "572": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x286"
    },
    "575": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "576": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "577": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x248A9CA3"
    },
    "582": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "583": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x56F"
    },
    "586": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "587": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "588": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x26D4D15A"
    },
    "593": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "594": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x599"
    },
    "597": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "598": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "599": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x26F7AF4F"
    },
    "604": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "605": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x630"
    },
    "608": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "609": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "610": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x27E50B18"
    },
    "615": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "616": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x66B"
    },
    "619": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "620": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "621": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x2EB2C2D6"
    },
    "626": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "627": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x695"
    },
    "630": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "631": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "632": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x2EE1F0A0"
    },
    "637": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "638": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x863"
    },
    "641": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "642": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2C8"
    },
    "645": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMP",
      "path": "25"
    },
    "646": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "647": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "648": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH3",
      "path": "25",
      "value": "0xFDD58E"
    },
    "652": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "653": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2CD"
    },
    "656": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "657": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "658": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x1FFC9A7"
    },
    "663": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "664": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x318"
    },
    "667": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "668": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "669": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x55AD42E"
    },
    "674": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "675": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x360"
    },
    "678": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "679": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "680": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xE89341C"
    },
    "685": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "686": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x396"
    },
    "689": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "690": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "691": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xFBEA841"
    },
    "696": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "697": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x435"
    },
    "700": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "701": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "702": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x21C2F72A"
    },
    "707": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "EQ",
      "path": "25"
    },
    "708": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4AF"
    },
    "711": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "712": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "713": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "715": {
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "716": {
      "first_revert": true,
      "fn": null,
      "offset": [
        743,
        29998
      ],
      "op": "REVERT",
      "path": "25"
    },
    "717": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "718": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "719": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP1",
      "path": "5"
    },
    "720": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "721": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D9"
    },
    "724": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "725": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "727": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP1",
      "path": "5"
    },
    "728": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "REVERT",
      "path": "5"
    },
    "729": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "730": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "POP",
      "path": "5"
    },
    "731": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x306"
    },
    "734": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "736": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP1",
      "path": "5"
    },
    "737": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "738": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SUB",
      "path": "5"
    },
    "739": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "741": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP2",
      "path": "5"
    },
    "742": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "LT",
      "path": "5"
    },
    "743": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "744": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2F0"
    },
    "747": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "748": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "750": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP1",
      "path": "5"
    },
    "751": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "REVERT",
      "path": "5"
    },
    "752": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "753": {
      "op": "POP"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "758": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "760": {
      "op": "SHL"
    },
    "761": {
      "op": "SUB"
    },
    "762": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP2",
      "path": "5"
    },
    "763": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "764": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "AND",
      "path": "5"
    },
    "765": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "766": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "768": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "ADD",
      "path": "5"
    },
    "769": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "770": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1338"
    },
    "773": {
      "fn": "ERC1155.balanceOf",
      "jump": "i",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMP",
      "path": "5"
    },
    "774": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "775": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "777": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP1",
      "path": "5"
    },
    "778": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "779": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "780": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP3",
      "path": "5"
    },
    "781": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "782": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "783": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "784": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP2",
      "path": "5"
    },
    "785": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "786": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SUB",
      "path": "5"
    },
    "787": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "789": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "ADD",
      "path": "5"
    },
    "790": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "791": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "RETURN",
      "path": "5"
    },
    "792": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "793": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "794": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "1"
    },
    "795": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "796": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x324"
    },
    "799": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "800": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "802": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "1"
    },
    "803": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "REVERT",
      "path": "1"
    },
    "804": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "805": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "POP",
      "path": "1"
    },
    "806": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34C"
    },
    "809": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "811": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "1"
    },
    "812": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "813": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SUB",
      "path": "1"
    },
    "814": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "816": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP2",
      "path": "1"
    },
    "817": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "LT",
      "path": "1"
    },
    "818": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "819": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x33B"
    },
    "822": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "823": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "825": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "1"
    },
    "826": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "REVERT",
      "path": "1"
    },
    "827": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "828": {
      "op": "POP"
    },
    "829": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "834": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "836": {
      "op": "SHL"
    },
    "837": {
      "op": "SUB"
    },
    "838": {
      "op": "NOT"
    },
    "839": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "AND",
      "path": "1"
    },
    "840": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13AA"
    },
    "843": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        965,
        1113
      ],
      "op": "JUMP",
      "path": "1"
    },
    "844": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "845": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "847": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "1"
    },
    "848": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "849": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "850": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "851": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "852": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP3",
      "path": "1"
    },
    "853": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "854": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "855": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "856": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP2",
      "path": "1"
    },
    "857": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "858": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SUB",
      "path": "1"
    },
    "859": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "861": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ADD",
      "path": "1"
    },
    "862": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "863": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "RETURN",
      "path": "1"
    },
    "864": {
      "offset": [
        1117,
        1142
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "865": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "866": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "DUP1",
      "path": "25"
    },
    "867": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "868": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x36C"
    },
    "871": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "872": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "874": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "DUP1",
      "path": "25"
    },
    "875": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "REVERT",
      "path": "25"
    },
    "876": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "877": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "POP",
      "path": "25"
    },
    "878": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x375"
    },
    "881": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x13CD"
    },
    "884": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        1117,
        1142
      ],
      "op": "JUMP",
      "path": "25"
    },
    "885": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "886": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "888": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "889": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "DUP1",
      "path": "25"
    },
    "890": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "DUP3",
      "path": "25"
    },
    "891": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "893": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "DUP2",
      "path": "25"
    },
    "894": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "GT",
      "path": "25"
    },
    "895": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "896": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x385"
    },
    "899": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "900": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "INVALID",
      "path": "25"
    },
    "901": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "902": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "DUP2",
      "path": "25"
    },
    "903": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "904": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "906": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "ADD",
      "path": "25"
    },
    "907": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "908": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "POP",
      "path": "25"
    },
    "909": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "POP",
      "path": "25"
    },
    "910": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "912": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "913": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "DUP1",
      "path": "25"
    },
    "914": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "915": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "SUB",
      "path": "25"
    },
    "916": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "917": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "RETURN",
      "path": "25"
    },
    "918": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "919": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "920": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "921": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "922": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A2"
    },
    "925": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "926": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "928": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "929": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "REVERT",
      "path": "5"
    },
    "930": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "931": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "932": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C0"
    },
    "935": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "937": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "938": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "939": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SUB",
      "path": "5"
    },
    "940": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "942": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "943": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "LT",
      "path": "5"
    },
    "944": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "945": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B9"
    },
    "948": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "949": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "951": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "952": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "REVERT",
      "path": "5"
    },
    "953": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "954": {
      "op": "POP"
    },
    "955": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "956": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13D6"
    },
    "959": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMP",
      "path": "5"
    },
    "960": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "961": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "963": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "964": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "965": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "967": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "968": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP3",
      "path": "5"
    },
    "969": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "970": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "971": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "972": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "973": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "974": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "975": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "976": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "977": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "978": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "979": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "980": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "981": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "982": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "983": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "984": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "985": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "986": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP6",
      "path": "5"
    },
    "987": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "988": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "989": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "990": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "991": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "992": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "994": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "995": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "996": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "997": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "LT",
      "path": "5"
    },
    "998": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "999": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3FA"
    },
    "1002": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1003": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1004": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1005": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "1006": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1007": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1008": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1009": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "1010": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1011": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1013": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "1014": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3E2"
    },
    "1017": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1018": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1019": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1020": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1021": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1022": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1023": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1024": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1025": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1026": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1027": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "1028": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1029": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1031": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "AND",
      "path": "5"
    },
    "1032": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1033": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1034": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x427"
    },
    "1037": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1038": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1039": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1040": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SUB",
      "path": "5"
    },
    "1041": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1042": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1043": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1045": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1046": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1048": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SUB",
      "path": "5"
    },
    "1049": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "1052": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "EXP",
      "path": "5"
    },
    "1053": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SUB",
      "path": "5"
    },
    "1054": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "NOT",
      "path": "5"
    },
    "1055": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "AND",
      "path": "5"
    },
    "1056": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1057": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1058": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1060": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "1061": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1062": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1063": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1064": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1065": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1066": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1067": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1068": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1069": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1071": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1072": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1073": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1074": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SUB",
      "path": "5"
    },
    "1075": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1076": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "RETURN",
      "path": "5"
    },
    "1077": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1078": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x306"
    },
    "1081": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "1083": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1084": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "1085": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "SUB",
      "path": "25"
    },
    "1086": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "1088": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1089": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "LT",
      "path": "25"
    },
    "1090": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1091": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x44B"
    },
    "1094": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1095": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1097": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1098": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1099": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1100": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1101": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "1102": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1103": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1105": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1106": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "ADD",
      "path": "25"
    },
    "1107": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "1108": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1109": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1110": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "ADD",
      "path": "25"
    },
    "1111": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1112": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "1114": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1115": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "ADD",
      "path": "25"
    },
    "1116": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1118": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1119": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "ADD",
      "path": "25"
    },
    "1120": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "1121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1125": {
      "op": "SHL"
    },
    "1126": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1127": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "GT",
      "path": "25"
    },
    "1128": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1129": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x471"
    },
    "1132": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1133": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1135": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1136": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1137": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1138": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1139": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "ADD",
      "path": "25"
    },
    "1140": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1141": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1143": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1144": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "ADD",
      "path": "25"
    },
    "1145": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "GT",
      "path": "25"
    },
    "1146": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1147": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x483"
    },
    "1150": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1151": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1153": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1154": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1155": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1156": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1157": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "1158": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1159": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1161": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "ADD",
      "path": "25"
    },
    "1162": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1163": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP5",
      "path": "25"
    },
    "1164": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "1166": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1167": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "MUL",
      "path": "25"
    },
    "1168": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP5",
      "path": "25"
    },
    "1169": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "ADD",
      "path": "25"
    },
    "1170": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "GT",
      "path": "25"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1175": {
      "op": "SHL"
    },
    "1176": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1177": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "GT",
      "path": "25"
    },
    "1178": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "OR",
      "path": "25"
    },
    "1179": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1180": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4A4"
    },
    "1183": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1184": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1186": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1187": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1188": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1189": {
      "op": "POP"
    },
    "1190": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1191": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "1192": {
      "op": "POP"
    },
    "1193": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1194": {
      "op": "POP"
    },
    "1195": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x146E"
    },
    "1198": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        8657,
        10397
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1199": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1200": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "1201": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1202": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1203": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4BB"
    },
    "1206": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1207": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1209": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1210": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1211": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1212": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "POP",
      "path": "25"
    },
    "1213": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4D9"
    },
    "1216": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "1218": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1219": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "1220": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "SUB",
      "path": "25"
    },
    "1221": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1223": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1224": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "LT",
      "path": "25"
    },
    "1225": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1226": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4D2"
    },
    "1229": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1230": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1232": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1233": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1234": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1235": {
      "op": "POP"
    },
    "1236": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "1237": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x174D"
    },
    "1240": {
      "fn": "CryptoChampions.getElderSpirit",
      "jump": "i",
      "offset": [
        23538,
        24070
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1241": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1242": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1244": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1245": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1246": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP7",
      "path": "25"
    },
    "1247": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1248": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1249": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1250": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1251": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1253": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "ADD",
      "path": "25"
    },
    "1254": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP6",
      "path": "25"
    },
    "1255": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1256": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1257": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1259": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "ADD",
      "path": "25"
    },
    "1260": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP5",
      "path": "25"
    },
    "1261": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1262": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1263": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1265": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "ADD",
      "path": "25"
    },
    "1266": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1267": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1269": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "ADD",
      "path": "25"
    },
    "1270": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1271": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1272": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1273": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1275": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "ADD",
      "path": "25"
    },
    "1276": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1277": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1278": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "SUB",
      "path": "25"
    },
    "1279": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1280": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1281": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP5",
      "path": "25"
    },
    "1282": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1283": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1284": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1285": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1286": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1287": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1289": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "ADD",
      "path": "25"
    },
    "1290": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1291": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "POP",
      "path": "25"
    },
    "1292": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1293": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1294": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1295": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1297": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "ADD",
      "path": "25"
    },
    "1298": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1299": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1300": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1301": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1302": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1304": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1305": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1306": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1307": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "LT",
      "path": "25"
    },
    "1308": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1309": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x530"
    },
    "1312": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1313": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1314": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1315": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "ADD",
      "path": "25"
    },
    "1316": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1317": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1318": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1319": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "ADD",
      "path": "25"
    },
    "1320": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1321": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1323": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "ADD",
      "path": "25"
    },
    "1324": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x518"
    },
    "1327": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1328": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1329": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "POP",
      "path": "25"
    },
    "1330": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "POP",
      "path": "25"
    },
    "1331": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "POP",
      "path": "25"
    },
    "1332": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "POP",
      "path": "25"
    },
    "1333": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1334": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "POP",
      "path": "25"
    },
    "1335": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1336": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1337": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "ADD",
      "path": "25"
    },
    "1338": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1339": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "1341": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "AND",
      "path": "25"
    },
    "1342": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1343": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1344": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x55D"
    },
    "1347": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1348": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1349": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1350": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "SUB",
      "path": "25"
    },
    "1351": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1352": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1353": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "1355": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1356": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1358": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "SUB",
      "path": "25"
    },
    "1359": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "1362": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "EXP",
      "path": "25"
    },
    "1363": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "SUB",
      "path": "25"
    },
    "1364": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "NOT",
      "path": "25"
    },
    "1365": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "AND",
      "path": "25"
    },
    "1366": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1367": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1368": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1370": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "ADD",
      "path": "25"
    },
    "1371": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1372": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "POP",
      "path": "25"
    },
    "1373": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1374": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "POP",
      "path": "25"
    },
    "1375": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "SWAP7",
      "path": "25"
    },
    "1376": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "POP",
      "path": "25"
    },
    "1377": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "POP",
      "path": "25"
    },
    "1378": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "POP",
      "path": "25"
    },
    "1379": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "POP",
      "path": "25"
    },
    "1380": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "POP",
      "path": "25"
    },
    "1381": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "POP",
      "path": "25"
    },
    "1382": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "POP",
      "path": "25"
    },
    "1383": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1385": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1386": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1387": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1388": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "SUB",
      "path": "25"
    },
    "1389": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1390": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "RETURN",
      "path": "25"
    },
    "1391": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1392": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1393": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1394": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1395": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57B"
    },
    "1398": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1399": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1401": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1402": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1403": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1404": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "POP",
      "path": "0"
    },
    "1405": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x306"
    },
    "1408": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1410": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1411": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1412": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "SUB",
      "path": "0"
    },
    "1413": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1415": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1416": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "LT",
      "path": "0"
    },
    "1417": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1418": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x592"
    },
    "1421": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1422": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1424": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1425": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1426": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1427": {
      "op": "POP"
    },
    "1428": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1429": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x187B"
    },
    "1432": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "i",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1433": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1434": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "1435": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1436": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1437": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x5A5"
    },
    "1440": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1441": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1443": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1444": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1445": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1446": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "POP",
      "path": "25"
    },
    "1447": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x614"
    },
    "1450": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "1452": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1453": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "1454": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "SUB",
      "path": "25"
    },
    "1455": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1457": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1458": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "LT",
      "path": "25"
    },
    "1459": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1460": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x5BC"
    },
    "1463": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1464": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1466": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1467": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1468": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1469": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1470": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "ADD",
      "path": "25"
    },
    "1471": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1472": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1474": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1475": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "ADD",
      "path": "25"
    },
    "1476": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1477": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1482": {
      "op": "SHL"
    },
    "1483": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1484": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "GT",
      "path": "25"
    },
    "1485": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1486": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x5D6"
    },
    "1489": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1490": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1492": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1493": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1494": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1495": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1496": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "ADD",
      "path": "25"
    },
    "1497": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1498": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1500": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1501": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "ADD",
      "path": "25"
    },
    "1502": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "GT",
      "path": "25"
    },
    "1503": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1504": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x5E8"
    },
    "1507": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1508": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1510": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1511": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1512": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1513": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1514": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "1515": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1516": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1518": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "ADD",
      "path": "25"
    },
    "1519": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1520": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "DUP5",
      "path": "25"
    },
    "1521": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "1523": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1524": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "MUL",
      "path": "25"
    },
    "1525": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "DUP5",
      "path": "25"
    },
    "1526": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "ADD",
      "path": "25"
    },
    "1527": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "GT",
      "path": "25"
    },
    "1528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1532": {
      "op": "SHL"
    },
    "1533": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1534": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "GT",
      "path": "25"
    },
    "1535": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "OR",
      "path": "25"
    },
    "1536": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1537": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x609"
    },
    "1540": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1541": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1543": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1544": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1545": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1546": {
      "op": "POP"
    },
    "1547": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1548": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "1549": {
      "op": "POP"
    },
    "1550": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1551": {
      "op": "POP"
    },
    "1552": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1890"
    },
    "1555": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "jump": "i",
      "offset": [
        27844,
        27988
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1556": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1557": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1559": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1560": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1567": {
      "op": "SHL"
    },
    "1568": {
      "op": "SUB"
    },
    "1569": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1570": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "1571": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "AND",
      "path": "25"
    },
    "1572": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1573": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1574": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1575": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1576": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1577": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1578": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "SUB",
      "path": "25"
    },
    "1579": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1581": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "ADD",
      "path": "25"
    },
    "1582": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1583": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "RETURN",
      "path": "25"
    },
    "1584": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1585": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "1586": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1587": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1588": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x63C"
    },
    "1591": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1592": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1594": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1595": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1596": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1597": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "POP",
      "path": "25"
    },
    "1598": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x669"
    },
    "1601": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "1603": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1604": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "1605": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "SUB",
      "path": "25"
    },
    "1606": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1608": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1609": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "LT",
      "path": "25"
    },
    "1610": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1611": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x653"
    },
    "1614": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1615": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1617": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1618": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1619": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1620": {
      "op": "POP"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1627": {
      "op": "SHL"
    },
    "1628": {
      "op": "SUB"
    },
    "1629": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1630": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "1631": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "AND",
      "path": "25"
    },
    "1632": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1633": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1635": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "ADD",
      "path": "25"
    },
    "1636": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "1637": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x18CA"
    },
    "1640": {
      "fn": "CryptoChampions.transferInGameTokens",
      "jump": "i",
      "offset": [
        29255,
        29442
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1641": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1642": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "STOP",
      "path": "25"
    },
    "1643": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1644": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "1645": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1646": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1647": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x677"
    },
    "1650": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1651": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1653": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1654": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1655": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1656": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "POP",
      "path": "25"
    },
    "1657": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x669"
    },
    "1660": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "1662": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1663": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "1664": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "SUB",
      "path": "25"
    },
    "1665": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1667": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1668": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "LT",
      "path": "25"
    },
    "1669": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1670": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x68E"
    },
    "1673": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1674": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1676": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1677": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1678": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1679": {
      "op": "POP"
    },
    "1680": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "1681": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x18DF"
    },
    "1684": {
      "fn": "CryptoChampions.burnHero",
      "jump": "i",
      "offset": [
        19789,
        20523
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1685": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1686": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1687": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1688": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1689": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6A1"
    },
    "1692": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1693": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1695": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1696": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1697": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1698": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "POP",
      "path": "5"
    },
    "1699": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x669"
    },
    "1702": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1704": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1705": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1706": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SUB",
      "path": "5"
    },
    "1707": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA0"
    },
    "1709": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1710": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "LT",
      "path": "5"
    },
    "1711": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1712": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6B8"
    },
    "1715": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1716": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1718": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1719": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1720": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1725": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1727": {
      "op": "SHL"
    },
    "1728": {
      "op": "SUB"
    },
    "1729": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1730": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1731": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1732": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "AND",
      "path": "5"
    },
    "1733": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1734": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1736": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1737": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1738": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1739": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1740": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1741": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "AND",
      "path": "5"
    },
    "1742": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1743": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1744": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1745": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1746": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1748": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1749": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1750": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1752": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1753": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1754": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1759": {
      "op": "SHL"
    },
    "1760": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1761": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1762": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1763": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6EB"
    },
    "1766": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1767": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1769": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1770": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1771": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1772": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1773": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1774": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1775": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1777": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1778": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1779": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1780": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1781": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6FD"
    },
    "1784": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1785": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1787": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1788": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1789": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1790": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1791": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1792": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1793": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1795": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1796": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1797": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1798": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1800": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1801": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "1802": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1803": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1804": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1809": {
      "op": "SHL"
    },
    "1810": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1811": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1812": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "OR",
      "path": "5"
    },
    "1813": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1814": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x71E"
    },
    "1817": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1818": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1820": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1821": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1822": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1823": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1824": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1825": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1826": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1827": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1829": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "1830": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1832": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1833": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1835": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1836": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1837": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1838": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1839": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1841": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1842": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1843": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1844": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1845": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1846": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1847": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1848": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1849": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1850": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1852": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1853": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1854": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1855": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1857": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "1858": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1859": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1860": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1861": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "1862": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1864": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1865": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1866": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1867": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1868": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1869": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1870": {
      "op": "POP"
    },
    "1871": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1872": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "1873": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1874": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1875": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1877": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1878": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1879": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1880": {
      "op": "POP"
    },
    "1881": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1882": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1883": {
      "op": "POP"
    },
    "1884": {
      "op": "POP"
    },
    "1885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1887": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1889": {
      "op": "SHL"
    },
    "1890": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1891": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1892": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1893": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x76D"
    },
    "1896": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1897": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1899": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1900": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1901": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1902": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1903": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1904": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1905": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1907": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1908": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1909": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1910": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1911": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x77F"
    },
    "1914": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1915": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1917": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1918": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1919": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1920": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1921": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1922": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1923": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1925": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1926": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1927": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1928": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1930": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1931": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "1932": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1933": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1934": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1937": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1939": {
      "op": "SHL"
    },
    "1940": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1941": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1942": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "OR",
      "path": "5"
    },
    "1943": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1944": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7A0"
    },
    "1947": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1948": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1950": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1951": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1952": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1953": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1954": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1955": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1956": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1957": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1959": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "1960": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1962": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1963": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1965": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1966": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1967": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1968": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1969": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1971": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1972": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1973": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1974": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1975": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1976": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1977": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1978": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1979": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1980": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1982": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1983": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1984": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1985": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1987": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "1988": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1989": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1990": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1991": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "1992": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1994": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1995": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1996": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1997": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1998": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1999": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2000": {
      "op": "POP"
    },
    "2001": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2002": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "2003": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2004": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2005": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2007": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2008": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2009": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2010": {
      "op": "POP"
    },
    "2011": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "2012": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2013": {
      "op": "POP"
    },
    "2014": {
      "op": "POP"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2019": {
      "op": "SHL"
    },
    "2020": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2021": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "2022": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2023": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7EF"
    },
    "2026": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2027": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2029": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2030": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2031": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2032": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2033": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2034": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2035": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2037": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2038": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2039": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "2040": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2041": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x801"
    },
    "2044": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2045": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2047": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2048": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2049": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2050": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2051": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "2052": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2053": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2055": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2056": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2057": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2058": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2060": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2061": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "2062": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2063": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2064": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2069": {
      "op": "SHL"
    },
    "2070": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2071": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "2072": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "OR",
      "path": "5"
    },
    "2073": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2074": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x822"
    },
    "2077": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2078": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2080": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2081": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2082": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2083": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2084": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2085": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2086": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2087": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2089": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2090": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2092": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2093": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2094": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DIV",
      "path": "5"
    },
    "2095": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "2096": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2098": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2099": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2101": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2102": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2103": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2104": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2105": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2107": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2108": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2109": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2110": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2111": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2112": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2113": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2114": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2115": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2116": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2118": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2119": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2120": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2121": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2122": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2123": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2124": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "2125": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2127": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2128": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2129": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2130": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2131": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2132": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2133": {
      "op": "POP"
    },
    "2134": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2135": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "2136": {
      "op": "POP"
    },
    "2137": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A2B"
    },
    "2140": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2141": {
      "op": "POP"
    },
    "2142": {
      "op": "POP"
    },
    "2143": {
      "op": "POP"
    },
    "2144": {
      "op": "POP"
    },
    "2145": {
      "op": "POP"
    },
    "2146": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2147": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2148": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "2149": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2150": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2151": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x86F"
    },
    "2154": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2155": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2157": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2158": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2159": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2160": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "POP",
      "path": "25"
    },
    "2161": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x88D"
    },
    "2164": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2166": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2167": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "2168": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "SUB",
      "path": "25"
    },
    "2169": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2171": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2172": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "LT",
      "path": "25"
    },
    "2173": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2174": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x886"
    },
    "2177": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2178": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2180": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2181": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2182": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2183": {
      "op": "POP"
    },
    "2184": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "2185": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1D2E"
    },
    "2188": {
      "fn": "CryptoChampions.getHeroGameData",
      "jump": "i",
      "offset": [
        24219,
        24768
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2189": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2190": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2192": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2193": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2194": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP7",
      "path": "25"
    },
    "2195": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2196": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2197": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2198": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2199": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2201": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "ADD",
      "path": "25"
    },
    "2202": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2203": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2205": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "ADD",
      "path": "25"
    },
    "2206": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP6",
      "path": "25"
    },
    "2207": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2208": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2209": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2211": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "ADD",
      "path": "25"
    },
    "2212": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP5",
      "path": "25"
    },
    "2213": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2214": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2215": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2217": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "ADD",
      "path": "25"
    },
    "2218": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2219": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2220": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2221": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2223": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "ADD",
      "path": "25"
    },
    "2224": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2225": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2226": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "SUB",
      "path": "25"
    },
    "2227": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2228": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2229": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP7",
      "path": "25"
    },
    "2230": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2231": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2232": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2233": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2234": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2235": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2237": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "ADD",
      "path": "25"
    },
    "2238": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2239": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "POP",
      "path": "25"
    },
    "2240": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2241": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2242": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2243": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2245": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "ADD",
      "path": "25"
    },
    "2246": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2247": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2248": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2249": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2250": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2252": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2253": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2254": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "LT",
      "path": "25"
    },
    "2255": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2256": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x530"
    },
    "2259": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2260": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2261": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2262": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "ADD",
      "path": "25"
    },
    "2263": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2264": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2265": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2266": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "ADD",
      "path": "25"
    },
    "2267": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2268": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2270": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "ADD",
      "path": "25"
    },
    "2271": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x518"
    },
    "2274": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2275": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2276": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "2277": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2278": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2279": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x8EF"
    },
    "2282": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2283": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2285": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2286": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2287": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2288": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "POP",
      "path": "25"
    },
    "2289": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x669"
    },
    "2292": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2294": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2295": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "2296": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "SUB",
      "path": "25"
    },
    "2297": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2299": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2300": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "LT",
      "path": "25"
    },
    "2301": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2302": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x906"
    },
    "2305": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2306": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2308": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2309": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2310": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2311": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2312": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "ADD",
      "path": "25"
    },
    "2313": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2314": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2316": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2317": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "ADD",
      "path": "25"
    },
    "2318": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2319": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "2320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2322": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2324": {
      "op": "SHL"
    },
    "2325": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2326": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "GT",
      "path": "25"
    },
    "2327": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2328": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x920"
    },
    "2331": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2332": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2334": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2335": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2336": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2337": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2338": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "ADD",
      "path": "25"
    },
    "2339": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2340": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2342": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2343": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "ADD",
      "path": "25"
    },
    "2344": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "GT",
      "path": "25"
    },
    "2345": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2346": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x932"
    },
    "2349": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2350": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2352": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2353": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2354": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2355": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2356": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "2357": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2358": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2360": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "ADD",
      "path": "25"
    },
    "2361": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2362": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "DUP5",
      "path": "25"
    },
    "2363": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "2365": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2366": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "MUL",
      "path": "25"
    },
    "2367": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "DUP5",
      "path": "25"
    },
    "2368": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "ADD",
      "path": "25"
    },
    "2369": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "GT",
      "path": "25"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2374": {
      "op": "SHL"
    },
    "2375": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2376": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "GT",
      "path": "25"
    },
    "2377": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "OR",
      "path": "25"
    },
    "2378": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2379": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x953"
    },
    "2382": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2383": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2385": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2386": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2387": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2388": {
      "op": "POP"
    },
    "2389": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2390": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "2391": {
      "op": "POP"
    },
    "2392": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2393": {
      "op": "POP"
    },
    "2394": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1E30"
    },
    "2397": {
      "fn": "CryptoChampions.disburseRewards",
      "jump": "i",
      "offset": [
        18350,
        18438
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2398": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2399": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2400": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2401": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2402": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x96A"
    },
    "2405": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2406": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2408": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2409": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2410": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2411": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "POP",
      "path": "0"
    },
    "2412": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x669"
    },
    "2415": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2417": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2418": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2419": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "SUB",
      "path": "0"
    },
    "2420": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2422": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2423": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "LT",
      "path": "0"
    },
    "2424": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2425": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x981"
    },
    "2428": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2429": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2431": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2432": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2433": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2434": {
      "op": "POP"
    },
    "2435": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2436": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "2437": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2438": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2440": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "ADD",
      "path": "0"
    },
    "2441": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2448": {
      "op": "SHL"
    },
    "2449": {
      "op": "SUB"
    },
    "2450": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "AND",
      "path": "0"
    },
    "2451": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E4B"
    },
    "2454": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2455": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2456": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2457": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2458": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2459": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A3"
    },
    "2462": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2463": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2465": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2466": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2467": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2468": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "POP",
      "path": "0"
    },
    "2469": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x669"
    },
    "2472": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2474": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2475": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2476": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "SUB",
      "path": "0"
    },
    "2477": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2479": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2480": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "LT",
      "path": "0"
    },
    "2481": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2482": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9BA"
    },
    "2485": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2486": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2488": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2489": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2490": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2491": {
      "op": "POP"
    },
    "2492": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2493": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "2494": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2495": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2497": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "ADD",
      "path": "0"
    },
    "2498": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "2499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2503": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2505": {
      "op": "SHL"
    },
    "2506": {
      "op": "SUB"
    },
    "2507": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "AND",
      "path": "0"
    },
    "2508": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EB3"
    },
    "2511": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2512": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2513": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "2514": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2515": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2516": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x9DC"
    },
    "2519": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2520": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2522": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2523": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2524": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2525": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "POP",
      "path": "25"
    },
    "2526": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x9FA"
    },
    "2529": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2531": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2532": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "2533": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "SUB",
      "path": "25"
    },
    "2534": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2536": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2537": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "LT",
      "path": "25"
    },
    "2538": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2539": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x9F3"
    },
    "2542": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2543": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2545": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2546": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2547": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2548": {
      "op": "POP"
    },
    "2549": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "2550": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1F14"
    },
    "2553": {
      "fn": "CryptoChampions.getHeroVisuals",
      "jump": "i",
      "offset": [
        24897,
        25299
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2554": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2555": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2557": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2558": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2559": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2560": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2562": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "ADD",
      "path": "25"
    },
    "2563": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP6",
      "path": "25"
    },
    "2564": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2565": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2566": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2568": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "ADD",
      "path": "25"
    },
    "2569": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP5",
      "path": "25"
    },
    "2570": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2571": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2572": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2574": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "ADD",
      "path": "25"
    },
    "2575": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2576": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "2578": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "AND",
      "path": "25"
    },
    "2579": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2580": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2581": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2583": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "ADD",
      "path": "25"
    },
    "2584": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2585": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2586": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "SUB",
      "path": "25"
    },
    "2587": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2588": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2589": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP7",
      "path": "25"
    },
    "2590": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2591": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2592": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2593": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2594": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2595": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2597": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "ADD",
      "path": "25"
    },
    "2598": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2599": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "POP",
      "path": "25"
    },
    "2600": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2601": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2602": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2603": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2605": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "ADD",
      "path": "25"
    },
    "2606": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2607": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2608": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2609": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2610": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2612": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2613": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2614": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2615": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "LT",
      "path": "25"
    },
    "2616": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2617": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xA4C"
    },
    "2620": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2621": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2622": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2623": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "ADD",
      "path": "25"
    },
    "2624": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2625": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2626": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2627": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "ADD",
      "path": "25"
    },
    "2628": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2629": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2631": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "ADD",
      "path": "25"
    },
    "2632": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xA34"
    },
    "2635": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2636": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2637": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "POP",
      "path": "25"
    },
    "2638": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "POP",
      "path": "25"
    },
    "2639": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "POP",
      "path": "25"
    },
    "2640": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "POP",
      "path": "25"
    },
    "2641": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2642": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "POP",
      "path": "25"
    },
    "2643": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2644": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2645": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "ADD",
      "path": "25"
    },
    "2646": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2647": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "2649": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "AND",
      "path": "25"
    },
    "2650": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2651": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2652": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xA79"
    },
    "2655": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2656": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2657": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2658": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "SUB",
      "path": "25"
    },
    "2659": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2660": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2661": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "2663": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2664": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2666": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "SUB",
      "path": "25"
    },
    "2667": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "2670": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "EXP",
      "path": "25"
    },
    "2671": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "SUB",
      "path": "25"
    },
    "2672": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "NOT",
      "path": "25"
    },
    "2673": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "AND",
      "path": "25"
    },
    "2674": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2675": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2676": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2678": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "ADD",
      "path": "25"
    },
    "2679": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2680": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "POP",
      "path": "25"
    },
    "2681": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2682": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "POP",
      "path": "25"
    },
    "2683": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "2684": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "POP",
      "path": "25"
    },
    "2685": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "POP",
      "path": "25"
    },
    "2686": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "POP",
      "path": "25"
    },
    "2687": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "POP",
      "path": "25"
    },
    "2688": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "POP",
      "path": "25"
    },
    "2689": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "POP",
      "path": "25"
    },
    "2690": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2692": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2693": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2694": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2695": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "SUB",
      "path": "25"
    },
    "2696": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2697": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "RETURN",
      "path": "25"
    },
    "2698": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2699": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "2700": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2701": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2702": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xA96"
    },
    "2705": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2706": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2708": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2709": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2710": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2711": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "POP",
      "path": "25"
    },
    "2712": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xAB4"
    },
    "2715": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2717": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2718": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "2719": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "SUB",
      "path": "25"
    },
    "2720": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2722": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2723": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "LT",
      "path": "25"
    },
    "2724": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2725": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xAAD"
    },
    "2728": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2729": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2731": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2732": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2733": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2734": {
      "op": "POP"
    },
    "2735": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "2736": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2011"
    },
    "2739": {
      "fn": "CryptoChampions.getHeroVitals",
      "jump": "i",
      "offset": [
        26518,
        26887
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2740": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2741": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2743": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2744": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2745": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "2747": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "2748": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "DUP7",
      "path": "25"
    },
    "2749": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "AND",
      "path": "25"
    },
    "2750": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2751": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2752": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "2753": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "DUP6",
      "path": "25"
    },
    "2754": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "AND",
      "path": "25"
    },
    "2755": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2757": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "DUP6",
      "path": "25"
    },
    "2758": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "ADD",
      "path": "25"
    },
    "2759": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2760": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2761": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "DUP5",
      "path": "25"
    },
    "2762": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "AND",
      "path": "25"
    },
    "2763": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2764": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2765": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "ADD",
      "path": "25"
    },
    "2766": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2767": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2768": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "2769": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "AND",
      "path": "25"
    },
    "2770": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "2772": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2773": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "ADD",
      "path": "25"
    },
    "2774": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2775": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2776": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2777": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2778": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2779": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2780": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "SUB",
      "path": "25"
    },
    "2781": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x80"
    },
    "2783": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "ADD",
      "path": "25"
    },
    "2784": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2785": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "RETURN",
      "path": "25"
    },
    "2786": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2787": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x306"
    },
    "2790": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2792": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2793": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "2794": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "SUB",
      "path": "25"
    },
    "2795": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2797": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2798": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "LT",
      "path": "25"
    },
    "2799": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2800": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xAF8"
    },
    "2803": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2804": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2806": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2807": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2808": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2809": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2810": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "2811": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2812": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2813": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2814": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "ADD",
      "path": "25"
    },
    "2815": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2816": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2818": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2819": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "ADD",
      "path": "25"
    },
    "2820": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2822": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2823": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "ADD",
      "path": "25"
    },
    "2824": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "2825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2827": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2829": {
      "op": "SHL"
    },
    "2830": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2831": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "GT",
      "path": "25"
    },
    "2832": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2833": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xB19"
    },
    "2836": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2837": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2839": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2840": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2841": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2842": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2843": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "ADD",
      "path": "25"
    },
    "2844": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2845": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2847": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2848": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "ADD",
      "path": "25"
    },
    "2849": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "GT",
      "path": "25"
    },
    "2850": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2851": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xB2B"
    },
    "2854": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2855": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2857": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2858": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2859": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2860": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2861": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "2862": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2863": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2865": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "ADD",
      "path": "25"
    },
    "2866": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2867": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "DUP5",
      "path": "25"
    },
    "2868": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "2870": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2871": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "MUL",
      "path": "25"
    },
    "2872": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "DUP5",
      "path": "25"
    },
    "2873": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "ADD",
      "path": "25"
    },
    "2874": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "GT",
      "path": "25"
    },
    "2875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2877": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2879": {
      "op": "SHL"
    },
    "2880": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2881": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "GT",
      "path": "25"
    },
    "2882": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "OR",
      "path": "25"
    },
    "2883": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2884": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xB4C"
    },
    "2887": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2888": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2890": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2891": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2892": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2893": {
      "op": "POP"
    },
    "2894": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2895": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "2896": {
      "op": "POP"
    },
    "2897": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2898": {
      "op": "POP"
    },
    "2899": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2083"
    },
    "2902": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        10951,
        13423
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2903": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25952,
        26409
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2904": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25952,
        26409
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "2905": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25952,
        26409
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2906": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25952,
        26409
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2907": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25952,
        26409
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xB63"
    },
    "2910": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25952,
        26409
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2911": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25952,
        26409
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2913": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25952,
        26409
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2914": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25952,
        26409
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2915": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25952,
        26409
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2916": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25952,
        26409
      ],
      "op": "POP",
      "path": "25"
    },
    "2917": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25952,
        26409
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xAB4"
    },
    "2920": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25952,
        26409
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2922": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25952,
        26409
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2923": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25952,
        26409
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "2924": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25952,
        26409
      ],
      "op": "SUB",
      "path": "25"
    },
    "2925": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25952,
        26409
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2927": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25952,
        26409
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2928": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25952,
        26409
      ],
      "op": "LT",
      "path": "25"
    },
    "2929": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25952,
        26409
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2930": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25952,
        26409
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xB7A"
    },
    "2933": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25952,
        26409
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2934": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25952,
        26409
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2936": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25952,
        26409
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2937": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25952,
        26409
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2938": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25952,
        26409
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2939": {
      "op": "POP"
    },
    "2940": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25952,
        26409
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "2941": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25952,
        26409
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x27DB"
    },
    "2944": {
      "fn": "CryptoChampions.getHeroLore",
      "jump": "i",
      "offset": [
        25952,
        26409
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2945": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28118,
        28225
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2946": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28118,
        28225
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "2947": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28118,
        28225
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2948": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28118,
        28225
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2949": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28118,
        28225
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xB8D"
    },
    "2952": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28118,
        28225
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2953": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28118,
        28225
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2955": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28118,
        28225
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2956": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28118,
        28225
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2957": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28118,
        28225
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2958": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28118,
        28225
      ],
      "op": "POP",
      "path": "25"
    },
    "2959": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28118,
        28225
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x306"
    },
    "2962": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28118,
        28225
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2852"
    },
    "2965": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "jump": "i",
      "offset": [
        28118,
        28225
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2966": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2967": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "2968": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2969": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2970": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBA2"
    },
    "2973": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2974": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2976": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2977": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2978": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2979": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "2980": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCC6"
    },
    "2983": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2985": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2986": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "2987": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SUB",
      "path": "5"
    },
    "2988": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2990": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2991": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "LT",
      "path": "5"
    },
    "2992": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2993": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBB9"
    },
    "2996": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2997": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2999": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3000": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3001": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3002": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3003": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3004": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3005": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3007": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3008": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3009": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3010": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "3011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3015": {
      "op": "SHL"
    },
    "3016": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3017": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "3018": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3019": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBD3"
    },
    "3022": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3023": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3025": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3026": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3027": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3028": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3029": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3030": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3031": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3033": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3034": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3035": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "3036": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3037": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBE5"
    },
    "3040": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3041": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3043": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3044": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3045": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3046": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3047": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "3048": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3049": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3051": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3052": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3053": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3054": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3056": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3057": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MUL",
      "path": "5"
    },
    "3058": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3059": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3060": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3065": {
      "op": "SHL"
    },
    "3066": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3067": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "3068": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "OR",
      "path": "5"
    },
    "3069": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3070": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC06"
    },
    "3073": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3074": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3076": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3077": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3078": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3079": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3080": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3081": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3082": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3083": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3085": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MUL",
      "path": "5"
    },
    "3086": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3088": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3089": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3091": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3092": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3093": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3094": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3095": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3097": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3098": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3099": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3100": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3101": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3102": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3103": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3104": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3105": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3106": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3108": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3109": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3110": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3111": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3113": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MUL",
      "path": "5"
    },
    "3114": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3115": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3116": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3117": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "3118": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3120": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3121": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3122": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3123": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3124": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3125": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3126": {
      "op": "POP"
    },
    "3127": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3128": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "3129": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "3130": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3131": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3133": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3134": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3135": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3136": {
      "op": "POP"
    },
    "3137": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "3138": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3139": {
      "op": "POP"
    },
    "3140": {
      "op": "POP"
    },
    "3141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3143": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3145": {
      "op": "SHL"
    },
    "3146": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3147": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "3148": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3149": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC55"
    },
    "3152": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3153": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3155": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3156": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3157": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3158": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3159": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3160": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3161": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3163": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3164": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3165": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "3166": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3167": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC67"
    },
    "3170": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3171": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3173": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3174": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3175": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3176": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3177": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "3178": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3179": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3181": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3182": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3183": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3184": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3186": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3187": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MUL",
      "path": "5"
    },
    "3188": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3189": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3190": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "3191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3193": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3195": {
      "op": "SHL"
    },
    "3196": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3197": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "3198": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "OR",
      "path": "5"
    },
    "3199": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3200": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC88"
    },
    "3203": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3204": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3206": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3207": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3208": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3209": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3210": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3211": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3212": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3213": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3215": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MUL",
      "path": "5"
    },
    "3216": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3218": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3219": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3221": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3222": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3223": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3224": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3225": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3227": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3228": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3229": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3230": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3231": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3232": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3233": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3234": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3235": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3236": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3238": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3239": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3240": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3241": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3243": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MUL",
      "path": "5"
    },
    "3244": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3245": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3246": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3247": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "3248": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3250": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3251": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3252": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3253": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3254": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3255": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3256": {
      "op": "POP"
    },
    "3257": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3258": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "3259": {
      "op": "POP"
    },
    "3260": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2859"
    },
    "3263": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "3264": {
      "op": "POP"
    },
    "3265": {
      "op": "POP"
    },
    "3266": {
      "op": "POP"
    },
    "3267": {
      "op": "POP"
    },
    "3268": {
      "op": "POP"
    },
    "3269": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3270": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3271": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3273": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3274": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3275": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3277": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3278": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3279": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3280": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3281": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3282": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3283": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3284": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3285": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3286": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3287": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3288": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3289": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3290": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3291": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3292": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3293": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3294": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3295": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3296": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3297": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3298": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3299": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3300": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MUL",
      "path": "5"
    },
    "3301": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3302": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3303": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3304": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3306": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3307": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3308": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3309": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "LT",
      "path": "5"
    },
    "3310": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3311": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD02"
    },
    "3314": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3315": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3316": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3317": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3318": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3319": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3320": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3321": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3322": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3323": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3325": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3326": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCEA"
    },
    "3329": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3330": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3331": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3332": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3333": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3334": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3335": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3336": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3337": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3338": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3339": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3340": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3341": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3342": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3344": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3345": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3346": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3347": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SUB",
      "path": "5"
    },
    "3348": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3349": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "RETURN",
      "path": "5"
    },
    "3350": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17897,
        18133
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3351": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17897,
        18133
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "3352": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17897,
        18133
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3353": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17897,
        18133
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3354": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17897,
        18133
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xD22"
    },
    "3357": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17897,
        18133
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3358": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17897,
        18133
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3360": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17897,
        18133
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3361": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17897,
        18133
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3362": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17897,
        18133
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3363": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17897,
        18133
      ],
      "op": "POP",
      "path": "25"
    },
    "3364": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17897,
        18133
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x614"
    },
    "3367": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17897,
        18133
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "3369": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17897,
        18133
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3370": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17897,
        18133
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "3371": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17897,
        18133
      ],
      "op": "SUB",
      "path": "25"
    },
    "3372": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17897,
        18133
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "3374": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17897,
        18133
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3375": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17897,
        18133
      ],
      "op": "LT",
      "path": "25"
    },
    "3376": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17897,
        18133
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3377": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17897,
        18133
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xD39"
    },
    "3380": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17897,
        18133
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3381": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17897,
        18133
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3383": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17897,
        18133
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3384": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17897,
        18133
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3385": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17897,
        18133
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3386": {
      "op": "POP"
    },
    "3387": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17897,
        18133
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "3388": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17897,
        18133
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2945"
    },
    "3391": {
      "fn": "CryptoChampions.getHeroOwner",
      "jump": "i",
      "offset": [
        17897,
        18133
      ],
      "op": "JUMP",
      "path": "25"
    },
    "3392": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3393": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "3394": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3395": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3396": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xD4C"
    },
    "3399": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3400": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3402": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3403": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3404": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3405": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "POP",
      "path": "25"
    },
    "3406": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x306"
    },
    "3409": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "3411": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3412": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "3413": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "SUB",
      "path": "25"
    },
    "3414": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "3416": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3417": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "LT",
      "path": "25"
    },
    "3418": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3419": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xD63"
    },
    "3422": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3423": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3425": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3426": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3427": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3428": {
      "op": "POP"
    },
    "3429": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3430": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "3431": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3432": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "3434": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "ADD",
      "path": "25"
    },
    "3435": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "3436": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x29AE"
    },
    "3439": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "jump": "i",
      "offset": [
        22691,
        22986
      ],
      "op": "JUMP",
      "path": "25"
    },
    "3440": {
      "offset": [
        3746,
        3786
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3441": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "3442": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3443": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3444": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xD7C"
    },
    "3447": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3448": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3450": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3451": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3452": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3453": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "POP",
      "path": "25"
    },
    "3454": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3C0"
    },
    "3457": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "3459": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3460": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "3461": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SUB",
      "path": "25"
    },
    "3462": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "3464": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3465": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "LT",
      "path": "25"
    },
    "3466": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3467": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xD93"
    },
    "3470": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3471": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3473": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3474": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3475": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3476": {
      "op": "POP"
    },
    "3477": {
      "offset": [
        3746,
        3786
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "3478": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x29F9"
    },
    "3481": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "jump": "i",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMP",
      "path": "25"
    },
    "3482": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3483": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "3484": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3485": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3486": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xDA6"
    },
    "3489": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3490": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3492": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3493": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3494": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3495": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "POP",
      "path": "25"
    },
    "3496": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x614"
    },
    "3499": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "3501": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3502": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "3503": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "SUB",
      "path": "25"
    },
    "3504": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "3506": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3507": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "LT",
      "path": "25"
    },
    "3508": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3509": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xDBD"
    },
    "3512": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3513": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3515": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3516": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3517": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3518": {
      "op": "POP"
    },
    "3519": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "3520": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2A9F"
    },
    "3523": {
      "fn": "CryptoChampions.getElderOwner",
      "jump": "i",
      "offset": [
        10538,
        10791
      ],
      "op": "JUMP",
      "path": "25"
    },
    "3524": {
      "offset": [
        3069,
        3098
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3525": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "3526": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3527": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3528": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xDD0"
    },
    "3531": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3532": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3534": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3535": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3536": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3537": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "POP",
      "path": "25"
    },
    "3538": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x306"
    },
    "3541": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2AFA"
    },
    "3544": {
      "fn": "CryptoChampions.getElderOwner",
      "jump": "i",
      "offset": [
        3069,
        3098
      ],
      "op": "JUMP",
      "path": "25"
    },
    "3545": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3546": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "3547": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3548": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3549": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xDE5"
    },
    "3552": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3553": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3555": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3556": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3557": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3558": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "POP",
      "path": "25"
    },
    "3559": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xE03"
    },
    "3562": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "3564": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3565": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "3566": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "SUB",
      "path": "25"
    },
    "3567": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "3569": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3570": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "LT",
      "path": "25"
    },
    "3571": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3572": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xDFC"
    },
    "3575": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3576": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3578": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3579": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3580": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3581": {
      "op": "POP"
    },
    "3582": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "3583": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2B00"
    },
    "3586": {
      "fn": "CryptoChampions.getHeroStats",
      "jump": "i",
      "offset": [
        27055,
        27661
      ],
      "op": "JUMP",
      "path": "25"
    },
    "3587": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3588": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "3590": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3591": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "3592": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "3594": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "SWAP8",
      "path": "25"
    },
    "3595": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "DUP9",
      "path": "25"
    },
    "3596": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "AND",
      "path": "25"
    },
    "3597": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3598": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "3599": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "3600": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "DUP8",
      "path": "25"
    },
    "3601": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "AND",
      "path": "25"
    },
    "3602": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "3604": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "DUP8",
      "path": "25"
    },
    "3605": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "ADD",
      "path": "25"
    },
    "3606": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "3607": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "3608": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "DUP7",
      "path": "25"
    },
    "3609": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "AND",
      "path": "25"
    },
    "3610": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "DUP6",
      "path": "25"
    },
    "3611": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "DUP6",
      "path": "25"
    },
    "3612": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "ADD",
      "path": "25"
    },
    "3613": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "3614": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "3615": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "DUP6",
      "path": "25"
    },
    "3616": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "AND",
      "path": "25"
    },
    "3617": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "3619": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "DUP6",
      "path": "25"
    },
    "3620": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "ADD",
      "path": "25"
    },
    "3621": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "3622": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "DUP5",
      "path": "25"
    },
    "3623": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "AND",
      "path": "25"
    },
    "3624": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x80"
    },
    "3626": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "DUP5",
      "path": "25"
    },
    "3627": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "ADD",
      "path": "25"
    },
    "3628": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "3629": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3630": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "3631": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "AND",
      "path": "25"
    },
    "3632": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA0"
    },
    "3634": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "DUP3",
      "path": "25"
    },
    "3635": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "ADD",
      "path": "25"
    },
    "3636": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "3637": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3638": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "3639": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3640": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3641": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3642": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "SUB",
      "path": "25"
    },
    "3643": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC0"
    },
    "3645": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "ADD",
      "path": "25"
    },
    "3646": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3647": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "RETURN",
      "path": "25"
    },
    "3648": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25427,
        25818
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3649": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25427,
        25818
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "3650": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25427,
        25818
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3651": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25427,
        25818
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3652": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25427,
        25818
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xE4C"
    },
    "3655": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25427,
        25818
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3656": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25427,
        25818
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3658": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25427,
        25818
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3659": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25427,
        25818
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3660": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25427,
        25818
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3661": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25427,
        25818
      ],
      "op": "POP",
      "path": "25"
    },
    "3662": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25427,
        25818
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xAB4"
    },
    "3665": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25427,
        25818
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "3667": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25427,
        25818
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3668": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25427,
        25818
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "3669": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25427,
        25818
      ],
      "op": "SUB",
      "path": "25"
    },
    "3670": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25427,
        25818
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "3672": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25427,
        25818
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3673": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25427,
        25818
      ],
      "op": "LT",
      "path": "25"
    },
    "3674": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25427,
        25818
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3675": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25427,
        25818
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xE63"
    },
    "3678": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25427,
        25818
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3679": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25427,
        25818
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3681": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25427,
        25818
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3682": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25427,
        25818
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3683": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25427,
        25818
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3684": {
      "op": "POP"
    },
    "3685": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25427,
        25818
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "3686": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25427,
        25818
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2B8C"
    },
    "3689": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "jump": "i",
      "offset": [
        25427,
        25818
      ],
      "op": "JUMP",
      "path": "25"
    },
    "3690": {
      "offset": [
        3136,
        3163
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3691": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "3692": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3693": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3694": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xE76"
    },
    "3697": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3698": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3700": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3701": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3702": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3703": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "POP",
      "path": "25"
    },
    "3704": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x306"
    },
    "3707": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2BFB"
    },
    "3710": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "jump": "i",
      "offset": [
        3136,
        3163
      ],
      "op": "JUMP",
      "path": "25"
    },
    "3711": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3712": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "3713": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3714": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3715": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE8B"
    },
    "3718": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3719": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3721": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3722": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3723": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3724": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "POP",
      "path": "0"
    },
    "3725": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "3728": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3730": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3731": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "3732": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "SUB",
      "path": "0"
    },
    "3733": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3735": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3736": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "LT",
      "path": "0"
    },
    "3737": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3738": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA2"
    },
    "3741": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3742": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3744": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3745": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3746": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3747": {
      "op": "POP"
    },
    "3748": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3749": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "3750": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3751": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3753": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "ADD",
      "path": "0"
    },
    "3754": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "3755": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C01"
    },
    "3758": {
      "fn": "AccessControl.getRoleMember",
      "jump": "i",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3759": {
      "offset": [
        2088,
        2136
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3760": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2088,
        2136
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "3761": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2088,
        2136
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3762": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2088,
        2136
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3763": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2088,
        2136
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xEBB"
    },
    "3766": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2088,
        2136
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3767": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2088,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3769": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2088,
        2136
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3770": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2088,
        2136
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3771": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2088,
        2136
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3772": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2088,
        2136
      ],
      "op": "POP",
      "path": "25"
    },
    "3773": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2088,
        2136
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x306"
    },
    "3776": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2088,
        2136
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2C20"
    },
    "3779": {
      "fn": "AccessControl.getRoleMember",
      "jump": "i",
      "offset": [
        2088,
        2136
      ],
      "op": "JUMP",
      "path": "25"
    },
    "3780": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3781": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "3782": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3783": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3784": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED0"
    },
    "3787": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3788": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3790": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3791": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3792": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3793": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "POP",
      "path": "0"
    },
    "3794": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34C"
    },
    "3797": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3799": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3800": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "3801": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "SUB",
      "path": "0"
    },
    "3802": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3804": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3805": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "LT",
      "path": "0"
    },
    "3806": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3807": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEE7"
    },
    "3810": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3811": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3813": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3814": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3815": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3816": {
      "op": "POP"
    },
    "3817": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3818": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "3819": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3820": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3822": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "ADD",
      "path": "0"
    },
    "3823": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "3824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3828": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3830": {
      "op": "SHL"
    },
    "3831": {
      "op": "SUB"
    },
    "3832": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "AND",
      "path": "0"
    },
    "3833": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C25"
    },
    "3836": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3837": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3838": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "3839": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3840": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3841": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF09"
    },
    "3844": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3845": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3847": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3848": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "REVERT",
      "path": "28"
    },
    "3849": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3850": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "POP",
      "path": "28"
    },
    "3851": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x669"
    },
    "3854": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "3856": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3857": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "3858": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "SUB",
      "path": "28"
    },
    "3859": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3861": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3862": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "LT",
      "path": "28"
    },
    "3863": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3864": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF20"
    },
    "3867": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3868": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3870": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3871": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "REVERT",
      "path": "28"
    },
    "3872": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3873": {
      "op": "POP"
    },
    "3874": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3875": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "CALLDATALOAD",
      "path": "28"
    },
    "3876": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3877": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "3879": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "ADD",
      "path": "28"
    },
    "3880": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "CALLDATALOAD",
      "path": "28"
    },
    "3881": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2C3D"
    },
    "3884": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9496,
        9713
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3885": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3886": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "3887": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3888": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3889": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xF39"
    },
    "3892": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3893": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3895": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3896": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3897": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3898": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "POP",
      "path": "25"
    },
    "3899": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x669"
    },
    "3902": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "3904": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3905": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "3906": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "SUB",
      "path": "25"
    },
    "3907": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "3909": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3910": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "LT",
      "path": "25"
    },
    "3911": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3912": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xF50"
    },
    "3915": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3916": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3918": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3919": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3920": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3921": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3922": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "ADD",
      "path": "25"
    },
    "3923": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3924": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "3926": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3927": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "ADD",
      "path": "25"
    },
    "3928": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3929": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "3930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3932": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3934": {
      "op": "SHL"
    },
    "3935": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3936": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "GT",
      "path": "25"
    },
    "3937": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3938": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xF6A"
    },
    "3941": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3942": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3944": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3945": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3946": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3947": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP3",
      "path": "25"
    },
    "3948": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "ADD",
      "path": "25"
    },
    "3949": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP4",
      "path": "25"
    },
    "3950": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "3952": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP3",
      "path": "25"
    },
    "3953": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "ADD",
      "path": "25"
    },
    "3954": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "GT",
      "path": "25"
    },
    "3955": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3956": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xF7C"
    },
    "3959": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3960": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3962": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3963": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3964": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3965": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3966": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "3967": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3968": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "3970": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "ADD",
      "path": "25"
    },
    "3971": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "3972": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP5",
      "path": "25"
    },
    "3973": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "3975": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP4",
      "path": "25"
    },
    "3976": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "MUL",
      "path": "25"
    },
    "3977": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP5",
      "path": "25"
    },
    "3978": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "ADD",
      "path": "25"
    },
    "3979": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "GT",
      "path": "25"
    },
    "3980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3982": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3984": {
      "op": "SHL"
    },
    "3985": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP4",
      "path": "25"
    },
    "3986": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "GT",
      "path": "25"
    },
    "3987": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "OR",
      "path": "25"
    },
    "3988": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3989": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xF9D"
    },
    "3992": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3993": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3995": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3996": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3997": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3998": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "3999": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "4000": {
      "op": "POP"
    },
    "4001": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "4002": {
      "op": "POP"
    },
    "4003": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4008": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4010": {
      "op": "SHL"
    },
    "4011": {
      "op": "SUB"
    },
    "4012": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "AND",
      "path": "25"
    },
    "4013": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2CC4"
    },
    "4016": {
      "fn": "CryptoChampions.createAffinity",
      "jump": "i",
      "offset": [
        7777,
        7972
      ],
      "op": "JUMP",
      "path": "25"
    },
    "4017": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4018": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "4019": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4020": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4021": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xFBD"
    },
    "4024": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4025": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4027": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4028": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4029": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4030": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "POP",
      "path": "25"
    },
    "4031": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x669"
    },
    "4034": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "4036": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4037": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "4038": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "SUB",
      "path": "25"
    },
    "4039": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "4041": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "DUP2",
      "path": "25"
    },
    "4042": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "LT",
      "path": "25"
    },
    "4043": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4044": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xFD4"
    },
    "4047": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4048": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4050": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4051": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4052": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4053": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "DUP2",
      "path": "25"
    },
    "4054": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "ADD",
      "path": "25"
    },
    "4055": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "4056": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "4058": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "DUP2",
      "path": "25"
    },
    "4059": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "ADD",
      "path": "25"
    },
    "4060": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "DUP2",
      "path": "25"
    },
    "4061": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "4062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4064": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4066": {
      "op": "SHL"
    },
    "4067": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "DUP2",
      "path": "25"
    },
    "4068": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "GT",
      "path": "25"
    },
    "4069": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4070": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xFEE"
    },
    "4073": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4074": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4076": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4077": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4078": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4079": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "DUP3",
      "path": "25"
    },
    "4080": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "ADD",
      "path": "25"
    },
    "4081": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "DUP4",
      "path": "25"
    },
    "4082": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "4084": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "DUP3",
      "path": "25"
    },
    "4085": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "ADD",
      "path": "25"
    },
    "4086": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "GT",
      "path": "25"
    },
    "4087": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4088": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1000"
    },
    "4091": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4092": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4094": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4095": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4096": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4097": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4098": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "4099": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "4100": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "4102": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "ADD",
      "path": "25"
    },
    "4103": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "4104": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "DUP5",
      "path": "25"
    },
    "4105": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "4107": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "DUP4",
      "path": "25"
    },
    "4108": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "MUL",
      "path": "25"
    },
    "4109": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "DUP5",
      "path": "25"
    },
    "4110": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "ADD",
      "path": "25"
    },
    "4111": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "GT",
      "path": "25"
    },
    "4112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4114": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4116": {
      "op": "SHL"
    },
    "4117": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "DUP4",
      "path": "25"
    },
    "4118": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "GT",
      "path": "25"
    },
    "4119": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "OR",
      "path": "25"
    },
    "4120": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4121": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1021"
    },
    "4124": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4125": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4127": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4128": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4129": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4130": {
      "op": "POP"
    },
    "4131": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "4132": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "4133": {
      "op": "POP"
    },
    "4134": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "4135": {
      "op": "POP"
    },
    "4136": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2D66"
    },
    "4139": {
      "fn": "CryptoChampions.declareRoundWinner",
      "jump": "i",
      "offset": [
        28411,
        28567
      ],
      "op": "JUMP",
      "path": "25"
    },
    "4140": {
      "offset": [
        1727,
        1776
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4141": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "4142": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4143": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4144": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1038"
    },
    "4147": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4148": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4150": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4151": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4152": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4153": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "POP",
      "path": "0"
    },
    "4154": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x306"
    },
    "4157": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DCC"
    },
    "4160": {
      "fn": "CryptoChampions.declareRoundWinner",
      "jump": "i",
      "offset": [
        1727,
        1776
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4161": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4162": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "4163": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4164": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4165": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x104D"
    },
    "4168": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4169": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4171": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4172": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4173": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4174": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "POP",
      "path": "5"
    },
    "4175": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x669"
    },
    "4178": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4180": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4181": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "4182": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "SUB",
      "path": "5"
    },
    "4183": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4185": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4186": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "LT",
      "path": "5"
    },
    "4187": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4188": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1064"
    },
    "4191": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4192": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4194": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4195": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4196": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4197": {
      "op": "POP"
    },
    "4198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4204": {
      "op": "SHL"
    },
    "4205": {
      "op": "SUB"
    },
    "4206": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4207": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4208": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "AND",
      "path": "5"
    },
    "4209": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4210": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4212": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "ADD",
      "path": "5"
    },
    "4213": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4214": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4215": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4216": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2DD1"
    },
    "4219": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4220": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18496,
        18895
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4221": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18496,
        18895
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "4222": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18496,
        18895
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4223": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18496,
        18895
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4224": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18496,
        18895
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1088"
    },
    "4227": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18496,
        18895
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4228": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18496,
        18895
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4230": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18496,
        18895
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4231": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18496,
        18895
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4232": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18496,
        18895
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4233": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18496,
        18895
      ],
      "op": "POP",
      "path": "25"
    },
    "4234": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18496,
        18895
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x669"
    },
    "4237": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18496,
        18895
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2EC0"
    },
    "4240": {
      "fn": "CryptoChampions.burnElders",
      "jump": "i",
      "offset": [
        18496,
        18895
      ],
      "op": "JUMP",
      "path": "25"
    },
    "4241": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4242": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "4243": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4244": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4245": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x109D"
    },
    "4248": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4249": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4251": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4252": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4253": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4254": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "POP",
      "path": "25"
    },
    "4255": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x669"
    },
    "4258": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "4260": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4261": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "4262": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "SUB",
      "path": "25"
    },
    "4263": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "4265": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "DUP2",
      "path": "25"
    },
    "4266": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "LT",
      "path": "25"
    },
    "4267": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4268": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x10B4"
    },
    "4271": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4272": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4274": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4275": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4276": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4277": {
      "op": "POP"
    },
    "4278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4284": {
      "op": "SHL"
    },
    "4285": {
      "op": "SUB"
    },
    "4286": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "DUP2",
      "path": "25"
    },
    "4287": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "4288": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "DUP2",
      "path": "25"
    },
    "4289": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "AND",
      "path": "25"
    },
    "4290": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "4291": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "4293": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "DUP2",
      "path": "25"
    },
    "4294": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "ADD",
      "path": "25"
    },
    "4295": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "4296": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "4297": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "4298": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "AND",
      "path": "25"
    },
    "4299": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "4300": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "4302": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "ADD",
      "path": "25"
    },
    "4303": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "4304": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2F56"
    },
    "4307": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "jump": "i",
      "offset": [
        29762,
        29996
      ],
      "op": "JUMP",
      "path": "25"
    },
    "4308": {
      "offset": [
        2241,
        2272
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4309": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2241,
        2272
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "4310": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2241,
        2272
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4311": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2241,
        2272
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4312": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2241,
        2272
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x10E0"
    },
    "4315": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2241,
        2272
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4316": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2241,
        2272
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4318": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2241,
        2272
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4319": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2241,
        2272
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4320": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2241,
        2272
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4321": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2241,
        2272
      ],
      "op": "POP",
      "path": "25"
    },
    "4322": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2241,
        2272
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x306"
    },
    "4325": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2241,
        2272
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2F66"
    },
    "4328": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "jump": "i",
      "offset": [
        2241,
        2272
      ],
      "op": "JUMP",
      "path": "25"
    },
    "4329": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4330": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "4331": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4332": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4333": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x10F5"
    },
    "4336": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4337": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4339": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4340": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4341": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4342": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "POP",
      "path": "25"
    },
    "4343": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x669"
    },
    "4346": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "4348": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4349": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "4350": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "SUB",
      "path": "25"
    },
    "4351": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "4353": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "DUP2",
      "path": "25"
    },
    "4354": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "LT",
      "path": "25"
    },
    "4355": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4356": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x110C"
    },
    "4359": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4360": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4362": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4363": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4364": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4365": {
      "op": "POP"
    },
    "4366": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "4367": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "4369": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "AND",
      "path": "25"
    },
    "4370": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2F6C"
    },
    "4373": {
      "fn": "CryptoChampions.setPhase",
      "jump": "i",
      "offset": [
        7156,
        7243
      ],
      "op": "JUMP",
      "path": "25"
    },
    "4374": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4375": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "4376": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4377": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4378": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1122"
    },
    "4381": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4382": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4384": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4385": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4386": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4387": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "POP",
      "path": "0"
    },
    "4388": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x306"
    },
    "4391": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4393": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4394": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "4395": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "SUB",
      "path": "0"
    },
    "4396": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4398": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4399": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "LT",
      "path": "0"
    },
    "4400": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4401": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1139"
    },
    "4404": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4405": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4407": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4408": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4409": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4410": {
      "op": "POP"
    },
    "4411": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "4412": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FA3"
    },
    "4415": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "i",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4416": {
      "offset": [
        2586,
        2617
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4417": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "4418": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4419": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4420": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x114C"
    },
    "4423": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4424": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4426": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4427": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4428": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4429": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "POP",
      "path": "25"
    },
    "4430": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x306"
    },
    "4433": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2FBA"
    },
    "4436": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "i",
      "offset": [
        2586,
        2617
      ],
      "op": "JUMP",
      "path": "25"
    },
    "4437": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4438": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "4439": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4440": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4441": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1161"
    },
    "4444": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4445": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4447": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4448": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4449": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4450": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "POP",
      "path": "0"
    },
    "4451": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x669"
    },
    "4454": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4456": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4457": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "4458": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "SUB",
      "path": "0"
    },
    "4459": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4461": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4462": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "LT",
      "path": "0"
    },
    "4463": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4464": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1178"
    },
    "4467": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4468": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4470": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4471": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4472": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4473": {
      "op": "POP"
    },
    "4474": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4475": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "4476": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4477": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4479": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "ADD",
      "path": "0"
    },
    "4480": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "4481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4485": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4487": {
      "op": "SHL"
    },
    "4488": {
      "op": "SUB"
    },
    "4489": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "AND",
      "path": "0"
    },
    "4490": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FC0"
    },
    "4493": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4494": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4495": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "4496": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4497": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4498": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x119A"
    },
    "4501": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4502": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4504": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4505": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4506": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4507": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "POP",
      "path": "25"
    },
    "4508": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x669"
    },
    "4511": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "4513": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4514": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "4515": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "SUB",
      "path": "25"
    },
    "4516": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "4518": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "DUP2",
      "path": "25"
    },
    "4519": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "LT",
      "path": "25"
    },
    "4520": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4521": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x11B1"
    },
    "4524": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4525": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4527": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4528": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4529": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4530": {
      "op": "POP"
    },
    "4531": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "4532": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3019"
    },
    "4535": {
      "fn": "CryptoChampions.setElderMintPrice",
      "jump": "i",
      "offset": [
        8118,
        8227
      ],
      "op": "JUMP",
      "path": "25"
    },
    "4536": {
      "offset": [
        3330,
        3356
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4537": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "4538": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4539": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4540": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x11C4"
    },
    "4543": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4544": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4546": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4547": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4548": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4549": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "POP",
      "path": "25"
    },
    "4550": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3C0"
    },
    "4553": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "4555": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4556": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "4557": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "SUB",
      "path": "25"
    },
    "4558": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "4560": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "DUP2",
      "path": "25"
    },
    "4561": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "LT",
      "path": "25"
    },
    "4562": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4563": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x11DB"
    },
    "4566": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4567": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4569": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4570": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4571": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4572": {
      "op": "POP"
    },
    "4573": {
      "offset": [
        3330,
        3356
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "4574": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3035"
    },
    "4577": {
      "fn": "CryptoChampions.setElderMintPrice",
      "jump": "i",
      "offset": [
        3330,
        3356
      ],
      "op": "JUMP",
      "path": "25"
    },
    "4578": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4579": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "4580": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4581": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4582": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11EE"
    },
    "4585": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4586": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4588": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4589": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4590": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4591": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "POP",
      "path": "5"
    },
    "4592": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34C"
    },
    "4595": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4597": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4598": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "4599": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "SUB",
      "path": "5"
    },
    "4600": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4602": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4603": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "LT",
      "path": "5"
    },
    "4604": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4605": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1205"
    },
    "4608": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4609": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4611": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4612": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4613": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4614": {
      "op": "POP"
    },
    "4615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4621": {
      "op": "SHL"
    },
    "4622": {
      "op": "SUB"
    },
    "4623": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4624": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4625": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4626": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "AND",
      "path": "5"
    },
    "4627": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4628": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4630": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "ADD",
      "path": "5"
    },
    "4631": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4632": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "AND",
      "path": "5"
    },
    "4633": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3042"
    },
    "4636": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4637": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4638": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "4639": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4640": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4641": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1229"
    },
    "4644": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4645": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4647": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4648": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4649": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4650": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "POP",
      "path": "5"
    },
    "4651": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x669"
    },
    "4654": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4656": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4657": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "4658": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SUB",
      "path": "5"
    },
    "4659": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA0"
    },
    "4661": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4662": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "LT",
      "path": "5"
    },
    "4663": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4664": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1240"
    },
    "4667": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4668": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4670": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4671": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4672": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4679": {
      "op": "SHL"
    },
    "4680": {
      "op": "SUB"
    },
    "4681": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4682": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4683": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4684": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "AND",
      "path": "5"
    },
    "4685": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4686": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4688": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4689": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4690": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4691": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4692": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4693": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "AND",
      "path": "5"
    },
    "4694": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4695": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4697": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4698": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4699": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4700": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4701": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "4703": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4704": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4705": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4706": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4707": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4708": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4709": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4710": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA0"
    },
    "4712": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4713": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4714": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "4716": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4717": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4718": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4721": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4723": {
      "op": "SHL"
    },
    "4724": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4725": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "GT",
      "path": "5"
    },
    "4726": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4727": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x127F"
    },
    "4730": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4731": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4733": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4734": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4735": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4736": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4737": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4738": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4739": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4741": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4742": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4743": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "GT",
      "path": "5"
    },
    "4744": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4745": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1291"
    },
    "4748": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4749": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4751": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4752": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4753": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4754": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4755": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4756": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4757": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4759": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4760": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4761": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4762": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4764": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4765": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "MUL",
      "path": "5"
    },
    "4766": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4767": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4768": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "GT",
      "path": "5"
    },
    "4769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4771": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4773": {
      "op": "SHL"
    },
    "4774": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4775": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "GT",
      "path": "5"
    },
    "4776": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "OR",
      "path": "5"
    },
    "4777": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4778": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12B2"
    },
    "4781": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4782": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4784": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4785": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4786": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4787": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4788": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4789": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4790": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4791": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "4793": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4794": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4796": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4797": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4798": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DIV",
      "path": "5"
    },
    "4799": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "MUL",
      "path": "5"
    },
    "4800": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4802": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4803": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4805": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4806": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4807": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4808": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4809": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4811": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4812": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4813": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "4814": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4815": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4816": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4817": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4818": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4819": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4820": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4822": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4823": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4824": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4825": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4826": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4827": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4828": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "4829": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4831": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4832": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4833": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4834": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4835": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4836": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4837": {
      "op": "POP"
    },
    "4838": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4839": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "4840": {
      "op": "POP"
    },
    "4841": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3070"
    },
    "4844": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "4845": {
      "op": "POP"
    },
    "4846": {
      "op": "POP"
    },
    "4847": {
      "op": "POP"
    },
    "4848": {
      "op": "POP"
    },
    "4849": {
      "op": "POP"
    },
    "4850": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4851": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4852": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "4853": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4854": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4855": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x12FF"
    },
    "4858": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4859": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4861": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4862": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4863": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4864": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "POP",
      "path": "25"
    },
    "4865": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x306"
    },
    "4868": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "4870": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4871": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "4872": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "SUB",
      "path": "25"
    },
    "4873": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "4875": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "DUP2",
      "path": "25"
    },
    "4876": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "LT",
      "path": "25"
    },
    "4877": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4878": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1316"
    },
    "4881": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4882": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4884": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4885": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4886": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4887": {
      "op": "POP"
    },
    "4888": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4889": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "4890": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "4891": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "4893": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "ADD",
      "path": "25"
    },
    "4894": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "4895": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x323B"
    },
    "4898": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "jump": "i",
      "offset": [
        20774,
        21154
      ],
      "op": "JUMP",
      "path": "25"
    },
    "4899": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28679,
        29086
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4900": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28679,
        29086
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "4901": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28679,
        29086
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4902": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28679,
        29086
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4903": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28679,
        29086
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x132F"
    },
    "4906": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28679,
        29086
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4907": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28679,
        29086
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4909": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28679,
        29086
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4910": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28679,
        29086
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4911": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28679,
        29086
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4912": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28679,
        29086
      ],
      "op": "POP",
      "path": "25"
    },
    "4913": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28679,
        29086
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x669"
    },
    "4916": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28679,
        29086
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x32A0"
    },
    "4919": {
      "fn": "CryptoChampions.startNewPriceGame",
      "jump": "i",
      "offset": [
        28679,
        29086
      ],
      "op": "JUMP",
      "path": "25"
    },
    "4920": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4921": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3062,
        3069
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4929": {
      "op": "SHL"
    },
    "4930": {
      "op": "SUB"
    },
    "4931": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3089,
        3110
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 0
    },
    "4932": {
      "branch": 257,
      "fn": "ERC1155.balanceOf",
      "offset": [
        3089,
        3110
      ],
      "op": "AND",
      "path": "5"
    },
    "4933": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x137F"
    },
    "4936": {
      "branch": 257,
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4937": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4939": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4940": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4944": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4946": {
      "op": "SHL"
    },
    "4947": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4948": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4949": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4951": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "ADD",
      "path": "5"
    },
    "4952": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4953": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4954": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4956": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "ADD",
      "path": "5"
    },
    "4957": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4958": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4959": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "SUB",
      "path": "5"
    },
    "4960": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4961": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4962": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2B"
    },
    "4964": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4965": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4966": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4968": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "ADD",
      "path": "5"
    },
    "4969": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4970": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5102"
    },
    "4973": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2B"
    },
    "4975": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4976": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "4977": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4979": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "ADD",
      "path": "5"
    },
    "4980": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4981": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "POP",
      "path": "5"
    },
    "4982": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "POP",
      "path": "5"
    },
    "4983": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4985": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4986": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4987": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4988": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "SUB",
      "path": "5"
    },
    "4989": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4990": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4991": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4992": {
      "op": "POP"
    },
    "4993": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 1,
      "value": "0x0"
    },
    "4995": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4996": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4997": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4998": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3184
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "5000": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5002": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5003": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5004": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5005": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5007": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5008": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5009": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5014": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5016": {
      "op": "SHL"
    },
    "5017": {
      "op": "SUB"
    },
    "5018": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "DUP7",
      "path": "5"
    },
    "5019": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "AND",
      "path": "5"
    },
    "5020": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5021": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5022": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5023": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5024": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5025": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5026": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5027": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5028": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5029": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5030": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5031": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "POP",
      "path": "5"
    },
    "5032": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "POP",
      "path": "5"
    },
    "5033": {
      "fn": "ERC1155.balanceOf",
      "jump": "o",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5034": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5039": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5041": {
      "op": "SHL"
    },
    "5042": {
      "op": "SUB"
    },
    "5043": {
      "op": "NOT"
    },
    "5044": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 2
    },
    "5045": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "AND",
      "path": "1"
    },
    "5046": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1050,
        1054
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5048": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5049": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5050": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5051": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1093
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5053": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5055": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5056": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5058": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5059": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5060": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5061": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "5063": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "AND",
      "path": "1"
    },
    "5064": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5065": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5066": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5067": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "POP",
      "path": "1"
    },
    "5068": {
      "fn": "ERC165.supportsInterface",
      "jump": "o",
      "offset": [
        965,
        1113
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5069": {
      "offset": [
        1117,
        1142
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5070": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x6"
    },
    "5072": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "5073": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "5075": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "AND",
      "path": "25"
    },
    "5076": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5077": {
      "fn": "ERC165.supportsInterface",
      "jump": "o",
      "offset": [
        1117,
        1142
      ],
      "op": "JUMP",
      "path": "25"
    },
    "5078": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5079": {
      "fn": "ERC1155.uri",
      "offset": [
        2823,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 3,
      "value": "0x4"
    },
    "5081": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5082": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5083": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5085": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5086": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5087": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5089": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "5091": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "5093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5095": {
      "op": "NOT"
    },
    "5096": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "5099": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "5101": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP9",
      "path": "5"
    },
    "5102": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "AND",
      "path": "5"
    },
    "5103": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5104": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MUL",
      "path": "5"
    },
    "5105": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5106": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5107": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "5108": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "AND",
      "path": "5"
    },
    "5109": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "5110": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5111": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "5112": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DIV",
      "path": "5"
    },
    "5113": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "5114": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5115": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5116": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5117": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5118": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DIV",
      "path": "5"
    },
    "5119": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5120": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MUL",
      "path": "5"
    },
    "5121": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5122": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5123": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5124": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5125": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5126": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5127": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5128": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5129": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5130": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5131": {
      "fn": "ERC1155.uri",
      "offset": [
        2791,
        2804
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "5133": {
      "fn": "ERC1155.uri",
      "offset": [
        2791,
        2804
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "5134": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5135": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5136": {
      "fn": "ERC1155.uri",
      "offset": [
        2823,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5137": {
      "fn": "ERC1155.uri",
      "offset": [
        2823,
        2827
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5138": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5139": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5140": {
      "fn": "ERC1155.uri",
      "offset": [
        2823,
        2827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5141": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5142": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5143": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5144": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1462"
    },
    "5147": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5148": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5149": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "5151": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "LT",
      "path": "5"
    },
    "5152": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1437"
    },
    "5155": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5156": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "5159": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5160": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5161": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5162": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DIV",
      "path": "5"
    },
    "5163": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MUL",
      "path": "5"
    },
    "5164": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5165": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5166": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5167": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5169": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5170": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5171": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1462"
    },
    "5174": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5175": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5176": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5177": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5178": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5179": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5180": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5182": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5183": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5185": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5187": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5188": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5189": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5190": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5191": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5192": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5193": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5194": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5195": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "5197": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5198": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5199": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5201": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5202": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5203": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5204": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "GT",
      "path": "5"
    },
    "5205": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1445"
    },
    "5208": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5209": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5210": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5211": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SUB",
      "path": "5"
    },
    "5212": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "5214": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "AND",
      "path": "5"
    },
    "5215": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5216": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5217": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5218": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5219": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "POP",
      "path": "5"
    },
    "5220": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "POP",
      "path": "5"
    },
    "5221": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "POP",
      "path": "5"
    },
    "5222": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "POP",
      "path": "5"
    },
    "5223": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "POP",
      "path": "5"
    },
    "5224": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5225": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "POP",
      "path": "5"
    },
    "5226": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5227": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5228": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "5229": {
      "fn": "ERC1155.uri",
      "jump": "o",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5230": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5231": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8806,
        8813
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5233": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8806,
        8813
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5234": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8833,
        8845
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 4,
      "value": "0x6"
    },
    "5236": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8833,
        8845
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "5237": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8833,
        8845
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "5239": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8833,
        8845
      ],
      "op": "AND",
      "path": "25"
    },
    "5240": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8833,
        8845
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "5242": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8833,
        8865
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5243": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8833,
        8865
      ],
      "op": "GT",
      "path": "25"
    },
    "5244": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8833,
        8865
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5245": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8833,
        8865
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1482"
    },
    "5248": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8833,
        8865
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "5249": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8833,
        8865
      ],
      "op": "INVALID",
      "path": "25"
    },
    "5250": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8833,
        8865
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5251": {
      "branch": 225,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8833,
        8865
      ],
      "op": "EQ",
      "path": "25"
    },
    "5252": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8825,
        8866
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x148C"
    },
    "5255": {
      "branch": 225,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8825,
        8866
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "5256": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8825,
        8866
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5258": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8825,
        8866
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5259": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8825,
        8866
      ],
      "op": "REVERT",
      "path": "25"
    },
    "5260": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8825,
        8866
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5261": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "5263": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8926,
        8938
      ],
      "op": "DUP1",
      "path": "25",
      "statement": 5
    },
    "5264": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8926,
        8938
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "5265": {
      "branch": 226,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8926,
        8961
      ],
      "op": "LT",
      "path": "25"
    },
    "5266": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8918,
        8962
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x149A"
    },
    "5269": {
      "branch": 226,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8918,
        8962
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "5270": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8918,
        8962
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5272": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8918,
        8962
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5273": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8918,
        8962
      ],
      "op": "REVERT",
      "path": "25"
    },
    "5274": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8918,
        8962
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5275": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9038,
        9052
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 6,
      "value": "0xE"
    },
    "5277": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9038,
        9052
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "5278": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9025,
        9034
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "5279": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9025,
        9052
      ],
      "op": "LT",
      "path": "25"
    },
    "5280": {
      "branch": 227,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9025,
        9052
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5281": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9017,
        9053
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x14A9"
    },
    "5284": {
      "branch": 227,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9017,
        9053
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "5285": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9017,
        9053
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5287": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9017,
        9053
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5288": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9017,
        9053
      ],
      "op": "REVERT",
      "path": "25"
    },
    "5289": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9017,
        9053
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5290": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9134,
        9135
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 7,
      "value": "0x0"
    },
    "5292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5296": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5298": {
      "op": "SHL"
    },
    "5299": {
      "op": "SUB"
    },
    "5300": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9136
      ],
      "op": "AND",
      "path": "25"
    },
    "5301": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9112
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x10"
    },
    "5303": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9113,
        9121
      ],
      "op": "DUP5",
      "path": "25"
    },
    "5304": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9113,
        9121
      ],
      "op": "DUP5",
      "path": "25"
    },
    "5305": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "5307": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5308": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5309": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5310": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5311": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5312": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5313": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "DUP5",
      "path": "25"
    },
    "5314": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "CALLDATACOPY",
      "path": "25"
    },
    "5315": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5316": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5317": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5318": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "ADD",
      "path": "25"
    },
    "5319": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "5320": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "DUP6",
      "path": "25"
    },
    "5321": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5322": {
      "op": "POP"
    },
    "5323": {
      "op": "POP"
    },
    "5324": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "5326": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5327": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "5328": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5329": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5330": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "SUB",
      "path": "25"
    },
    "5331": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "5333": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "ADD",
      "path": "25"
    },
    "5334": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5335": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "5336": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "5337": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "5338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5344": {
      "op": "SHL"
    },
    "5345": {
      "op": "SUB"
    },
    "5346": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "AND",
      "path": "25"
    },
    "5347": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9136
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "5348": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9136
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5349": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9136
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "5350": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9136
      ],
      "op": "EQ",
      "path": "25"
    },
    "5351": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9136
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5352": {
      "branch": 228,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9136
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5353": {
      "op": "POP"
    },
    "5354": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9093,
        9137
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x14F4"
    },
    "5357": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9093,
        9137
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5358": {
      "op": "POP"
    },
    "5359": {
      "branch": 228,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9093,
        9137
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "5360": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9093,
        9137
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5362": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9093,
        9137
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5363": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9093,
        9137
      ],
      "op": "REVERT",
      "path": "25"
    },
    "5364": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9093,
        9137
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5365": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9271,
        9283
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "5367": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9271,
        9283
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "5368": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9253,
        9268
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5370": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9253,
        9268
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5371": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9271,
        9290
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1505"
    },
    "5374": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9271,
        9290
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5375": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9288,
        9289
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "5377": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9271,
        9287
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34D7"
    },
    "5380": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        9271,
        9290
      ],
      "op": "JUMP",
      "path": "25"
    },
    "5381": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9271,
        9290
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5382": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9340,
        9341
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 8,
      "value": "0x0"
    },
    "5384": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9307,
        9328
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5385": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9307,
        9328
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5386": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9307,
        9328
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5387": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9307,
        9319
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "5389": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9307,
        9328
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "5391": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9307,
        9328
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5392": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9307,
        9328
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "5394": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9307,
        9328
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5395": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9307,
        9328
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "5396": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9307,
        9328
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "5397": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9253,
        9290
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5398": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9253,
        9290
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5399": {
      "op": "POP"
    },
    "5400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5406": {
      "op": "SHL"
    },
    "5407": {
      "op": "SUB"
    },
    "5408": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9307,
        9328
      ],
      "op": "AND",
      "path": "25"
    },
    "5409": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9307,
        9342
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5410": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9300,
        9343
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1527"
    },
    "5413": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9300,
        9343
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "5414": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9300,
        9343
      ],
      "op": "INVALID",
      "path": "25"
    },
    "5415": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9300,
        9343
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5416": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9401,
        9423
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 9,
      "value": "0x0"
    },
    "5418": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9401,
        9423
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5419": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9401,
        9423
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5420": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9401,
        9423
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5421": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9401,
        9414
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x9"
    },
    "5423": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9401,
        9423
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "5425": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9401,
        9423
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5426": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9401,
        9423
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "5428": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9401,
        9423
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5429": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9401,
        9423
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "5430": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9401,
        9429
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "5431": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9401,
        9429
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "5433": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9401,
        9429
      ],
      "op": "AND",
      "path": "25"
    },
    "5434": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9401,
        9438
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5435": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9394,
        9439
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1540"
    },
    "5438": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9394,
        9439
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "5439": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9394,
        9439
      ],
      "op": "INVALID",
      "path": "25"
    },
    "5440": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9394,
        9439
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5441": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9549,
        9569
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5443": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9638
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 10,
      "value": "0x10"
    },
    "5445": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9639,
        9647
      ],
      "op": "DUP6",
      "path": "25"
    },
    "5446": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9639,
        9647
      ],
      "op": "DUP6",
      "path": "25"
    },
    "5447": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "5449": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5450": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5451": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5452": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5453": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5454": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5455": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "DUP5",
      "path": "25"
    },
    "5456": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "CALLDATACOPY",
      "path": "25"
    },
    "5457": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5458": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5459": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5460": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "ADD",
      "path": "25"
    },
    "5461": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "5462": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "DUP6",
      "path": "25"
    },
    "5463": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5464": {
      "op": "POP"
    },
    "5465": {
      "op": "POP"
    },
    "5466": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "5468": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5469": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5470": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "5471": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "DUP5",
      "path": "25"
    },
    "5472": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5473": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "SUB",
      "path": "25"
    },
    "5474": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "5476": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "ADD",
      "path": "25"
    },
    "5477": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "DUP5",
      "path": "25"
    },
    "5478": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "5479": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "5480": {
      "op": "PUSH4",
      "value": "0x3FABE5A3"
    },
    "5485": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "5487": {
      "op": "SHL"
    },
    "5488": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "DUP6",
      "path": "25"
    },
    "5489": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5490": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5491": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5498": {
      "op": "SHL"
    },
    "5499": {
      "op": "SUB"
    },
    "5500": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5501": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5502": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "AND",
      "path": "25"
    },
    "5503": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "5504": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9665
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xFEAF968C"
    },
    "5509": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9665
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "5510": {
      "op": "POP"
    },
    "5511": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "5513": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5514": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5515": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "ADD",
      "path": "25"
    },
    "5516": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "5517": {
      "op": "POP"
    },
    "5518": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA0"
    },
    "5520": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "5521": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5522": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5523": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5524": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "SUB",
      "path": "25"
    },
    "5525": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "ADD",
      "path": "25"
    },
    "5526": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5527": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "DUP7",
      "path": "25"
    },
    "5528": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5529": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "EXTCODESIZE",
      "path": "25"
    },
    "5530": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5531": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5532": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5533": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x15A5"
    },
    "5536": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "5537": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5539": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5540": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "REVERT",
      "path": "25"
    },
    "5541": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5542": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "POP",
      "path": "25"
    },
    "5543": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "GAS",
      "path": "25"
    },
    "5544": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "STATICCALL",
      "path": "25"
    },
    "5545": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5546": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5547": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5548": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x15B9"
    },
    "5551": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "5552": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "5553": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5555": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5556": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "5557": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "5558": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5560": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "REVERT",
      "path": "25"
    },
    "5561": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5562": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "POP",
      "path": "25"
    },
    "5563": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "POP",
      "path": "25"
    },
    "5564": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "POP",
      "path": "25"
    },
    "5565": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "POP",
      "path": "25"
    },
    "5566": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "5568": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5569": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "5570": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA0"
    },
    "5572": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5573": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "LT",
      "path": "25"
    },
    "5574": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5575": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x15CF"
    },
    "5578": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "5579": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5581": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5582": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "REVERT",
      "path": "25"
    },
    "5583": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5584": {
      "op": "POP"
    },
    "5585": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "5587": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "ADD",
      "path": "25"
    },
    "5588": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5589": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5590": {
      "op": "POP"
    },
    "5591": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9713,
        9737
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x15DE"
    },
    "5594": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9713,
        9737
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4D9A"
    },
    "5597": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        9713,
        9737
      ],
      "op": "JUMP",
      "path": "25"
    },
    "5598": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9713,
        9737
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5599": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9761,
        9765
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 11,
      "value": "0x1"
    },
    "5601": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9747,
        9765
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5602": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9747,
        9765
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5603": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9775,
        9787
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 12,
      "value": "0x20"
    },
    "5605": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9775,
        9787
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5606": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9775,
        9787
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5607": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9775,
        9787
      ],
      "op": "ADD",
      "path": "25"
    },
    "5608": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9775,
        9796
      ],
      "op": "DUP10",
      "path": "25"
    },
    "5609": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9775,
        9796
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5610": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9775,
        9796
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5611": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9806,
        9819
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 13,
      "value": "0x40"
    },
    "5613": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9806,
        9819
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5614": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9806,
        9819
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5615": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9806,
        9819
      ],
      "op": "ADD",
      "path": "25"
    },
    "5616": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9806,
        9829
      ],
      "op": "DUP10",
      "path": "25"
    },
    "5617": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9806,
        9829
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5618": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9806,
        9829
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5619": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "DUP1",
      "path": "25",
      "statement": 14
    },
    "5620": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5621": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "5623": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "DUP9",
      "path": "25"
    },
    "5624": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "ADD",
      "path": "25"
    },
    "5625": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5626": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5627": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "DIV",
      "path": "25"
    },
    "5628": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5629": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "MUL",
      "path": "25"
    },
    "5630": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5631": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "ADD",
      "path": "25"
    },
    "5632": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5633": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "ADD",
      "path": "25"
    },
    "5634": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5635": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5636": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5637": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "DUP7",
      "path": "25"
    },
    "5638": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5639": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5640": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5641": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9856,
        9864
      ],
      "op": "DUP8",
      "path": "25"
    },
    "5642": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9856,
        9864
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5643": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9856,
        9864
      ],
      "op": "DUP8",
      "path": "25"
    },
    "5644": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9856,
        9864
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5645": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9856,
        9864
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5646": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9856,
        9864
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5647": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "DUP5",
      "path": "25"
    },
    "5648": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "ADD",
      "path": "25"
    },
    "5649": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9856,
        9864
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5650": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9856,
        9864
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5651": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9856,
        9864
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5652": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9856,
        9864
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5653": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "DUP5",
      "path": "25"
    },
    "5654": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "CALLDATACOPY",
      "path": "25"
    },
    "5655": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5657": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "5658": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "ADD",
      "path": "25"
    },
    "5659": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5660": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5661": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5662": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5663": {
      "op": "POP"
    },
    "5664": {
      "op": "POP"
    },
    "5665": {
      "op": "POP"
    },
    "5666": {
      "op": "POP"
    },
    "5667": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9853
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "5669": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9853
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5670": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9853
      ],
      "op": "ADD",
      "path": "25"
    },
    "5671": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5672": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9874,
        9893
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 15,
      "value": "0x80"
    },
    "5674": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9874,
        9893
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5675": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9874,
        9893
      ],
      "op": "ADD",
      "path": "25"
    },
    "5676": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9874,
        9909
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5677": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9874,
        9909
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5678": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9874,
        9909
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5679": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9979
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 16,
      "value": "0x1651"
    },
    "5682": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9950,
        9962
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1639"
    },
    "5685": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9950,
        9960
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3531"
    },
    "5688": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        9950,
        9962
      ],
      "op": "JUMP",
      "path": "25"
    },
    "5689": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9950,
        9962
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5690": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9964,
        9971
      ],
      "op": "DUP5",
      "path": "25"
    },
    "5691": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9973,
        9974
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "5693": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9979
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "5695": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9979
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5696": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9979
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5697": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9979
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "5699": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9979
      ],
      "op": "ADD",
      "path": "25"
    },
    "5700": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9979
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "5702": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9979
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5703": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9979
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5704": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9979
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5706": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9979
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5707": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9979
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5708": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9979
      ],
      "op": "POP",
      "path": "25"
    },
    "5709": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9949
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3535"
    },
    "5712": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        9944,
        9979
      ],
      "op": "JUMP",
      "path": "25"
    },
    "5713": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9979
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5714": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10097,
        10109
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 17,
      "value": "0x1659"
    },
    "5717": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10097,
        10107
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3531"
    },
    "5720": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        10097,
        10109
      ],
      "op": "JUMP",
      "path": "25"
    },
    "5721": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10097,
        10109
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5722": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10094
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5724": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10094
      ],
      "op": "DUP5",
      "path": "25"
    },
    "5725": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10094
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5726": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10094
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5727": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10085
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "5729": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10094
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "5731": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10094
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5732": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10094
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5733": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10094
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5734": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10094
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "5736": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10094
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5737": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10094
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5738": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10094
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "5739": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10109
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5740": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10109
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "5741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5747": {
      "op": "SHL"
    },
    "5748": {
      "op": "SUB"
    },
    "5749": {
      "op": "NOT"
    },
    "5750": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10109
      ],
      "op": "AND",
      "path": "25"
    },
    "5751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5755": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5757": {
      "op": "SHL"
    },
    "5758": {
      "op": "SUB"
    },
    "5759": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10109
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "5760": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10109
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5761": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10109
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "5762": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10109
      ],
      "op": "AND",
      "path": "25"
    },
    "5763": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10109
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "5764": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10109
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5765": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10109
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "5766": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10109
      ],
      "op": "OR",
      "path": "25"
    },
    "5767": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10109
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5768": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10109
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "5769": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10109
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "5770": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10132
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 18,
      "value": "0x9"
    },
    "5772": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10141
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5773": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10141
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5774": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10141
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5775": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10141
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5776": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10141
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5777": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10141
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "5778": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5779": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5780": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5781": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "5782": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5784": {
      "op": "NOT"
    },
    "5785": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "AND",
      "path": "25"
    },
    "5786": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5787": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5788": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5789": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "OR",
      "path": "25"
    },
    "5790": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5791": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "5792": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5793": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5794": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "ADD",
      "path": "25"
    },
    "5795": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5798": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5799": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "ADD",
      "path": "25"
    },
    "5800": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "5801": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5802": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5803": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "ADD",
      "path": "25"
    },
    "5804": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5805": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "5807": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5808": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "ADD",
      "path": "25"
    },
    "5809": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "5810": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "5812": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5813": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "ADD",
      "path": "25"
    },
    "5814": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5815": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5816": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5817": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "DUP5",
      "path": "25"
    },
    "5818": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "5819": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10141
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "5820": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x16CC"
    },
    "5823": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "5824": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x3"
    },
    "5826": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "DUP6",
      "path": "25"
    },
    "5827": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "ADD",
      "path": "25"
    },
    "5828": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "5829": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5830": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "ADD",
      "path": "25"
    },
    "5831": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5832": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4DCB"
    },
    "5835": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        10119,
        10149
      ],
      "op": "JUMP",
      "path": "25"
    },
    "5836": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5837": {
      "op": "POP"
    },
    "5838": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x80"
    },
    "5840": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5841": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5842": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5843": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "ADD",
      "path": "25"
    },
    "5844": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5845": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "5847": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5848": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5849": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "ADD",
      "path": "25"
    },
    "5850": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "5851": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10210,
        10222
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 19,
      "value": "0x7"
    },
    "5853": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10210,
        10222
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "5854": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10210,
        10229
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x16E8"
    },
    "5857": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10210,
        10229
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5858": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10227,
        10228
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "5860": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10210,
        10226
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34D7"
    },
    "5863": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        10210,
        10229
      ],
      "op": "JUMP",
      "path": "25"
    },
    "5864": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10210,
        10229
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5865": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10195,
        10207
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "5867": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10195,
        10229
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "5868": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10294,
        10308
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 20,
      "value": "0xE"
    },
    "5870": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10294,
        10308
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "5871": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10280,
        10309
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x16F7"
    },
    "5874": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10280,
        10309
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5875": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10280,
        10293
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x363D"
    },
    "5878": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        10280,
        10309
      ],
      "op": "JUMP",
      "path": "25"
    },
    "5879": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10280,
        10309
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5880": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "PUSH32",
      "path": "25",
      "statement": 21,
      "value": "0x3560F0337E62819199860BA21B425B8BDE9A01FA6E514DD58AB6EDF7DAF1D1F1"
    },
    "5913": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10343,
        10350
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5914": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10352,
        10364
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1721"
    },
    "5917": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10352,
        10362
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3531"
    },
    "5920": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        10352,
        10364
      ],
      "op": "JUMP",
      "path": "25"
    },
    "5921": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10352,
        10364
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5922": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "5924": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5925": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5926": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "5927": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5928": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5935": {
      "op": "SHL"
    },
    "5936": {
      "op": "SUB"
    },
    "5937": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5938": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5939": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "AND",
      "path": "25"
    },
    "5940": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "5942": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5943": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "ADD",
      "path": "25"
    },
    "5944": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5945": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5946": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5947": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5948": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5949": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5950": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "SUB",
      "path": "25"
    },
    "5951": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "ADD",
      "path": "25"
    },
    "5952": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5953": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "LOG1",
      "path": "25"
    },
    "5954": {
      "op": "POP"
    },
    "5955": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10383,
        10390
      ],
      "op": "SWAP1",
      "path": "25",
      "statement": 22
    },
    "5956": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10383,
        10390
      ],
      "op": "SWAP7",
      "path": "25"
    },
    "5957": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "5958": {
      "op": "POP"
    },
    "5959": {
      "op": "POP"
    },
    "5960": {
      "op": "POP"
    },
    "5961": {
      "op": "POP"
    },
    "5962": {
      "op": "POP"
    },
    "5963": {
      "op": "POP"
    },
    "5964": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "o",
      "offset": [
        8657,
        10397
      ],
      "op": "JUMP",
      "path": "25"
    },
    "5965": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5966": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23694,
        23698
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5968": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23712,
        23719
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5969": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23733,
        23740
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5971": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23754,
        23767
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "5973": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23787
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5975": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23655,
        23662
      ],
      "op": "DUP6",
      "path": "25"
    },
    "5976": {
      "offset": [
        1766,
        1767
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5978": {
      "offset": [
        5739,
        5746
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5979": {
      "offset": [
        5739,
        5768
      ],
      "op": "GT",
      "path": "25"
    },
    "5980": {
      "offset": [
        5739,
        5803
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5981": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        5739,
        5803
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5982": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        5739,
        5803
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1768"
    },
    "5985": {
      "offset": [
        5739,
        5803
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "5986": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        5739,
        5803
      ],
      "op": "POP",
      "path": "25"
    },
    "5987": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "5989": {
      "offset": [
        5772,
        5779
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5990": {
      "offset": [
        5772,
        5803
      ],
      "op": "GT",
      "path": "25"
    },
    "5991": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        5772,
        5803
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5992": {
      "offset": [
        5739,
        5803
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5993": {
      "offset": [
        5731,
        5804
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1771"
    },
    "5996": {
      "offset": [
        5731,
        5804
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "5997": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        5731,
        5804
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5999": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        5731,
        5804
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6000": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        5731,
        5804
      ],
      "op": "REVERT",
      "path": "25"
    },
    "6001": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        5731,
        5804
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6002": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23842
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1779"
    },
    "6005": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23842
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4D9A"
    },
    "6008": {
      "fn": "CryptoChampions.getElderSpirit",
      "jump": "i",
      "offset": [
        23812,
        23842
      ],
      "op": "JUMP",
      "path": "25"
    },
    "6009": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23842
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6010": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23845,
        23867
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "6012": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23845,
        23867
      ],
      "op": "DUP9",
      "path": "25"
    },
    "6013": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23845,
        23867
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6014": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23845,
        23867
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6015": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23845,
        23858
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x9"
    },
    "6017": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23845,
        23867
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "6019": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23845,
        23867
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6020": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23845,
        23867
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6021": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23845,
        23867
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6022": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23845,
        23867
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "6024": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23845,
        23867
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6025": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23845,
        23867
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6026": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23845,
        23867
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6027": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23845,
        23867
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "6028": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6029": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "6030": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA0"
    },
    "6032": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6033": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "ADD",
      "path": "25"
    },
    "6034": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP5",
      "path": "25"
    },
    "6035": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6036": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6037": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6038": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "6040": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "AND",
      "path": "25"
    },
    "6041": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "6042": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "6043": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6044": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6045": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "6047": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6048": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6049": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "ADD",
      "path": "25"
    },
    "6050": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6051": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6052": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP6",
      "path": "25"
    },
    "6053": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "ADD",
      "path": "25"
    },
    "6054": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6055": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "6057": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6058": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP5",
      "path": "25"
    },
    "6059": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "ADD",
      "path": "25"
    },
    "6060": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6061": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6062": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP8",
      "path": "25"
    },
    "6063": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "ADD",
      "path": "25"
    },
    "6064": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6065": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x3"
    },
    "6067": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP5",
      "path": "25"
    },
    "6068": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "ADD",
      "path": "25"
    },
    "6069": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6070": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6071": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP8",
      "path": "25"
    },
    "6072": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "6073": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "6076": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "6077": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6078": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "AND",
      "path": "25"
    },
    "6079": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "6080": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "6081": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6082": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "6083": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "MUL",
      "path": "25"
    },
    "6084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6086": {
      "op": "NOT"
    },
    "6087": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "ADD",
      "path": "25"
    },
    "6088": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "AND",
      "path": "25"
    },
    "6089": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6090": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6091": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6092": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DIV",
      "path": "25"
    },
    "6093": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "6095": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6096": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "ADD",
      "path": "25"
    },
    "6097": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP7",
      "path": "25"
    },
    "6098": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6099": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DIV",
      "path": "25"
    },
    "6100": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP7",
      "path": "25"
    },
    "6101": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "MUL",
      "path": "25"
    },
    "6102": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6103": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "ADD",
      "path": "25"
    },
    "6104": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP7",
      "path": "25"
    },
    "6105": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "ADD",
      "path": "25"
    },
    "6106": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6107": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP7",
      "path": "25"
    },
    "6108": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6109": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP6",
      "path": "25"
    },
    "6110": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6111": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6112": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6113": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "6114": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23845,
        23867
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "6115": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23845,
        23867
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "6116": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "6118": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP7",
      "path": "25"
    },
    "6119": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "ADD",
      "path": "25"
    },
    "6120": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "6121": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6122": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "6123": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6124": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6125": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6126": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "ADD",
      "path": "25"
    },
    "6127": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6128": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6129": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6130": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "6131": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x183D"
    },
    "6134": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "6135": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6136": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "6138": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "LT",
      "path": "25"
    },
    "6139": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1812"
    },
    "6142": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "6143": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "6146": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6147": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6148": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6149": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DIV",
      "path": "25"
    },
    "6150": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "MUL",
      "path": "25"
    },
    "6151": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6152": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6153": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6154": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "6156": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "ADD",
      "path": "25"
    },
    "6157": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6158": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x183D"
    },
    "6161": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "JUMP",
      "path": "25"
    },
    "6162": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6163": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6164": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "ADD",
      "path": "25"
    },
    "6165": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6166": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6167": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "6169": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6170": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "6172": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "6174": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "6175": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6176": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6177": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6178": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6179": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6180": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6181": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6182": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "6184": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "ADD",
      "path": "25"
    },
    "6185": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6186": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "6188": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "ADD",
      "path": "25"
    },
    "6189": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6190": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6191": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "GT",
      "path": "25"
    },
    "6192": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1820"
    },
    "6195": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "6196": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6197": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6198": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SUB",
      "path": "25"
    },
    "6199": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "6201": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "AND",
      "path": "25"
    },
    "6202": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6203": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "ADD",
      "path": "25"
    },
    "6204": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6205": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6206": {
      "op": "POP"
    },
    "6207": {
      "op": "POP"
    },
    "6208": {
      "op": "POP"
    },
    "6209": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6210": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6211": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6212": {
      "op": "POP"
    },
    "6213": {
      "op": "POP"
    },
    "6214": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "6216": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6217": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6218": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6219": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "ADD",
      "path": "25"
    },
    "6220": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6221": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "6223": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6224": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6225": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "ADD",
      "path": "25"
    },
    "6226": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23812,
        23867
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6227": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23898,
        23915
      ],
      "op": "DUP2",
      "path": "25",
      "statement": 23
    },
    "6228": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23898,
        23915
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "6229": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23929,
        23947
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6230": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23929,
        23947
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6231": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23929,
        23947
      ],
      "op": "ADD",
      "path": "25"
    },
    "6232": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23929,
        23947
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "6233": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23961,
        23980
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "6235": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23961,
        23980
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6236": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23961,
        23980
      ],
      "op": "ADD",
      "path": "25"
    },
    "6237": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23961,
        23980
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "6238": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23994,
        24014
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "6240": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23994,
        24014
      ],
      "op": "DUP5",
      "path": "25"
    },
    "6241": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23994,
        24014
      ],
      "op": "ADD",
      "path": "25"
    },
    "6242": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23994,
        24014
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "6243": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        24028,
        24053
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x80"
    },
    "6245": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        24028,
        24053
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6246": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        24028,
        24053
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "6247": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        24028,
        24053
      ],
      "op": "ADD",
      "path": "25"
    },
    "6248": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        24028,
        24053
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "6249": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23898,
        23915
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "6250": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23898,
        23915
      ],
      "op": "SWAP13",
      "path": "25"
    },
    "6251": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23929,
        23947
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6252": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23929,
        23947
      ],
      "op": "SWAP12",
      "path": "25"
    },
    "6253": {
      "op": "POP"
    },
    "6254": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23961,
        23980
      ],
      "op": "SWAP10",
      "path": "25"
    },
    "6255": {
      "op": "POP"
    },
    "6256": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23994,
        24014
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6257": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23994,
        24014
      ],
      "op": "SWAP8",
      "path": "25"
    },
    "6258": {
      "op": "POP"
    },
    "6259": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        24028,
        24053
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "6260": {
      "op": "POP"
    },
    "6261": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23538,
        24070
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "6262": {
      "op": "POP"
    },
    "6263": {
      "op": "POP"
    },
    "6264": {
      "op": "POP"
    },
    "6265": {
      "op": "POP"
    },
    "6266": {
      "fn": "CryptoChampions.getElderSpirit",
      "jump": "o",
      "offset": [
        23538,
        24070
      ],
      "op": "JUMP",
      "path": "25"
    },
    "6267": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6268": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4339,
        4346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6270": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 24
    },
    "6271": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6272": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6273": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6275": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6276": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6277": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6278": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6280": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6281": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6282": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4387
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "6284": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4387
      ],
      "op": "ADD",
      "path": "0"
    },
    "6285": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4387
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6286": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4387
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6287": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "o",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6288": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6289": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27934,
        27941
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "6291": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27971
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 25,
      "value": "0x10"
    },
    "6293": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27972,
        27980
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6294": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27972,
        27980
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6295": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "6297": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "6298": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6299": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6300": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6301": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6302": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6303": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "DUP5",
      "path": "25"
    },
    "6304": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "CALLDATACOPY",
      "path": "25"
    },
    "6305": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6306": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6307": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6308": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "ADD",
      "path": "25"
    },
    "6309": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "6310": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "DUP6",
      "path": "25"
    },
    "6311": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6312": {
      "op": "POP"
    },
    "6313": {
      "op": "POP"
    },
    "6314": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "6316": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "6317": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "6318": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6319": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6320": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "SUB",
      "path": "25"
    },
    "6321": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "6323": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "ADD",
      "path": "25"
    },
    "6324": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6325": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "6326": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "6327": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6334": {
      "op": "SHL"
    },
    "6335": {
      "op": "SUB"
    },
    "6336": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "AND",
      "path": "25"
    },
    "6337": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27960,
        27981
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "6338": {
      "op": "POP"
    },
    "6339": {
      "op": "POP"
    },
    "6340": {
      "op": "POP"
    },
    "6341": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "6342": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6343": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "POP",
      "path": "25"
    },
    "6344": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27844,
        27988
      ],
      "op": "POP",
      "path": "25"
    },
    "6345": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "jump": "o",
      "offset": [
        27844,
        27988
      ],
      "op": "JUMP",
      "path": "25"
    },
    "6346": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6347": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29341,
        29358
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "6349": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29368,
        29435
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 26,
      "value": "0x18DA"
    },
    "6352": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29385,
        29395
      ],
      "op": "CALLER",
      "path": "25"
    },
    "6353": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29397,
        29399
      ],
      "op": "DUP5",
      "path": "25"
    },
    "6354": {
      "offset": [
        1766,
        1767
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "6356": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29422,
        29428
      ],
      "op": "DUP6",
      "path": "25"
    },
    "6357": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29430,
        29434
      ],
      "op": "DUP6",
      "path": "25"
    },
    "6358": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29368,
        29384
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3070"
    },
    "6361": {
      "fn": "CryptoChampions.transferInGameTokens",
      "jump": "i",
      "offset": [
        29368,
        29435
      ],
      "op": "JUMP",
      "path": "25"
    },
    "6362": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29368,
        29435
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6363": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "POP",
      "path": "25"
    },
    "6364": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "POP",
      "path": "25"
    },
    "6365": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29255,
        29442
      ],
      "op": "POP",
      "path": "25"
    },
    "6366": {
      "fn": "CryptoChampions.transferInGameTokens",
      "jump": "o",
      "offset": [
        29255,
        29442
      ],
      "op": "JUMP",
      "path": "25"
    },
    "6367": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6368": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19853,
        19859
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6369": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "6371": {
      "offset": [
        5914,
        5920
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6372": {
      "offset": [
        5914,
        5943
      ],
      "op": "GT",
      "path": "25"
    },
    "6373": {
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x18ED"
    },
    "6376": {
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "6377": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "6379": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5906,
        5944
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6380": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5906,
        5944
      ],
      "op": "REVERT",
      "path": "25"
    },
    "6381": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6382": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "6384": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6385": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6386": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6387": {
      "offset": [
        5993,
        6000
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "6389": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "6391": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6392": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "6394": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5993,
        6008
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6395": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5993,
        6008
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "6396": {
      "offset": [
        5993,
        6014
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6397": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5993,
        6014
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "6399": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5993,
        6014
      ],
      "op": "AND",
      "path": "25"
    },
    "6400": {
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1908"
    },
    "6403": {
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "6404": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "6406": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5985,
        6015
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6407": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5985,
        6015
      ],
      "op": "REVERT",
      "path": "25"
    },
    "6408": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6409": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19879,
        19894
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 27,
      "value": "0x0"
    },
    "6411": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19879,
        19894
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6412": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19879,
        19894
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6413": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19879,
        19894
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6414": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19879,
        19886
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "6416": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19879,
        19894
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "6418": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19879,
        19894
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6419": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19879,
        19894
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "6421": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19879,
        19894
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6422": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19879,
        19894
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "6423": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19879,
        19900
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6424": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19879,
        19900
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "6426": {
      "branch": 229,
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19879,
        19900
      ],
      "op": "AND",
      "path": "25"
    },
    "6427": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19871,
        19901
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1923"
    },
    "6430": {
      "branch": 229,
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19871,
        19901
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "6431": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19871,
        19901
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "6433": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19871,
        19901
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6434": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19871,
        19901
      ],
      "op": "REVERT",
      "path": "25"
    },
    "6435": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19871,
        19901
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6436": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19988,
        20000
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 28,
      "value": "0x192B"
    },
    "6439": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19988,
        19998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3531"
    },
    "6442": {
      "fn": "CryptoChampions.burnHero",
      "jump": "i",
      "offset": [
        19988,
        20000
      ],
      "op": "JUMP",
      "path": "25"
    },
    "6443": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19988,
        20000
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6444": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19965,
        19984
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "6446": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19965,
        19984
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6447": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19965,
        19984
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6448": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19965,
        19984
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6449": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19965,
        19976
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xB"
    },
    "6451": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19965,
        19984
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "6453": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19965,
        19984
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6454": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19965,
        19984
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "6456": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19965,
        19984
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6457": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19965,
        19984
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "6458": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19965,
        19984
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6465": {
      "op": "SHL"
    },
    "6466": {
      "op": "SUB"
    },
    "6467": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19965,
        19984
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6468": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19965,
        19984
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6469": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19965,
        19984
      ],
      "op": "AND",
      "path": "25"
    },
    "6470": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19965,
        20000
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6471": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19965,
        20000
      ],
      "op": "AND",
      "path": "25"
    },
    "6472": {
      "branch": 230,
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19965,
        20000
      ],
      "op": "EQ",
      "path": "25"
    },
    "6473": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19957,
        20001
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1951"
    },
    "6476": {
      "branch": 230,
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19957,
        20001
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "6477": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19957,
        20001
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "6479": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19957,
        20001
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6480": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19957,
        20001
      ],
      "op": "REVERT",
      "path": "25"
    },
    "6481": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19957,
        20001
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6482": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20062,
        20081
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 29,
      "value": "0x0"
    },
    "6484": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20062,
        20081
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6485": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20062,
        20081
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6486": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20062,
        20081
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6487": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20062,
        20073
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xB"
    },
    "6489": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20062,
        20081
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "6491": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20062,
        20081
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6492": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20062,
        20081
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "6494": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20062,
        20081
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6495": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20062,
        20081
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "6496": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20062,
        20081
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6497": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20056,
        20093
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1975"
    },
    "6500": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20056,
        20093
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6505": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6507": {
      "op": "SHL"
    },
    "6508": {
      "op": "SUB"
    },
    "6509": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20062,
        20081
      ],
      "op": "AND",
      "path": "25"
    },
    "6510": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20074,
        20080
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6511": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20062,
        20081
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "6513": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20056,
        20061
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x36AE"
    },
    "6516": {
      "fn": "CryptoChampions.burnHero",
      "jump": "i",
      "offset": [
        20056,
        20093
      ],
      "op": "JUMP",
      "path": "25"
    },
    "6517": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20056,
        20093
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6518": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20167,
        20182
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "6520": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20185,
        20200
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6521": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20185,
        20200
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6522": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20185,
        20200
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6523": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20185,
        20192
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "6525": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20185,
        20200
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "6527": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20185,
        20200
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6528": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20185,
        20200
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6529": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20185,
        20200
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6530": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20185,
        20200
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "6532": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20185,
        20200
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6533": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20185,
        20200
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6534": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20185,
        20200
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "6535": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20185,
        20208
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x5"
    },
    "6537": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20185,
        20208
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6538": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20185,
        20208
      ],
      "op": "ADD",
      "path": "25"
    },
    "6539": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20185,
        20208
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6540": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20238,
        20265
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "6542": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20238,
        20265
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6543": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20238,
        20265
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6544": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20238,
        20265
      ],
      "op": "ADD",
      "path": "25"
    },
    "6545": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20238,
        20265
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6546": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20315,
        20343
      ],
      "op": "DUP1",
      "path": "25",
      "statement": 30
    },
    "6547": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20315,
        20343
      ],
      "op": "DUP6",
      "path": "25"
    },
    "6548": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20315,
        20343
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6549": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20315,
        20332
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xD"
    },
    "6551": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20315,
        20343
      ],
      "op": "DUP5",
      "path": "25"
    },
    "6552": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20315,
        20343
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6553": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20315,
        20343
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6554": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20315,
        20343
      ],
      "op": "DUP6",
      "path": "25"
    },
    "6555": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20315,
        20343
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "6556": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20315,
        20352
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6557": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20315,
        20352
      ],
      "op": "DUP7",
      "path": "25"
    },
    "6558": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20315,
        20352
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6559": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20315,
        20352
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6560": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20315,
        20352
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "6561": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20315,
        20352
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6562": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20315,
        20352
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "6563": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20315,
        20352
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "6564": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20315,
        20352
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6565": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20315,
        20359
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x19AF"
    },
    "6568": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20315,
        20359
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6569": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20357,
        20358
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "6571": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20315,
        20356
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x37E1"
    },
    "6574": {
      "fn": "CryptoChampions.burnHero",
      "jump": "i",
      "offset": [
        20315,
        20359
      ],
      "op": "JUMP",
      "path": "25"
    },
    "6575": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20315,
        20359
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6576": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20275,
        20303
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "6578": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20275,
        20303
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6579": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20275,
        20303
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6580": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20275,
        20303
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6581": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20275,
        20292
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xD"
    },
    "6583": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20275,
        20303
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "6585": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20275,
        20303
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6586": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20275,
        20303
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6587": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20275,
        20303
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6588": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20275,
        20303
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "6590": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20275,
        20303
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6591": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20275,
        20303
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6592": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20275,
        20303
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "6593": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20275,
        20312
      ],
      "op": "DUP7",
      "path": "25"
    },
    "6594": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20275,
        20312
      ],
      "op": "DUP5",
      "path": "25"
    },
    "6595": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20275,
        20312
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6596": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20275,
        20312
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6597": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20275,
        20312
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6598": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20275,
        20312
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6599": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20275,
        20312
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6600": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20275,
        20312
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "6601": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20275,
        20359
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "6602": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20275,
        20359
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6603": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20275,
        20359
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "6604": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20275,
        20359
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "6605": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20411,
        20430
      ],
      "op": "DUP7",
      "path": "25",
      "statement": 31
    },
    "6606": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20411,
        20430
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6607": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20411,
        20430
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6608": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20411,
        20422
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xB"
    },
    "6610": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20411,
        20430
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6611": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20411,
        20430
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6612": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20411,
        20430
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6613": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20411,
        20430
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6614": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20411,
        20430
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "6615": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20411,
        20443
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6616": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20411,
        20443
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6621": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6623": {
      "op": "SHL"
    },
    "6624": {
      "op": "SUB"
    },
    "6625": {
      "op": "NOT"
    },
    "6626": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20411,
        20443
      ],
      "op": "AND",
      "path": "25"
    },
    "6627": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20411,
        20443
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6628": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20411,
        20443
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "6629": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20453,
        20460
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 32,
      "value": "0xC"
    },
    "6631": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20453,
        20468
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6632": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20453,
        20468
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6633": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20453,
        20468
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6634": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20453,
        20468
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6635": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20453,
        20468
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6636": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20453,
        20468
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "6637": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20453,
        20482
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6638": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20453,
        20482
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6639": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6641": {
      "op": "NOT"
    },
    "6642": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20453,
        20482
      ],
      "op": "AND",
      "path": "25"
    },
    "6643": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20453,
        20482
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6644": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20453,
        20482
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "6645": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20498,
        20516
      ],
      "op": "DUP2",
      "path": "25",
      "statement": 33
    },
    "6646": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20498,
        20516
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "6647": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20498,
        20516
      ],
      "op": "DUP7",
      "path": "25"
    },
    "6648": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20498,
        20516
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6649": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20498,
        20516
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6650": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20498,
        20516
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6651": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20498,
        20516
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "6652": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20498,
        20516
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0x76126F33D318ABE88F8B82C5136B7E5A52091AB897679A40F612D7590ADFC997"
    },
    "6685": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20498,
        20516
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "6686": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20498,
        20516
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6687": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20498,
        20516
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6688": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20498,
        20516
      ],
      "op": "SUB",
      "path": "25"
    },
    "6689": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20498,
        20516
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6690": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20498,
        20516
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6691": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20498,
        20516
      ],
      "op": "ADD",
      "path": "25"
    },
    "6692": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20498,
        20516
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6693": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20498,
        20516
      ],
      "op": "LOG1",
      "path": "25"
    },
    "6694": {
      "offset": [
        6052,
        6053
      ],
      "op": "POP",
      "path": "25"
    },
    "6695": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        6052,
        6053
      ],
      "op": "POP",
      "path": "25"
    },
    "6696": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "POP",
      "path": "25"
    },
    "6697": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19789,
        20523
      ],
      "op": "POP",
      "path": "25"
    },
    "6698": {
      "fn": "CryptoChampions.burnHero",
      "jump": "o",
      "offset": [
        19789,
        20523
      ],
      "op": "JUMP",
      "path": "25"
    },
    "6699": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6700": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5788,
        5795
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 34
    },
    "6701": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5788,
        5802
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6702": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5774,
        5777
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6703": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5774,
        5784
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6704": {
      "branch": 258,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5774,
        5802
      ],
      "op": "EQ",
      "path": "5"
    },
    "6705": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A6B"
    },
    "6708": {
      "branch": 258,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6709": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6711": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6712": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6716": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6718": {
      "op": "SHL"
    },
    "6719": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6720": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6721": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6723": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "ADD",
      "path": "5"
    },
    "6724": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6725": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6726": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6728": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "ADD",
      "path": "5"
    },
    "6729": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6730": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6731": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "SUB",
      "path": "5"
    },
    "6732": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6733": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6734": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x28"
    },
    "6736": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6737": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6738": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6740": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "ADD",
      "path": "5"
    },
    "6741": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6742": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x52E1"
    },
    "6745": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x28"
    },
    "6747": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6748": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "6749": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6751": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "ADD",
      "path": "5"
    },
    "6752": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6753": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "POP",
      "path": "5"
    },
    "6754": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "POP",
      "path": "5"
    },
    "6755": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6757": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6758": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6759": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6760": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "SUB",
      "path": "5"
    },
    "6761": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6762": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6763": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6770": {
      "op": "SHL"
    },
    "6771": {
      "op": "SUB"
    },
    "6772": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5865,
        5881
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 35
    },
    "6773": {
      "branch": 259,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5865,
        5881
      ],
      "op": "AND",
      "path": "5"
    },
    "6774": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AB0"
    },
    "6777": {
      "branch": 259,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6778": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6780": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6781": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6785": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6787": {
      "op": "SHL"
    },
    "6788": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6789": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6790": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6792": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "ADD",
      "path": "5"
    },
    "6793": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6794": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6795": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6797": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "ADD",
      "path": "5"
    },
    "6798": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6799": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6800": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "SUB",
      "path": "5"
    },
    "6801": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6802": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6803": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x25"
    },
    "6805": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6806": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6807": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6809": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "ADD",
      "path": "5"
    },
    "6810": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6811": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x51AA"
    },
    "6814": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x25"
    },
    "6816": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6817": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "6818": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6820": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "ADD",
      "path": "5"
    },
    "6821": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6822": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "POP",
      "path": "5"
    },
    "6823": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "POP",
      "path": "5"
    },
    "6824": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6826": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6827": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6828": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6829": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "SUB",
      "path": "5"
    },
    "6830": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6831": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6832": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6833": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5962,
        5974
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 36,
      "value": "0x1AB8"
    },
    "6836": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5962,
        5972
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3531"
    },
    "6839": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        5962,
        5974
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6840": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5962,
        5974
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6845": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6847": {
      "op": "SHL"
    },
    "6848": {
      "op": "SUB"
    },
    "6849": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        5974
      ],
      "op": "AND",
      "path": "5"
    },
    "6850": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        5958
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6857": {
      "op": "SHL"
    },
    "6858": {
      "op": "SUB"
    },
    "6859": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        5974
      ],
      "op": "AND",
      "path": "5"
    },
    "6860": {
      "branch": 260,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        5974
      ],
      "op": "EQ",
      "path": "5"
    },
    "6861": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        6014
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6862": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        6014
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AE3"
    },
    "6865": {
      "branch": 260,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        6014
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6866": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        6014
      ],
      "op": "POP",
      "path": "5"
    },
    "6867": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5978,
        6014
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AE3"
    },
    "6870": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5995,
        5999
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6871": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6001,
        6013
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1ADE"
    },
    "6874": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6001,
        6011
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3531"
    },
    "6877": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6001,
        6013
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6878": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6001,
        6013
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6879": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5978,
        5994
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3042"
    },
    "6882": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        5978,
        6014
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6883": {
      "branch": 261,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5978,
        6014
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6884": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B1E"
    },
    "6887": {
      "branch": 261,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6888": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6890": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6891": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6895": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6897": {
      "op": "SHL"
    },
    "6898": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6899": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6900": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6902": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "ADD",
      "path": "5"
    },
    "6903": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6904": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6905": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6907": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "ADD",
      "path": "5"
    },
    "6908": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6909": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6910": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "SUB",
      "path": "5"
    },
    "6911": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6912": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6913": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x32"
    },
    "6915": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6916": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6917": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6919": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "ADD",
      "path": "5"
    },
    "6920": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6921": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x51CF"
    },
    "6924": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x32"
    },
    "6926": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6927": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "6928": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6930": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "ADD",
      "path": "5"
    },
    "6931": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6932": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "POP",
      "path": "5"
    },
    "6933": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "POP",
      "path": "5"
    },
    "6934": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6936": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6937": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6938": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6939": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "SUB",
      "path": "5"
    },
    "6940": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6941": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6942": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6943": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6101,
        6117
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6945": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6120,
        6132
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B28"
    },
    "6948": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6120,
        6130
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3531"
    },
    "6951": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6120,
        6132
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6952": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6120,
        6132
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6953": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6101,
        6132
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6954": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6101,
        6132
      ],
      "op": "POP",
      "path": "5"
    },
    "6955": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6143,
        6203
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 37,
      "value": "0x1B38"
    },
    "6958": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6164,
        6172
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6959": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6174,
        6178
      ],
      "op": "DUP8",
      "path": "5"
    },
    "6960": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6180,
        6182
      ],
      "op": "DUP8",
      "path": "5"
    },
    "6961": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6184,
        6187
      ],
      "op": "DUP8",
      "path": "5"
    },
    "6962": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6189,
        6196
      ],
      "op": "DUP8",
      "path": "5"
    },
    "6963": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6198,
        6202
      ],
      "op": "DUP8",
      "path": "5"
    },
    "6964": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6143,
        6163
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x383E"
    },
    "6967": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6143,
        6203
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6968": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6143,
        6203
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6969": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6219,
        6228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6971": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6972": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6238,
        6241
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6973": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6238,
        6248
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6974": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6234,
        6235
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6975": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6234,
        6248
      ],
      "op": "LT",
      "path": "5"
    },
    "6976": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6977": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C3E"
    },
    "6980": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6981": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6269,
        6279
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6983": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6285
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6984": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6286,
        6287
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6985": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6986": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6987": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6988": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "LT",
      "path": "5"
    },
    "6989": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B52"
    },
    "6992": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6993": {
      "dev": "Index out of range",
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "INVALID",
      "path": "5"
    },
    "6994": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6995": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6997": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "MUL",
      "path": "5"
    },
    "6998": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7000": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "ADD",
      "path": "5"
    },
    "7001": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "ADD",
      "path": "5"
    },
    "7002": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7003": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6269,
        6288
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7004": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6269,
        6288
      ],
      "op": "POP",
      "path": "5"
    },
    "7005": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6302,
        6316
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7007": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6326
      ],
      "op": "DUP6",
      "path": "5"
    },
    "7008": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6327,
        6328
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7009": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7010": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7011": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7012": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "LT",
      "path": "5"
    },
    "7013": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B6A"
    },
    "7016": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7017": {
      "dev": "Index out of range",
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "INVALID",
      "path": "5"
    },
    "7018": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7019": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7021": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "MUL",
      "path": "5"
    },
    "7022": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7024": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "ADD",
      "path": "5"
    },
    "7025": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "ADD",
      "path": "5"
    },
    "7026": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7027": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6302,
        6329
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7028": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6302,
        6329
      ],
      "op": "POP",
      "path": "5"
    },
    "7029": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 38,
      "value": "0x1BD7"
    },
    "7032": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6407,
        6413
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7033": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7035": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7036": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7037": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "7039": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "ADD",
      "path": "5"
    },
    "7040": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7042": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7043": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7044": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2A"
    },
    "7046": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7047": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7048": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7050": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "ADD",
      "path": "5"
    },
    "7051": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5244"
    },
    "7054": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2A"
    },
    "7056": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7057": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "7058": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6375
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "7060": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7062": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6376,
        6378
      ],
      "op": "DUP7",
      "path": "5"
    },
    "7063": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7064": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7065": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7067": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "ADD",
      "path": "5"
    },
    "7068": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7069": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7070": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7071": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7073": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "ADD",
      "path": "5"
    },
    "7074": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7076": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7077": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7079": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6380,
        6384
      ],
      "op": "DUP14",
      "path": "5"
    },
    "7080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7084": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7086": {
      "op": "SHL"
    },
    "7087": {
      "op": "SUB"
    },
    "7088": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "AND",
      "path": "5"
    },
    "7089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7093": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7095": {
      "op": "SHL"
    },
    "7096": {
      "op": "SUB"
    },
    "7097": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "AND",
      "path": "5"
    },
    "7098": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7099": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7100": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7102": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "ADD",
      "path": "5"
    },
    "7103": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7104": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7105": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7106": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7108": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "ADD",
      "path": "5"
    },
    "7109": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7111": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7112": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7113": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6389
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3950"
    },
    "7116": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6389
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7117": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7118": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7119": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7120": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "7125": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "AND",
      "path": "5"
    },
    "7126": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6366,
        6489
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7127": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7128": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7130": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7131": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7132": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7133": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6353
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "7135": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7137": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7138": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7139": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7140": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7142": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7143": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7144": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7149": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7151": {
      "op": "SHL"
    },
    "7152": {
      "op": "SUB"
    },
    "7153": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "DUP15",
      "path": "5"
    },
    "7154": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7155": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "AND",
      "path": "5"
    },
    "7156": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "DUP6",
      "path": "5"
    },
    "7157": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7158": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7159": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7160": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7161": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7162": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7163": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6489
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "7164": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6489
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7165": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6489
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "7166": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6489
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "7167": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6540
      ],
      "op": "DUP11",
      "path": "5",
      "statement": 39
    },
    "7168": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6540
      ],
      "op": "AND",
      "path": "5"
    },
    "7169": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6540
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7170": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6540
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7171": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6540
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7172": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6540
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7173": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6552
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C0E"
    },
    "7176": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6552
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7177": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6545,
        6551
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7178": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6544
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34D7"
    },
    "7181": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6523,
        6552
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7182": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6552
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7183": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7185": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7186": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7187": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7188": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6512
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "7190": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7192": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7193": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7194": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7195": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7197": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7198": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "DUP6",
      "path": "5"
    },
    "7199": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7204": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7206": {
      "op": "SHL"
    },
    "7207": {
      "op": "SUB"
    },
    "7208": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "DUP13",
      "path": "5"
    },
    "7209": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "AND",
      "path": "5"
    },
    "7210": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "DUP7",
      "path": "5"
    },
    "7211": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7212": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7213": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7214": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7215": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7216": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7217": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7218": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6552
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7219": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6552
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7220": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6552
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7221": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6552
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "7222": {
      "op": "POP"
    },
    "7223": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6250,
        6253
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 40,
      "value": "0x1"
    },
    "7225": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6250,
        6253
      ],
      "op": "ADD",
      "path": "5"
    },
    "7226": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B3B"
    },
    "7229": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7230": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7231": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "POP",
      "path": "5"
    },
    "7232": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6608,
        6610
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 41
    },
    "7233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7237": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7239": {
      "op": "SHL"
    },
    "7240": {
      "op": "SUB"
    },
    "7241": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "AND",
      "path": "5"
    },
    "7242": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6602,
        6606
      ],
      "op": "DUP7",
      "path": "5"
    },
    "7243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7249": {
      "op": "SHL"
    },
    "7250": {
      "op": "SUB"
    },
    "7251": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "AND",
      "path": "5"
    },
    "7252": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6592,
        6600
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7257": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7259": {
      "op": "SHL"
    },
    "7260": {
      "op": "SUB"
    },
    "7261": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "AND",
      "path": "5"
    },
    "7262": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
    },
    "7295": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6612,
        6615
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7296": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6617,
        6624
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7297": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7299": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7300": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7301": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7302": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7304": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7305": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7306": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7308": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7309": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7310": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7311": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SUB",
      "path": "5"
    },
    "7312": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7313": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7314": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP6",
      "path": "5"
    },
    "7315": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7316": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7317": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7318": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7319": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7320": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7322": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7323": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7324": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7325": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7326": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7327": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7328": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7330": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7331": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7332": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7334": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MUL",
      "path": "5"
    },
    "7335": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7336": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7337": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7338": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7340": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7341": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7342": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7343": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "LT",
      "path": "5"
    },
    "7344": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7345": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CC4"
    },
    "7348": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7349": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7350": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7351": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7352": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7353": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7354": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7355": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7356": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7357": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7359": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7360": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CAC"
    },
    "7363": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7364": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7365": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7366": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7367": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7368": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7369": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7370": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7371": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7372": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7373": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7374": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SUB",
      "path": "5"
    },
    "7375": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7376": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7377": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7378": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7379": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7380": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7381": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7382": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7383": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7385": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7386": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7387": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7388": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7389": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7390": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7391": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7393": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7394": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7395": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7397": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MUL",
      "path": "5"
    },
    "7398": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7399": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7400": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7401": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7403": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7404": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7405": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7406": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "LT",
      "path": "5"
    },
    "7407": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7408": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D03"
    },
    "7411": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7412": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7413": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7414": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7415": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7416": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7417": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7418": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7419": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7420": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7422": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7423": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CEB"
    },
    "7426": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7427": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7428": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7429": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7430": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7431": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7432": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7433": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7434": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7435": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "7436": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7437": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7438": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7439": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7440": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7441": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7443": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7444": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7445": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7446": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SUB",
      "path": "5"
    },
    "7447": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7448": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "LOG4",
      "path": "5"
    },
    "7449": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6636,
        6711
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 42,
      "value": "0x1D26"
    },
    "7452": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6672,
        6680
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7453": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6682,
        6686
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7454": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6688,
        6690
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7455": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6692,
        6695
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7456": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6697,
        6704
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7457": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6706,
        6710
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7458": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6636,
        6671
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x39E7"
    },
    "7461": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6636,
        6711
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7462": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6636,
        6711
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7463": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "POP",
      "path": "5"
    },
    "7464": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "POP",
      "path": "5"
    },
    "7465": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "POP",
      "path": "5"
    },
    "7466": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "POP",
      "path": "5"
    },
    "7467": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "POP",
      "path": "5"
    },
    "7468": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "POP",
      "path": "5"
    },
    "7469": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "o",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7470": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "7471": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24365,
        24369
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "7473": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24392,
        24405
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "7475": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24431,
        24437
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "7477": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24469,
        24476
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7478": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24506,
        24513
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "7480": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24327,
        24333
      ],
      "op": "DUP6",
      "path": "25"
    },
    "7481": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "7483": {
      "offset": [
        5914,
        5920
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7484": {
      "offset": [
        5914,
        5943
      ],
      "op": "GT",
      "path": "25"
    },
    "7485": {
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1D45"
    },
    "7488": {
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "7489": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "7491": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5906,
        5944
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7492": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5906,
        5944
      ],
      "op": "REVERT",
      "path": "25"
    },
    "7493": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "7494": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "7496": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7497": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7498": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7499": {
      "offset": [
        5993,
        6000
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "7501": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "7503": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7504": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "7506": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5993,
        6008
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7507": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5993,
        6008
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "7508": {
      "offset": [
        5993,
        6014
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "7509": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5993,
        6014
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "7511": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5993,
        6014
      ],
      "op": "AND",
      "path": "25"
    },
    "7512": {
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1D60"
    },
    "7515": {
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "7516": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "7518": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5985,
        6015
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7519": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5985,
        6015
      ],
      "op": "REVERT",
      "path": "25"
    },
    "7520": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "7521": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24571,
        24586
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 43,
      "value": "0x0"
    },
    "7523": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24571,
        24586
      ],
      "op": "DUP8",
      "path": "25"
    },
    "7524": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24571,
        24586
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7525": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24571,
        24586
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7526": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24571,
        24578
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "7528": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24571,
        24586
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "7530": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24571,
        24586
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7531": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24571,
        24586
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7532": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24571,
        24586
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7533": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24571,
        24586
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "7535": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24571,
        24586
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "7536": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24571,
        24586
      ],
      "op": "DUP3",
      "path": "25"
    },
    "7537": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24571,
        24586
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7538": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24571,
        24586
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "7539": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24571,
        24592
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7540": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24571,
        24592
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "7541": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24644,
        24673
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x3"
    },
    "7543": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24644,
        24673
      ],
      "op": "DUP3",
      "path": "25"
    },
    "7544": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24644,
        24673
      ],
      "op": "ADD",
      "path": "25"
    },
    "7545": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24644,
        24673
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "7546": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24687,
        24714
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "7548": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24687,
        24714
      ],
      "op": "DUP4",
      "path": "25"
    },
    "7549": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24687,
        24714
      ],
      "op": "ADD",
      "path": "25"
    },
    "7550": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24687,
        24714
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "7551": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24728,
        24751
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x5"
    },
    "7553": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24728,
        24751
      ],
      "op": "DUP5",
      "path": "25"
    },
    "7554": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24728,
        24751
      ],
      "op": "ADD",
      "path": "25"
    },
    "7555": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24728,
        24751
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "7556": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24606,
        24630
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "7558": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24606,
        24630
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "7559": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24606,
        24630
      ],
      "op": "DUP6",
      "path": "25"
    },
    "7560": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24606,
        24630
      ],
      "op": "ADD",
      "path": "25"
    },
    "7561": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7562": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "7563": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "DUP9",
      "path": "25"
    },
    "7564": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "7565": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24571,
        24592
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "7568": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24571,
        24592
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "7570": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "DUP4",
      "path": "25"
    },
    "7571": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "AND",
      "path": "25"
    },
    "7572": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "7573": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "MUL",
      "path": "25"
    },
    "7574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7576": {
      "op": "NOT"
    },
    "7577": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "ADD",
      "path": "25"
    },
    "7578": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7579": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "7580": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "AND",
      "path": "25"
    },
    "7581": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "SWAP7",
      "path": "25"
    },
    "7582": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7583": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "SWAP7",
      "path": "25"
    },
    "7584": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "DIV",
      "path": "25"
    },
    "7585": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "7587": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7588": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "ADD",
      "path": "25"
    },
    "7589": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "DUP9",
      "path": "25"
    },
    "7590": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7591": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "DIV",
      "path": "25"
    },
    "7592": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "DUP9",
      "path": "25"
    },
    "7593": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "MUL",
      "path": "25"
    },
    "7594": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "DUP8",
      "path": "25"
    },
    "7595": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "ADD",
      "path": "25"
    },
    "7596": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "DUP9",
      "path": "25"
    },
    "7597": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "ADD",
      "path": "25"
    },
    "7598": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7599": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "SWAP9",
      "path": "25"
    },
    "7600": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7601": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "DUP8",
      "path": "25"
    },
    "7602": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "DUP7",
      "path": "25"
    },
    "7603": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7604": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24571,
        24592
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "7606": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24571,
        24592
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7607": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24571,
        24592
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "7608": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24571,
        24592
      ],
      "op": "AND",
      "path": "25"
    },
    "7609": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24571,
        24592
      ],
      "op": "SWAP7",
      "path": "25"
    },
    "7610": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24606,
        24630
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "7611": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24606,
        24630
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "7612": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24644,
        24673
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "7613": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24644,
        24673
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "7614": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24687,
        24714
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "7615": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24687,
        24714
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "7616": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24728,
        24751
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7617": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24728,
        24751
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "7618": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24606,
        24630
      ],
      "op": "DUP7",
      "path": "25"
    },
    "7619": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24606,
        24630
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "7620": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7621": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "DUP4",
      "path": "25"
    },
    "7622": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "ADD",
      "path": "25"
    },
    "7623": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24606,
        24630
      ],
      "op": "DUP3",
      "path": "25"
    },
    "7624": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "DUP3",
      "path": "25"
    },
    "7625": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7626": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "7627": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1E15"
    },
    "7630": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "7631": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7632": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "7634": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "LT",
      "path": "25"
    },
    "7635": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1DEA"
    },
    "7638": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "7639": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "7642": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7643": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "DUP4",
      "path": "25"
    },
    "7644": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "7645": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "DIV",
      "path": "25"
    },
    "7646": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "MUL",
      "path": "25"
    },
    "7647": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "DUP4",
      "path": "25"
    },
    "7648": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7649": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "7650": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "7652": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "ADD",
      "path": "25"
    },
    "7653": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "7654": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1E15"
    },
    "7657": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "JUMP",
      "path": "25"
    },
    "7658": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "7659": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "DUP3",
      "path": "25"
    },
    "7660": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "ADD",
      "path": "25"
    },
    "7661": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "7662": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7663": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "7665": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7666": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "7668": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "7670": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "7671": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7672": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "7673": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7674": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "7675": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7676": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7677": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7678": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "7680": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "ADD",
      "path": "25"
    },
    "7681": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7682": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "7684": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "ADD",
      "path": "25"
    },
    "7685": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7686": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "DUP4",
      "path": "25"
    },
    "7687": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "GT",
      "path": "25"
    },
    "7688": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1DF8"
    },
    "7691": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "7692": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "DUP3",
      "path": "25"
    },
    "7693": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7694": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "SUB",
      "path": "25"
    },
    "7695": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "7697": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "AND",
      "path": "25"
    },
    "7698": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "DUP3",
      "path": "25"
    },
    "7699": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "ADD",
      "path": "25"
    },
    "7700": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "7701": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "7702": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "POP",
      "path": "25"
    },
    "7703": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "POP",
      "path": "25"
    },
    "7704": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "POP",
      "path": "25"
    },
    "7705": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "POP",
      "path": "25"
    },
    "7706": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "POP",
      "path": "25"
    },
    "7707": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "7708": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "POP",
      "path": "25"
    },
    "7709": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "7710": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "POP",
      "path": "25"
    },
    "7711": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "7712": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "POP",
      "path": "25"
    },
    "7713": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "7714": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "POP",
      "path": "25"
    },
    "7715": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "7716": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "POP",
      "path": "25"
    },
    "7717": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "7718": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24550,
        24761
      ],
      "op": "POP",
      "path": "25"
    },
    "7719": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "POP",
      "path": "25"
    },
    "7720": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "7721": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "7722": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "7723": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7724": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "7725": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "7726": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24219,
        24768
      ],
      "op": "POP",
      "path": "25"
    },
    "7727": {
      "fn": "CryptoChampions.getHeroGameData",
      "jump": "o",
      "offset": [
        24219,
        24768
      ],
      "op": "JUMP",
      "path": "25"
    },
    "7728": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "7729": {
      "offset": [
        6252,
        6272
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1E47"
    },
    "7732": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7734": {
      "op": "DUP1"
    },
    "7735": {
      "op": "MLOAD"
    },
    "7736": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7738": {
      "op": "PUSH2",
      "value": "0x5201"
    },
    "7741": {
      "op": "DUP4"
    },
    "7742": {
      "op": "CODECOPY"
    },
    "7743": {
      "op": "DUP2"
    },
    "7744": {
      "op": "MLOAD"
    },
    "7745": {
      "op": "SWAP2"
    },
    "7746": {
      "op": "MSTORE"
    },
    "7747": {
      "offset": [
        6252,
        6260
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3C5D"
    },
    "7750": {
      "jump": "i",
      "offset": [
        6252,
        6272
      ],
      "op": "JUMP",
      "path": "25"
    },
    "7751": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        6252,
        6272
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "7752": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "POP",
      "path": "25"
    },
    "7753": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18350,
        18438
      ],
      "op": "POP",
      "path": "25"
    },
    "7754": {
      "fn": "CryptoChampions.disburseRewards",
      "jump": "o",
      "offset": [
        18350,
        18438
      ],
      "op": "JUMP",
      "path": "25"
    },
    "7755": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7756": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4741
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 44,
      "value": "0x0"
    },
    "7758": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7759": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7760": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7761": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7763": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7764": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7765": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7766": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7768": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7769": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "7770": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4757
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "7772": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4757
      ],
      "op": "ADD",
      "path": "0"
    },
    "7773": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4757
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7774": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4727,
        4772
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E6E"
    },
    "7777": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4727,
        4772
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7778": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4759,
        4771
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E69"
    },
    "7781": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4759,
        4769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3531"
    },
    "7784": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4759,
        4771
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7785": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4759,
        4771
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7786": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4727,
        4734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C25"
    },
    "7789": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4727,
        4772
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7790": {
      "branch": 252,
      "fn": "AccessControl.grantRole",
      "offset": [
        4727,
        4772
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7791": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EA9"
    },
    "7794": {
      "branch": 252,
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7795": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7797": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7798": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7802": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7804": {
      "op": "SHL"
    },
    "7805": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7806": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7807": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7809": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "ADD",
      "path": "0"
    },
    "7810": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7811": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7812": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7814": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "ADD",
      "path": "0"
    },
    "7815": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7816": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7817": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "SUB",
      "path": "0"
    },
    "7818": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7819": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7820": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2F"
    },
    "7822": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7823": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7824": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7826": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "ADD",
      "path": "0"
    },
    "7827": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7828": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x50D3"
    },
    "7831": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2F"
    },
    "7833": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7834": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "7835": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7837": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "ADD",
      "path": "0"
    },
    "7838": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7839": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "POP",
      "path": "0"
    },
    "7840": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "POP",
      "path": "0"
    },
    "7841": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7843": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7844": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7845": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7846": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "SUB",
      "path": "0"
    },
    "7847": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7848": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7849": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7850": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4835,
        4860
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 45,
      "value": "0x1E47"
    },
    "7853": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4846,
        4850
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7854": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4852,
        4859
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7855": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4835,
        4845
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C70"
    },
    "7858": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4835,
        4860
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7859": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7860": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5915,
        5927
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 46,
      "value": "0x1EBB"
    },
    "7863": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5915,
        5925
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3531"
    },
    "7866": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5915,
        5927
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7867": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5915,
        5927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7872": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7874": {
      "op": "SHL"
    },
    "7875": {
      "op": "SUB"
    },
    "7876": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5904,
        5927
      ],
      "op": "AND",
      "path": "0"
    },
    "7877": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5904,
        5911
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7882": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7884": {
      "op": "SHL"
    },
    "7885": {
      "op": "SUB"
    },
    "7886": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5904,
        5927
      ],
      "op": "AND",
      "path": "0"
    },
    "7887": {
      "branch": 253,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5904,
        5927
      ],
      "op": "EQ",
      "path": "0"
    },
    "7888": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F0A"
    },
    "7891": {
      "branch": 253,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7892": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7894": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7895": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7899": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7901": {
      "op": "SHL"
    },
    "7902": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7903": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7904": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7906": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "ADD",
      "path": "0"
    },
    "7907": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7908": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7909": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7911": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "ADD",
      "path": "0"
    },
    "7912": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7913": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7914": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "SUB",
      "path": "0"
    },
    "7915": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7916": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7917": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2F"
    },
    "7919": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7920": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7921": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7923": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "ADD",
      "path": "0"
    },
    "7924": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7925": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x532A"
    },
    "7928": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2F"
    },
    "7930": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7931": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "7932": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7934": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "ADD",
      "path": "0"
    },
    "7935": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7936": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "POP",
      "path": "0"
    },
    "7937": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "POP",
      "path": "0"
    },
    "7938": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7940": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7941": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7942": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7943": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "SUB",
      "path": "0"
    },
    "7944": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7945": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7946": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7947": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5990,
        6016
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 47,
      "value": "0x1E47"
    },
    "7950": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        6002,
        6006
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7951": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        6008,
        6015
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7952": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5990,
        6001
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CD9"
    },
    "7955": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5990,
        6016
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7956": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "7957": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25042,
        25055
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "7959": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25077,
        25084
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "7961": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25109,
        25116
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7962": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25142,
        25147
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "7964": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25004,
        25010
      ],
      "op": "DUP5",
      "path": "25"
    },
    "7965": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "7967": {
      "offset": [
        5914,
        5920
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7968": {
      "offset": [
        5914,
        5943
      ],
      "op": "GT",
      "path": "25"
    },
    "7969": {
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1F29"
    },
    "7972": {
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "7973": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "7975": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5906,
        5944
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7976": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5906,
        5944
      ],
      "op": "REVERT",
      "path": "25"
    },
    "7977": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "7978": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "7980": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7981": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7982": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7983": {
      "offset": [
        5993,
        6000
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "7985": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "7987": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7988": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "7990": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5993,
        6008
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7991": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5993,
        6008
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "7992": {
      "offset": [
        5993,
        6014
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "7993": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5993,
        6014
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "7995": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5993,
        6014
      ],
      "op": "AND",
      "path": "25"
    },
    "7996": {
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1F44"
    },
    "7999": {
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8000": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8002": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5985,
        6015
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8003": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5985,
        6015
      ],
      "op": "REVERT",
      "path": "25"
    },
    "8004": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8005": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25194,
        25209
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 48,
      "value": "0x0"
    },
    "8007": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25194,
        25209
      ],
      "op": "DUP7",
      "path": "25"
    },
    "8008": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25194,
        25209
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8009": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25194,
        25209
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8010": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25194,
        25201
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "8012": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25194,
        25209
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8014": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25194,
        25209
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8015": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25194,
        25209
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8016": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25194,
        25209
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8017": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25194,
        25209
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "8019": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25194,
        25209
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8020": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25194,
        25209
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8021": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25194,
        25209
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8022": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25194,
        25209
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "8023": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25216,
        25238
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x6"
    },
    "8025": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25216,
        25238
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8026": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25216,
        25238
      ],
      "op": "ADD",
      "path": "25"
    },
    "8027": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25216,
        25238
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8028": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25240,
        25263
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "8030": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25240,
        25263
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8031": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25240,
        25263
      ],
      "op": "ADD",
      "path": "25"
    },
    "8032": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25240,
        25263
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8033": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25265,
        25291
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "8035": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25265,
        25291
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8036": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25265,
        25291
      ],
      "op": "ADD",
      "path": "25"
    },
    "8037": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25265,
        25291
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8038": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25194,
        25214
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "8040": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25194,
        25214
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "8041": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25194,
        25214
      ],
      "op": "DUP5",
      "path": "25"
    },
    "8042": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25194,
        25214
      ],
      "op": "ADD",
      "path": "25"
    },
    "8043": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8044": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8045": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "DUP8",
      "path": "25"
    },
    "8046": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "8047": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "8049": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25265,
        25291
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "8052": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SWAP8",
      "path": "25"
    },
    "8053": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8054": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "AND",
      "path": "25"
    },
    "8055": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "8056": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SWAP8",
      "path": "25"
    },
    "8057": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8058": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SWAP8",
      "path": "25"
    },
    "8059": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "MUL",
      "path": "25"
    },
    "8060": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8062": {
      "op": "NOT"
    },
    "8063": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "ADD",
      "path": "25"
    },
    "8064": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8065": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8066": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "AND",
      "path": "25"
    },
    "8067": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "8068": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8069": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "8070": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "DIV",
      "path": "25"
    },
    "8071": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "8073": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8074": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "ADD",
      "path": "25"
    },
    "8075": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "DUP8",
      "path": "25"
    },
    "8076": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8077": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "DIV",
      "path": "25"
    },
    "8078": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "DUP8",
      "path": "25"
    },
    "8079": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "MUL",
      "path": "25"
    },
    "8080": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "DUP7",
      "path": "25"
    },
    "8081": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "ADD",
      "path": "25"
    },
    "8082": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "DUP8",
      "path": "25"
    },
    "8083": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "ADD",
      "path": "25"
    },
    "8084": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8085": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SWAP8",
      "path": "25"
    },
    "8086": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8087": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "DUP7",
      "path": "25"
    },
    "8088": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "DUP6",
      "path": "25"
    },
    "8089": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8090": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25194,
        25214
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "8091": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25216,
        25238
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "8092": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25216,
        25238
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "8093": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25240,
        25263
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8094": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25240,
        25263
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "8095": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25265,
        25291
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "8097": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25265,
        25291
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8098": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25265,
        25291
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8099": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25265,
        25291
      ],
      "op": "AND",
      "path": "25"
    },
    "8100": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25265,
        25291
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "8101": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8102": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8103": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25194,
        25214
      ],
      "op": "DUP7",
      "path": "25"
    },
    "8104": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25194,
        25214
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8105": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8106": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8107": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "ADD",
      "path": "25"
    },
    "8108": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25194,
        25214
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8109": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8110": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8111": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "8112": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1FFA"
    },
    "8115": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8116": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8117": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "8119": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "LT",
      "path": "25"
    },
    "8120": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1FCF"
    },
    "8123": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8124": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "8127": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8128": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8129": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8130": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "DIV",
      "path": "25"
    },
    "8131": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "MUL",
      "path": "25"
    },
    "8132": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8133": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8134": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8135": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8137": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "ADD",
      "path": "25"
    },
    "8138": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8139": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1FFA"
    },
    "8142": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "JUMP",
      "path": "25"
    },
    "8143": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8144": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8145": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "ADD",
      "path": "25"
    },
    "8146": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8147": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8148": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8150": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8151": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8153": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8155": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "8156": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8157": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8158": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8159": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8160": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8161": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8162": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8163": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "8165": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "ADD",
      "path": "25"
    },
    "8166": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8167": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8169": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "ADD",
      "path": "25"
    },
    "8170": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8171": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8172": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "GT",
      "path": "25"
    },
    "8173": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1FDD"
    },
    "8176": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8177": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8178": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8179": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SUB",
      "path": "25"
    },
    "8180": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "8182": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "AND",
      "path": "25"
    },
    "8183": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8184": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "ADD",
      "path": "25"
    },
    "8185": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8186": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8187": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "POP",
      "path": "25"
    },
    "8188": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "POP",
      "path": "25"
    },
    "8189": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "POP",
      "path": "25"
    },
    "8190": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "POP",
      "path": "25"
    },
    "8191": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "POP",
      "path": "25"
    },
    "8192": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "8193": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "POP",
      "path": "25"
    },
    "8194": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "8195": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "POP",
      "path": "25"
    },
    "8196": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "8197": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "POP",
      "path": "25"
    },
    "8198": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "8199": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "POP",
      "path": "25"
    },
    "8200": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "8201": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25186,
        25292
      ],
      "op": "POP",
      "path": "25"
    },
    "8202": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "POP",
      "path": "25"
    },
    "8203": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8204": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "8205": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "POP",
      "path": "25"
    },
    "8206": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8207": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24897,
        25299
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "8208": {
      "fn": "CryptoChampions.getHeroVisuals",
      "jump": "o",
      "offset": [
        24897,
        25299
      ],
      "op": "JUMP",
      "path": "25"
    },
    "8209": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26518,
        26887
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8210": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26662,
        26667
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8212": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26690,
        26695
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8213": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26715,
        26720
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8215": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26742,
        26747
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8216": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26624,
        26630
      ],
      "op": "DUP5",
      "path": "25"
    },
    "8217": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "8219": {
      "offset": [
        5914,
        5920
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8220": {
      "offset": [
        5914,
        5943
      ],
      "op": "GT",
      "path": "25"
    },
    "8221": {
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2025"
    },
    "8224": {
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8225": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8227": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5906,
        5944
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8228": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5906,
        5944
      ],
      "op": "REVERT",
      "path": "25"
    },
    "8229": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8230": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8232": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8233": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8234": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8235": {
      "offset": [
        5993,
        6000
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "8237": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8239": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8240": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "8242": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5993,
        6008
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8243": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5993,
        6008
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "8244": {
      "offset": [
        5993,
        6014
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8245": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5993,
        6014
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "8247": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5993,
        6014
      ],
      "op": "AND",
      "path": "25"
    },
    "8248": {
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2040"
    },
    "8251": {
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8252": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8254": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5985,
        6015
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8255": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5985,
        6015
      ],
      "op": "REVERT",
      "path": "25"
    },
    "8256": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8257": {
      "op": "POP"
    },
    "8258": {
      "op": "POP"
    },
    "8259": {
      "op": "POP"
    },
    "8260": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26791,
        26806
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 49,
      "value": "0x0"
    },
    "8262": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26791,
        26806
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "8263": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26791,
        26806
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8264": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26791,
        26806
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8265": {
      "op": "POP"
    },
    "8266": {
      "op": "POP"
    },
    "8267": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26791,
        26798
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "8269": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26791,
        26806
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8271": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26791,
        26806
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8272": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26791,
        26806
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "8274": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26791,
        26806
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8275": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26791,
        26806
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "8276": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26791,
        26812
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "8278": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26791,
        26812
      ],
      "op": "ADD",
      "path": "25"
    },
    "8279": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26791,
        26812
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8280": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26791,
        26812
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "8282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8284": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "8286": {
      "op": "SHL"
    },
    "8287": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26791,
        26812
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8288": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26791,
        26812
      ],
      "op": "DIV",
      "path": "25"
    },
    "8289": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26791,
        26812
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8290": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26791,
        26812
      ],
      "op": "AND",
      "path": "25"
    },
    "8291": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26791,
        26812
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "8292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8294": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "8296": {
      "op": "SHL"
    },
    "8297": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26814,
        26832
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8298": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26814,
        26832
      ],
      "op": "DIV",
      "path": "25"
    },
    "8299": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26814,
        26832
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8300": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26814,
        26832
      ],
      "op": "AND",
      "path": "25"
    },
    "8301": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26814,
        26832
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "8302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8304": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "8306": {
      "op": "SHL"
    },
    "8307": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26834,
        26854
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8308": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26834,
        26854
      ],
      "op": "DIV",
      "path": "25"
    },
    "8309": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26834,
        26854
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8310": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26834,
        26854
      ],
      "op": "AND",
      "path": "25"
    },
    "8311": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26834,
        26854
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "8312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8314": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8316": {
      "op": "SHL"
    },
    "8317": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26856,
        26879
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8318": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26856,
        26879
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8319": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26856,
        26879
      ],
      "op": "DIV",
      "path": "25"
    },
    "8320": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26856,
        26879
      ],
      "op": "AND",
      "path": "25"
    },
    "8321": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26856,
        26879
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8322": {
      "fn": "CryptoChampions.getHeroVitals",
      "jump": "o",
      "offset": [
        26518,
        26887
      ],
      "op": "JUMP",
      "path": "25"
    },
    "8323": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8324": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11117,
        11124
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8326": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11091,
        11098
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8327": {
      "offset": [
        1766,
        1767
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8329": {
      "offset": [
        5739,
        5746
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8330": {
      "offset": [
        5739,
        5768
      ],
      "op": "GT",
      "path": "25"
    },
    "8331": {
      "offset": [
        5739,
        5803
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8332": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        5739,
        5803
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "8333": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        5739,
        5803
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2097"
    },
    "8336": {
      "offset": [
        5739,
        5803
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8337": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        5739,
        5803
      ],
      "op": "POP",
      "path": "25"
    },
    "8338": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "8340": {
      "offset": [
        5772,
        5779
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8341": {
      "offset": [
        5772,
        5803
      ],
      "op": "GT",
      "path": "25"
    },
    "8342": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        5772,
        5803
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "8343": {
      "offset": [
        5739,
        5803
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8344": {
      "offset": [
        5731,
        5804
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x20A0"
    },
    "8347": {
      "offset": [
        5731,
        5804
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8348": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        5731,
        5804
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8350": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        5731,
        5804
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8351": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        5731,
        5804
      ],
      "op": "REVERT",
      "path": "25"
    },
    "8352": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        5731,
        5804
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8353": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11164,
        11179
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 50,
      "value": "0x1"
    },
    "8355": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11148,
        11160
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x6"
    },
    "8357": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11148,
        11160
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8358": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11148,
        11160
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "8360": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11148,
        11160
      ],
      "op": "AND",
      "path": "25"
    },
    "8361": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11148,
        11160
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "8363": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11148,
        11179
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8364": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11148,
        11179
      ],
      "op": "GT",
      "path": "25"
    },
    "8365": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11148,
        11179
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "8366": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11148,
        11179
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x20B3"
    },
    "8369": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11148,
        11179
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8370": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11148,
        11179
      ],
      "op": "INVALID",
      "path": "25"
    },
    "8371": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11148,
        11179
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8372": {
      "branch": 231,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11148,
        11179
      ],
      "op": "EQ",
      "path": "25"
    },
    "8373": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11140,
        11180
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x20BD"
    },
    "8376": {
      "branch": 231,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11140,
        11180
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8377": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11140,
        11180
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8379": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11140,
        11180
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8380": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11140,
        11180
      ],
      "op": "REVERT",
      "path": "25"
    },
    "8381": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11140,
        11180
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8382": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11236,
        11258
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 51,
      "value": "0x0"
    },
    "8384": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11236,
        11258
      ],
      "op": "DUP6",
      "path": "25"
    },
    "8385": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11236,
        11258
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8386": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11236,
        11258
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8387": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11236,
        11249
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x9"
    },
    "8389": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11236,
        11258
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8391": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11236,
        11258
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8392": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11236,
        11258
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "8394": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11236,
        11258
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8395": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11236,
        11258
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "8396": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11236,
        11264
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8397": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11236,
        11264
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "8399": {
      "branch": 232,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11236,
        11264
      ],
      "op": "AND",
      "path": "25"
    },
    "8400": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11228,
        11265
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x20D8"
    },
    "8403": {
      "branch": 232,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11228,
        11265
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8404": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11228,
        11265
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8406": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11228,
        11265
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8407": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11228,
        11265
      ],
      "op": "REVERT",
      "path": "25"
    },
    "8408": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11228,
        11265
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8409": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11335,
        11356
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 52,
      "value": "0x20E1"
    },
    "8412": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11348,
        11355
      ],
      "op": "DUP6",
      "path": "25"
    },
    "8413": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11335,
        11347
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3D42"
    },
    "8416": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        11335,
        11356
      ],
      "op": "JUMP",
      "path": "25"
    },
    "8417": {
      "branch": 233,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11335,
        11356
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8418": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11327,
        11357
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x20EA"
    },
    "8421": {
      "branch": 233,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11327,
        11357
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8422": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11327,
        11357
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8424": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11327,
        11357
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8425": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11327,
        11357
      ],
      "op": "REVERT",
      "path": "25"
    },
    "8426": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11327,
        11357
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8427": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11427,
        11444
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8429": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11447,
        11486
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x20F8"
    },
    "8432": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11464,
        11476
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xF"
    },
    "8434": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11464,
        11476
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8435": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11478,
        11485
      ],
      "op": "DUP8",
      "path": "25"
    },
    "8436": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11447,
        11463
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x323B"
    },
    "8439": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        11447,
        11486
      ],
      "op": "JUMP",
      "path": "25"
    },
    "8440": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11447,
        11486
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8441": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11427,
        11486
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8442": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11427,
        11486
      ],
      "op": "POP",
      "path": "25"
    },
    "8443": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11517,
        11526
      ],
      "op": "DUP1",
      "path": "25",
      "statement": 53
    },
    "8444": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11504,
        11513
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "8445": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11504,
        11526
      ],
      "op": "LT",
      "path": "25"
    },
    "8446": {
      "branch": 234,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11504,
        11526
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "8447": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11496,
        11527
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2107"
    },
    "8450": {
      "branch": 234,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11496,
        11527
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8451": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11496,
        11527
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8453": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11496,
        11527
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8454": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11496,
        11527
      ],
      "op": "REVERT",
      "path": "25"
    },
    "8455": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11496,
        11527
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8456": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11600,
        11614
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8458": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "8460": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11617,
        11636
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2121"
    },
    "8463": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11634,
        11635
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "8465": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11617,
        11629
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA"
    },
    "8467": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11617,
        11629
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8468": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11617,
        11633
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34D7"
    },
    "8471": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11617,
        11633
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8472": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11617,
        11636
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8473": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11617,
        11636
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8474": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11617,
        11636
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xFFFFFFFF"
    },
    "8479": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11617,
        11636
      ],
      "op": "AND",
      "path": "25"
    },
    "8480": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        11617,
        11636
      ],
      "op": "JUMP",
      "path": "25"
    },
    "8481": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11617,
        11636
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8482": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11617,
        11659
      ],
      "op": "ADD",
      "path": "25"
    },
    "8483": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11707,
        11708
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 54,
      "value": "0x0"
    },
    "8485": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11676,
        11695
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8486": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11676,
        11695
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8487": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11676,
        11695
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8488": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11676,
        11687
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xB"
    },
    "8490": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11676,
        11695
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8492": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11676,
        11695
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8493": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11676,
        11695
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "8495": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11676,
        11695
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8496": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11676,
        11695
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "8497": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11676,
        11695
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8498": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11617,
        11659
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8499": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11617,
        11659
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8500": {
      "op": "POP"
    },
    "8501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8505": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8507": {
      "op": "SHL"
    },
    "8508": {
      "op": "SUB"
    },
    "8509": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11676,
        11695
      ],
      "op": "AND",
      "path": "25"
    },
    "8510": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11676,
        11709
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "8511": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11669,
        11710
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2144"
    },
    "8514": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11669,
        11710
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8515": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11669,
        11710
      ],
      "op": "INVALID",
      "path": "25"
    },
    "8516": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11669,
        11710
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8517": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11770,
        11785
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 55,
      "value": "0x0"
    },
    "8519": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11770,
        11785
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8520": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11770,
        11785
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8521": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11770,
        11785
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8522": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11770,
        11777
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "8524": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11770,
        11785
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8526": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11770,
        11785
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8527": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11770,
        11785
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "8529": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11770,
        11785
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8530": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11770,
        11785
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "8531": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11770,
        11791
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8532": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11770,
        11791
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "8534": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11770,
        11791
      ],
      "op": "AND",
      "path": "25"
    },
    "8535": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11770,
        11800
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "8536": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11763,
        11801
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x215D"
    },
    "8539": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11763,
        11801
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8540": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11763,
        11801
      ],
      "op": "INVALID",
      "path": "25"
    },
    "8541": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11763,
        11801
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8542": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11888,
        11904
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2165"
    },
    "8545": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11888,
        11904
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4E49"
    },
    "8548": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        11888,
        11904
      ],
      "op": "JUMP",
      "path": "25"
    },
    "8549": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11888,
        11904
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8550": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11927,
        11931
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 56,
      "value": "0x1"
    },
    "8552": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11914,
        11931
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8553": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11914,
        11931
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8554": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 57,
      "value": "0x40"
    },
    "8556": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8557": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "8558": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8560": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "8562": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP10",
      "path": "25"
    },
    "8563": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "ADD",
      "path": "25"
    },
    "8564": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8565": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8566": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DIV",
      "path": "25"
    },
    "8567": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8568": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "MUL",
      "path": "25"
    },
    "8569": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8570": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "ADD",
      "path": "25"
    },
    "8571": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8572": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "ADD",
      "path": "25"
    },
    "8573": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8574": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "8575": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8576": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP8",
      "path": "25"
    },
    "8577": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8578": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8579": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8580": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11953,
        11961
      ],
      "op": "DUP9",
      "path": "25"
    },
    "8581": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11953,
        11961
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8582": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11953,
        11961
      ],
      "op": "DUP9",
      "path": "25"
    },
    "8583": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11953,
        11961
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8584": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11953,
        11961
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8585": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11953,
        11961
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8586": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP5",
      "path": "25"
    },
    "8587": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "ADD",
      "path": "25"
    },
    "8588": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11953,
        11961
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8589": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11953,
        11961
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8590": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11953,
        11961
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8591": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11953,
        11961
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8592": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP5",
      "path": "25"
    },
    "8593": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "CALLDATACOPY",
      "path": "25"
    },
    "8594": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8596": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8597": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP5",
      "path": "25"
    },
    "8598": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "ADD",
      "path": "25"
    },
    "8599": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8600": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "8602": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "NOT",
      "path": "25"
    },
    "8603": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "8605": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8606": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "ADD",
      "path": "25"
    },
    "8607": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "AND",
      "path": "25"
    },
    "8608": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8609": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "POP",
      "path": "25"
    },
    "8610": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8611": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8612": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "ADD",
      "path": "25"
    },
    "8613": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "8614": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "POP",
      "path": "25"
    },
    "8615": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "POP",
      "path": "25"
    },
    "8616": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "POP",
      "path": "25"
    },
    "8617": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "POP",
      "path": "25"
    },
    "8618": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "POP",
      "path": "25"
    },
    "8619": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "POP",
      "path": "25"
    },
    "8620": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "POP",
      "path": "25"
    },
    "8621": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11945
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8622": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11950
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8624": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11950
      ],
      "op": "ADD",
      "path": "25"
    },
    "8625": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8626": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8627": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8628": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "POP",
      "path": "25"
    },
    "8629": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11990,
        12002
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 58,
      "value": "0xF"
    },
    "8631": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11990,
        12002
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8632": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11971,
        11975
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8633": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11971,
        11987
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x80"
    },
    "8635": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11971,
        11987
      ],
      "op": "ADD",
      "path": "25"
    },
    "8636": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11971,
        12002
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8637": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11971,
        12002
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8638": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11971,
        12002
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8639": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11971,
        12002
      ],
      "op": "POP",
      "path": "25"
    },
    "8640": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11971,
        12002
      ],
      "op": "POP",
      "path": "25"
    },
    "8641": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12027,
        12034
      ],
      "op": "DUP8",
      "path": "25",
      "statement": 59
    },
    "8642": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12012,
        12016
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8643": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12012,
        12024
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA0"
    },
    "8645": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12012,
        12024
      ],
      "op": "ADD",
      "path": "25"
    },
    "8646": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12012,
        12034
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8647": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12012,
        12034
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8648": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12012,
        12034
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8649": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12012,
        12034
      ],
      "op": "POP",
      "path": "25"
    },
    "8650": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12012,
        12034
      ],
      "op": "POP",
      "path": "25"
    },
    "8651": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12071
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 60,
      "value": "0x9"
    },
    "8653": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12080
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8655": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12072,
        12079
      ],
      "op": "DUP10",
      "path": "25"
    },
    "8656": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12080
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8657": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12080
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8658": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12080
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8660": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12080
      ],
      "op": "ADD",
      "path": "25"
    },
    "8661": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12080
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8662": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12080
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8663": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12080
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8664": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12080
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8666": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12080
      ],
      "op": "ADD",
      "path": "25"
    },
    "8667": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12080
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8669": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12080
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "8670": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12087
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "8672": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12087
      ],
      "op": "ADD",
      "path": "25"
    },
    "8673": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12087
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8674": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12044,
        12048
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8675": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12044,
        12055
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC0"
    },
    "8677": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12044,
        12055
      ],
      "op": "ADD",
      "path": "25"
    },
    "8678": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12044,
        12087
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8679": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12044,
        12087
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8680": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12044,
        12087
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8681": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12044,
        12087
      ],
      "op": "POP",
      "path": "25"
    },
    "8682": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12044,
        12087
      ],
      "op": "POP",
      "path": "25"
    },
    "8683": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12125
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 61,
      "value": "0x9"
    },
    "8685": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12134
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8687": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12126,
        12133
      ],
      "op": "DUP10",
      "path": "25"
    },
    "8688": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12134
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8689": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12134
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8690": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12134
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8692": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12134
      ],
      "op": "ADD",
      "path": "25"
    },
    "8693": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12134
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8694": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12134
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8695": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12134
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8696": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12134
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8698": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12134
      ],
      "op": "ADD",
      "path": "25"
    },
    "8699": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12134
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8701": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12134
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "8702": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12142
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "8704": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12142
      ],
      "op": "ADD",
      "path": "25"
    },
    "8705": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12142
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8706": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12097,
        12101
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8707": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12097,
        12109
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xE0"
    },
    "8709": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12097,
        12109
      ],
      "op": "ADD",
      "path": "25"
    },
    "8710": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12097,
        12142
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8711": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12097,
        12142
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8712": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12097,
        12142
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8713": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12097,
        12142
      ],
      "op": "POP",
      "path": "25"
    },
    "8714": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12097,
        12142
      ],
      "op": "POP",
      "path": "25"
    },
    "8715": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12181
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 62,
      "value": "0x9"
    },
    "8717": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12190
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8719": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12182,
        12189
      ],
      "op": "DUP10",
      "path": "25"
    },
    "8720": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12190
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8721": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12190
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8722": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12190
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8724": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12190
      ],
      "op": "ADD",
      "path": "25"
    },
    "8725": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12190
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8726": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12190
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8727": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12190
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8728": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12190
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8730": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12190
      ],
      "op": "ADD",
      "path": "25"
    },
    "8731": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12190
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8733": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12190
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "8734": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x3"
    },
    "8736": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12199
      ],
      "op": "ADD",
      "path": "25"
    },
    "8737": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8738": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8739": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "8741": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8742": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "8744": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "AND",
      "path": "25"
    },
    "8745": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "8746": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "8749": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "MUL",
      "path": "25"
    },
    "8750": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SUB",
      "path": "25"
    },
    "8751": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "AND",
      "path": "25"
    },
    "8752": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "8754": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8755": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DIV",
      "path": "25"
    },
    "8756": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8757": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "8759": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "ADD",
      "path": "25"
    },
    "8760": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8762": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8763": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8764": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DIV",
      "path": "25"
    },
    "8765": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "MUL",
      "path": "25"
    },
    "8766": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8768": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "ADD",
      "path": "25"
    },
    "8769": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "8771": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "8772": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8773": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8774": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "ADD",
      "path": "25"
    },
    "8775": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "8777": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8778": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8779": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "8780": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8781": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8782": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8783": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8784": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8785": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8787": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "ADD",
      "path": "25"
    },
    "8788": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8789": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8790": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8791": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "8793": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8794": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "8796": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "AND",
      "path": "25"
    },
    "8797": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "8798": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "8801": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "MUL",
      "path": "25"
    },
    "8802": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SUB",
      "path": "25"
    },
    "8803": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "AND",
      "path": "25"
    },
    "8804": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "8806": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8807": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DIV",
      "path": "25"
    },
    "8808": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8809": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "8810": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x22B4"
    },
    "8813": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8814": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8815": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "8817": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "LT",
      "path": "25"
    },
    "8818": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2289"
    },
    "8821": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8822": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "8825": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8826": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8827": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8828": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DIV",
      "path": "25"
    },
    "8829": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "MUL",
      "path": "25"
    },
    "8830": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8831": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8832": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8833": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8835": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "ADD",
      "path": "25"
    },
    "8836": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8837": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x22B4"
    },
    "8840": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "JUMP",
      "path": "25"
    },
    "8841": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8842": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8843": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "ADD",
      "path": "25"
    },
    "8844": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8845": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8846": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8848": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8849": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8851": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8853": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "8854": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8855": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8856": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8857": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8858": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8859": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8860": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8861": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "8863": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "ADD",
      "path": "25"
    },
    "8864": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8865": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8867": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "ADD",
      "path": "25"
    },
    "8868": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8869": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8870": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "GT",
      "path": "25"
    },
    "8871": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2297"
    },
    "8874": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8875": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8876": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8877": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SUB",
      "path": "25"
    },
    "8878": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "8880": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "AND",
      "path": "25"
    },
    "8881": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8882": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "ADD",
      "path": "25"
    },
    "8883": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8884": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8885": {
      "op": "POP"
    },
    "8886": {
      "op": "POP"
    },
    "8887": {
      "op": "POP"
    },
    "8888": {
      "op": "POP"
    },
    "8889": {
      "op": "POP"
    },
    "8890": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12165
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "8892": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12165
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8893": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12165
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8894": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12165
      ],
      "op": "ADD",
      "path": "25"
    },
    "8895": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8896": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8897": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8898": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8899": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12224
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 63,
      "value": "0x0"
    },
    "8901": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12224
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8902": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12224
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8903": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12224
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8904": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12216
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "8906": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12224
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8908": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12224
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8909": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12224
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8910": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12224
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8911": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12224
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8912": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12224
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8913": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12224
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "8914": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8915": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "8916": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8917": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8918": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8920": {
      "op": "NOT"
    },
    "8921": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "8922": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8923": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "8924": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "8925": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "8926": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8927": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "8928": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8929": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8930": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "8931": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "8932": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8933": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "8934": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12165
      ],
      "op": "DUP5",
      "path": "25"
    },
    "8935": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12165
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "8936": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x22F8"
    },
    "8939": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "8940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8942": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP6",
      "path": "25"
    },
    "8943": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "8944": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "8945": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8946": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "8947": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8948": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4DCB"
    },
    "8951": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12209,
        12231
      ],
      "op": "JUMP",
      "path": "25"
    },
    "8952": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8953": {
      "op": "POP"
    },
    "8954": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "8956": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8957": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "8958": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "8959": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8960": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "8961": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2314"
    },
    "8964": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8965": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "8967": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP5",
      "path": "25"
    },
    "8968": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "8969": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8970": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8972": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8973": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8974": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "8975": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8976": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4DCB"
    },
    "8979": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12209,
        12231
      ],
      "op": "JUMP",
      "path": "25"
    },
    "8980": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8981": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "8982": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "8984": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8985": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "8986": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "8987": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8988": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x3"
    },
    "8990": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "8991": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "8992": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x80"
    },
    "8994": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8995": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "8996": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "8997": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8998": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "9000": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9001": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9002": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA0"
    },
    "9004": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9005": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9006": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9007": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9008": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x5"
    },
    "9010": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9011": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9012": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC0"
    },
    "9014": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9015": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9016": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9017": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9018": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x6"
    },
    "9020": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9021": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9022": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xE0"
    },
    "9024": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9025": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9026": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9027": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9028": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "9030": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9031": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9032": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9035": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9036": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9037": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9038": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9039": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9041": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9042": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "9044": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9047": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9048": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9049": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9050": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9051": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9053": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9054": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9055": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9056": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9057": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9058": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9060": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9061": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9062": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9063": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9064": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9065": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9066": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x120"
    },
    "9069": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9070": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9071": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9072": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9073": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9075": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9076": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "9078": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9081": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9082": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9083": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9084": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9085": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9087": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9088": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9089": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9090": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9091": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9092": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9094": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9095": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9096": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9097": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9098": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9099": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9100": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x140"
    },
    "9103": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9104": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9105": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9106": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9107": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9109": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9110": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "9112": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9115": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9116": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9117": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9118": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9119": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9121": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9122": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9123": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9124": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9125": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9126": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9128": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9129": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9130": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9131": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9132": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9133": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9134": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x160"
    },
    "9137": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9138": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9139": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9140": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9141": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9143": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9144": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x3"
    },
    "9146": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9149": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9150": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9151": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9152": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9153": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9155": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9156": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9157": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9158": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9159": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9160": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9162": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9163": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9164": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9165": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9166": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9167": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9168": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x180"
    },
    "9171": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9172": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9173": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9174": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9175": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9177": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9178": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "9180": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9183": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9184": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9185": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9186": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9187": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9189": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9190": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9191": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9192": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9193": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9194": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9196": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9197": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9198": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9199": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9200": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9201": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9202": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1A0"
    },
    "9205": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9206": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9207": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9208": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9209": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9211": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9212": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x5"
    },
    "9214": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9217": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9218": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9219": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9220": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9221": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9223": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9224": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9225": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9226": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9227": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9228": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9230": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9231": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9232": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9233": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9234": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9235": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9236": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1C0"
    },
    "9239": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9240": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9241": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9242": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9243": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9245": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9246": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x6"
    },
    "9248": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9251": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9252": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9253": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9254": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9255": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9257": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9258": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9259": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9260": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9261": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9262": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9264": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9265": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9266": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9267": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9268": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9269": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9270": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1E0"
    },
    "9273": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9274": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9275": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9276": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9277": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9279": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9280": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "9282": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9285": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9286": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9287": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9288": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9289": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9291": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9292": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9293": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9294": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9295": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9296": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9298": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9299": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9300": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9301": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9302": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9303": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9304": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x200"
    },
    "9307": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9308": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9309": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9310": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9311": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9313": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9314": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9316": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9319": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9320": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9321": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9322": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9323": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9325": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9326": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9327": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9328": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9329": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9330": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9332": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9333": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9334": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9335": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9336": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9337": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9338": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x220"
    },
    "9341": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9342": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9343": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9344": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9345": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9347": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9348": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x9"
    },
    "9350": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9353": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9354": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9355": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9356": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9357": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9359": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9360": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9361": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9362": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9363": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9364": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9366": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9367": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9368": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9369": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9370": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9371": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9372": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x240"
    },
    "9375": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9376": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9377": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9378": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9379": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9381": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9382": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA"
    },
    "9384": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9387": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9388": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9389": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9390": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9391": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9393": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9394": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9395": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9396": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9397": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9398": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9400": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9401": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9402": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9403": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9404": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9405": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9406": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x260"
    },
    "9409": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9410": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9411": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9412": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9413": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9415": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9416": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xB"
    },
    "9418": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9421": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9422": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9423": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9424": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9425": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9427": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9428": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9429": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9430": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9431": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9432": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9434": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9435": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9436": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9437": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9438": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9439": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9440": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x280"
    },
    "9443": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9444": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9445": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9446": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9447": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9449": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9450": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "9452": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9455": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9456": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9457": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9458": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9459": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9461": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9462": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9463": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9464": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9465": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9466": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9468": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9469": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9470": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9471": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9472": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9473": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9474": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2A0"
    },
    "9477": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9478": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9479": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9480": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9481": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9483": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9484": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xD"
    },
    "9486": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9489": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9490": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9491": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9492": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9493": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9495": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9496": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9497": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9498": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9499": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9500": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9502": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9503": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9504": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9505": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9506": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9507": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9508": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2C0"
    },
    "9511": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9512": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9513": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9514": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9515": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9517": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9518": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xE"
    },
    "9520": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9523": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9524": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9525": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9526": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9527": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9529": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9530": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9531": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9532": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9533": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9534": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9536": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9537": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9538": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9539": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9540": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9541": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9542": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2E0"
    },
    "9545": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9546": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9547": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9548": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9549": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9551": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9552": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xF"
    },
    "9554": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9557": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9558": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9559": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9560": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9561": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9563": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9564": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9565": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9566": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9567": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9568": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9570": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9571": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9572": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9573": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9574": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9575": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9576": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x300"
    },
    "9579": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9580": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9581": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9582": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9583": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9585": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9586": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x10"
    },
    "9588": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9591": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9592": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9593": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9594": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9595": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9597": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9598": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9599": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9600": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9601": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9602": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9604": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9605": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9606": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9607": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9608": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9609": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9610": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x320"
    },
    "9613": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9614": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9615": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9616": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9617": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9619": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9620": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x11"
    },
    "9622": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9625": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9626": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9627": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9628": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9629": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9631": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9632": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9633": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9634": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9635": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9636": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9638": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9639": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9640": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9641": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9642": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9643": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9644": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x340"
    },
    "9647": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9648": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9649": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9650": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9651": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9653": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9654": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x12"
    },
    "9656": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9659": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9660": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9661": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9662": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9663": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9665": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9666": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9667": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9668": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9669": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9670": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9672": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9673": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9674": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9675": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9676": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9677": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9678": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9679": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9680": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9681": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12303,
        12320
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "9683": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12323,
        12347
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x25DB"
    },
    "9686": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12340,
        12346
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9687": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12323,
        12339
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3E17"
    },
    "9690": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12323,
        12347
      ],
      "op": "JUMP",
      "path": "25"
    },
    "9691": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12323,
        12347
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "9692": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12357,
        12386
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 64,
      "value": "0x0"
    },
    "9694": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12357,
        12386
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9695": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12357,
        12386
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9696": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12357,
        12386
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9697": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12357,
        12375
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x14"
    },
    "9699": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12357,
        12386
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "9701": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12357,
        12386
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9702": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12357,
        12386
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "9704": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12357,
        12386
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9705": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12357,
        12386
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "9706": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12357,
        12395
      ],
      "op": "DUP5",
      "path": "25"
    },
    "9707": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12357,
        12395
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9708": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12357,
        12395
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9709": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12303,
        12347
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9710": {
      "op": "POP"
    },
    "9711": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12405,
        12426
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 65,
      "value": "0x25F7"
    },
    "9714": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12303,
        12347
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9715": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12405,
        12415
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3ECF"
    },
    "9718": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12405,
        12426
      ],
      "op": "JUMP",
      "path": "25"
    },
    "9719": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12405,
        12426
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "9720": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12461,
        12495
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 66,
      "value": "0x2602"
    },
    "9723": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12467,
        12479
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1639"
    },
    "9726": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12467,
        12477
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3531"
    },
    "9729": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12467,
        12479
      ],
      "op": "JUMP",
      "path": "25"
    },
    "9730": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12461,
        12495
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "9731": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12568,
        12631
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 67,
      "value": "0x262E"
    },
    "9734": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12574,
        12586
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x260D"
    },
    "9737": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12574,
        12584
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3531"
    },
    "9740": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12574,
        12586
      ],
      "op": "JUMP",
      "path": "25"
    },
    "9741": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12574,
        12586
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "9742": {
      "offset": [
        1766,
        1767
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "9744": {
      "offset": [
        1255,
        1267
      ],
      "op": "PUSH9",
      "path": "25",
      "value": "0x1B1AE4D6E2EF500000"
    },
    "9754": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12568,
        12631
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "9756": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12568,
        12631
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9757": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12568,
        12631
      ],
      "op": "DUP1",
      "path": "25"
    },
    "9758": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12568,
        12631
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "9760": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12568,
        12631
      ],
      "op": "ADD",
      "path": "25"
    },
    "9761": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12568,
        12631
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "9763": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12568,
        12631
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9764": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12568,
        12631
      ],
      "op": "DUP1",
      "path": "25"
    },
    "9765": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12568,
        12631
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "9767": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12568,
        12631
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9768": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12568,
        12631
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9769": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12568,
        12631
      ],
      "op": "POP",
      "path": "25"
    },
    "9770": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12568,
        12573
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3535"
    },
    "9773": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12568,
        12631
      ],
      "op": "JUMP",
      "path": "25"
    },
    "9774": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12568,
        12631
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "9775": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12727,
        12739
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 68,
      "value": "0x2636"
    },
    "9778": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12727,
        12737
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3531"
    },
    "9781": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12727,
        12739
      ],
      "op": "JUMP",
      "path": "25"
    },
    "9782": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12727,
        12739
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "9783": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12705,
        12724
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "9785": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12705,
        12724
      ],
      "op": "DUP5",
      "path": "25"
    },
    "9786": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12705,
        12724
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9787": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12705,
        12724
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9788": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12705,
        12716
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xB"
    },
    "9790": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12705,
        12724
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "9792": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12705,
        12724
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9793": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12705,
        12724
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "9795": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12705,
        12724
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9796": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12705,
        12724
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "9797": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12705,
        12739
      ],
      "op": "DUP1",
      "path": "25"
    },
    "9798": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12705,
        12739
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9803": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9805": {
      "op": "SHL"
    },
    "9806": {
      "op": "SUB"
    },
    "9807": {
      "op": "NOT"
    },
    "9808": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12705,
        12739
      ],
      "op": "AND",
      "path": "25"
    },
    "9809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9813": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9815": {
      "op": "SHL"
    },
    "9816": {
      "op": "SUB"
    },
    "9817": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12705,
        12739
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "9818": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12705,
        12739
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9819": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12705,
        12739
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "9820": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12705,
        12739
      ],
      "op": "AND",
      "path": "25"
    },
    "9821": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12705,
        12739
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "9822": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12705,
        12739
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9823": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12705,
        12739
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "9824": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12705,
        12739
      ],
      "op": "OR",
      "path": "25"
    },
    "9825": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12705,
        12739
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9826": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12705,
        12739
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9827": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12825,
        12837
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 69,
      "value": "0xA"
    },
    "9829": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12825,
        12837
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9830": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12825,
        12844
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2670"
    },
    "9833": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12825,
        12844
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9836": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12825,
        12841
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34D7"
    },
    "9839": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12825,
        12844
      ],
      "op": "JUMP",
      "path": "25"
    },
    "9840": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12825,
        12844
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "9841": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12810,
        12822
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA"
    },
    "9843": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12810,
        12844
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9844": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12915,
        12927
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 70,
      "value": "0xF"
    },
    "9846": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12915,
        12927
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9847": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12897,
        12928
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "9849": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12897,
        12928
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9850": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12897,
        12928
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9851": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12897,
        12928
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9852": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12897,
        12914
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xD"
    },
    "9854": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12897,
        12928
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "9856": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12897,
        12928
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9857": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12897,
        12928
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9858": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12897,
        12928
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9859": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12897,
        12928
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "9861": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12897,
        12928
      ],
      "op": "DUP1",
      "path": "25"
    },
    "9862": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12897,
        12928
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9863": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12897,
        12928
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "9864": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12897,
        12937
      ],
      "op": "DUP13",
      "path": "25"
    },
    "9865": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12897,
        12937
      ],
      "op": "DUP5",
      "path": "25"
    },
    "9866": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12897,
        12937
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9867": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12897,
        12937
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9868": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12897,
        12937
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "9869": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12897,
        12937
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9870": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12897,
        12937
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9871": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12897,
        12937
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "9872": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12897,
        12937
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9873": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12897,
        12944
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x269B"
    },
    "9876": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12897,
        12944
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9877": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12942,
        12943
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "9879": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12897,
        12941
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34D7"
    },
    "9882": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12897,
        12944
      ],
      "op": "JUMP",
      "path": "25"
    },
    "9883": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12897,
        12944
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "9884": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12872,
        12884
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xF"
    },
    "9886": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12872,
        12884
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9887": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12854,
        12885
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "9889": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12854,
        12885
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9890": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12854,
        12885
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9891": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12854,
        12885
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9892": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12854,
        12871
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xD"
    },
    "9894": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12854,
        12885
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "9896": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12854,
        12885
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9897": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12854,
        12885
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9898": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12854,
        12885
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9899": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12854,
        12885
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "9901": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12854,
        12885
      ],
      "op": "DUP1",
      "path": "25"
    },
    "9902": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12854,
        12885
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9903": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12854,
        12885
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "9904": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12854,
        12894
      ],
      "op": "DUP14",
      "path": "25"
    },
    "9905": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12854,
        12894
      ],
      "op": "DUP5",
      "path": "25"
    },
    "9906": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12854,
        12894
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9907": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12854,
        12894
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9908": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12854,
        12894
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "9909": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12854,
        12894
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9910": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12854,
        12894
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9911": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12854,
        12894
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "9912": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12854,
        12944
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "9913": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12854,
        12944
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9914": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12854,
        12944
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "9915": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12854,
        12944
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9916": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13006,
        13057
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x26D1"
    },
    "9919": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13054,
        13056
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA"
    },
    "9921": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13006,
        13049
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x26CB"
    },
    "9924": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13006,
        13015
      ],
      "op": "DUP8",
      "path": "25"
    },
    "9925": {
      "offset": [
        1923,
        1924
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9927": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13006,
        13019
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x45A6"
    },
    "9930": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        13006,
        13049
      ],
      "op": "JUMP",
      "path": "25"
    },
    "9931": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13006,
        13049
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "9932": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13006,
        13053
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9933": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13006,
        13053
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x45FF"
    },
    "9936": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        13006,
        13057
      ],
      "op": "JUMP",
      "path": "25"
    },
    "9937": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13006,
        13057
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "9938": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13067,
        13084
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "9940": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13087,
        13108
      ],
      "op": "DUP12",
      "path": "25"
    },
    "9941": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13087,
        13108
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9942": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13087,
        13108
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9943": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13087,
        13099
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9945": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13087,
        13108
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "9947": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13087,
        13108
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9948": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13087,
        13108
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "9950": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13087,
        13108
      ],
      "op": "DUP1",
      "path": "25"
    },
    "9951": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13087,
        13108
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9952": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13087,
        13108
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "9953": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13087,
        13108
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9954": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9955": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9956": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12985,
        13057
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "9957": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12985,
        13057
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "9958": {
      "op": "POP"
    },
    "9959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9965": {
      "op": "SHL"
    },
    "9966": {
      "op": "SUB"
    },
    "9967": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13087,
        13108
      ],
      "op": "AND",
      "path": "25"
    },
    "9968": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13087,
        13108
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "9969": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13087,
        13108
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9970": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13087,
        13108
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9971": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12985,
        13057
      ],
      "op": "DUP5",
      "path": "25"
    },
    "9972": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12985,
        13057
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9973": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13067,
        13084
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9974": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9975": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13067,
        13084
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9976": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9977": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12985,
        13057
      ],
      "op": "DUP6",
      "path": "25"
    },
    "9978": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13087,
        13108
      ],
      "op": "DUP8",
      "path": "25"
    },
    "9979": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "GAS",
      "path": "25"
    },
    "9980": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "CALL",
      "path": "25"
    },
    "9981": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "9982": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "POP",
      "path": "25"
    },
    "9983": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "POP",
      "path": "25"
    },
    "9984": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "POP",
      "path": "25"
    },
    "9985": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "9986": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "DUP1",
      "path": "25"
    },
    "9987": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "9989": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9990": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "EQ",
      "path": "25"
    },
    "9991": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x272C"
    },
    "9994": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "9995": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "9997": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9998": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "9999": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "POP",
      "path": "25"
    },
    "10000": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "10002": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "NOT",
      "path": "25"
    },
    "10003": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x3F"
    },
    "10005": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "10006": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "ADD",
      "path": "25"
    },
    "10007": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "AND",
      "path": "25"
    },
    "10008": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "DUP3",
      "path": "25"
    },
    "10009": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "ADD",
      "path": "25"
    },
    "10010": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "10012": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10013": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "10014": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "DUP3",
      "path": "25"
    },
    "10015": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10016": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "10017": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10019": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10021": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "DUP5",
      "path": "25"
    },
    "10022": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "ADD",
      "path": "25"
    },
    "10023": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "10024": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2731"
    },
    "10027": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "JUMP",
      "path": "25"
    },
    "10028": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10029": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "10031": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "10032": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "POP",
      "path": "25"
    },
    "10033": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10034": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13137,
        13176
      ],
      "op": "POP",
      "path": "25"
    },
    "10035": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13118,
        13176
      ],
      "op": "POP",
      "path": "25"
    },
    "10036": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13118,
        13176
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10037": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13118,
        13176
      ],
      "op": "POP",
      "path": "25"
    },
    "10038": {
      "branch": 235,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13194,
        13201
      ],
      "op": "DUP1",
      "path": "25",
      "statement": 71
    },
    "10039": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2778"
    },
    "10042": {
      "branch": 235,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10043": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "10045": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10046": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "10047": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10051": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10053": {
      "op": "SHL"
    },
    "10054": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10055": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10056": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10058": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "10060": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "DUP3",
      "path": "25"
    },
    "10061": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "ADD",
      "path": "25"
    },
    "10062": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10063": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xE"
    },
    "10065": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x24"
    },
    "10067": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "DUP3",
      "path": "25"
    },
    "10068": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "ADD",
      "path": "25"
    },
    "10069": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10070": {
      "op": "PUSH14",
      "value": "0x14185E5B595B9D0819985A5B1959"
    },
    "10085": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "10087": {
      "op": "SHL"
    },
    "10088": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x44"
    },
    "10090": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "DUP3",
      "path": "25"
    },
    "10091": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "ADD",
      "path": "25"
    },
    "10092": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10093": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10094": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "10095": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10096": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10097": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10098": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "SUB",
      "path": "25"
    },
    "10099": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x64"
    },
    "10101": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "ADD",
      "path": "25"
    },
    "10102": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10103": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "REVERT",
      "path": "25"
    },
    "10104": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13186,
        13220
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10105": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13320,
        13344
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 72,
      "value": "0x2781"
    },
    "10108": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13334,
        13343
      ],
      "op": "DUP8",
      "path": "25"
    },
    "10109": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13320,
        13333
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x363D"
    },
    "10112": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        13320,
        13344
      ],
      "op": "JUMP",
      "path": "25"
    },
    "10113": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13320,
        13344
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10114": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13360,
        13392
      ],
      "op": "PUSH32",
      "path": "25",
      "statement": 73,
      "value": "0xF34A510082F5A02E39555458564800FC1FE73BFD8D3AA07CBF063FE662E7657E"
    },
    "10147": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13371,
        13377
      ],
      "op": "DUP7",
      "path": "25"
    },
    "10148": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13379,
        13391
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x27AB"
    },
    "10151": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13379,
        13389
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3531"
    },
    "10154": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        13379,
        13391
      ],
      "op": "JUMP",
      "path": "25"
    },
    "10155": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13379,
        13391
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10156": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13360,
        13392
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "10158": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13360,
        13392
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10159": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13360,
        13392
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "10160": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13360,
        13392
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "10161": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13360,
        13392
      ],
      "op": "DUP4",
      "path": "25"
    },
    "10162": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13360,
        13392
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10169": {
      "op": "SHL"
    },
    "10170": {
      "op": "SUB"
    },
    "10171": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13360,
        13392
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10172": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13360,
        13392
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "10173": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13360,
        13392
      ],
      "op": "AND",
      "path": "25"
    },
    "10174": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13360,
        13392
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10176": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13360,
        13392
      ],
      "op": "DUP4",
      "path": "25"
    },
    "10177": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13360,
        13392
      ],
      "op": "ADD",
      "path": "25"
    },
    "10178": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13360,
        13392
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10179": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13360,
        13392
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10180": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13360,
        13392
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "10181": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13360,
        13392
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "10182": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13360,
        13392
      ],
      "op": "DUP3",
      "path": "25"
    },
    "10183": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13360,
        13392
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10184": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13360,
        13392
      ],
      "op": "SUB",
      "path": "25"
    },
    "10185": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13360,
        13392
      ],
      "op": "ADD",
      "path": "25"
    },
    "10186": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13360,
        13392
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10187": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13360,
        13392
      ],
      "op": "LOG1",
      "path": "25"
    },
    "10188": {
      "op": "POP"
    },
    "10189": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13410,
        13416
      ],
      "op": "SWAP4",
      "path": "25",
      "statement": 74
    },
    "10190": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13410,
        13416
      ],
      "op": "SWAP11",
      "path": "25"
    },
    "10191": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13423
      ],
      "op": "SWAP10",
      "path": "25"
    },
    "10192": {
      "op": "POP"
    },
    "10193": {
      "op": "POP"
    },
    "10194": {
      "op": "POP"
    },
    "10195": {
      "op": "POP"
    },
    "10196": {
      "op": "POP"
    },
    "10197": {
      "op": "POP"
    },
    "10198": {
      "op": "POP"
    },
    "10199": {
      "op": "POP"
    },
    "10200": {
      "op": "POP"
    },
    "10201": {
      "op": "POP"
    },
    "10202": {
      "fn": "CryptoChampions.mintHero",
      "jump": "o",
      "offset": [
        10951,
        13423
      ],
      "op": "JUMP",
      "path": "25"
    },
    "10203": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25952,
        26409
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10204": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26094,
        26099
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10206": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26126,
        26131
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10207": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26159,
        26164
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10209": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26190,
        26195
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10210": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26056,
        26062
      ],
      "op": "DUP5",
      "path": "25"
    },
    "10211": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "10213": {
      "offset": [
        5914,
        5920
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10214": {
      "offset": [
        5914,
        5943
      ],
      "op": "GT",
      "path": "25"
    },
    "10215": {
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x27EF"
    },
    "10218": {
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10219": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10221": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5906,
        5944
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10222": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5906,
        5944
      ],
      "op": "REVERT",
      "path": "25"
    },
    "10223": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10224": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10226": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10227": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10228": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10229": {
      "offset": [
        5993,
        6000
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "10231": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10233": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10234": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "10236": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5993,
        6008
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10237": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5993,
        6008
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "10238": {
      "offset": [
        5993,
        6014
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10239": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5993,
        6014
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "10241": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5993,
        6014
      ],
      "op": "AND",
      "path": "25"
    },
    "10242": {
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x280A"
    },
    "10245": {
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10246": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10248": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5985,
        6015
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10249": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5985,
        6015
      ],
      "op": "REVERT",
      "path": "25"
    },
    "10250": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10251": {
      "op": "POP"
    },
    "10252": {
      "op": "POP"
    },
    "10253": {
      "op": "POP"
    },
    "10254": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26252,
        26267
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 75,
      "value": "0x0"
    },
    "10256": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26252,
        26267
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "10257": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26252,
        26267
      ],
      "op": "DUP4",
      "path": "25"
    },
    "10258": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26252,
        26267
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10259": {
      "op": "POP"
    },
    "10260": {
      "op": "POP"
    },
    "10261": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26252,
        26259
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "10263": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26252,
        26267
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10265": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26252,
        26267
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10266": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26252,
        26267
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "10268": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26252,
        26267
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10269": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26252,
        26267
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "10270": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26252,
        26277
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "10272": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26252,
        26277
      ],
      "op": "ADD",
      "path": "25"
    },
    "10273": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26252,
        26277
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10274": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26252,
        26277
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "10276": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26252,
        26277
      ],
      "op": "PUSH6",
      "path": "25",
      "value": "0x10000000000"
    },
    "10283": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26252,
        26277
      ],
      "op": "DUP3",
      "path": "25"
    },
    "10284": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26252,
        26277
      ],
      "op": "DIV",
      "path": "25"
    },
    "10285": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26252,
        26277
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10286": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26252,
        26277
      ],
      "op": "AND",
      "path": "25"
    },
    "10287": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26252,
        26277
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "10288": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26291,
        26317
      ],
      "op": "PUSH7",
      "path": "25",
      "value": "0x1000000000000"
    },
    "10296": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26291,
        26317
      ],
      "op": "DUP4",
      "path": "25"
    },
    "10297": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26291,
        26317
      ],
      "op": "DIV",
      "path": "25"
    },
    "10298": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26291,
        26317
      ],
      "op": "DUP3",
      "path": "25"
    },
    "10299": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26291,
        26317
      ],
      "op": "AND",
      "path": "25"
    },
    "10300": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26291,
        26317
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "10301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10303": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "10305": {
      "op": "SHL"
    },
    "10306": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26331,
        26355
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10307": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26331,
        26355
      ],
      "op": "DIV",
      "path": "25"
    },
    "10308": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26331,
        26355
      ],
      "op": "DUP4",
      "path": "25"
    },
    "10309": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26331,
        26355
      ],
      "op": "AND",
      "path": "25"
    },
    "10310": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26331,
        26355
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "10311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10313": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10315": {
      "op": "SHL"
    },
    "10316": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26369,
        26392
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10317": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26369,
        26392
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "10318": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26369,
        26392
      ],
      "op": "DIV",
      "path": "25"
    },
    "10319": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26369,
        26392
      ],
      "op": "AND",
      "path": "25"
    },
    "10320": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26369,
        26392
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10321": {
      "fn": "CryptoChampions.getHeroLore",
      "jump": "o",
      "offset": [
        25952,
        26409
      ],
      "op": "JUMP",
      "path": "25"
    },
    "10322": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28118,
        28225
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10323": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28206,
        28218
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 76,
      "value": "0x7"
    },
    "10325": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28206,
        28218
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10326": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28118,
        28225
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10327": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28118,
        28225
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10328": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "jump": "o",
      "offset": [
        28118,
        28225
      ],
      "op": "JUMP",
      "path": "25"
    },
    "10329": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10330": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3534,
        3550
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "10332": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3593,
        3596
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 77
    },
    "10333": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3593,
        3603
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10334": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3574,
        3582
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10335": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3574,
        3589
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10336": {
      "branch": 262,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3574,
        3603
      ],
      "op": "EQ",
      "path": "5"
    },
    "10337": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x289B"
    },
    "10340": {
      "branch": 262,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10341": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10343": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10344": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10348": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10350": {
      "op": "SHL"
    },
    "10351": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10352": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10353": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "10355": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "ADD",
      "path": "5"
    },
    "10356": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10357": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10358": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10360": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "ADD",
      "path": "5"
    },
    "10361": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10362": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10363": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "SUB",
      "path": "5"
    },
    "10364": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10365": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10366": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x29"
    },
    "10368": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10369": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10370": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10372": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "ADD",
      "path": "5"
    },
    "10373": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10374": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x52B8"
    },
    "10377": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x29"
    },
    "10379": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10380": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "10381": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10383": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "ADD",
      "path": "5"
    },
    "10384": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10385": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "POP",
      "path": "5"
    },
    "10386": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "POP",
      "path": "5"
    },
    "10387": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10389": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10390": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10391": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10392": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "SUB",
      "path": "5"
    },
    "10393": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10394": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "REVERT",
      "path": "5"
    },
    "10395": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10396": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3660,
        3690
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "10398": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3707,
        3715
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10399": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3707,
        3722
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10400": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH8",
      "path": "5",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10409": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10410": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "GT",
      "path": "5"
    },
    "10411": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10412": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "10413": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x28B5"
    },
    "10416": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10417": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10419": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10420": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "REVERT",
      "path": "5"
    },
    "10421": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10422": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "POP",
      "path": "5"
    },
    "10423": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10425": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10426": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10427": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10428": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10429": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10430": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10431": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10433": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "MUL",
      "path": "5"
    },
    "10434": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10436": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "ADD",
      "path": "5"
    },
    "10437": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10438": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "ADD",
      "path": "5"
    },
    "10439": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10441": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10442": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10443": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "10444": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x28DF"
    },
    "10447": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10448": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10449": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10451": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "ADD",
      "path": "5"
    },
    "10452": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10454": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10455": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "MUL",
      "path": "5"
    },
    "10456": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10457": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "10458": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10459": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "10460": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "ADD",
      "path": "5"
    },
    "10461": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10462": {
      "op": "POP"
    },
    "10463": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10464": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "POP",
      "path": "5"
    },
    "10465": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3660,
        3723
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10466": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3660,
        3723
      ],
      "op": "POP",
      "path": "5"
    },
    "10467": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3739,
        3748
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10469": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3734,
        3854
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10470": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3758,
        3766
      ],
      "op": "DUP5",
      "path": "5"
    },
    "10471": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3758,
        3773
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10472": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3754,
        3755
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10473": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3754,
        3773
      ],
      "op": "LT",
      "path": "5"
    },
    "10474": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3734,
        3854
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "10475": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3734,
        3854
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x293D"
    },
    "10478": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3734,
        3854
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10479": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3813,
        3843
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 78,
      "value": "0x291E"
    },
    "10482": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3831
      ],
      "op": "DUP6",
      "path": "5"
    },
    "10483": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3832,
        3833
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10484": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10485": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10486": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10487": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "LT",
      "path": "5"
    },
    "10488": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x28FD"
    },
    "10491": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10492": {
      "dev": "Index out of range",
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "INVALID",
      "path": "5"
    },
    "10493": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10494": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10496": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "MUL",
      "path": "5"
    },
    "10497": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10499": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "ADD",
      "path": "5"
    },
    "10500": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "ADD",
      "path": "5"
    },
    "10501": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10502": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3839
      ],
      "op": "DUP6",
      "path": "5"
    },
    "10503": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3840,
        3841
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10504": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10505": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10506": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10507": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "LT",
      "path": "5"
    },
    "10508": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2911"
    },
    "10511": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10512": {
      "dev": "Index out of range",
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "INVALID",
      "path": "5"
    },
    "10513": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10514": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10516": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "MUL",
      "path": "5"
    },
    "10517": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10519": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "ADD",
      "path": "5"
    },
    "10520": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "ADD",
      "path": "5"
    },
    "10521": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10522": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3813,
        3822
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1338"
    },
    "10525": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        3813,
        3843
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10526": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3813,
        3843
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10527": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3807
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10528": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3808,
        3809
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10529": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10530": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10531": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10532": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "LT",
      "path": "5"
    },
    "10533": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x292A"
    },
    "10536": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10537": {
      "dev": "Index out of range",
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "INVALID",
      "path": "5"
    },
    "10538": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10539": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10541": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10542": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10543": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "MUL",
      "path": "5"
    },
    "10544": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10545": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10546": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10547": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "ADD",
      "path": "5"
    },
    "10548": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "ADD",
      "path": "5"
    },
    "10549": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3843
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10550": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3775,
        3778
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 79,
      "value": "0x1"
    },
    "10552": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3775,
        3778
      ],
      "op": "ADD",
      "path": "5"
    },
    "10553": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3734,
        3854
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x28E5"
    },
    "10556": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3734,
        3854
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10557": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3734,
        3854
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10558": {
      "op": "POP"
    },
    "10559": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3871,
        3884
      ],
      "op": "SWAP4",
      "path": "5",
      "statement": 80
    },
    "10560": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "10561": {
      "op": "POP"
    },
    "10562": {
      "op": "POP"
    },
    "10563": {
      "op": "POP"
    },
    "10564": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "o",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10565": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17897,
        18133
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10566": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17985,
        17992
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10568": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17968,
        17974
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10569": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "10571": {
      "offset": [
        5914,
        5920
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10572": {
      "offset": [
        5914,
        5943
      ],
      "op": "GT",
      "path": "25"
    },
    "10573": {
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2955"
    },
    "10576": {
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10577": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10579": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5906,
        5944
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10580": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5906,
        5944
      ],
      "op": "REVERT",
      "path": "25"
    },
    "10581": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10582": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10584": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10585": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10586": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10587": {
      "offset": [
        5993,
        6000
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "10589": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10591": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10592": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "10594": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5993,
        6008
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10595": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5993,
        6008
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "10596": {
      "offset": [
        5993,
        6014
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10597": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5993,
        6014
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "10599": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5993,
        6014
      ],
      "op": "AND",
      "path": "25"
    },
    "10600": {
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2970"
    },
    "10603": {
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10604": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10606": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5985,
        6015
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10607": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5985,
        6015
      ],
      "op": "REVERT",
      "path": "25"
    },
    "10608": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10609": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18043,
        18044
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 81,
      "value": "0x0"
    },
    "10611": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18012,
        18031
      ],
      "op": "DUP4",
      "path": "25"
    },
    "10612": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18012,
        18031
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10613": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18012,
        18031
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10614": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18012,
        18023
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xB"
    },
    "10616": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18012,
        18031
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10618": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18012,
        18031
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10619": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18012,
        18031
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "10621": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18012,
        18031
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10622": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18012,
        18031
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "10623": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18012,
        18031
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10628": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10630": {
      "op": "SHL"
    },
    "10631": {
      "op": "SUB"
    },
    "10632": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18012,
        18031
      ],
      "op": "AND",
      "path": "25"
    },
    "10633": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18004,
        18046
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2991"
    },
    "10636": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18004,
        18046
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10637": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18004,
        18046
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10639": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18004,
        18046
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10640": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18004,
        18046
      ],
      "op": "REVERT",
      "path": "25"
    },
    "10641": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18004,
        18046
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10642": {
      "op": "POP"
    },
    "10643": {
      "op": "POP"
    },
    "10644": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18107,
        18126
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 82,
      "value": "0x0"
    },
    "10646": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18107,
        18126
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10647": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18107,
        18126
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10648": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18107,
        18126
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10649": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18107,
        18118
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xB"
    },
    "10651": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18107,
        18126
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10653": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18107,
        18126
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10654": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18107,
        18126
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "10656": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18107,
        18126
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10657": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18107,
        18126
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "10658": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18107,
        18126
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10663": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10665": {
      "op": "SHL"
    },
    "10666": {
      "op": "SUB"
    },
    "10667": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18107,
        18126
      ],
      "op": "AND",
      "path": "25"
    },
    "10668": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18107,
        18126
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10669": {
      "fn": "CryptoChampions.getHeroOwner",
      "jump": "o",
      "offset": [
        17897,
        18133
      ],
      "op": "JUMP",
      "path": "25"
    },
    "10670": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22691,
        22986
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10671": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22853,
        22860
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10673": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22827,
        22834
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10674": {
      "offset": [
        1766,
        1767
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10676": {
      "offset": [
        5739,
        5746
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10677": {
      "offset": [
        5739,
        5768
      ],
      "op": "GT",
      "path": "25"
    },
    "10678": {
      "offset": [
        5739,
        5803
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10679": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        5739,
        5803
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "10680": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        5739,
        5803
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x29C2"
    },
    "10683": {
      "offset": [
        5739,
        5803
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10684": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        5739,
        5803
      ],
      "op": "POP",
      "path": "25"
    },
    "10685": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "10687": {
      "offset": [
        5772,
        5779
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10688": {
      "offset": [
        5772,
        5803
      ],
      "op": "GT",
      "path": "25"
    },
    "10689": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        5772,
        5803
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "10690": {
      "offset": [
        5739,
        5803
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10691": {
      "offset": [
        5731,
        5804
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x29CB"
    },
    "10694": {
      "offset": [
        5731,
        5804
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10695": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        5731,
        5804
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10697": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        5731,
        5804
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10698": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        5731,
        5804
      ],
      "op": "REVERT",
      "path": "25"
    },
    "10699": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        5731,
        5804
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10700": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22893,
        22905
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 83,
      "value": "0xF"
    },
    "10702": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22893,
        22905
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10703": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22884,
        22889
      ],
      "op": "DUP5",
      "path": "25"
    },
    "10704": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22884,
        22905
      ],
      "op": "GT",
      "path": "25"
    },
    "10705": {
      "branch": 236,
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22884,
        22905
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "10706": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22876,
        22906
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x29DA"
    },
    "10709": {
      "branch": 236,
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22876,
        22906
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10710": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22876,
        22906
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10712": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22876,
        22906
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10713": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22876,
        22906
      ],
      "op": "REVERT",
      "path": "25"
    },
    "10714": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22876,
        22906
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10715": {
      "op": "POP"
    },
    "10716": {
      "op": "POP"
    },
    "10717": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22946,
        22970
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 84,
      "value": "0x0"
    },
    "10719": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22946,
        22970
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "10720": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22946,
        22970
      ],
      "op": "DUP3",
      "path": "25"
    },
    "10721": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22946,
        22970
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10722": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22946,
        22963
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xD"
    },
    "10724": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22946,
        22970
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10726": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22946,
        22970
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10727": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22946,
        22970
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10728": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22946,
        22970
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10729": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22946,
        22970
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "10731": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22946,
        22970
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10732": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22946,
        22970
      ],
      "op": "DUP5",
      "path": "25"
    },
    "10733": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22946,
        22970
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "10734": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22946,
        22979
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "10735": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22946,
        22979
      ],
      "op": "DUP5",
      "path": "25"
    },
    "10736": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22946,
        22979
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10737": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22946,
        22979
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "10738": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22946,
        22979
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10739": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22946,
        22979
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10740": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22946,
        22979
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10741": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22946,
        22979
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "10742": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22946,
        22979
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10743": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22946,
        22979
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10744": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "jump": "o",
      "offset": [
        22691,
        22986
      ],
      "op": "JUMP",
      "path": "25"
    },
    "10745": {
      "offset": [
        3746,
        3786
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10746": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x16"
    },
    "10748": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10749": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10750": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10751": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10752": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "LT",
      "path": "25"
    },
    "10753": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2A06"
    },
    "10756": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10757": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "INVALID",
      "path": "25"
    },
    "10758": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10759": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10761": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "10762": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP3",
      "path": "25"
    },
    "10763": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10764": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10766": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "10767": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP3",
      "path": "25"
    },
    "10768": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10769": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "10770": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ADD",
      "path": "25"
    },
    "10771": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10772": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10773": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "10775": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10776": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "10777": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "10779": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "10781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10783": {
      "op": "NOT"
    },
    "10784": {
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "10787": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "10789": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP8",
      "path": "25"
    },
    "10790": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "AND",
      "path": "25"
    },
    "10791": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "10792": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "MUL",
      "path": "25"
    },
    "10793": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ADD",
      "path": "25"
    },
    "10794": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10795": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "10796": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "AND",
      "path": "25"
    },
    "10797": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "10798": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10799": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "10800": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DIV",
      "path": "25"
    },
    "10801": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "10802": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP4",
      "path": "25"
    },
    "10803": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ADD",
      "path": "25"
    },
    "10804": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP6",
      "path": "25"
    },
    "10805": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10806": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DIV",
      "path": "25"
    },
    "10807": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP6",
      "path": "25"
    },
    "10808": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "MUL",
      "path": "25"
    },
    "10809": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10810": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ADD",
      "path": "25"
    },
    "10811": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP6",
      "path": "25"
    },
    "10812": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ADD",
      "path": "25"
    },
    "10813": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10814": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "10815": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10816": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10817": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10818": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10819": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "10820": {
      "op": "POP"
    },
    "10821": {
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10822": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "10823": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP4",
      "path": "25"
    },
    "10824": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ADD",
      "path": "25"
    },
    "10825": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP3",
      "path": "25"
    },
    "10826": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP3",
      "path": "25"
    },
    "10827": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10828": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "10829": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2A97"
    },
    "10832": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10833": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10834": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "10836": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "LT",
      "path": "25"
    },
    "10837": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2A6C"
    },
    "10840": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10841": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "10844": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10845": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP4",
      "path": "25"
    },
    "10846": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10847": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DIV",
      "path": "25"
    },
    "10848": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "MUL",
      "path": "25"
    },
    "10849": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP4",
      "path": "25"
    },
    "10850": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10851": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "10852": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10854": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ADD",
      "path": "25"
    },
    "10855": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "10856": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2A97"
    },
    "10859": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMP",
      "path": "25"
    },
    "10860": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10861": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP3",
      "path": "25"
    },
    "10862": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ADD",
      "path": "25"
    },
    "10863": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "10864": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10865": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10867": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10868": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10870": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10872": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "10873": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10874": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10875": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10876": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10877": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10878": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10879": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10880": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "10882": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ADD",
      "path": "25"
    },
    "10883": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10884": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10886": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ADD",
      "path": "25"
    },
    "10887": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10888": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP4",
      "path": "25"
    },
    "10889": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "GT",
      "path": "25"
    },
    "10890": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2A7A"
    },
    "10893": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10894": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP3",
      "path": "25"
    },
    "10895": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10896": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SUB",
      "path": "25"
    },
    "10897": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "10899": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "AND",
      "path": "25"
    },
    "10900": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP3",
      "path": "25"
    },
    "10901": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ADD",
      "path": "25"
    },
    "10902": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "10903": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10904": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "POP",
      "path": "25"
    },
    "10905": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "POP",
      "path": "25"
    },
    "10906": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "POP",
      "path": "25"
    },
    "10907": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "POP",
      "path": "25"
    },
    "10908": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "POP",
      "path": "25"
    },
    "10909": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10910": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "jump": "o",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMP",
      "path": "25"
    },
    "10911": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10912": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10638,
        10645
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10914": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10620,
        10627
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10915": {
      "offset": [
        1766,
        1767
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10917": {
      "offset": [
        5739,
        5746
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10918": {
      "offset": [
        5739,
        5768
      ],
      "op": "GT",
      "path": "25"
    },
    "10919": {
      "offset": [
        5739,
        5803
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10920": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        5739,
        5803
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "10921": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        5739,
        5803
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2AB3"
    },
    "10924": {
      "offset": [
        5739,
        5803
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10925": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        5739,
        5803
      ],
      "op": "POP",
      "path": "25"
    },
    "10926": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "10928": {
      "offset": [
        5772,
        5779
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10929": {
      "offset": [
        5772,
        5803
      ],
      "op": "GT",
      "path": "25"
    },
    "10930": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        5772,
        5803
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "10931": {
      "offset": [
        5739,
        5803
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10932": {
      "offset": [
        5731,
        5804
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2ABC"
    },
    "10935": {
      "offset": [
        5731,
        5804
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10936": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        5731,
        5804
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10938": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        5731,
        5804
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10939": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        5731,
        5804
      ],
      "op": "REVERT",
      "path": "25"
    },
    "10940": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        5731,
        5804
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10941": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10698,
        10699
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 85,
      "value": "0x0"
    },
    "10943": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10665,
        10686
      ],
      "op": "DUP4",
      "path": "25"
    },
    "10944": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10665,
        10686
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10945": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10665,
        10686
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10946": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10665,
        10677
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "10948": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10665,
        10686
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10950": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10665,
        10686
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10951": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10665,
        10686
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "10953": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10665,
        10686
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10954": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10665,
        10686
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "10955": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10665,
        10686
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10962": {
      "op": "SHL"
    },
    "10963": {
      "op": "SUB"
    },
    "10964": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10665,
        10686
      ],
      "op": "AND",
      "path": "25"
    },
    "10965": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10657,
        10701
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2ADD"
    },
    "10968": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10657,
        10701
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10969": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10657,
        10701
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10971": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10657,
        10701
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10972": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10657,
        10701
      ],
      "op": "REVERT",
      "path": "25"
    },
    "10973": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10657,
        10701
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10974": {
      "op": "POP"
    },
    "10975": {
      "op": "POP"
    },
    "10976": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10763,
        10784
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 86,
      "value": "0x0"
    },
    "10978": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10763,
        10784
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10979": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10763,
        10784
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10980": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10763,
        10784
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10981": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10763,
        10775
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "10983": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10763,
        10784
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10985": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10763,
        10784
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10986": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10763,
        10784
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "10988": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10763,
        10784
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10989": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10763,
        10784
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "10990": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10763,
        10784
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10995": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10997": {
      "op": "SHL"
    },
    "10998": {
      "op": "SUB"
    },
    "10999": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10763,
        10784
      ],
      "op": "AND",
      "path": "25"
    },
    "11000": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10763,
        10784
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11001": {
      "fn": "CryptoChampions.getElderOwner",
      "jump": "o",
      "offset": [
        10538,
        10791
      ],
      "op": "JUMP",
      "path": "25"
    },
    "11002": {
      "offset": [
        3069,
        3098
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11003": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xE"
    },
    "11005": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "11006": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11007": {
      "fn": "CryptoChampions.getElderOwner",
      "jump": "o",
      "offset": [
        3069,
        3098
      ],
      "op": "JUMP",
      "path": "25"
    },
    "11008": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27055,
        27661
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11009": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27198,
        27203
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "11011": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27229,
        27234
      ],
      "op": "DUP1",
      "path": "25"
    },
    "11012": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27261,
        27266
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "11014": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27296,
        27301
      ],
      "op": "DUP1",
      "path": "25"
    },
    "11015": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27331,
        27336
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "11017": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27360,
        27365
      ],
      "op": "DUP1",
      "path": "25"
    },
    "11018": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27160,
        27166
      ],
      "op": "DUP7",
      "path": "25"
    },
    "11019": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "11021": {
      "offset": [
        5914,
        5920
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11022": {
      "offset": [
        5914,
        5943
      ],
      "op": "GT",
      "path": "25"
    },
    "11023": {
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2B17"
    },
    "11026": {
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "11027": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "11029": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5906,
        5944
      ],
      "op": "DUP1",
      "path": "25"
    },
    "11030": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5906,
        5944
      ],
      "op": "REVERT",
      "path": "25"
    },
    "11031": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11032": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "11034": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11035": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11036": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "11037": {
      "offset": [
        5993,
        6000
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "11039": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "11041": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "11042": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "11044": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5993,
        6008
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11045": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5993,
        6008
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "11046": {
      "offset": [
        5993,
        6014
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "11047": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5993,
        6014
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "11049": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5993,
        6014
      ],
      "op": "AND",
      "path": "25"
    },
    "11050": {
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2B32"
    },
    "11053": {
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "11054": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "11056": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5985,
        6015
      ],
      "op": "DUP1",
      "path": "25"
    },
    "11057": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5985,
        6015
      ],
      "op": "REVERT",
      "path": "25"
    },
    "11058": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11059": {
      "op": "POP"
    },
    "11060": {
      "op": "POP"
    },
    "11061": {
      "op": "POP"
    },
    "11062": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27423,
        27438
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 87,
      "value": "0x0"
    },
    "11064": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27423,
        27438
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "11065": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27423,
        27438
      ],
      "op": "DUP6",
      "path": "25"
    },
    "11066": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27423,
        27438
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "11067": {
      "op": "POP"
    },
    "11068": {
      "op": "POP"
    },
    "11069": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27423,
        27430
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "11071": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27423,
        27438
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "11073": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27423,
        27438
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "11074": {
      "op": "POP"
    },
    "11075": {
      "op": "POP"
    },
    "11076": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27423,
        27438
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "11078": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27423,
        27438
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11079": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27423,
        27438
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "11080": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27423,
        27447
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "11082": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27423,
        27447
      ],
      "op": "ADD",
      "path": "25"
    },
    "11083": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27423,
        27447
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "11084": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27423,
        27447
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "11086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11088": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "11090": {
      "op": "SHL"
    },
    "11091": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27423,
        27447
      ],
      "op": "DUP3",
      "path": "25"
    },
    "11092": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27423,
        27447
      ],
      "op": "DIV",
      "path": "25"
    },
    "11093": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27423,
        27447
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11094": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27423,
        27447
      ],
      "op": "AND",
      "path": "25"
    },
    "11095": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27423,
        27447
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "11096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11098": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "11100": {
      "op": "SHL"
    },
    "11101": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27461,
        27486
      ],
      "op": "DUP4",
      "path": "25"
    },
    "11102": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27461,
        27486
      ],
      "op": "DIV",
      "path": "25"
    },
    "11103": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27461,
        27486
      ],
      "op": "DUP3",
      "path": "25"
    },
    "11104": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27461,
        27486
      ],
      "op": "AND",
      "path": "25"
    },
    "11105": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27461,
        27486
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "11106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11108": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "11110": {
      "op": "SHL"
    },
    "11111": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27500,
        27528
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11112": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27500,
        27528
      ],
      "op": "DIV",
      "path": "25"
    },
    "11113": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27500,
        27528
      ],
      "op": "DUP4",
      "path": "25"
    },
    "11114": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27500,
        27528
      ],
      "op": "AND",
      "path": "25"
    },
    "11115": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27500,
        27528
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "11116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11118": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11120": {
      "op": "SHL"
    },
    "11121": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27542,
        27570
      ],
      "op": "DUP3",
      "path": "25"
    },
    "11122": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27542,
        27570
      ],
      "op": "DIV",
      "path": "25"
    },
    "11123": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27542,
        27570
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11124": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27542,
        27570
      ],
      "op": "AND",
      "path": "25"
    },
    "11125": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27542,
        27570
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "11126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11128": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "11130": {
      "op": "SHL"
    },
    "11131": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27584,
        27606
      ],
      "op": "DUP4",
      "path": "25"
    },
    "11132": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27584,
        27606
      ],
      "op": "DIV",
      "path": "25"
    },
    "11133": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27584,
        27606
      ],
      "op": "DUP3",
      "path": "25"
    },
    "11134": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27584,
        27606
      ],
      "op": "AND",
      "path": "25"
    },
    "11135": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27584,
        27606
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "11136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11138": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "11140": {
      "op": "SHL"
    },
    "11141": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27620,
        27644
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11142": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27620,
        27644
      ],
      "op": "DIV",
      "path": "25"
    },
    "11143": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27620,
        27644
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11144": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27620,
        27644
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "11145": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27620,
        27644
      ],
      "op": "AND",
      "path": "25"
    },
    "11146": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27620,
        27644
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11147": {
      "fn": "CryptoChampions.getHeroStats",
      "jump": "o",
      "offset": [
        27055,
        27661
      ],
      "op": "JUMP",
      "path": "25"
    },
    "11148": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25427,
        25818
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11149": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25577,
        25582
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "11151": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25607,
        25612
      ],
      "op": "DUP1",
      "path": "25"
    },
    "11152": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25637,
        25642
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "11154": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25667,
        25672
      ],
      "op": "DUP1",
      "path": "25"
    },
    "11155": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25539,
        25545
      ],
      "op": "DUP5",
      "path": "25"
    },
    "11156": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "11158": {
      "offset": [
        5914,
        5920
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11159": {
      "offset": [
        5914,
        5943
      ],
      "op": "GT",
      "path": "25"
    },
    "11160": {
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2BA0"
    },
    "11163": {
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "11164": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "11166": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5906,
        5944
      ],
      "op": "DUP1",
      "path": "25"
    },
    "11167": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5906,
        5944
      ],
      "op": "REVERT",
      "path": "25"
    },
    "11168": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11169": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "11171": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11172": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11173": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "11174": {
      "offset": [
        5993,
        6000
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "11176": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "11178": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "11179": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "11181": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5993,
        6008
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11182": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5993,
        6008
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "11183": {
      "offset": [
        5993,
        6014
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "11184": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5993,
        6014
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "11186": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5993,
        6014
      ],
      "op": "AND",
      "path": "25"
    },
    "11187": {
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2BBB"
    },
    "11190": {
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "11191": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "11193": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5985,
        6015
      ],
      "op": "DUP1",
      "path": "25"
    },
    "11194": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5985,
        6015
      ],
      "op": "REVERT",
      "path": "25"
    },
    "11195": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11196": {
      "op": "POP"
    },
    "11197": {
      "op": "POP"
    },
    "11198": {
      "op": "POP"
    },
    "11199": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25716,
        25731
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 88,
      "value": "0x0"
    },
    "11201": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25716,
        25731
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "11202": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25716,
        25731
      ],
      "op": "DUP4",
      "path": "25"
    },
    "11203": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25716,
        25731
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "11204": {
      "op": "POP"
    },
    "11205": {
      "op": "POP"
    },
    "11206": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25716,
        25723
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "11208": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25716,
        25731
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "11210": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25716,
        25731
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "11211": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25716,
        25731
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "11213": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25716,
        25731
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11214": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25716,
        25731
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "11215": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25716,
        25738
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "11217": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25716,
        25738
      ],
      "op": "ADD",
      "path": "25"
    },
    "11218": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25716,
        25738
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "11219": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25716,
        25738
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "11221": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25716,
        25738
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "11224": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25716,
        25738
      ],
      "op": "DUP3",
      "path": "25"
    },
    "11225": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25716,
        25738
      ],
      "op": "DIV",
      "path": "25"
    },
    "11226": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25716,
        25738
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11227": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25716,
        25738
      ],
      "op": "AND",
      "path": "25"
    },
    "11228": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25716,
        25738
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "11229": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25740,
        25762
      ],
      "op": "PUSH3",
      "path": "25",
      "value": "0x10000"
    },
    "11233": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25740,
        25762
      ],
      "op": "DUP4",
      "path": "25"
    },
    "11234": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25740,
        25762
      ],
      "op": "DIV",
      "path": "25"
    },
    "11235": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25740,
        25762
      ],
      "op": "DUP3",
      "path": "25"
    },
    "11236": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25740,
        25762
      ],
      "op": "AND",
      "path": "25"
    },
    "11237": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25740,
        25762
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "11238": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25764,
        25786
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x1000000"
    },
    "11243": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25764,
        25786
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11244": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25764,
        25786
      ],
      "op": "DIV",
      "path": "25"
    },
    "11245": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25764,
        25786
      ],
      "op": "DUP4",
      "path": "25"
    },
    "11246": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25764,
        25786
      ],
      "op": "AND",
      "path": "25"
    },
    "11247": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25764,
        25786
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "11248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11252": {
      "op": "SHL"
    },
    "11253": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25788,
        25810
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11254": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25788,
        25810
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "11255": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25788,
        25810
      ],
      "op": "DIV",
      "path": "25"
    },
    "11256": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25788,
        25810
      ],
      "op": "AND",
      "path": "25"
    },
    "11257": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25788,
        25810
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11258": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "jump": "o",
      "offset": [
        25427,
        25818
      ],
      "op": "JUMP",
      "path": "25"
    },
    "11259": {
      "offset": [
        3136,
        3163
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11260": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xF"
    },
    "11262": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "11263": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11264": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "jump": "o",
      "offset": [
        3136,
        3163
      ],
      "op": "JUMP",
      "path": "25"
    },
    "11265": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11266": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4038,
        4045
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11268": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 89
    },
    "11269": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11270": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11271": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11273": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11274": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11275": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11276": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11278": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11279": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11280": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C19"
    },
    "11283": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4094
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11284": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4088,
        4093
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11285": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4666"
    },
    "11288": {
      "fn": "AccessControl.getRoleMember",
      "jump": "i",
      "offset": [
        4064,
        4094
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11289": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4094
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11290": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4057,
        4094
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "11291": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11292": {
      "op": "POP"
    },
    "11293": {
      "op": "POP"
    },
    "11294": {
      "op": "POP"
    },
    "11295": {
      "fn": "AccessControl.getRoleMember",
      "jump": "o",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11296": {
      "offset": [
        2088,
        2136
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11297": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "11299": {
      "offset": [
        2088,
        2136
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11300": {
      "fn": "AccessControl.getRoleMember",
      "jump": "o",
      "offset": [
        2088,
        2136
      ],
      "op": "JUMP",
      "path": "25"
    },
    "11301": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11302": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3019,
        3023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11304": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 90
    },
    "11305": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11306": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11307": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11309": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11310": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11311": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11312": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11314": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11315": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11316": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3080
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C19"
    },
    "11319": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3080
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11320": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3072,
        3079
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11321": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34C2"
    },
    "11324": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        3042,
        3080
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11325": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "11326": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9592,
        9602
      ],
      "op": "CALLER",
      "path": "28",
      "statement": 91
    },
    "11327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11331": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11333": {
      "op": "SHL"
    },
    "11334": {
      "op": "SUB"
    },
    "11335": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9606,
        9620
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0x0"
    },
    "11368": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9592,
        9620
      ],
      "op": "AND",
      "path": "28"
    },
    "11369": {
      "branch": 283,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9592,
        9620
      ],
      "op": "EQ",
      "path": "28"
    },
    "11370": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2CBA"
    },
    "11373": {
      "branch": 283,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "11374": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "11376": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "DUP1",
      "path": "28"
    },
    "11377": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "11378": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11382": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11384": {
      "op": "SHL"
    },
    "11385": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "DUP2",
      "path": "28"
    },
    "11386": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "11387": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "11389": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "11391": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "DUP3",
      "path": "28"
    },
    "11392": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "ADD",
      "path": "28"
    },
    "11393": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "11394": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "11396": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x24"
    },
    "11398": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "DUP3",
      "path": "28"
    },
    "11399": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "ADD",
      "path": "28"
    },
    "11400": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "11401": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00"
    },
    "11434": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x44"
    },
    "11436": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "DUP3",
      "path": "28"
    },
    "11437": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "ADD",
      "path": "28"
    },
    "11438": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "11439": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "11440": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "11441": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "11442": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "DUP2",
      "path": "28"
    },
    "11443": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "11444": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "SUB",
      "path": "28"
    },
    "11445": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x64"
    },
    "11447": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "ADD",
      "path": "28"
    },
    "11448": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "11449": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "REVERT",
      "path": "28"
    },
    "11450": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "11451": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9666,
        9706
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 92,
      "value": "0x1E47"
    },
    "11454": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9684,
        9693
      ],
      "op": "DUP3",
      "path": "28"
    },
    "11455": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9695,
        9705
      ],
      "op": "DUP3",
      "path": "28"
    },
    "11456": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9666,
        9683
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4672"
    },
    "11459": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9666,
        9706
      ],
      "op": "JUMP",
      "path": "28"
    },
    "11460": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11461": {
      "offset": [
        6252,
        6272
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2CDB"
    },
    "11464": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11466": {
      "op": "DUP1"
    },
    "11467": {
      "op": "MLOAD"
    },
    "11468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11470": {
      "op": "PUSH2",
      "value": "0x5201"
    },
    "11473": {
      "op": "DUP4"
    },
    "11474": {
      "op": "CODECOPY"
    },
    "11475": {
      "op": "DUP2"
    },
    "11476": {
      "op": "MLOAD"
    },
    "11477": {
      "op": "SWAP2"
    },
    "11478": {
      "op": "MSTORE"
    },
    "11479": {
      "offset": [
        6252,
        6260
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3C5D"
    },
    "11482": {
      "jump": "i",
      "offset": [
        6252,
        6272
      ],
      "op": "JUMP",
      "path": "25"
    },
    "11483": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        6252,
        6272
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11484": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7916,
        7927
      ],
      "op": "DUP1",
      "path": "25",
      "statement": 93
    },
    "11485": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7900
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x10"
    },
    "11487": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7901,
        7912
      ],
      "op": "DUP5",
      "path": "25"
    },
    "11488": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7901,
        7912
      ],
      "op": "DUP5",
      "path": "25"
    },
    "11489": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "11491": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "11492": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "DUP1",
      "path": "25"
    },
    "11493": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "DUP4",
      "path": "25"
    },
    "11494": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "DUP4",
      "path": "25"
    },
    "11495": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "DUP1",
      "path": "25"
    },
    "11496": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "DUP3",
      "path": "25"
    },
    "11497": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "DUP5",
      "path": "25"
    },
    "11498": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "CALLDATACOPY",
      "path": "25"
    },
    "11499": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "11500": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11501": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "11502": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "ADD",
      "path": "25"
    },
    "11503": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "11504": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "DUP6",
      "path": "25"
    },
    "11505": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "11506": {
      "op": "POP"
    },
    "11507": {
      "op": "POP"
    },
    "11508": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "11510": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "11511": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "11512": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "DUP4",
      "path": "25"
    },
    "11513": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11514": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "SUB",
      "path": "25"
    },
    "11515": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "11517": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "ADD",
      "path": "25"
    },
    "11518": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11519": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "11520": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "11521": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "DUP1",
      "path": "25"
    },
    "11522": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "11523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11527": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11529": {
      "op": "SHL"
    },
    "11530": {
      "op": "SUB"
    },
    "11531": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "11532": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11533": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "11534": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "AND",
      "path": "25"
    },
    "11535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11541": {
      "op": "SHL"
    },
    "11542": {
      "op": "SUB"
    },
    "11543": {
      "op": "NOT"
    },
    "11544": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11545": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "11546": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "AND",
      "path": "25"
    },
    "11547": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "11548": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11549": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "11550": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "OR",
      "path": "25"
    },
    "11551": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11552": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "11553": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "11554": {
      "op": "POP"
    },
    "11555": {
      "op": "POP"
    },
    "11556": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7947
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 94,
      "value": "0x11"
    },
    "11558": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "DUP1",
      "path": "25"
    },
    "11559": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "11560": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "11562": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11563": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "ADD",
      "path": "25"
    },
    "11564": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "DUP3",
      "path": "25"
    },
    "11565": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "11566": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "11568": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "11569": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11570": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "11571": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "11572": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2D60"
    },
    "11575": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11576": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0x31ECC21A745E3968A04E9570E4425BC18FA8019C68028196B546D1669C200C68"
    },
    "11609": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "ADD",
      "path": "25"
    },
    "11610": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7953,
        7964
      ],
      "op": "DUP5",
      "path": "25"
    },
    "11611": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7953,
        7964
      ],
      "op": "DUP5",
      "path": "25"
    },
    "11612": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4F26"
    },
    "11615": {
      "fn": "CryptoChampions.createAffinity",
      "jump": "i",
      "offset": [
        7937,
        7965
      ],
      "op": "JUMP",
      "path": "25"
    },
    "11616": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11617": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "POP",
      "path": "25"
    },
    "11618": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "POP",
      "path": "25"
    },
    "11619": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "POP",
      "path": "25"
    },
    "11620": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "POP",
      "path": "25"
    },
    "11621": {
      "fn": "CryptoChampions.createAffinity",
      "jump": "o",
      "offset": [
        7777,
        7972
      ],
      "op": "JUMP",
      "path": "25"
    },
    "11622": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28411,
        28567
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11623": {
      "offset": [
        6143,
        6168
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2D8F"
    },
    "11626": {
      "offset": [
        1639,
        1667
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0xAE0C232B87105E0A8134F8B92146DCD1D99373D32394BE9D70F700F90B3A3DB3"
    },
    "11659": {
      "offset": [
        6143,
        6151
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3C5D"
    },
    "11662": {
      "jump": "i",
      "offset": [
        6143,
        6168
      ],
      "op": "JUMP",
      "path": "25"
    },
    "11663": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        6143,
        6168
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11664": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28514,
        28538
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 95,
      "value": "0x16"
    },
    "11666": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28514,
        28560
      ],
      "op": "DUP1",
      "path": "25"
    },
    "11667": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28514,
        28560
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "11668": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28514,
        28560
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "11670": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28514,
        28560
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11671": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28514,
        28560
      ],
      "op": "ADD",
      "path": "25"
    },
    "11672": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28514,
        28560
      ],
      "op": "DUP3",
      "path": "25"
    },
    "11673": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28514,
        28560
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "11674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11676": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28514,
        28560
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "11677": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28514,
        28560
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11678": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28514,
        28560
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "11679": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28514,
        28560
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "11680": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28514,
        28560
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x18DA"
    },
    "11683": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28514,
        28560
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11684": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28514,
        28560
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0xD833147D7DC355BA459FC788F669E58CFAF9DC25DDCD0702E87D69C7B5124289"
    },
    "11717": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28514,
        28560
      ],
      "op": "ADD",
      "path": "25"
    },
    "11718": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28544,
        28559
      ],
      "op": "DUP4",
      "path": "25"
    },
    "11719": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28544,
        28559
      ],
      "op": "DUP4",
      "path": "25"
    },
    "11720": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28514,
        28560
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4F26"
    },
    "11723": {
      "fn": "CryptoChampions.declareRoundWinner",
      "jump": "i",
      "offset": [
        28514,
        28560
      ],
      "op": "JUMP",
      "path": "25"
    },
    "11724": {
      "offset": [
        1727,
        1776
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11725": {
      "offset": [
        1772,
        1776
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11727": {
      "offset": [
        1727,
        1776
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11728": {
      "fn": "CryptoChampions.declareRoundWinner",
      "jump": "o",
      "offset": [
        1727,
        1776
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11729": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11730": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4077,
        4085
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 96
    },
    "11731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11735": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11737": {
      "op": "SHL"
    },
    "11738": {
      "op": "SUB"
    },
    "11739": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4061,
        4085
      ],
      "op": "AND",
      "path": "5"
    },
    "11740": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4061,
        4073
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2DE3"
    },
    "11743": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4061,
        4071
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3531"
    },
    "11746": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        4061,
        4073
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11747": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4061,
        4073
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11752": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11754": {
      "op": "SHL"
    },
    "11755": {
      "op": "SUB"
    },
    "11756": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4061,
        4085
      ],
      "op": "AND",
      "path": "5"
    },
    "11757": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4061,
        4085
      ],
      "op": "EQ",
      "path": "5"
    },
    "11758": {
      "branch": 263,
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4061,
        4085
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "11759": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E29"
    },
    "11762": {
      "branch": 263,
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "11763": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11765": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11766": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11770": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11772": {
      "op": "SHL"
    },
    "11773": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11774": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11775": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "11777": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "ADD",
      "path": "5"
    },
    "11778": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11779": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11780": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "11782": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "ADD",
      "path": "5"
    },
    "11783": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11784": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11785": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "SUB",
      "path": "5"
    },
    "11786": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11787": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11788": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x29"
    },
    "11790": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11791": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11792": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "11794": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "ADD",
      "path": "5"
    },
    "11795": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11796": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x528F"
    },
    "11799": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x29"
    },
    "11801": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11802": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "11803": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11805": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "ADD",
      "path": "5"
    },
    "11806": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11807": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "POP",
      "path": "5"
    },
    "11808": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "POP",
      "path": "5"
    },
    "11809": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11811": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11812": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11813": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11814": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "SUB",
      "path": "5"
    },
    "11815": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11816": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "REVERT",
      "path": "5"
    },
    "11817": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11818": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4187,
        4195
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 97
    },
    "11819": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4160
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "11821": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "11823": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4161,
        4173
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E36"
    },
    "11826": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4161,
        4171
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3531"
    },
    "11829": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        4161,
        4173
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11830": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4161,
        4173
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11835": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11837": {
      "op": "SHL"
    },
    "11838": {
      "op": "SUB"
    },
    "11839": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11840": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11841": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "AND",
      "path": "5"
    },
    "11842": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11843": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11844": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "11846": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11847": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "DUP4",
      "path": "5"
    },
    "11848": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "ADD",
      "path": "5"
    },
    "11849": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "11850": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11851": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "11852": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11853": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11855": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11856": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11857": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "ADD",
      "path": "5"
    },
    "11858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11860": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11861": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11862": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "11863": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11864": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "DUP8",
      "path": "5"
    },
    "11865": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "AND",
      "path": "5"
    },
    "11866": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11867": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11868": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11869": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11870": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11871": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "11872": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11873": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11874": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "11875": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11876": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "11877": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11879": {
      "op": "NOT"
    },
    "11880": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "AND",
      "path": "5"
    },
    "11881": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "11882": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "11883": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "11884": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "11885": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11886": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "11887": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "OR",
      "path": "5"
    },
    "11888": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11889": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11890": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "11891": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4225,
        4237
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 98,
      "value": "0x2E7A"
    },
    "11894": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4225,
        4235
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3531"
    },
    "11897": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        4225,
        4237
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11898": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4225,
        4237
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11903": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11905": {
      "op": "SHL"
    },
    "11906": {
      "op": "SUB"
    },
    "11907": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "AND",
      "path": "5"
    },
    "11908": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "11941": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4249,
        4257
      ],
      "op": "DUP4",
      "path": "5"
    },
    "11942": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11944": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11945": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11946": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11947": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "11948": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "11949": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11950": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11951": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "11953": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "ADD",
      "path": "5"
    },
    "11954": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11955": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "POP",
      "path": "5"
    },
    "11956": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "POP",
      "path": "5"
    },
    "11957": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11959": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11960": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11961": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11962": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "SUB",
      "path": "5"
    },
    "11963": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11964": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "LOG3",
      "path": "5"
    },
    "11965": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "POP",
      "path": "5"
    },
    "11966": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "POP",
      "path": "5"
    },
    "11967": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "o",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11968": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18496,
        18895
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11969": {
      "offset": [
        6252,
        6272
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2ED7"
    },
    "11972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11974": {
      "op": "DUP1"
    },
    "11975": {
      "op": "MLOAD"
    },
    "11976": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11978": {
      "op": "PUSH2",
      "value": "0x5201"
    },
    "11981": {
      "op": "DUP4"
    },
    "11982": {
      "op": "CODECOPY"
    },
    "11983": {
      "op": "DUP2"
    },
    "11984": {
      "op": "MLOAD"
    },
    "11985": {
      "op": "SWAP2"
    },
    "11986": {
      "op": "MSTORE"
    },
    "11987": {
      "offset": [
        6252,
        6260
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3C5D"
    },
    "11990": {
      "jump": "i",
      "offset": [
        6252,
        6272
      ],
      "op": "JUMP",
      "path": "25"
    },
    "11991": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        6252,
        6272
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11992": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18579,
        18580
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 99,
      "value": "0x0"
    },
    "11994": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18564,
        18576
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "11996": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18564,
        18576
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "11997": {
      "branch": 237,
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18564,
        18580
      ],
      "op": "GT",
      "path": "25"
    },
    "11998": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18556,
        18581
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2EE6"
    },
    "12001": {
      "branch": 237,
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18556,
        18581
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "12002": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18556,
        18581
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "12004": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18556,
        18581
      ],
      "op": "DUP1",
      "path": "25"
    },
    "12005": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18556,
        18581
      ],
      "op": "REVERT",
      "path": "25"
    },
    "12006": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18556,
        18581
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12007": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18644,
        18645
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "12009": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18627,
        18777
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12010": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "12012": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18647,
        18648
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12013": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18647,
        18672
      ],
      "op": "GT",
      "path": "25"
    },
    "12014": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18627,
        18777
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2F19"
    },
    "12017": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18627,
        18777
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "12018": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18697,
        18713
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "12020": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18697,
        18713
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12021": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18697,
        18713
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12022": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18697,
        18713
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "12023": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18697,
        18710
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x9"
    },
    "12025": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18697,
        18713
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "12027": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18697,
        18713
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "12028": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18697,
        18713
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "12030": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18697,
        18713
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "12031": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18697,
        18713
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "12032": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18697,
        18719
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "12033": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18697,
        18719
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "12035": {
      "branch": 238,
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18697,
        18719
      ],
      "op": "AND",
      "path": "25"
    },
    "12036": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18693,
        18767
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "12037": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18693,
        18767
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2F11"
    },
    "12040": {
      "branch": 238,
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18693,
        18767
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "12041": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18739,
        18752
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 100,
      "value": "0x2F11"
    },
    "12044": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18750,
        18751
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12045": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18739,
        18749
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x468C"
    },
    "12048": {
      "fn": "CryptoChampions.burnElders",
      "jump": "i",
      "offset": [
        18739,
        18752
      ],
      "op": "JUMP",
      "path": "25"
    },
    "12049": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18739,
        18752
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12050": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18674,
        18677
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 101,
      "value": "0x1"
    },
    "12052": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18674,
        18677
      ],
      "op": "ADD",
      "path": "25"
    },
    "12053": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18627,
        18777
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2EE9"
    },
    "12056": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18627,
        18777
      ],
      "op": "JUMP",
      "path": "25"
    },
    "12057": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18627,
        18777
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12058": {
      "op": "POP"
    },
    "12059": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18833,
        18845
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 102,
      "value": "0xF"
    },
    "12061": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18833,
        18845
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "12062": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18833,
        18852
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2F28"
    },
    "12065": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18833,
        18852
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "12066": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18850,
        18851
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "12068": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18833,
        18849
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34D7"
    },
    "12071": {
      "fn": "CryptoChampions.burnElders",
      "jump": "i",
      "offset": [
        18833,
        18852
      ],
      "op": "JUMP",
      "path": "25"
    },
    "12072": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18833,
        18852
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12073": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18818,
        18830
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xF"
    },
    "12075": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18818,
        18852
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "12076": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18868,
        18888
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 103,
      "value": "0x40"
    },
    "12078": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18868,
        18888
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "12079": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18868,
        18888
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0x143B2C36FAC98F86168603D28D499BDE9CE0367D41E111CEF9F2ECBC9EEABFC"
    },
    "12112": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18868,
        18888
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "12113": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18868,
        18888
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "12115": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18868,
        18888
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "12116": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18868,
        18888
      ],
      "op": "LOG1",
      "path": "25"
    },
    "12117": {
      "fn": "CryptoChampions.burnElders",
      "jump": "o",
      "offset": [
        18496,
        18895
      ],
      "op": "JUMP",
      "path": "25"
    },
    "12118": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29762,
        29996
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12119": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29901,
        29918
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "12121": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29928,
        29989
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 104,
      "value": "0x2D60"
    },
    "12124": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29945,
        29949
      ],
      "op": "DUP5",
      "path": "25"
    },
    "12125": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29951,
        29953
      ],
      "op": "DUP5",
      "path": "25"
    },
    "12126": {
      "offset": [
        1766,
        1767
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "12128": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29976,
        29982
      ],
      "op": "DUP6",
      "path": "25"
    },
    "12129": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29984,
        29988
      ],
      "op": "DUP6",
      "path": "25"
    },
    "12130": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        29928,
        29944
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3070"
    },
    "12133": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "jump": "i",
      "offset": [
        29928,
        29989
      ],
      "op": "JUMP",
      "path": "25"
    },
    "12134": {
      "offset": [
        2241,
        2272
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12135": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2241,
        2272
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "12137": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2241,
        2272
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "12138": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "offset": [
        2241,
        2272
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12139": {
      "fn": "CryptoChampions.delegatedTransferInGameTokens",
      "jump": "o",
      "offset": [
        2241,
        2272
      ],
      "op": "JUMP",
      "path": "25"
    },
    "12140": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12141": {
      "offset": [
        6252,
        6272
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2F83"
    },
    "12144": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12146": {
      "op": "DUP1"
    },
    "12147": {
      "op": "MLOAD"
    },
    "12148": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12150": {
      "op": "PUSH2",
      "value": "0x5201"
    },
    "12153": {
      "op": "DUP4"
    },
    "12154": {
      "op": "CODECOPY"
    },
    "12155": {
      "op": "DUP2"
    },
    "12156": {
      "op": "MLOAD"
    },
    "12157": {
      "op": "SWAP2"
    },
    "12158": {
      "op": "MSTORE"
    },
    "12159": {
      "offset": [
        6252,
        6260
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3C5D"
    },
    "12162": {
      "jump": "i",
      "offset": [
        6252,
        6272
      ],
      "op": "JUMP",
      "path": "25"
    },
    "12163": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6252,
        6272
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12164": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7228
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 105,
      "value": "0x6"
    },
    "12166": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "DUP1",
      "path": "25"
    },
    "12167": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "12168": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7231,
        7236
      ],
      "op": "DUP3",
      "path": "25"
    },
    "12169": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7231,
        7236
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "12170": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7228
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "12171": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12173": {
      "op": "NOT"
    },
    "12174": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "AND",
      "path": "25"
    },
    "12175": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "12177": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7231,
        7236
      ],
      "op": "DUP4",
      "path": "25"
    },
    "12178": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12179": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12180": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "GT",
      "path": "25"
    },
    "12181": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "12182": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2F9B"
    },
    "12185": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "12186": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "INVALID",
      "path": "25"
    },
    "12187": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12188": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "MUL",
      "path": "25"
    },
    "12189": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "OR",
      "path": "25"
    },
    "12190": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "12191": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "12192": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "POP",
      "path": "25"
    },
    "12193": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "POP",
      "path": "25"
    },
    "12194": {
      "fn": "CryptoChampions.setPhase",
      "jump": "o",
      "offset": [
        7156,
        7243
      ],
      "op": "JUMP",
      "path": "25"
    },
    "12195": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12196": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3318,
        3325
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12198": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 106
    },
    "12199": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12200": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12201": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12203": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12204": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12205": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12206": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12208": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12209": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "12210": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3373
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A4"
    },
    "12213": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3373
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12214": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3371
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4728"
    },
    "12217": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "i",
      "offset": [
        3344,
        3373
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12218": {
      "offset": [
        2586,
        2617
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12219": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA"
    },
    "12221": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "12222": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12223": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "o",
      "offset": [
        2586,
        2617
      ],
      "op": "JUMP",
      "path": "25"
    },
    "12224": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12225": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5199
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 107,
      "value": "0x0"
    },
    "12227": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12228": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12229": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12230": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12232": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12233": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12234": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12235": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12237": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12238": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "12239": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5215
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "12241": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5215
      ],
      "op": "ADD",
      "path": "0"
    },
    "12242": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5215
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "12243": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5185,
        5230
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDE"
    },
    "12246": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5185,
        5230
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12247": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5217,
        5229
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E69"
    },
    "12250": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5217,
        5227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3531"
    },
    "12253": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5217,
        5229
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12254": {
      "branch": 254,
      "fn": "AccessControl.revokeRole",
      "offset": [
        5185,
        5230
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12255": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F0A"
    },
    "12258": {
      "branch": 254,
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12259": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12261": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12262": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12266": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12268": {
      "op": "SHL"
    },
    "12269": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12270": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12271": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "12273": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "ADD",
      "path": "0"
    },
    "12274": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12275": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12276": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12278": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "ADD",
      "path": "0"
    },
    "12279": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12280": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12281": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "SUB",
      "path": "0"
    },
    "12282": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12283": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12284": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x30"
    },
    "12286": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12287": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12288": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12290": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "ADD",
      "path": "0"
    },
    "12291": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12292": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x517A"
    },
    "12295": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x30"
    },
    "12297": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12298": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "12299": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12301": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "ADD",
      "path": "0"
    },
    "12302": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12303": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "POP",
      "path": "0"
    },
    "12304": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "POP",
      "path": "0"
    },
    "12305": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12307": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12308": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12309": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12310": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "SUB",
      "path": "0"
    },
    "12311": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12312": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "REVERT",
      "path": "0"
    },
    "12313": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12314": {
      "offset": [
        6252,
        6272
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3030"
    },
    "12317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12319": {
      "op": "DUP1"
    },
    "12320": {
      "op": "MLOAD"
    },
    "12321": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12323": {
      "op": "PUSH2",
      "value": "0x5201"
    },
    "12326": {
      "op": "DUP4"
    },
    "12327": {
      "op": "CODECOPY"
    },
    "12328": {
      "op": "DUP2"
    },
    "12329": {
      "op": "MLOAD"
    },
    "12330": {
      "op": "SWAP2"
    },
    "12331": {
      "op": "MSTORE"
    },
    "12332": {
      "offset": [
        6252,
        6260
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3C5D"
    },
    "12335": {
      "jump": "i",
      "offset": [
        6252,
        6272
      ],
      "op": "JUMP",
      "path": "25"
    },
    "12336": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        6252,
        6272
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12337": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8198,
        8212
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 108,
      "value": "0xE"
    },
    "12339": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8198,
        8220
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "12340": {
      "fn": "CryptoChampions.setElderMintPrice",
      "jump": "o",
      "offset": [
        8118,
        8227
      ],
      "op": "JUMP",
      "path": "25"
    },
    "12341": {
      "offset": [
        3330,
        3356
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12342": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x11"
    },
    "12344": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12345": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12346": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "12347": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12348": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "LT",
      "path": "25"
    },
    "12349": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2A06"
    },
    "12352": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "12353": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "INVALID",
      "path": "25"
    },
    "12354": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12361": {
      "op": "SHL"
    },
    "12362": {
      "op": "SUB"
    },
    "12363": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 109
    },
    "12364": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12365": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "AND",
      "path": "5"
    },
    "12366": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4431,
        4435
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12368": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12369": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12370": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12371": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4472
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "12373": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12375": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12376": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12377": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12378": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12380": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12381": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12382": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12383": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "12384": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12385": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "12386": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "AND",
      "path": "5"
    },
    "12387": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12388": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12389": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12390": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12391": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12392": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12393": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12394": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12395": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "12397": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "AND",
      "path": "5"
    },
    "12398": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12399": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "o",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12400": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12405": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12407": {
      "op": "SHL"
    },
    "12408": {
      "op": "SUB"
    },
    "12409": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4780,
        4796
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 110
    },
    "12410": {
      "branch": 264,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4780,
        4796
      ],
      "op": "AND",
      "path": "5"
    },
    "12411": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30B5"
    },
    "12414": {
      "branch": 264,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12415": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12417": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12418": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12422": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12424": {
      "op": "SHL"
    },
    "12425": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12426": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12427": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "12429": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "ADD",
      "path": "5"
    },
    "12430": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12431": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12432": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12434": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "ADD",
      "path": "5"
    },
    "12435": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12436": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12437": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "SUB",
      "path": "5"
    },
    "12438": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12439": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12440": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x25"
    },
    "12442": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12443": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12444": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12446": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "ADD",
      "path": "5"
    },
    "12447": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12448": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x51AA"
    },
    "12451": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x25"
    },
    "12453": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12454": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "12455": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12457": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "ADD",
      "path": "5"
    },
    "12458": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12459": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "POP",
      "path": "5"
    },
    "12460": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "POP",
      "path": "5"
    },
    "12461": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12463": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12464": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12465": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12466": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "SUB",
      "path": "5"
    },
    "12467": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12468": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "REVERT",
      "path": "5"
    },
    "12469": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12470": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4877,
        4889
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 111,
      "value": "0x30BD"
    },
    "12473": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4877,
        4887
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3531"
    },
    "12476": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4877,
        4889
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12477": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4877,
        4889
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12482": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12484": {
      "op": "SHL"
    },
    "12485": {
      "op": "SUB"
    },
    "12486": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4889
      ],
      "op": "AND",
      "path": "5"
    },
    "12487": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4873
      ],
      "op": "DUP6",
      "path": "5"
    },
    "12488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12492": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12494": {
      "op": "SHL"
    },
    "12495": {
      "op": "SUB"
    },
    "12496": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4889
      ],
      "op": "AND",
      "path": "5"
    },
    "12497": {
      "branch": 265,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4889
      ],
      "op": "EQ",
      "path": "5"
    },
    "12498": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4929
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12499": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4929
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30E3"
    },
    "12502": {
      "branch": 265,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4929
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12503": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4929
      ],
      "op": "POP",
      "path": "5"
    },
    "12504": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4893,
        4929
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30E3"
    },
    "12507": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4910,
        4914
      ],
      "op": "DUP6",
      "path": "5"
    },
    "12508": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4916,
        4928
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1ADE"
    },
    "12511": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4916,
        4926
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3531"
    },
    "12514": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4916,
        4928
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12515": {
      "branch": 266,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4893,
        4929
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12516": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x311E"
    },
    "12519": {
      "branch": 266,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12520": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12522": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12523": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12527": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12529": {
      "op": "SHL"
    },
    "12530": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12531": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12532": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "12534": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "ADD",
      "path": "5"
    },
    "12535": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12536": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12537": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12539": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "ADD",
      "path": "5"
    },
    "12540": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12541": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12542": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "SUB",
      "path": "5"
    },
    "12543": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12544": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12545": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x29"
    },
    "12547": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12548": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12549": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12551": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "ADD",
      "path": "5"
    },
    "12552": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12553": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5151"
    },
    "12556": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x29"
    },
    "12558": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12559": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "12560": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12562": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "ADD",
      "path": "5"
    },
    "12563": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12564": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "POP",
      "path": "5"
    },
    "12565": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "POP",
      "path": "5"
    },
    "12566": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12568": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12569": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12570": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12571": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "SUB",
      "path": "5"
    },
    "12572": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12573": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "REVERT",
      "path": "5"
    },
    "12574": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12575": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5007,
        5023
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12577": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5026,
        5038
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3128"
    },
    "12580": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5026,
        5036
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3531"
    },
    "12583": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        5026,
        5038
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12584": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5026,
        5038
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12585": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5007,
        5038
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12586": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5007,
        5038
      ],
      "op": "POP",
      "path": "5"
    },
    "12587": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5049,
        5145
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 112,
      "value": "0x3148"
    },
    "12590": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5070,
        5078
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12591": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5080,
        5084
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12592": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5086,
        5088
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12593": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5090,
        5111
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3139"
    },
    "12596": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5108,
        5110
      ],
      "op": "DUP9",
      "path": "5"
    },
    "12597": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5090,
        5107
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4733"
    },
    "12600": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        5090,
        5111
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12601": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5090,
        5111
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12602": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5113,
        5138
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3142"
    },
    "12605": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5131,
        5137
      ],
      "op": "DUP9",
      "path": "5"
    },
    "12606": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5113,
        5130
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4733"
    },
    "12609": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        5113,
        5138
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12610": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5113,
        5138
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12611": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5140,
        5144
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12612": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5049,
        5069
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x383E"
    },
    "12615": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        5049,
        5145
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12616": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5049,
        5145
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12617": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 113,
      "value": "0x318F"
    },
    "12620": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5202,
        5208
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12621": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12623": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12624": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12625": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "12627": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "ADD",
      "path": "5"
    },
    "12628": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12630": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12631": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12632": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2A"
    },
    "12634": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12635": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12636": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12638": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "ADD",
      "path": "5"
    },
    "12639": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5244"
    },
    "12642": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2A"
    },
    "12644": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12645": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "12646": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12648": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12649": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12650": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12651": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5187
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "12653": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12655": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12656": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12657": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12658": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12660": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12661": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12662": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12669": {
      "op": "SHL"
    },
    "12670": {
      "op": "SUB"
    },
    "12671": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "DUP14",
      "path": "5"
    },
    "12672": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "AND",
      "path": "5"
    },
    "12673": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "DUP5",
      "path": "5"
    },
    "12674": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12675": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12676": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12677": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12678": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12679": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12680": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12681": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12682": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12683": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5201
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3950"
    },
    "12686": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        5178,
        5255
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12687": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12688": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12690": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "DUP6",
      "path": "5"
    },
    "12691": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12692": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12693": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5165
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "12695": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12697": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12698": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12699": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12700": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12702": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12703": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12704": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12709": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12711": {
      "op": "SHL"
    },
    "12712": {
      "op": "SUB"
    },
    "12713": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "DUP12",
      "path": "5"
    },
    "12714": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12715": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "AND",
      "path": "5"
    },
    "12716": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "DUP6",
      "path": "5"
    },
    "12717": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12718": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12719": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12720": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12721": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12722": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12723": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5255
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "12724": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5255
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12725": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5255
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "12726": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5255
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "12727": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5302
      ],
      "op": "DUP8",
      "path": "5",
      "statement": 114
    },
    "12728": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5302
      ],
      "op": "AND",
      "path": "5"
    },
    "12729": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5302
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12730": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5302
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12731": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5302
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12732": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5302
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12733": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5314
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x31C6"
    },
    "12736": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5314
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12737": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5307,
        5313
      ],
      "op": "DUP5",
      "path": "5"
    },
    "12738": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5306
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34D7"
    },
    "12741": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        5285,
        5314
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12742": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5314
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12743": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12745": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "DUP6",
      "path": "5"
    },
    "12746": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12747": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12748": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5274
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "12750": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12752": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12753": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12754": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12755": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12757": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12758": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12759": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12764": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12766": {
      "op": "SHL"
    },
    "12767": {
      "op": "SUB"
    },
    "12768": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12769": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "DUP12",
      "path": "5"
    },
    "12770": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "AND",
      "path": "5"
    },
    "12771": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12772": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "DUP7",
      "path": "5"
    },
    "12773": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12774": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12775": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "DUP5",
      "path": "5"
    },
    "12776": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12777": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "12778": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12779": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12780": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12781": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5314
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "12782": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5314
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12783": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5314
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "12784": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5314
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "12785": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 115
    },
    "12786": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12787": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP9",
      "path": "5"
    },
    "12788": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12789": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12790": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12791": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12792": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "ADD",
      "path": "5"
    },
    "12793": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12794": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12795": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12796": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12797": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12798": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP11",
      "path": "5"
    },
    "12799": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP5",
      "path": "5"
    },
    "12800": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "AND",
      "path": "5"
    },
    "12801": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "12802": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP7",
      "path": "5"
    },
    "12803": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "AND",
      "path": "5"
    },
    "12804": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12805": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "12838": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12839": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12840": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12841": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12842": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SUB",
      "path": "5"
    },
    "12843": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "ADD",
      "path": "5"
    },
    "12844": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12845": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "LOG4",
      "path": "5"
    },
    "12846": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5387,
        5455
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 116,
      "value": "0x1D26"
    },
    "12849": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5418,
        5426
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12850": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5428,
        5432
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12851": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5434,
        5436
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12852": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5438,
        5440
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12853": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5442,
        5448
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12854": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5450,
        5454
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12855": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5387,
        5417
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4777"
    },
    "12858": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        5387,
        5455
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12859": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12860": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20932,
        20939
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "12862": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20906,
        20913
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12863": {
      "offset": [
        1766,
        1767
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "12865": {
      "offset": [
        5739,
        5746
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12866": {
      "offset": [
        5739,
        5768
      ],
      "op": "GT",
      "path": "25"
    },
    "12867": {
      "offset": [
        5739,
        5803
      ],
      "op": "DUP1",
      "path": "25"
    },
    "12868": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        5739,
        5803
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "12869": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        5739,
        5803
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x324F"
    },
    "12872": {
      "offset": [
        5739,
        5803
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "12873": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        5739,
        5803
      ],
      "op": "POP",
      "path": "25"
    },
    "12874": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "12876": {
      "offset": [
        5772,
        5779
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12877": {
      "offset": [
        5772,
        5803
      ],
      "op": "GT",
      "path": "25"
    },
    "12878": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        5772,
        5803
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "12879": {
      "offset": [
        5739,
        5803
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12880": {
      "offset": [
        5731,
        5804
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3258"
    },
    "12883": {
      "offset": [
        5731,
        5804
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "12884": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        5731,
        5804
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "12886": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        5731,
        5804
      ],
      "op": "DUP1",
      "path": "25"
    },
    "12887": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        5731,
        5804
      ],
      "op": "REVERT",
      "path": "25"
    },
    "12888": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        5731,
        5804
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12889": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20972,
        20984
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 117,
      "value": "0xF"
    },
    "12891": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20972,
        20984
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "12892": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20963,
        20968
      ],
      "op": "DUP5",
      "path": "25"
    },
    "12893": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20963,
        20984
      ],
      "op": "GT",
      "path": "25"
    },
    "12894": {
      "branch": 239,
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20963,
        20984
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "12895": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20955,
        20985
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3267"
    },
    "12898": {
      "branch": 239,
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20955,
        20985
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "12899": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20955,
        20985
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "12901": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20955,
        20985
      ],
      "op": "DUP1",
      "path": "25"
    },
    "12902": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20955,
        20985
      ],
      "op": "REVERT",
      "path": "25"
    },
    "12903": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20955,
        20985
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12904": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21043,
        21061
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "12906": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21064,
        21088
      ],
      "op": "DUP5",
      "path": "25"
    },
    "12907": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21064,
        21088
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12908": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21064,
        21088
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "12909": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21064,
        21081
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xD"
    },
    "12911": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21064,
        21088
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "12913": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21064,
        21088
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "12914": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21064,
        21088
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12915": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21064,
        21088
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "12916": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21064,
        21088
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "12918": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21064,
        21088
      ],
      "op": "DUP1",
      "path": "25"
    },
    "12919": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21064,
        21088
      ],
      "op": "DUP4",
      "path": "25"
    },
    "12920": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21064,
        21088
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "12921": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21064,
        21097
      ],
      "op": "DUP7",
      "path": "25"
    },
    "12922": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21064,
        21097
      ],
      "op": "DUP5",
      "path": "25"
    },
    "12923": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21064,
        21097
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "12924": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21064,
        21097
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "12925": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21064,
        21097
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "12926": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21064,
        21097
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "12927": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21064,
        21097
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12928": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21064,
        21097
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "12929": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21064,
        21097
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "12930": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21064,
        21104
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x328C"
    },
    "12933": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21064,
        21104
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "12934": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21102,
        21103
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "12936": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21064,
        21101
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34D7"
    },
    "12939": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "jump": "i",
      "offset": [
        21064,
        21104
      ],
      "op": "JUMP",
      "path": "25"
    },
    "12940": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21064,
        21104
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12941": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21043,
        21104
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "12942": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21043,
        21104
      ],
      "op": "POP",
      "path": "25"
    },
    "12943": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21122,
        21147
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 118,
      "value": "0x3297"
    },
    "12946": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21136,
        21146
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12947": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21122,
        21135
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x48E8"
    },
    "12950": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "jump": "i",
      "offset": [
        21122,
        21147
      ],
      "op": "JUMP",
      "path": "25"
    },
    "12951": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21122,
        21147
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12952": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21115,
        21147
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "12953": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20774,
        21154
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "12954": {
      "op": "POP"
    },
    "12955": {
      "op": "POP"
    },
    "12956": {
      "op": "POP"
    },
    "12957": {
      "op": "POP"
    },
    "12958": {
      "op": "POP"
    },
    "12959": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "jump": "o",
      "offset": [
        20774,
        21154
      ],
      "op": "JUMP",
      "path": "25"
    },
    "12960": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28679,
        29086
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12961": {
      "offset": [
        6252,
        6272
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x32B7"
    },
    "12964": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12966": {
      "op": "DUP1"
    },
    "12967": {
      "op": "MLOAD"
    },
    "12968": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12970": {
      "op": "PUSH2",
      "value": "0x5201"
    },
    "12973": {
      "op": "DUP4"
    },
    "12974": {
      "op": "CODECOPY"
    },
    "12975": {
      "op": "DUP2"
    },
    "12976": {
      "op": "MLOAD"
    },
    "12977": {
      "op": "SWAP2"
    },
    "12978": {
      "op": "MSTORE"
    },
    "12979": {
      "offset": [
        6252,
        6260
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3C5D"
    },
    "12982": {
      "jump": "i",
      "offset": [
        6252,
        6272
      ],
      "op": "JUMP",
      "path": "25"
    },
    "12983": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        6252,
        6272
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12984": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28804
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x17"
    },
    "12986": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28804
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "12987": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28816,
        28829
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "12989": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28816,
        28829
      ],
      "op": "DUP1",
      "path": "25"
    },
    "12990": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28816,
        28829
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "12991": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28816,
        28829
      ],
      "op": "DUP1",
      "path": "25"
    },
    "12992": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28816,
        28829
      ],
      "op": "DUP3",
      "path": "25"
    },
    "12993": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28816,
        28829
      ],
      "op": "ADD",
      "path": "25"
    },
    "12994": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28816,
        28829
      ],
      "op": "DUP3",
      "path": "25"
    },
    "12995": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28816,
        28829
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "12996": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28816,
        28829
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA"
    },
    "12998": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28816,
        28829
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12999": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28816,
        28829
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "13000": {
      "op": "PUSH10",
      "value": "0x50524943455F57415253"
    },
    "13011": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "13013": {
      "op": "SHL"
    },
    "13014": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28816,
        28829
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "13016": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28816,
        28829
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13017": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28816,
        28829
      ],
      "op": "DUP4",
      "path": "25"
    },
    "13018": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28816,
        28829
      ],
      "op": "ADD",
      "path": "25"
    },
    "13019": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28816,
        28829
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "13020": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28816,
        28829
      ],
      "op": "DUP3",
      "path": "25"
    },
    "13021": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28816,
        28829
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "13022": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "13023": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "13024": {
      "op": "PUSH4",
      "value": "0x6CADCD79"
    },
    "13029": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "13031": {
      "op": "SHL"
    },
    "13032": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13033": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "13034": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "13036": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13037": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "ADD",
      "path": "25"
    },
    "13038": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "13039": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP5",
      "path": "25"
    },
    "13040": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "13041": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP3",
      "path": "25"
    },
    "13042": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "13043": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x24"
    },
    "13045": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP3",
      "path": "25"
    },
    "13046": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "ADD",
      "path": "25"
    },
    "13047": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "13048": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP3",
      "path": "25"
    },
    "13049": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "13050": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28746,
        28777
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13052": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28746,
        28777
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "13053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13057": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13059": {
      "op": "SHL"
    },
    "13060": {
      "op": "SUB"
    },
    "13061": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28804
      ],
      "op": "AND",
      "path": "25"
    },
    "13062": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28804
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "13063": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28815
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xD95B9AF2"
    },
    "13068": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28815
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "13069": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28816,
        28829
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "13070": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "13071": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "13072": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP4",
      "path": "25"
    },
    "13073": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "13074": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x44"
    },
    "13076": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "13077": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "13078": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "ADD",
      "path": "25"
    },
    "13079": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "13080": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28816,
        28829
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "13081": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13082": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP4",
      "path": "25"
    },
    "13083": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28816,
        28829
      ],
      "op": "DUP4",
      "path": "25"
    },
    "13084": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28746,
        28777
      ],
      "op": "DUP12",
      "path": "25"
    },
    "13085": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13086": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP4",
      "path": "25"
    },
    "13087": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13088": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "LT",
      "path": "25"
    },
    "13089": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13090": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3335"
    },
    "13093": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "13094": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13095": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13096": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "ADD",
      "path": "25"
    },
    "13097": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "13098": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP4",
      "path": "25"
    },
    "13099": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP3",
      "path": "25"
    },
    "13100": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "ADD",
      "path": "25"
    },
    "13101": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "13102": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "13104": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "ADD",
      "path": "25"
    },
    "13105": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x331D"
    },
    "13108": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "JUMP",
      "path": "25"
    },
    "13109": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13110": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "POP",
      "path": "25"
    },
    "13111": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "POP",
      "path": "25"
    },
    "13112": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "POP",
      "path": "25"
    },
    "13113": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "POP",
      "path": "25"
    },
    "13114": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "13115": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "POP",
      "path": "25"
    },
    "13116": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "13117": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13118": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "ADD",
      "path": "25"
    },
    "13119": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "13120": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "13122": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "AND",
      "path": "25"
    },
    "13123": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13124": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13125": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3362"
    },
    "13128": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "13129": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13130": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP3",
      "path": "25"
    },
    "13131": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "SUB",
      "path": "25"
    },
    "13132": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13133": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "13134": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "13136": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP4",
      "path": "25"
    },
    "13137": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "13139": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "SUB",
      "path": "25"
    },
    "13140": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "13143": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "EXP",
      "path": "25"
    },
    "13144": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "SUB",
      "path": "25"
    },
    "13145": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "NOT",
      "path": "25"
    },
    "13146": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "AND",
      "path": "25"
    },
    "13147": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13148": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "13149": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "13151": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "ADD",
      "path": "25"
    },
    "13152": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "13153": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "POP",
      "path": "25"
    },
    "13154": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13155": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "POP",
      "path": "25"
    },
    "13156": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "13157": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "POP",
      "path": "25"
    },
    "13158": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "POP",
      "path": "25"
    },
    "13159": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "POP",
      "path": "25"
    },
    "13160": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "13162": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "13164": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "13165": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13166": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP4",
      "path": "25"
    },
    "13167": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "SUB",
      "path": "25"
    },
    "13168": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13169": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13171": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP8",
      "path": "25"
    },
    "13172": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13173": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "EXTCODESIZE",
      "path": "25"
    },
    "13174": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13175": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13176": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13177": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3381"
    },
    "13180": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "13181": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13183": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13184": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "REVERT",
      "path": "25"
    },
    "13185": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13186": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "POP",
      "path": "25"
    },
    "13187": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "GAS",
      "path": "25"
    },
    "13188": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "CALL",
      "path": "25"
    },
    "13189": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13190": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13191": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13192": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3395"
    },
    "13195": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "13196": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "13197": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13199": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13200": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "13201": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "13202": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13204": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "REVERT",
      "path": "25"
    },
    "13205": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13206": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "POP",
      "path": "25"
    },
    "13207": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "POP",
      "path": "25"
    },
    "13208": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "POP",
      "path": "25"
    },
    "13209": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "POP",
      "path": "25"
    },
    "13210": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "13212": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "13213": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "13214": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "13216": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13217": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "LT",
      "path": "25"
    },
    "13218": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13219": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x33AB"
    },
    "13222": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "13223": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13225": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13226": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "REVERT",
      "path": "25"
    },
    "13227": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13228": {
      "op": "POP"
    },
    "13229": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "13230": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "13232": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13233": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "13234": {
      "op": "PUSH4",
      "value": "0x72D7F665"
    },
    "13239": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "13241": {
      "op": "SHL"
    },
    "13242": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13243": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "13244": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28988,
        28992
      ],
      "op": "ADDRESS",
      "path": "25"
    },
    "13245": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "13247": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "DUP3",
      "path": "25"
    },
    "13248": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "ADD",
      "path": "25"
    },
    "13249": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "13250": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "13251": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "13252": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "13253": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "13254": {
      "op": "POP"
    },
    "13255": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "DUP3",
      "path": "25"
    },
    "13256": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "13257": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28840,
        28873
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13259": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28840,
        28873
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "13260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13264": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13266": {
      "op": "SHL"
    },
    "13267": {
      "op": "SUB"
    },
    "13268": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28979
      ],
      "op": "DUP5",
      "path": "25"
    },
    "13269": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28979
      ],
      "op": "AND",
      "path": "25"
    },
    "13270": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28979
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "13271": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28979
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xE5AFECCA"
    },
    "13276": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28979
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "13277": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x24"
    },
    "13279": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13280": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "DUP3",
      "path": "25"
    },
    "13281": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "ADD",
      "path": "25"
    },
    "13282": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "13283": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "13285": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28780,
        28830
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "13286": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "13287": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "13288": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "13289": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "DUP3",
      "path": "25"
    },
    "13290": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "13291": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "SUB",
      "path": "25"
    },
    "13292": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "ADD",
      "path": "25"
    },
    "13293": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13294": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28840,
        28873
      ],
      "op": "DUP8",
      "path": "25"
    },
    "13295": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28979
      ],
      "op": "DUP8",
      "path": "25"
    },
    "13296": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13297": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "EXTCODESIZE",
      "path": "25"
    },
    "13298": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13299": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13300": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13301": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x33FD"
    },
    "13304": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "13305": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13307": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13308": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "REVERT",
      "path": "25"
    },
    "13309": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13310": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "POP",
      "path": "25"
    },
    "13311": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "GAS",
      "path": "25"
    },
    "13312": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "CALL",
      "path": "25"
    },
    "13313": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13314": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13315": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13316": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3411"
    },
    "13319": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "13320": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "13321": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13323": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13324": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "13325": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "13326": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13328": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "REVERT",
      "path": "25"
    },
    "13329": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13330": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "POP",
      "path": "25"
    },
    "13331": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "POP",
      "path": "25"
    },
    "13332": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "POP",
      "path": "25"
    },
    "13333": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "POP",
      "path": "25"
    },
    "13334": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "13336": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "13337": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "13338": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "13340": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13341": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "LT",
      "path": "25"
    },
    "13342": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13343": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3427"
    },
    "13346": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "13347": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13349": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13350": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "REVERT",
      "path": "25"
    },
    "13351": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13352": {
      "op": "POP"
    },
    "13353": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "13354": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "13355": {
      "op": "POP"
    },
    "13356": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29004,
        29049
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 119,
      "value": "0x3455"
    },
    "13359": {
      "offset": [
        1639,
        1667
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0xAE0C232B87105E0A8134F8B92146DCD1D99373D32394BE9D70F700F90B3A3DB3"
    },
    "13392": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28948,
        28994
      ],
      "op": "DUP3",
      "path": "25"
    },
    "13393": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29004,
        29013
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1E4B"
    },
    "13396": {
      "fn": "CryptoChampions.startNewPriceGame",
      "jump": "i",
      "offset": [
        29004,
        29049
      ],
      "op": "JUMP",
      "path": "25"
    },
    "13397": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29004,
        29049
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13398": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29067
      ],
      "op": "DUP1",
      "path": "25",
      "statement": 120
    },
    "13399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13405": {
      "op": "SHL"
    },
    "13406": {
      "op": "SUB"
    },
    "13407": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29077
      ],
      "op": "AND",
      "path": "25"
    },
    "13408": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29077
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xD65AB5F2"
    },
    "13413": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "13415": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "13416": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13417": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xFFFFFFFF"
    },
    "13422": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "AND",
      "path": "25"
    },
    "13423": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xE0"
    },
    "13425": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "SHL",
      "path": "25"
    },
    "13426": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13427": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "13428": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "13430": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "ADD",
      "path": "25"
    },
    "13431": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13433": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "13435": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "13436": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13437": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "DUP4",
      "path": "25"
    },
    "13438": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "SUB",
      "path": "25"
    },
    "13439": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13440": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13442": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "DUP8",
      "path": "25"
    },
    "13443": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13444": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "EXTCODESIZE",
      "path": "25"
    },
    "13445": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13446": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13447": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13448": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3490"
    },
    "13451": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "13452": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13454": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13455": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "REVERT",
      "path": "25"
    },
    "13456": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13457": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "POP",
      "path": "25"
    },
    "13458": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "GAS",
      "path": "25"
    },
    "13459": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "CALL",
      "path": "25"
    },
    "13460": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13461": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13462": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13463": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34A4"
    },
    "13466": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "13467": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "13468": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13470": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13471": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "13472": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "13473": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13475": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "REVERT",
      "path": "25"
    },
    "13476": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13477": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "POP",
      "path": "25"
    },
    "13478": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "POP",
      "path": "25"
    },
    "13479": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "POP",
      "path": "25"
    },
    "13480": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29059,
        29079
      ],
      "op": "POP",
      "path": "25"
    },
    "13481": {
      "offset": [
        6282,
        6283
      ],
      "op": "POP",
      "path": "25"
    },
    "13482": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        6282,
        6283
      ],
      "op": "POP",
      "path": "25"
    },
    "13483": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        6282,
        6283
      ],
      "op": "POP",
      "path": "25"
    },
    "13484": {
      "fn": "CryptoChampions.startNewPriceGame",
      "jump": "o",
      "offset": [
        28679,
        29086
      ],
      "op": "JUMP",
      "path": "25"
    },
    "13485": {
      "fn": "EnumerableSet.add",
      "offset": [
        6429,
        6579
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13486": {
      "fn": "EnumerableSet.add",
      "offset": [
        6499,
        6503
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13488": {
      "fn": "EnumerableSet.add",
      "offset": [
        6522,
        6572
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 121,
      "value": "0x2C19"
    },
    "13491": {
      "fn": "EnumerableSet.add",
      "offset": [
        6527,
        6530
      ],
      "op": "DUP4",
      "path": "12"
    },
    "13492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13498": {
      "op": "SHL"
    },
    "13499": {
      "op": "SUB"
    },
    "13500": {
      "fn": "EnumerableSet.add",
      "offset": [
        6547,
        6570
      ],
      "op": "DUP5",
      "path": "12"
    },
    "13501": {
      "fn": "EnumerableSet.add",
      "offset": [
        6547,
        6570
      ],
      "op": "AND",
      "path": "12"
    },
    "13502": {
      "fn": "EnumerableSet.add",
      "offset": [
        6522,
        6526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x493A"
    },
    "13505": {
      "fn": "EnumerableSet.add",
      "jump": "i",
      "offset": [
        6522,
        6572
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13506": {
      "fn": "EnumerableSet.contains",
      "offset": [
        6984,
        7149
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13507": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7064,
        7068
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13509": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7087,
        7142
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 122,
      "value": "0x2C19"
    },
    "13512": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7097,
        7100
      ],
      "op": "DUP4",
      "path": "12"
    },
    "13513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13517": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13519": {
      "op": "SHL"
    },
    "13520": {
      "op": "SUB"
    },
    "13521": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7117,
        7140
      ],
      "op": "DUP5",
      "path": "12"
    },
    "13522": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7117,
        7140
      ],
      "op": "AND",
      "path": "12"
    },
    "13523": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7087,
        7096
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4984"
    },
    "13526": {
      "fn": "EnumerableSet.contains",
      "jump": "i",
      "offset": [
        7087,
        7142
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13527": {
      "fn": "SafeMath.add",
      "offset": [
        2690,
        2865
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "13528": {
      "fn": "SafeMath.add",
      "offset": [
        2748,
        2755
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "13530": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "3"
    },
    "13531": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "3"
    },
    "13532": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "ADD",
      "path": "3"
    },
    "13533": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 123
    },
    "13534": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP2",
      "path": "3"
    },
    "13535": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "LT",
      "path": "3"
    },
    "13536": {
      "branch": 276,
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "13537": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C19"
    },
    "13540": {
      "branch": 276,
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13541": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "13543": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP1",
      "path": "3"
    },
    "13544": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "13545": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13549": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13551": {
      "op": "SHL"
    },
    "13552": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP2",
      "path": "3"
    },
    "13553": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "13554": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "13556": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "13558": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "3"
    },
    "13559": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "3"
    },
    "13560": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "13561": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1B"
    },
    "13563": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "13565": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "3"
    },
    "13566": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "3"
    },
    "13567": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "13568": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "13601": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "13603": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "3"
    },
    "13604": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "3"
    },
    "13605": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "13606": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13607": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "13608": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13609": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP2",
      "path": "3"
    },
    "13610": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13611": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SUB",
      "path": "3"
    },
    "13612": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "13614": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "3"
    },
    "13615": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13616": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "REVERT",
      "path": "3"
    },
    "13617": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "13618": {
      "fn": "Context._msgSender",
      "offset": [
        685,
        695
      ],
      "op": "CALLER",
      "path": "11",
      "statement": 124
    },
    "13619": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "13620": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        598,
        702
      ],
      "op": "JUMP",
      "path": "11"
    },
    "13621": {
      "fn": "ERC1155._mint",
      "offset": [
        8015,
        8587
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13626": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13628": {
      "op": "SHL"
    },
    "13629": {
      "op": "SUB"
    },
    "13630": {
      "fn": "ERC1155._mint",
      "offset": [
        8129,
        8150
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 125
    },
    "13631": {
      "branch": 267,
      "fn": "ERC1155._mint",
      "offset": [
        8129,
        8150
      ],
      "op": "AND",
      "path": "5"
    },
    "13632": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x357A"
    },
    "13635": {
      "branch": 267,
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "13636": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13638": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "13639": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13643": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13645": {
      "op": "SHL"
    },
    "13646": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13647": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13648": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "13650": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "ADD",
      "path": "5"
    },
    "13651": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13652": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13653": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13655": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "ADD",
      "path": "5"
    },
    "13656": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP3",
      "path": "5"
    },
    "13657": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13658": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "SUB",
      "path": "5"
    },
    "13659": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP3",
      "path": "5"
    },
    "13660": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13661": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x21"
    },
    "13663": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13664": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13665": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13667": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "ADD",
      "path": "5"
    },
    "13668": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13669": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5309"
    },
    "13672": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x21"
    },
    "13674": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13675": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "13676": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13678": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "ADD",
      "path": "5"
    },
    "13679": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13680": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "POP",
      "path": "5"
    },
    "13681": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "POP",
      "path": "5"
    },
    "13682": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13684": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "13685": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13686": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13687": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "SUB",
      "path": "5"
    },
    "13688": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13689": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "REVERT",
      "path": "5"
    },
    "13690": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13691": {
      "fn": "ERC1155._mint",
      "offset": [
        8199,
        8215
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13693": {
      "fn": "ERC1155._mint",
      "offset": [
        8218,
        8230
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3584"
    },
    "13696": {
      "fn": "ERC1155._mint",
      "offset": [
        8218,
        8228
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3531"
    },
    "13699": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8218,
        8230
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13700": {
      "fn": "ERC1155._mint",
      "offset": [
        8218,
        8230
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13701": {
      "fn": "ERC1155._mint",
      "offset": [
        8199,
        8230
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13702": {
      "fn": "ERC1155._mint",
      "offset": [
        8199,
        8230
      ],
      "op": "POP",
      "path": "5"
    },
    "13703": {
      "fn": "ERC1155._mint",
      "offset": [
        8241,
        8348
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 126,
      "value": "0x3596"
    },
    "13706": {
      "fn": "ERC1155._mint",
      "offset": [
        8262,
        8270
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13707": {
      "fn": "ERC1155._mint",
      "offset": [
        8280,
        8281
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13709": {
      "fn": "ERC1155._mint",
      "offset": [
        8284,
        8291
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13710": {
      "fn": "ERC1155._mint",
      "offset": [
        8293,
        8314
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3139"
    },
    "13713": {
      "fn": "ERC1155._mint",
      "offset": [
        8311,
        8313
      ],
      "op": "DUP9",
      "path": "5"
    },
    "13714": {
      "fn": "ERC1155._mint",
      "offset": [
        8293,
        8310
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4733"
    },
    "13717": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8293,
        8314
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13718": {
      "fn": "ERC1155._mint",
      "offset": [
        8241,
        8348
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13719": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 127,
      "value": "0x0"
    },
    "13721": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "DUP5",
      "path": "5"
    },
    "13722": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13723": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13724": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8393
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "13726": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13728": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13729": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13730": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13731": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13733": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13734": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "DUP4",
      "path": "5"
    },
    "13735": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "13736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13740": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13742": {
      "op": "SHL"
    },
    "13743": {
      "op": "SUB"
    },
    "13744": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "DUP10",
      "path": "5"
    },
    "13745": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "AND",
      "path": "5"
    },
    "13746": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "DUP5",
      "path": "5"
    },
    "13747": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13748": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13749": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13750": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13751": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13752": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "13753": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "13754": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8418
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x35C3"
    },
    "13757": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8418
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13758": {
      "fn": "ERC1155._mint",
      "offset": [
        8411,
        8417
      ],
      "op": "DUP5",
      "path": "5"
    },
    "13759": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8410
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34D7"
    },
    "13762": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8384,
        8418
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13763": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8418
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13764": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13766": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "DUP6",
      "path": "5"
    },
    "13767": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13768": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13769": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8368
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "13771": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13773": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13774": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13775": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13776": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13778": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13779": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "DUP4",
      "path": "5"
    },
    "13780": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "13781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13785": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13787": {
      "op": "SHL"
    },
    "13788": {
      "op": "SUB"
    },
    "13789": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13790": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "DUP12",
      "path": "5"
    },
    "13791": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "AND",
      "path": "5"
    },
    "13792": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13793": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "DUP7",
      "path": "5"
    },
    "13794": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13795": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13796": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "DUP5",
      "path": "5"
    },
    "13797": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13798": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "DUP3",
      "path": "5"
    },
    "13799": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "DUP6",
      "path": "5"
    },
    "13800": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "13801": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8418
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "13802": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8418
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13803": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8418
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "13804": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8418
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "13805": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 128
    },
    "13806": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "13807": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP10",
      "path": "5"
    },
    "13808": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13809": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13810": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "13811": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP4",
      "path": "5"
    },
    "13812": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "ADD",
      "path": "5"
    },
    "13813": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP9",
      "path": "5"
    },
    "13814": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13815": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13816": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13817": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "13818": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13819": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "13820": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP7",
      "path": "5"
    },
    "13821": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "AND",
      "path": "5"
    },
    "13822": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "13823": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "13856": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "13857": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13858": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP3",
      "path": "5"
    },
    "13859": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13860": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SUB",
      "path": "5"
    },
    "13861": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "ADD",
      "path": "5"
    },
    "13862": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13863": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "LOG4",
      "path": "5"
    },
    "13864": {
      "fn": "ERC1155._mint",
      "offset": [
        8501,
        8580
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 129,
      "value": "0x3636"
    },
    "13867": {
      "fn": "ERC1155._mint",
      "offset": [
        8532,
        8540
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13868": {
      "fn": "ERC1155._mint",
      "offset": [
        8550,
        8551
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13870": {
      "fn": "ERC1155._mint",
      "offset": [
        8554,
        8561
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13871": {
      "fn": "ERC1155._mint",
      "offset": [
        8563,
        8565
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13872": {
      "fn": "ERC1155._mint",
      "offset": [
        8567,
        8573
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13873": {
      "fn": "ERC1155._mint",
      "offset": [
        8575,
        8579
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13874": {
      "fn": "ERC1155._mint",
      "offset": [
        8501,
        8531
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4777"
    },
    "13877": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8501,
        8580
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13878": {
      "fn": "ERC1155._mint",
      "offset": [
        8501,
        8580
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13879": {
      "fn": "ERC1155._mint",
      "offset": [
        8015,
        8587
      ],
      "op": "POP",
      "path": "5"
    },
    "13880": {
      "fn": "ERC1155._mint",
      "offset": [
        8015,
        8587
      ],
      "op": "POP",
      "path": "5"
    },
    "13881": {
      "fn": "ERC1155._mint",
      "offset": [
        8015,
        8587
      ],
      "op": "POP",
      "path": "5"
    },
    "13882": {
      "fn": "ERC1155._mint",
      "offset": [
        8015,
        8587
      ],
      "op": "POP",
      "path": "5"
    },
    "13883": {
      "fn": "ERC1155._mint",
      "offset": [
        8015,
        8587
      ],
      "op": "POP",
      "path": "5"
    },
    "13884": {
      "fn": "ERC1155._mint",
      "jump": "o",
      "offset": [
        8015,
        8587
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13885": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23078,
        23315
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13886": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23160,
        23161
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13888": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23138,
        23157
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3649"
    },
    "13891": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23138,
        23147
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "13892": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23152,
        23156
      ],
      "op": "DUP4",
      "path": "25"
    },
    "13893": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23138,
        23151
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x37E1"
    },
    "13896": {
      "fn": "CryptoChampions._refundSender",
      "jump": "i",
      "offset": [
        23138,
        23157
      ],
      "op": "JUMP",
      "path": "25"
    },
    "13897": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23138,
        23157
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13898": {
      "branch": 240,
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23138,
        23161
      ],
      "op": "GT",
      "path": "25"
    },
    "13899": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23134,
        23309
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13900": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23134,
        23309
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x36AB"
    },
    "13903": {
      "branch": 240,
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23134,
        23309
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "13904": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23178,
        23190
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13906": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23206
      ],
      "op": "CALLER",
      "path": "25"
    },
    "13907": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23220,
        23239
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x365C"
    },
    "13910": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23220,
        23229
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "13911": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23234,
        23238
      ],
      "op": "DUP5",
      "path": "25"
    },
    "13912": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23220,
        23233
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x37E1"
    },
    "13915": {
      "fn": "CryptoChampions._refundSender",
      "jump": "i",
      "offset": [
        23220,
        23239
      ],
      "op": "JUMP",
      "path": "25"
    },
    "13916": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23220,
        23239
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13917": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "13919": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "13920": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13922": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13923": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13924": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13925": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "DUP6",
      "path": "25"
    },
    "13926": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "DUP8",
      "path": "25"
    },
    "13927": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "GAS",
      "path": "25"
    },
    "13928": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "CALL",
      "path": "25"
    },
    "13929": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "13930": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "POP",
      "path": "25"
    },
    "13931": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "POP",
      "path": "25"
    },
    "13932": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "POP",
      "path": "25"
    },
    "13933": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "13934": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13935": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13937": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13938": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "EQ",
      "path": "25"
    },
    "13939": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3698"
    },
    "13942": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "13943": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "13945": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "13946": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "13947": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "POP",
      "path": "25"
    },
    "13948": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "13950": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "NOT",
      "path": "25"
    },
    "13951": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x3F"
    },
    "13953": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "13954": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "ADD",
      "path": "25"
    },
    "13955": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "AND",
      "path": "25"
    },
    "13956": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "DUP3",
      "path": "25"
    },
    "13957": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "ADD",
      "path": "25"
    },
    "13958": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "13960": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "13961": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "13962": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "DUP3",
      "path": "25"
    },
    "13963": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "13964": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "13965": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13967": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "13969": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "DUP5",
      "path": "25"
    },
    "13970": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "ADD",
      "path": "25"
    },
    "13971": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "13972": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x369D"
    },
    "13975": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "JUMP",
      "path": "25"
    },
    "13976": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13977": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "13979": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "13980": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "POP",
      "path": "25"
    },
    "13981": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13982": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23196,
        23245
      ],
      "op": "POP",
      "path": "25"
    },
    "13983": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23177,
        23245
      ],
      "op": "POP",
      "path": "25"
    },
    "13984": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23177,
        23245
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "13985": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23177,
        23245
      ],
      "op": "POP",
      "path": "25"
    },
    "13986": {
      "branch": 241,
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23267,
        23274
      ],
      "op": "DUP1",
      "path": "25",
      "statement": 130
    },
    "13987": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23259,
        23275
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1E47"
    },
    "13990": {
      "branch": 241,
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23259,
        23275
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "13991": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23259,
        23275
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13993": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23259,
        23275
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13994": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23259,
        23275
      ],
      "op": "REVERT",
      "path": "25"
    },
    "13995": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23134,
        23309
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13996": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23078,
        23315
      ],
      "op": "POP",
      "path": "25"
    },
    "13997": {
      "fn": "CryptoChampions._refundSender",
      "jump": "o",
      "offset": [
        23078,
        23315
      ],
      "op": "JUMP",
      "path": "25"
    },
    "13998": {
      "fn": "ERC1155._burn",
      "offset": [
        9881,
        10419
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14003": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14005": {
      "op": "SHL"
    },
    "14006": {
      "op": "SUB"
    },
    "14007": {
      "fn": "ERC1155._burn",
      "offset": [
        9976,
        9997
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 131
    },
    "14008": {
      "branch": 268,
      "fn": "ERC1155._burn",
      "offset": [
        9976,
        9997
      ],
      "op": "AND",
      "path": "5"
    },
    "14009": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36F3"
    },
    "14012": {
      "branch": 268,
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14013": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14015": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14016": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14020": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14022": {
      "op": "SHL"
    },
    "14023": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14024": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14025": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "14027": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "ADD",
      "path": "5"
    },
    "14028": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14029": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14030": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14032": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "ADD",
      "path": "5"
    },
    "14033": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14034": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14035": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "SUB",
      "path": "5"
    },
    "14036": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14037": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14038": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x23"
    },
    "14040": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14041": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14042": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14044": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "ADD",
      "path": "5"
    },
    "14045": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14046": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5221"
    },
    "14049": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x23"
    },
    "14051": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14052": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "14053": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14055": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "ADD",
      "path": "5"
    },
    "14056": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14057": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "POP",
      "path": "5"
    },
    "14058": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "POP",
      "path": "5"
    },
    "14059": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14061": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14062": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14063": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14064": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "SUB",
      "path": "5"
    },
    "14065": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14066": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "REVERT",
      "path": "5"
    },
    "14067": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14068": {
      "fn": "ERC1155._burn",
      "offset": [
        10048,
        10064
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14070": {
      "fn": "ERC1155._burn",
      "offset": [
        10067,
        10079
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36FD"
    },
    "14073": {
      "fn": "ERC1155._burn",
      "offset": [
        10067,
        10077
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3531"
    },
    "14076": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        10067,
        10079
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14077": {
      "fn": "ERC1155._burn",
      "offset": [
        10067,
        10079
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14078": {
      "fn": "ERC1155._burn",
      "offset": [
        10048,
        10079
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14079": {
      "fn": "ERC1155._burn",
      "offset": [
        10048,
        10079
      ],
      "op": "POP",
      "path": "5"
    },
    "14080": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 132,
      "value": "0x372D"
    },
    "14083": {
      "fn": "ERC1155._burn",
      "offset": [
        10111,
        10119
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14084": {
      "fn": "ERC1155._burn",
      "offset": [
        10121,
        10128
      ],
      "op": "DUP6",
      "path": "5"
    },
    "14085": {
      "fn": "ERC1155._burn",
      "offset": [
        10138,
        10139
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14087": {
      "fn": "ERC1155._burn",
      "offset": [
        10142,
        10163
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x370F"
    },
    "14090": {
      "fn": "ERC1155._burn",
      "offset": [
        10160,
        10162
      ],
      "op": "DUP8",
      "path": "5"
    },
    "14091": {
      "fn": "ERC1155._burn",
      "offset": [
        10142,
        10159
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4733"
    },
    "14094": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        10142,
        10163
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14095": {
      "fn": "ERC1155._burn",
      "offset": [
        10142,
        10163
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14096": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10190
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3718"
    },
    "14099": {
      "fn": "ERC1155._burn",
      "offset": [
        10183,
        10189
      ],
      "op": "DUP8",
      "path": "5"
    },
    "14100": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10182
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4733"
    },
    "14103": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        10165,
        10190
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14104": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10190
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14105": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14107": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14108": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14109": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14111": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "ADD",
      "path": "5"
    },
    "14112": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14114": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14115": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14116": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14118": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14119": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14120": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "POP",
      "path": "5"
    },
    "14121": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10110
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x383E"
    },
    "14124": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        10090,
        10195
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14125": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14126": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 133,
      "value": "0x3774"
    },
    "14129": {
      "fn": "ERC1155._burn",
      "offset": [
        10271,
        10277
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14130": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14132": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14133": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14134": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "14136": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "ADD",
      "path": "5"
    },
    "14137": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14139": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14140": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14141": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "14143": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14144": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14145": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14147": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "ADD",
      "path": "5"
    },
    "14148": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x512D"
    },
    "14151": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "14153": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14154": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "14155": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14157": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14158": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14159": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14160": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10240
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "14162": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14164": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14165": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14166": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14167": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14169": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14170": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14171": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "14172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14176": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14178": {
      "op": "SHL"
    },
    "14179": {
      "op": "SUB"
    },
    "14180": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "DUP12",
      "path": "5"
    },
    "14181": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "AND",
      "path": "5"
    },
    "14182": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14183": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14184": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14185": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14186": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14187": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14188": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "14189": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "14190": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14191": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14192": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10257
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3950"
    },
    "14195": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        10231,
        10339
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14196": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14197": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14199": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14200": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14201": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14202": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10215
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "14204": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14206": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14207": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14208": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14209": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14211": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14212": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14213": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "14214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14220": {
      "op": "SHL"
    },
    "14221": {
      "op": "SUB"
    },
    "14222": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14223": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "DUP11",
      "path": "5"
    },
    "14224": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "AND",
      "path": "5"
    },
    "14225": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14226": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14227": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14228": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14229": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14230": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14231": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14232": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "DUP6",
      "path": "5"
    },
    "14233": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "14234": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10339
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "14235": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10339
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14236": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10339
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "14237": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10339
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "14238": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 134
    },
    "14239": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14240": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP9",
      "path": "5"
    },
    "14241": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14242": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14243": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "14244": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14245": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "ADD",
      "path": "5"
    },
    "14246": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP8",
      "path": "5"
    },
    "14247": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14248": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14249": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14250": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14251": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "14252": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "14253": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14254": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "14255": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14256": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14257": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "AND",
      "path": "5"
    },
    "14258": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "14259": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "14292": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "14293": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14294": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14295": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14296": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SUB",
      "path": "5"
    },
    "14297": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "ADD",
      "path": "5"
    },
    "14298": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14299": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "LOG4",
      "path": "5"
    },
    "14300": {
      "fn": "ERC1155._burn",
      "offset": [
        9881,
        10419
      ],
      "op": "POP",
      "path": "5"
    },
    "14301": {
      "fn": "ERC1155._burn",
      "offset": [
        9881,
        10419
      ],
      "op": "POP",
      "path": "5"
    },
    "14302": {
      "fn": "ERC1155._burn",
      "offset": [
        9881,
        10419
      ],
      "op": "POP",
      "path": "5"
    },
    "14303": {
      "fn": "ERC1155._burn",
      "offset": [
        9881,
        10419
      ],
      "op": "POP",
      "path": "5"
    },
    "14304": {
      "fn": "ERC1155._burn",
      "jump": "o",
      "offset": [
        9881,
        10419
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14305": {
      "fn": "SafeMath.sub",
      "offset": [
        3136,
        3291
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14306": {
      "fn": "SafeMath.sub",
      "offset": [
        3194,
        3201
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14308": {
      "fn": "SafeMath.sub",
      "offset": [
        3226,
        3227
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 135
    },
    "14309": {
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3222
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14310": {
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3227
      ],
      "op": "GT",
      "path": "3"
    },
    "14311": {
      "branch": 277,
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3227
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "14312": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3838"
    },
    "14315": {
      "branch": 277,
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "14316": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "14318": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14319": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14320": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14324": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14326": {
      "op": "SHL"
    },
    "14327": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14328": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14329": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "14331": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "14333": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14334": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "3"
    },
    "14335": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14336": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1E"
    },
    "14338": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "14340": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14341": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "3"
    },
    "14342": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14343": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "14376": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "14378": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14379": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "3"
    },
    "14380": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14381": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14382": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14383": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14384": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14385": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14386": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SUB",
      "path": "3"
    },
    "14387": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "14389": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "3"
    },
    "14390": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14391": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "REVERT",
      "path": "3"
    },
    "14392": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14393": {
      "op": "POP"
    },
    "14394": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 136
    },
    "14395": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SUB",
      "path": "3"
    },
    "14396": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14397": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        3136,
        3291
      ],
      "op": "JUMP",
      "path": "3"
    },
    "14398": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21720,
        22424
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "14399": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21951,
        22017
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 137,
      "value": "0x384C"
    },
    "14402": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21978,
        21986
      ],
      "op": "DUP7",
      "path": "25"
    },
    "14403": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        21992
      ],
      "op": "DUP7",
      "path": "25"
    },
    "14404": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21994,
        21996
      ],
      "op": "DUP7",
      "path": "25"
    },
    "14405": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21998,
        22001
      ],
      "op": "DUP7",
      "path": "25"
    },
    "14406": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22003,
        22010
      ],
      "op": "DUP7",
      "path": "25"
    },
    "14407": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22012,
        22016
      ],
      "op": "DUP7",
      "path": "25"
    },
    "14408": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21951,
        21977
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1D26"
    },
    "14411": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        21951,
        22017
      ],
      "op": "JUMP",
      "path": "25"
    },
    "14412": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21951,
        22017
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "14413": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22033,
        22042
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "14415": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22028,
        22418
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "14416": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22052,
        22055
      ],
      "op": "DUP4",
      "path": "25"
    },
    "14417": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22052,
        22062
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "14418": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22048,
        22049
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14419": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22048,
        22062
      ],
      "op": "LT",
      "path": "25"
    },
    "14420": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22028,
        22418
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "14421": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22028,
        22418
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34A4"
    },
    "14424": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22028,
        22418
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "14425": {
      "offset": [
        1766,
        1767
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "14427": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22172,
        22175
      ],
      "op": "DUP5",
      "path": "25"
    },
    "14428": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22176,
        22177
      ],
      "op": "DUP3",
      "path": "25"
    },
    "14429": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22172,
        22178
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14430": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22172,
        22178
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "14431": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22172,
        22178
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14432": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22172,
        22178
      ],
      "op": "LT",
      "path": "25"
    },
    "14433": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22172,
        22178
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3866"
    },
    "14436": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22172,
        22178
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "14437": {
      "dev": "Index out of range",
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22172,
        22178
      ],
      "op": "INVALID",
      "path": "25"
    },
    "14438": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22172,
        22178
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "14439": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22172,
        22178
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "14441": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22172,
        22178
      ],
      "op": "MUL",
      "path": "25"
    },
    "14442": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22172,
        22178
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "14444": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22172,
        22178
      ],
      "op": "ADD",
      "path": "25"
    },
    "14445": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22172,
        22178
      ],
      "op": "ADD",
      "path": "25"
    },
    "14446": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22172,
        22178
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "14447": {
      "branch": 242,
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22172,
        22200
      ],
      "op": "GT",
      "path": "25"
    },
    "14448": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22172,
        22234
      ],
      "op": "DUP1",
      "path": "25"
    },
    "14449": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22172,
        22234
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "14450": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22172,
        22234
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x388F"
    },
    "14453": {
      "branch": 242,
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22172,
        22234
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "14454": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22172,
        22234
      ],
      "op": "POP",
      "path": "25"
    },
    "14455": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "14457": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22204,
        22207
      ],
      "op": "DUP5",
      "path": "25"
    },
    "14458": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22208,
        22209
      ],
      "op": "DUP3",
      "path": "25"
    },
    "14459": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22204,
        22210
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14460": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22204,
        22210
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "14461": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22204,
        22210
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14462": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22204,
        22210
      ],
      "op": "LT",
      "path": "25"
    },
    "14463": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22204,
        22210
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3884"
    },
    "14466": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22204,
        22210
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "14467": {
      "dev": "Index out of range",
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22204,
        22210
      ],
      "op": "INVALID",
      "path": "25"
    },
    "14468": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22204,
        22210
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "14469": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22204,
        22210
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "14471": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22204,
        22210
      ],
      "op": "MUL",
      "path": "25"
    },
    "14472": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22204,
        22210
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "14474": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22204,
        22210
      ],
      "op": "ADD",
      "path": "25"
    },
    "14475": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22204,
        22210
      ],
      "op": "ADD",
      "path": "25"
    },
    "14476": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22204,
        22210
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "14477": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22204,
        22234
      ],
      "op": "GT",
      "path": "25"
    },
    "14478": {
      "branch": 243,
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22204,
        22234
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "14479": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22172,
        22234
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "14480": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22168,
        22303
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "14481": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22168,
        22303
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x38E0"
    },
    "14484": {
      "branch": 243,
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22168,
        22303
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "14485": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22285,
        22287
      ],
      "op": "DUP5",
      "path": "25",
      "statement": 138
    },
    "14486": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22266
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "14488": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22274
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "14490": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22267,
        22270
      ],
      "op": "DUP7",
      "path": "25"
    },
    "14491": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22271,
        22272
      ],
      "op": "DUP5",
      "path": "25"
    },
    "14492": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22267,
        22273
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14493": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22267,
        22273
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "14494": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22267,
        22273
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14495": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22267,
        22273
      ],
      "op": "LT",
      "path": "25"
    },
    "14496": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22267,
        22273
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x38A5"
    },
    "14499": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22267,
        22273
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "14500": {
      "dev": "Index out of range",
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22267,
        22273
      ],
      "op": "INVALID",
      "path": "25"
    },
    "14501": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22267,
        22273
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "14502": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22267,
        22273
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "14504": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22267,
        22273
      ],
      "op": "MUL",
      "path": "25"
    },
    "14505": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22267,
        22273
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "14507": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22267,
        22273
      ],
      "op": "ADD",
      "path": "25"
    },
    "14508": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22267,
        22273
      ],
      "op": "ADD",
      "path": "25"
    },
    "14509": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22267,
        22273
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "14510": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22274
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14511": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22274
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "14512": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22274
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "14514": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22274
      ],
      "op": "ADD",
      "path": "25"
    },
    "14515": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22274
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "14516": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22274
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14517": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22274
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "14518": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22274
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "14520": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22274
      ],
      "op": "ADD",
      "path": "25"
    },
    "14521": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22274
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "14523": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22274
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "14524": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22274
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "14526": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22288
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "14529": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22288
      ],
      "op": "EXP",
      "path": "25"
    },
    "14530": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22288
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14531": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22288
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "14532": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22288
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14537": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14539": {
      "op": "SHL"
    },
    "14540": {
      "op": "SUB"
    },
    "14541": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22288
      ],
      "op": "MUL",
      "path": "25"
    },
    "14542": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22288
      ],
      "op": "NOT",
      "path": "25"
    },
    "14543": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22288
      ],
      "op": "AND",
      "path": "25"
    },
    "14544": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22288
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "14545": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22288
      ],
      "op": "DUP4",
      "path": "25"
    },
    "14546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14550": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14552": {
      "op": "SHL"
    },
    "14553": {
      "op": "SUB"
    },
    "14554": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22288
      ],
      "op": "AND",
      "path": "25"
    },
    "14555": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22288
      ],
      "op": "MUL",
      "path": "25"
    },
    "14556": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22288
      ],
      "op": "OR",
      "path": "25"
    },
    "14557": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22288
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "14558": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22288
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "14559": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22288
      ],
      "op": "POP",
      "path": "25"
    },
    "14560": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22168,
        22303
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "14561": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "14563": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22320,
        22323
      ],
      "op": "DUP5",
      "path": "25"
    },
    "14564": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22324,
        22325
      ],
      "op": "DUP3",
      "path": "25"
    },
    "14565": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22320,
        22326
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14566": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22320,
        22326
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "14567": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22320,
        22326
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14568": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22320,
        22326
      ],
      "op": "LT",
      "path": "25"
    },
    "14569": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22320,
        22326
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x38EE"
    },
    "14572": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22320,
        22326
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "14573": {
      "dev": "Index out of range",
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22320,
        22326
      ],
      "op": "INVALID",
      "path": "25"
    },
    "14574": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22320,
        22326
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "14575": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22320,
        22326
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "14577": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22320,
        22326
      ],
      "op": "MUL",
      "path": "25"
    },
    "14578": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22320,
        22326
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "14580": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22320,
        22326
      ],
      "op": "ADD",
      "path": "25"
    },
    "14581": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22320,
        22326
      ],
      "op": "ADD",
      "path": "25"
    },
    "14582": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22320,
        22326
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "14583": {
      "branch": 244,
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22320,
        22349
      ],
      "op": "GT",
      "path": "25"
    },
    "14584": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22316,
        22408
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "14585": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22316,
        22408
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3948"
    },
    "14588": {
      "branch": 244,
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22316,
        22408
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "14589": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22391,
        22393
      ],
      "op": "DUP5",
      "path": "25",
      "statement": 139
    },
    "14590": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22380
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xB"
    },
    "14592": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22388
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "14594": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22381,
        22384
      ],
      "op": "DUP7",
      "path": "25"
    },
    "14595": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22385,
        22386
      ],
      "op": "DUP5",
      "path": "25"
    },
    "14596": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22381,
        22387
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14597": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22381,
        22387
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "14598": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22381,
        22387
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14599": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22381,
        22387
      ],
      "op": "LT",
      "path": "25"
    },
    "14600": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22381,
        22387
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x390D"
    },
    "14603": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22381,
        22387
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "14604": {
      "dev": "Index out of range",
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22381,
        22387
      ],
      "op": "INVALID",
      "path": "25"
    },
    "14605": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22381,
        22387
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "14606": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22381,
        22387
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "14608": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22381,
        22387
      ],
      "op": "MUL",
      "path": "25"
    },
    "14609": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22381,
        22387
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "14611": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22381,
        22387
      ],
      "op": "ADD",
      "path": "25"
    },
    "14612": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22381,
        22387
      ],
      "op": "ADD",
      "path": "25"
    },
    "14613": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22381,
        22387
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "14614": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22388
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14615": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22388
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "14616": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22388
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "14618": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22388
      ],
      "op": "ADD",
      "path": "25"
    },
    "14619": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22388
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "14620": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22388
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14621": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22388
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "14622": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22388
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "14624": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22388
      ],
      "op": "ADD",
      "path": "25"
    },
    "14625": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22388
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "14627": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22388
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "14628": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22388
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "14630": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22393
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "14633": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22393
      ],
      "op": "EXP",
      "path": "25"
    },
    "14634": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22393
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14635": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22393
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "14636": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22393
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14643": {
      "op": "SHL"
    },
    "14644": {
      "op": "SUB"
    },
    "14645": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22393
      ],
      "op": "MUL",
      "path": "25"
    },
    "14646": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22393
      ],
      "op": "NOT",
      "path": "25"
    },
    "14647": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22393
      ],
      "op": "AND",
      "path": "25"
    },
    "14648": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22393
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "14649": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22393
      ],
      "op": "DUP4",
      "path": "25"
    },
    "14650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14656": {
      "op": "SHL"
    },
    "14657": {
      "op": "SUB"
    },
    "14658": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22393
      ],
      "op": "AND",
      "path": "25"
    },
    "14659": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22393
      ],
      "op": "MUL",
      "path": "25"
    },
    "14660": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22393
      ],
      "op": "OR",
      "path": "25"
    },
    "14661": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22393
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "14662": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22393
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "14663": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22369,
        22393
      ],
      "op": "POP",
      "path": "25"
    },
    "14664": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22316,
        22408
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "14665": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22064,
        22067
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 140,
      "value": "0x1"
    },
    "14667": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22064,
        22067
      ],
      "op": "ADD",
      "path": "25"
    },
    "14668": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22028,
        22418
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x384F"
    },
    "14671": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22028,
        22418
      ],
      "op": "JUMP",
      "path": "25"
    },
    "14672": {
      "fn": "SafeMath.sub",
      "offset": [
        5432,
        5595
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14673": {
      "fn": "SafeMath.sub",
      "offset": [
        5518,
        5525
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14675": {
      "fn": "SafeMath.sub",
      "offset": [
        5553,
        5565
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 141
    },
    "14676": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "DUP5",
      "path": "3"
    },
    "14677": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "DUP5",
      "path": "3"
    },
    "14678": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "GT",
      "path": "3"
    },
    "14679": {
      "branch": 278,
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "14680": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x39DF"
    },
    "14683": {
      "branch": 278,
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "14684": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "14686": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14687": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14691": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14693": {
      "op": "SHL"
    },
    "14694": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14695": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14696": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "14698": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14699": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14700": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14701": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "14703": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14704": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14705": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14706": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "3"
    },
    "14707": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14708": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14709": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "3"
    },
    "14710": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14711": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14712": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14713": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14714": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14715": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "14717": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14718": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "14719": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14720": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14721": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14722": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14723": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "14725": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14726": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14727": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14728": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "3"
    },
    "14729": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "3"
    },
    "14730": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14732": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14733": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "3"
    },
    "14734": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14735": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "LT",
      "path": "3"
    },
    "14736": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "14737": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x39A4"
    },
    "14740": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "14741": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14742": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14743": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14744": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14745": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "3"
    },
    "14746": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14747": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14748": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14749": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "14751": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14752": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x398C"
    },
    "14755": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMP",
      "path": "3"
    },
    "14756": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14757": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14758": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14759": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14760": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14761": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14762": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14763": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14764": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14765": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14766": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14767": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "14769": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "AND",
      "path": "3"
    },
    "14770": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14771": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "14772": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x39D1"
    },
    "14775": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "14776": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14777": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14778": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "3"
    },
    "14779": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14780": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14781": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "14783": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "3"
    },
    "14784": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "14786": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "3"
    },
    "14787": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "14790": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "EXP",
      "path": "3"
    },
    "14791": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "3"
    },
    "14792": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "NOT",
      "path": "3"
    },
    "14793": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "AND",
      "path": "3"
    },
    "14794": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14795": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14796": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "14798": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14799": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "14800": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14801": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14802": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14803": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "14804": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14805": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14806": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14807": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "14809": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14810": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14811": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "14812": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "3"
    },
    "14813": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14814": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "REVERT",
      "path": "3"
    },
    "14815": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14816": {
      "op": "POP"
    },
    "14817": {
      "op": "POP"
    },
    "14818": {
      "op": "POP"
    },
    "14819": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 142
    },
    "14820": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SUB",
      "path": "3"
    },
    "14821": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14822": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        5432,
        5595
      ],
      "op": "JUMP",
      "path": "3"
    },
    "14823": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13240,
        14018
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14824": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13484,
        13499
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x39F9"
    },
    "14827": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13484,
        13486
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14834": {
      "op": "SHL"
    },
    "14835": {
      "op": "SUB"
    },
    "14836": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13484,
        13497
      ],
      "op": "AND",
      "path": "5"
    },
    "14837": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13484,
        13497
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x499C"
    },
    "14840": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13484,
        13499
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14841": {
      "branch": 269,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13484,
        13499
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14842": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13480,
        14012
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "14843": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13480,
        14012
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D26"
    },
    "14846": {
      "branch": 269,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13480,
        14012
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14847": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13536,
        13538
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14854": {
      "op": "SHL"
    },
    "14855": {
      "op": "SUB"
    },
    "14856": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13562
      ],
      "op": "AND",
      "path": "5"
    },
    "14857": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13562
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xBC197C81"
    },
    "14862": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13563,
        13571
      ],
      "op": "DUP8",
      "path": "5"
    },
    "14863": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13573,
        13577
      ],
      "op": "DUP8",
      "path": "5"
    },
    "14864": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13579,
        13582
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14865": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13584,
        13591
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14866": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13593,
        13597
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14867": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14869": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14870": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14871": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "14876": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "AND",
      "path": "5"
    },
    "14877": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "14879": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SHL",
      "path": "5"
    },
    "14880": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14881": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14882": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "14884": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14885": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14886": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14891": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14893": {
      "op": "SHL"
    },
    "14894": {
      "op": "SUB"
    },
    "14895": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "AND",
      "path": "5"
    },
    "14896": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14897": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14898": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14900": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14901": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP6",
      "path": "5"
    },
    "14902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14908": {
      "op": "SHL"
    },
    "14909": {
      "op": "SUB"
    },
    "14910": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "AND",
      "path": "5"
    },
    "14911": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14912": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14913": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14915": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14916": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14917": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14919": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14920": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14921": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14923": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14924": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14925": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14927": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14928": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14929": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14930": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SUB",
      "path": "5"
    },
    "14931": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14932": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14933": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP8",
      "path": "5"
    },
    "14934": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14935": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14936": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14937": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14938": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14939": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14941": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14942": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14943": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14944": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14945": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14946": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14947": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14949": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14950": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14951": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14953": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MUL",
      "path": "5"
    },
    "14954": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14955": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14956": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14957": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14959": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14960": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14961": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14962": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "LT",
      "path": "5"
    },
    "14963": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "14964": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A87"
    },
    "14967": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14968": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14969": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14970": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14971": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14972": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14973": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14974": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14975": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14976": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14978": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14979": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A6F"
    },
    "14982": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14983": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14984": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14985": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14986": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14987": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14988": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14989": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14990": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14991": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14992": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14993": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SUB",
      "path": "5"
    },
    "14994": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14995": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14996": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14997": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14998": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14999": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15000": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15001": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15002": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15004": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15005": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15006": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15007": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15008": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15009": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15010": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15012": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15013": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15014": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15016": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MUL",
      "path": "5"
    },
    "15017": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15018": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15019": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15020": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15022": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15023": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15024": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15025": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "LT",
      "path": "5"
    },
    "15026": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15027": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3AC6"
    },
    "15030": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15031": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15032": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15033": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15034": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15035": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15036": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15037": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15038": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15039": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15041": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15042": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3AAE"
    },
    "15045": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMP",
      "path": "5"
    },
    "15046": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15047": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15048": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15049": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15050": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15051": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15052": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15053": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15054": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP5",
      "path": "5"
    },
    "15055": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15056": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SUB",
      "path": "5"
    },
    "15057": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15058": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15059": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP6",
      "path": "5"
    },
    "15060": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15061": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15062": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15063": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15064": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15065": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15067": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15068": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15069": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15070": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15071": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15072": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15073": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15075": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15076": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15077": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15078": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15079": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15080": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15082": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15083": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15084": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15085": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "LT",
      "path": "5"
    },
    "15086": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15087": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B02"
    },
    "15090": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15091": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15092": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15093": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15094": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15095": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15096": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15097": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15098": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15099": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15101": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15102": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3AEA"
    },
    "15105": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMP",
      "path": "5"
    },
    "15106": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15107": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15108": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15109": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15110": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15111": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15112": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15113": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15114": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15115": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15116": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15117": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "15119": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "AND",
      "path": "5"
    },
    "15120": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15121": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15122": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B2F"
    },
    "15125": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15126": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15127": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15128": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SUB",
      "path": "5"
    },
    "15129": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15130": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15131": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "15133": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15134": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15136": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SUB",
      "path": "5"
    },
    "15137": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "15140": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "EXP",
      "path": "5"
    },
    "15141": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SUB",
      "path": "5"
    },
    "15142": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "NOT",
      "path": "5"
    },
    "15143": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "AND",
      "path": "5"
    },
    "15144": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15145": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15146": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15148": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15149": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15150": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15151": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15152": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15153": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP9",
      "path": "5"
    },
    "15154": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15155": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15156": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15157": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15158": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15159": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15160": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15161": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15162": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15163": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15165": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "15167": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15168": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15169": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15170": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SUB",
      "path": "5"
    },
    "15171": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15172": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15174": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP8",
      "path": "5"
    },
    "15175": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15176": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "15177": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15178": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15179": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15180": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B54"
    },
    "15183": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15184": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15186": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15187": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "REVERT",
      "path": "5"
    },
    "15188": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15189": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15190": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "GAS",
      "path": "5"
    },
    "15191": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "CALL",
      "path": "5"
    },
    "15192": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "15193": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15194": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15195": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15196": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15197": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15198": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B79"
    },
    "15201": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15202": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15203": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "15205": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15206": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "15207": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15209": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15210": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "LT",
      "path": "5"
    },
    "15211": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15212": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B74"
    },
    "15215": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15216": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15218": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15219": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "REVERT",
      "path": "5"
    },
    "15220": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15221": {
      "op": "POP"
    },
    "15222": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15223": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "15225": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15226": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C0E"
    },
    "15229": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15230": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B85"
    },
    "15233": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4FAF"
    },
    "15236": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMP",
      "path": "5"
    },
    "15237": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15238": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15239": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B90"
    },
    "15242": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15243": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "POP",
      "path": "5"
    },
    "15244": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3BD7"
    },
    "15247": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMP",
      "path": "5"
    },
    "15248": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15249": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 143,
      "value": "0x40"
    },
    "15251": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15252": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15256": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15258": {
      "op": "SHL"
    },
    "15259": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15260": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15261": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15263": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "15265": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15266": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ADD",
      "path": "5"
    },
    "15267": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15268": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15269": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15270": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15271": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15272": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "15274": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP5",
      "path": "5"
    },
    "15275": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ADD",
      "path": "5"
    },
    "15276": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15277": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15278": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15279": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13878,
        13884
      ],
      "op": "DUP5",
      "path": "5"
    },
    "15280": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13878,
        13884
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "15281": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15282": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "15283": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15284": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "15285": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "15287": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ADD",
      "path": "5"
    },
    "15288": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15289": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15290": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP6",
      "path": "5"
    },
    "15291": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ADD",
      "path": "5"
    },
    "15292": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15293": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15294": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15295": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15296": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15298": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15299": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15300": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x39A4"
    },
    "15303": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15304": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15305": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15306": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ADD",
      "path": "5"
    },
    "15307": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15308": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15309": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15310": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ADD",
      "path": "5"
    },
    "15311": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15312": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15314": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ADD",
      "path": "5"
    },
    "15315": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x398C"
    },
    "15318": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "JUMP",
      "path": "5"
    },
    "15319": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15320": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 144,
      "value": "0x40"
    },
    "15322": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15323": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15327": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15329": {
      "op": "SHL"
    },
    "15330": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15331": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15332": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "15334": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "ADD",
      "path": "5"
    },
    "15335": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15336": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15337": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15339": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "ADD",
      "path": "5"
    },
    "15340": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15341": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15342": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "SUB",
      "path": "5"
    },
    "15343": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15344": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15345": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x34"
    },
    "15347": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15348": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15349": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15351": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "ADD",
      "path": "5"
    },
    "15352": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15353": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5055"
    },
    "15356": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x34"
    },
    "15358": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15359": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "15360": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "15362": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "ADD",
      "path": "5"
    },
    "15363": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15364": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "POP",
      "path": "5"
    },
    "15365": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "POP",
      "path": "5"
    },
    "15366": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "15368": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15369": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15370": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15371": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "SUB",
      "path": "5"
    },
    "15372": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15373": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "REVERT",
      "path": "5"
    },
    "15374": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15379": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15381": {
      "op": "SHL"
    },
    "15382": {
      "op": "SUB"
    },
    "15383": {
      "op": "NOT"
    },
    "15384": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        13711
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15385": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        13711
      ],
      "op": "AND",
      "path": "5"
    },
    "15386": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "15391": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15393": {
      "op": "SHL"
    },
    "15394": {
      "branch": 270,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        13711
      ],
      "op": "EQ",
      "path": "5"
    },
    "15395": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13643,
        13804
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34A4"
    },
    "15398": {
      "branch": 270,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13643,
        13804
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15399": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 145,
      "value": "0x40"
    },
    "15401": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15402": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15406": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15408": {
      "op": "SHL"
    },
    "15409": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15410": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15411": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "15413": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "ADD",
      "path": "5"
    },
    "15414": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15415": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15416": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15418": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "ADD",
      "path": "5"
    },
    "15419": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15420": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15421": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "SUB",
      "path": "5"
    },
    "15422": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15423": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15424": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x28"
    },
    "15426": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15427": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15428": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15430": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "ADD",
      "path": "5"
    },
    "15431": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15432": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x50AB"
    },
    "15435": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x28"
    },
    "15437": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15438": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "15439": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "15441": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "ADD",
      "path": "5"
    },
    "15442": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15443": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "POP",
      "path": "5"
    },
    "15444": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "POP",
      "path": "5"
    },
    "15445": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "15447": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15448": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15449": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15450": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "SUB",
      "path": "5"
    },
    "15451": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15452": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "REVERT",
      "path": "5"
    },
    "15453": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7337,
        7457
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "15454": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7401,
        7426
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 146,
      "value": "0x3C67"
    },
    "15457": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7409,
        7413
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15458": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7415,
        7425
      ],
      "op": "CALLER",
      "path": "25"
    },
    "15459": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7401,
        7408
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2C25"
    },
    "15462": {
      "fn": "CryptoChampions._hasRole",
      "jump": "i",
      "offset": [
        7401,
        7426
      ],
      "op": "JUMP",
      "path": "25"
    },
    "15463": {
      "branch": 245,
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7401,
        7426
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "15464": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7393,
        7427
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x36AB"
    },
    "15467": {
      "branch": 245,
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7393,
        7427
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "15468": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7393,
        7427
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "15470": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7393,
        7427
      ],
      "op": "DUP1",
      "path": "25"
    },
    "15471": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7393,
        7427
      ],
      "op": "REVERT",
      "path": "25"
    },
    "15472": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7025,
        7209
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15473": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7104
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15475": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "DUP3",
      "path": "0"
    },
    "15476": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15477": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "15478": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "15480": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15481": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15482": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "15483": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15485": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15486": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "15487": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7131
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C88"
    },
    "15490": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7131
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15491": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7123,
        7130
      ],
      "op": "DUP3",
      "path": "0"
    },
    "15492": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7122
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34AD"
    },
    "15495": {
      "fn": "AccessControl._grantRole",
      "jump": "i",
      "offset": [
        7098,
        7131
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15496": {
      "branch": 255,
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7131
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15497": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7094,
        7203
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "15498": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7094,
        7203
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E47"
    },
    "15501": {
      "branch": 255,
      "fn": "AccessControl._grantRole",
      "offset": [
        7094,
        7203
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "15502": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7179,
        7191
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 147,
      "value": "0x3C95"
    },
    "15505": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7179,
        7189
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3531"
    },
    "15508": {
      "fn": "AccessControl._grantRole",
      "jump": "i",
      "offset": [
        7179,
        7191
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15509": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7179,
        7191
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15514": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15516": {
      "op": "SHL"
    },
    "15517": {
      "op": "SUB"
    },
    "15518": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "AND",
      "path": "0"
    },
    "15519": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7170,
        7177
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15524": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15526": {
      "op": "SHL"
    },
    "15527": {
      "op": "SUB"
    },
    "15528": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "AND",
      "path": "0"
    },
    "15529": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7164,
        7168
      ],
      "op": "DUP4",
      "path": "0"
    },
    "15530": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
    },
    "15563": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15565": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15566": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15568": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15569": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15570": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "15571": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "SUB",
      "path": "0"
    },
    "15572": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15573": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "LOG4",
      "path": "0"
    },
    "15574": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7025,
        7209
      ],
      "op": "POP",
      "path": "0"
    },
    "15575": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7025,
        7209
      ],
      "op": "POP",
      "path": "0"
    },
    "15576": {
      "fn": "AccessControl._grantRole",
      "jump": "o",
      "offset": [
        7025,
        7209
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15577": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7215,
        7403
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15578": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15580": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "DUP3",
      "path": "0"
    },
    "15581": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15582": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "15583": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "15585": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15586": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15587": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "15588": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15590": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15591": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "15592": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7325
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CF1"
    },
    "15595": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7325
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15596": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7317,
        7324
      ],
      "op": "DUP3",
      "path": "0"
    },
    "15597": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7316
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x49A2"
    },
    "15600": {
      "fn": "AccessControl._revokeRole",
      "jump": "i",
      "offset": [
        7289,
        7325
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15601": {
      "branch": 256,
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7325
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15602": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7285,
        7397
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "15603": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7285,
        7397
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E47"
    },
    "15606": {
      "branch": 256,
      "fn": "AccessControl._revokeRole",
      "offset": [
        7285,
        7397
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "15607": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7373,
        7385
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 148,
      "value": "0x3CFE"
    },
    "15610": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7373,
        7383
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3531"
    },
    "15613": {
      "fn": "AccessControl._revokeRole",
      "jump": "i",
      "offset": [
        7373,
        7385
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15614": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7373,
        7385
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15621": {
      "op": "SHL"
    },
    "15622": {
      "op": "SUB"
    },
    "15623": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "AND",
      "path": "0"
    },
    "15624": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7364,
        7371
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15631": {
      "op": "SHL"
    },
    "15632": {
      "op": "SUB"
    },
    "15633": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "AND",
      "path": "0"
    },
    "15634": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7358,
        7362
      ],
      "op": "DUP4",
      "path": "0"
    },
    "15635": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
    },
    "15668": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15670": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15671": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15673": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15674": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15675": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "15676": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "SUB",
      "path": "0"
    },
    "15677": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15678": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "LOG4",
      "path": "0"
    },
    "15679": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7215,
        7403
      ],
      "op": "POP",
      "path": "0"
    },
    "15680": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7215,
        7403
      ],
      "op": "POP",
      "path": "0"
    },
    "15681": {
      "fn": "AccessControl._revokeRole",
      "jump": "o",
      "offset": [
        7215,
        7403
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15682": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13789,
        14455
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "15683": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13923,
        13935
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xF"
    },
    "15685": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13923,
        13935
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "15686": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13851,
        13855
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "15688": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13905,
        13936
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15689": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13905,
        13936
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15690": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13905,
        13936
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15691": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13905,
        13922
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xD"
    },
    "15693": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13905,
        13936
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "15695": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13905,
        13936
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15696": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13905,
        13936
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15697": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13905,
        13936
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15698": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13905,
        13936
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "15700": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13905,
        13936
      ],
      "op": "DUP1",
      "path": "25"
    },
    "15701": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13905,
        13936
      ],
      "op": "DUP4",
      "path": "25"
    },
    "15702": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13905,
        13936
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "15703": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13905,
        13945
      ],
      "op": "DUP5",
      "path": "25"
    },
    "15704": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13905,
        13945
      ],
      "op": "DUP5",
      "path": "25"
    },
    "15705": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13905,
        13945
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15706": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13905,
        13945
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15707": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13905,
        13945
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "15708": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13905,
        13945
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15709": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13905,
        13945
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15710": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13905,
        13945
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "15711": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13905,
        13945
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "15712": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13948,
        13949
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "15714": {
      "op": "GT"
    },
    "15715": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13901,
        13987
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "15716": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13901,
        13987
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3D6F"
    },
    "15719": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13901,
        13987
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "15720": {
      "op": "POP"
    },
    "15721": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13972,
        13976
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 149,
      "value": "0x1"
    },
    "15723": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13965,
        13976
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x13C8"
    },
    "15726": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13965,
        13976
      ],
      "op": "JUMP",
      "path": "25"
    },
    "15727": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13901,
        13987
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "15728": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14110,
        14122
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xF"
    },
    "15730": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14110,
        14122
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "15731": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14062,
        14089
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "15733": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14092,
        14123
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15734": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14092,
        14123
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15735": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14092,
        14123
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15736": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14092,
        14109
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xD"
    },
    "15738": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14092,
        14123
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "15740": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14092,
        14123
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15741": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14092,
        14123
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15742": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14092,
        14123
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15743": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14092,
        14123
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "15745": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14092,
        14123
      ],
      "op": "DUP1",
      "path": "25"
    },
    "15746": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14092,
        14123
      ],
      "op": "DUP4",
      "path": "25"
    },
    "15747": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14092,
        14123
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "15748": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14092,
        14132
      ],
      "op": "DUP6",
      "path": "25"
    },
    "15749": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14092,
        14132
      ],
      "op": "DUP5",
      "path": "25"
    },
    "15750": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14092,
        14132
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15751": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14092,
        14132
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15752": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14092,
        14132
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "15753": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14092,
        14132
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15754": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14092,
        14132
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15755": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14092,
        14132
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "15756": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14092,
        14132
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "15757": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14159,
        14160
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "15759": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14142,
        14361
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "15760": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14167,
        14179
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "15762": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14167,
        14179
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "15763": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14162,
        14163
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15764": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14162,
        14179
      ],
      "op": "GT",
      "path": "25"
    },
    "15765": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14142,
        14361
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3DE4"
    },
    "15768": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14142,
        14361
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "15769": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14222,
        14234
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xF"
    },
    "15771": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14222,
        14234
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "15772": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14204,
        14235
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "15774": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14204,
        14235
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15775": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14204,
        14235
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15776": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14204,
        14235
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15777": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14204,
        14221
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xD"
    },
    "15779": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14204,
        14235
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "15781": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14204,
        14235
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15782": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14204,
        14235
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15783": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14204,
        14235
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15784": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14204,
        14235
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "15786": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14204,
        14235
      ],
      "op": "DUP1",
      "path": "25"
    },
    "15787": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14204,
        14235
      ],
      "op": "DUP4",
      "path": "25"
    },
    "15788": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14204,
        14235
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "15789": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14204,
        14238
      ],
      "op": "DUP5",
      "path": "25"
    },
    "15790": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14204,
        14238
      ],
      "op": "DUP5",
      "path": "25"
    },
    "15791": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14204,
        14238
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15792": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14204,
        14238
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15793": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14204,
        14238
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "15794": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14204,
        14238
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15795": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14204,
        14238
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15796": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14204,
        14238
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "15797": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14204,
        14238
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "15798": {
      "branch": 246,
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14204,
        14260
      ],
      "op": "DUP3",
      "path": "25"
    },
    "15799": {
      "op": "GT"
    },
    "15800": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14200,
        14351
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "15801": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14200,
        14351
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3DDC"
    },
    "15804": {
      "branch": 246,
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14200,
        14351
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "15805": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14320,
        14332
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 150,
      "value": "0xF"
    },
    "15807": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14320,
        14332
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "15808": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14302,
        14333
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "15810": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14302,
        14333
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15811": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14302,
        14333
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15812": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14302,
        14333
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15813": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14302,
        14319
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xD"
    },
    "15815": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14302,
        14333
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "15817": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14302,
        14333
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15818": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14302,
        14333
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15819": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14302,
        14333
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15820": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14302,
        14333
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "15822": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14302,
        14333
      ],
      "op": "DUP1",
      "path": "25"
    },
    "15823": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14302,
        14333
      ],
      "op": "DUP4",
      "path": "25"
    },
    "15824": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14302,
        14333
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "15825": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14302,
        14336
      ],
      "op": "DUP5",
      "path": "25"
    },
    "15826": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14302,
        14336
      ],
      "op": "DUP5",
      "path": "25"
    },
    "15827": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14302,
        14336
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15828": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14302,
        14336
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15829": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14302,
        14336
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "15830": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14302,
        14336
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15831": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14302,
        14336
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15832": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14302,
        14336
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "15833": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14302,
        14336
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "15834": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14302,
        14336
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "15835": {
      "op": "POP"
    },
    "15836": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14200,
        14351
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "15837": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14181,
        14184
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 151,
      "value": "0x1"
    },
    "15839": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14181,
        14184
      ],
      "op": "ADD",
      "path": "25"
    },
    "15840": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14142,
        14361
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3D8F"
    },
    "15843": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14142,
        14361
      ],
      "op": "JUMP",
      "path": "25"
    },
    "15844": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14142,
        14361
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "15845": {
      "op": "POP"
    },
    "15846": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14422,
        14448
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 152,
      "value": "0x3DF0"
    },
    "15849": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14422,
        14441
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15850": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14446,
        14447
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "15852": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14422,
        14445
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x45A6"
    },
    "15855": {
      "fn": "CryptoChampions._canMintHero",
      "jump": "i",
      "offset": [
        14422,
        14448
      ],
      "op": "JUMP",
      "path": "25"
    },
    "15856": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14422,
        14448
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "15857": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14396,
        14408
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xF"
    },
    "15859": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14396,
        14408
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "15860": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14378,
        14409
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "15862": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14378,
        14409
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15863": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14378,
        14409
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15864": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14378,
        14409
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15865": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14378,
        14395
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xD"
    },
    "15867": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14378,
        14409
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "15869": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14378,
        14409
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15870": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14378,
        14409
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15871": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14378,
        14409
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15872": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14378,
        14409
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "15874": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14378,
        14409
      ],
      "op": "DUP1",
      "path": "25"
    },
    "15875": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14378,
        14409
      ],
      "op": "DUP4",
      "path": "25"
    },
    "15876": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14378,
        14409
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "15877": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14378,
        14418
      ],
      "op": "DUP8",
      "path": "25"
    },
    "15878": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14378,
        14418
      ],
      "op": "DUP5",
      "path": "25"
    },
    "15879": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14378,
        14418
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15880": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14378,
        14418
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15881": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14378,
        14418
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "15882": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14378,
        14418
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15883": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14378,
        14418
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15884": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14378,
        14418
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "15885": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14378,
        14418
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "15886": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14378,
        14448
      ],
      "op": "GT",
      "path": "25"
    },
    "15887": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14378,
        14448
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "15888": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14378,
        14448
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "15889": {
      "op": "POP"
    },
    "15890": {
      "op": "POP"
    },
    "15891": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13789,
        14455
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "15892": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13789,
        14455
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15893": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13789,
        14455
      ],
      "op": "POP",
      "path": "25"
    },
    "15894": {
      "fn": "CryptoChampions._canMintHero",
      "jump": "o",
      "offset": [
        13789,
        14455
      ],
      "op": "JUMP",
      "path": "25"
    },
    "15895": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6453,
        6725
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "15896": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6523,
        6540
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "15898": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6593,
        6597
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 153,
      "value": "0x13"
    },
    "15900": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6593,
        6597
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "15901": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6564
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0x0"
    },
    "15934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15938": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15940": {
      "op": "SHL"
    },
    "15941": {
      "op": "SUB"
    },
    "15942": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6574
      ],
      "op": "AND",
      "path": "25"
    },
    "15943": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6574
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x70A08231"
    },
    "15948": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6583,
        6587
      ],
      "op": "ADDRESS",
      "path": "25"
    },
    "15949": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "15951": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "15952": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP3",
      "path": "25"
    },
    "15953": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xFFFFFFFF"
    },
    "15958": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "AND",
      "path": "25"
    },
    "15959": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xE0"
    },
    "15961": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "SHL",
      "path": "25"
    },
    "15962": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15963": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15964": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "15966": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "ADD",
      "path": "25"
    },
    "15967": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP1",
      "path": "25"
    },
    "15968": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP3",
      "path": "25"
    },
    "15969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15973": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15975": {
      "op": "SHL"
    },
    "15976": {
      "op": "SUB"
    },
    "15977": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "AND",
      "path": "25"
    },
    "15978": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15979": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15980": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "15982": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "ADD",
      "path": "25"
    },
    "15983": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "15984": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "POP",
      "path": "25"
    },
    "15985": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "POP",
      "path": "25"
    },
    "15986": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "15988": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "15990": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "15991": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP1",
      "path": "25"
    },
    "15992": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP4",
      "path": "25"
    },
    "15993": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "SUB",
      "path": "25"
    },
    "15994": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15995": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP7",
      "path": "25"
    },
    "15996": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP1",
      "path": "25"
    },
    "15997": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "EXTCODESIZE",
      "path": "25"
    },
    "15998": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "15999": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16000": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "16001": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3E89"
    },
    "16004": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "16005": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "16007": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16008": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "REVERT",
      "path": "25"
    },
    "16009": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16010": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "POP",
      "path": "25"
    },
    "16011": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "GAS",
      "path": "25"
    },
    "16012": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "STATICCALL",
      "path": "25"
    },
    "16013": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "16014": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16015": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "16016": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3E9D"
    },
    "16019": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "16020": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "16021": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "16023": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16024": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "16025": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "16026": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "16028": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "REVERT",
      "path": "25"
    },
    "16029": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16030": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "POP",
      "path": "25"
    },
    "16031": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "POP",
      "path": "25"
    },
    "16032": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "POP",
      "path": "25"
    },
    "16033": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "POP",
      "path": "25"
    },
    "16034": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "16036": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "16037": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "16038": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "16040": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16041": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "LT",
      "path": "25"
    },
    "16042": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "16043": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3EB3"
    },
    "16046": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "16047": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "16049": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16050": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "REVERT",
      "path": "25"
    },
    "16051": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16052": {
      "op": "POP"
    },
    "16053": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "16054": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6597
      ],
      "op": "LT",
      "path": "25"
    },
    "16055": {
      "branch": 247,
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6597
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "16056": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6552,
        6598
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3EC0"
    },
    "16059": {
      "branch": 247,
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6552,
        6598
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "16060": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6552,
        6598
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "16062": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6552,
        6598
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16063": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6552,
        6598
      ],
      "op": "REVERT",
      "path": "25"
    },
    "16064": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6552,
        6598
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16065": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6667,
        6718
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 154,
      "value": "0x13A4"
    },
    "16068": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6685,
        6693
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x12"
    },
    "16070": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6685,
        6693
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "16071": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6695,
        6699
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x13"
    },
    "16073": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6695,
        6699
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "16074": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6701,
        6717
      ],
      "op": "DUP5",
      "path": "25"
    },
    "16075": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6667,
        6684
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x49B7"
    },
    "16078": {
      "fn": "CryptoChampions._getRandomNumber",
      "jump": "i",
      "offset": [
        6667,
        6718
      ],
      "op": "JUMP",
      "path": "25"
    },
    "16079": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14567,
        17316
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16080": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14627,
        14656
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "16082": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14627,
        14656
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16083": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14627,
        14656
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16084": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14627,
        14656
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16085": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14627,
        14645
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x14"
    },
    "16087": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14627,
        14656
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "16089": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14627,
        14656
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16090": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14627,
        14656
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "16092": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14627,
        14656
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16093": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14627,
        14656
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "16094": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14627,
        14656
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "16095": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "16097": {
      "offset": [
        5914,
        5943
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16098": {
      "branch": 248,
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5914,
        5943
      ],
      "op": "GT",
      "path": "25"
    },
    "16099": {
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3EEB"
    },
    "16102": {
      "branch": 248,
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "16103": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "16105": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5906,
        5944
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16106": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5906,
        5944
      ],
      "op": "REVERT",
      "path": "25"
    },
    "16107": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16108": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "16110": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16111": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16112": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16113": {
      "offset": [
        5993,
        6000
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "16115": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "16117": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16118": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "16120": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5993,
        6008
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16121": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5993,
        6008
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "16122": {
      "offset": [
        5993,
        6014
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "16123": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5993,
        6014
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "16125": {
      "branch": 249,
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5993,
        6014
      ],
      "op": "AND",
      "path": "25"
    },
    "16126": {
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3F06"
    },
    "16129": {
      "branch": 249,
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "16130": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "16132": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5985,
        6015
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16133": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5985,
        6015
      ],
      "op": "REVERT",
      "path": "25"
    },
    "16134": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16135": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14668,
        14682
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "16137": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14685,
        14714
      ],
      "op": "DUP3",
      "path": "25"
    },
    "16138": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14685,
        14714
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16139": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14685,
        14714
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16140": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14685,
        14703
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x14"
    },
    "16142": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14685,
        14714
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "16144": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14685,
        14714
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16145": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14685,
        14714
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16146": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14685,
        14714
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16147": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14685,
        14714
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "16149": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14685,
        14714
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16150": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14685,
        14714
      ],
      "op": "DUP4",
      "path": "25"
    },
    "16151": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14685,
        14714
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "16152": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14685,
        14714
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "16153": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14747,
        14764
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x15"
    },
    "16155": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14747,
        14775
      ],
      "op": "DUP4",
      "path": "25"
    },
    "16156": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14747,
        14775
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16157": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14747,
        14775
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16158": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14747,
        14775
      ],
      "op": "DUP5",
      "path": "25"
    },
    "16159": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14747,
        14775
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "16160": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14747,
        14775
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "16161": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14819,
        14834
      ],
      "op": "DUP2",
      "path": "25",
      "statement": 155
    },
    "16162": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14819,
        14834
      ],
      "op": "DUP6",
      "path": "25"
    },
    "16163": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14819,
        14834
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16164": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14819,
        14826
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "16166": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14819,
        14834
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16167": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14819,
        14834
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "16168": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14819,
        14834
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16169": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14819,
        14834
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16170": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14819,
        14834
      ],
      "op": "DUP4",
      "path": "25"
    },
    "16171": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14819,
        14834
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "16172": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14819,
        14840
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "16174": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14819,
        14840
      ],
      "op": "ADD",
      "path": "25"
    },
    "16175": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14819,
        14844
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16176": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14819,
        14844
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "16177": {
      "op": "PUSH10",
      "value": "0xFF000000000000000000"
    },
    "16188": {
      "op": "NOT"
    },
    "16189": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14819,
        14844
      ],
      "op": "AND",
      "path": "25"
    },
    "16190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16192": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "16194": {
      "op": "SHL"
    },
    "16195": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14819,
        14844
      ],
      "op": "OR",
      "path": "25"
    },
    "16196": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14819,
        14844
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16197": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14819,
        14844
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "16198": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14685,
        14714
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "16199": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14918,
        14944
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 156,
      "value": "0x3F51"
    },
    "16202": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14928,
        14929
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "16204": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14747,
        14775
      ],
      "op": "DUP4",
      "path": "25"
    },
    "16205": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14918,
        14927
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4B61"
    },
    "16208": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        14918,
        14944
      ],
      "op": "JUMP",
      "path": "25"
    },
    "16209": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14918,
        14944
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16210": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14871,
        14886
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "16212": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14871,
        14886
      ],
      "op": "DUP6",
      "path": "25"
    },
    "16213": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14871,
        14886
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16214": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14871,
        14886
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16215": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14871,
        14878
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "16217": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14871,
        14886
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "16219": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14871,
        14886
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16220": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14871,
        14886
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "16222": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14871,
        14886
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16223": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14871,
        14886
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "16224": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14871,
        14897
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "16226": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14871,
        14897
      ],
      "op": "ADD",
      "path": "25"
    },
    "16227": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14870,
        14944
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16228": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14870,
        14944
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "16229": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "16231": {
      "op": "NOT"
    },
    "16232": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14870,
        14944
      ],
      "op": "AND",
      "path": "25"
    },
    "16233": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14870,
        14944
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "16235": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14870,
        14944
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "16236": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14870,
        14944
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16237": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14870,
        14944
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "16238": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14870,
        14944
      ],
      "op": "AND",
      "path": "25"
    },
    "16239": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14870,
        14944
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "16240": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14870,
        14944
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16241": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14870,
        14944
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "16242": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14870,
        14944
      ],
      "op": "OR",
      "path": "25"
    },
    "16243": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14870,
        14944
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16244": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14870,
        14944
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "16245": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14870,
        14944
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "16246": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14870,
        14944
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16247": {
      "op": "POP"
    },
    "16248": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15013,
        15042
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 157,
      "value": "0x3F82"
    },
    "16251": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15023,
        15024
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "16253": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14870,
        14944
      ],
      "op": "DUP3",
      "path": "25"
    },
    "16254": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15013,
        15022
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4B61"
    },
    "16257": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        15013,
        15042
      ],
      "op": "JUMP",
      "path": "25"
    },
    "16258": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15013,
        15042
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16259": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14970,
        14985
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "16261": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14970,
        14985
      ],
      "op": "DUP6",
      "path": "25"
    },
    "16262": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14970,
        14985
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16263": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14970,
        14985
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16264": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14970,
        14977
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "16266": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14970,
        14985
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "16268": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14970,
        14985
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16269": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14970,
        14985
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "16271": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14970,
        14985
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16272": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14970,
        14985
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "16273": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14970,
        14992
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "16275": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14970,
        14992
      ],
      "op": "ADD",
      "path": "25"
    },
    "16276": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14969,
        15042
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16277": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14969,
        15042
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "16278": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14969,
        15042
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "16280": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14969,
        15042
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16281": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14969,
        15042
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "16282": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14969,
        15042
      ],
      "op": "AND",
      "path": "25"
    },
    "16283": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14969,
        15042
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "16286": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14969,
        15042
      ],
      "op": "MUL",
      "path": "25"
    },
    "16287": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "16290": {
      "op": "NOT"
    },
    "16291": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14969,
        15042
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16292": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14969,
        15042
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "16293": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14969,
        15042
      ],
      "op": "AND",
      "path": "25"
    },
    "16294": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14969,
        15042
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "16295": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14969,
        15042
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16296": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14969,
        15042
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "16297": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14969,
        15042
      ],
      "op": "OR",
      "path": "25"
    },
    "16298": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14969,
        15042
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16299": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14969,
        15042
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "16300": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14969,
        15042
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "16301": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14969,
        15042
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16302": {
      "op": "POP"
    },
    "16303": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15110,
        15139
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 158,
      "value": "0x3FB9"
    },
    "16306": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15120,
        15121
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "16308": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14969,
        15042
      ],
      "op": "DUP3",
      "path": "25"
    },
    "16309": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15110,
        15119
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4B61"
    },
    "16312": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        15110,
        15139
      ],
      "op": "JUMP",
      "path": "25"
    },
    "16313": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15110,
        15139
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16314": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15067,
        15082
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "16316": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15067,
        15082
      ],
      "op": "DUP6",
      "path": "25"
    },
    "16317": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15067,
        15082
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16318": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15067,
        15082
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16319": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15067,
        15074
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "16321": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15067,
        15082
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "16323": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15067,
        15082
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16324": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15067,
        15082
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "16326": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15067,
        15082
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16327": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15067,
        15082
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "16328": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15067,
        15089
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "16330": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15067,
        15089
      ],
      "op": "ADD",
      "path": "25"
    },
    "16331": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15066,
        15139
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16332": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15066,
        15139
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "16333": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15066,
        15139
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "16335": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15066,
        15139
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16336": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15066,
        15139
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "16337": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15066,
        15139
      ],
      "op": "AND",
      "path": "25"
    },
    "16338": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15066,
        15139
      ],
      "op": "PUSH3",
      "path": "25",
      "value": "0x10000"
    },
    "16342": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15066,
        15139
      ],
      "op": "MUL",
      "path": "25"
    },
    "16343": {
      "op": "PUSH3",
      "value": "0xFF0000"
    },
    "16347": {
      "op": "NOT"
    },
    "16348": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15066,
        15139
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16349": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15066,
        15139
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "16350": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15066,
        15139
      ],
      "op": "AND",
      "path": "25"
    },
    "16351": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15066,
        15139
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "16352": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15066,
        15139
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16353": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15066,
        15139
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "16354": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15066,
        15139
      ],
      "op": "OR",
      "path": "25"
    },
    "16355": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15066,
        15139
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16356": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15066,
        15139
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "16357": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15066,
        15139
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "16358": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15066,
        15139
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16359": {
      "op": "POP"
    },
    "16360": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15207,
        15236
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 159,
      "value": "0x3FF2"
    },
    "16363": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15217,
        15218
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "16365": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15066,
        15139
      ],
      "op": "DUP3",
      "path": "25"
    },
    "16366": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15207,
        15216
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4B61"
    },
    "16369": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        15207,
        15236
      ],
      "op": "JUMP",
      "path": "25"
    },
    "16370": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15207,
        15236
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16371": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15164,
        15179
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "16373": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15164,
        15179
      ],
      "op": "DUP6",
      "path": "25"
    },
    "16374": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15164,
        15179
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16375": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15164,
        15179
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16376": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15164,
        15171
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "16378": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15164,
        15179
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "16380": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15164,
        15179
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16381": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15164,
        15179
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "16383": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15164,
        15179
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16384": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15164,
        15179
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "16385": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15164,
        15186
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "16387": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15164,
        15186
      ],
      "op": "ADD",
      "path": "25"
    },
    "16388": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15163,
        15236
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16389": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15163,
        15236
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "16390": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15163,
        15236
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "16392": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15163,
        15236
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16393": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15163,
        15236
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "16394": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15163,
        15236
      ],
      "op": "AND",
      "path": "25"
    },
    "16395": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15163,
        15236
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x1000000"
    },
    "16400": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15163,
        15236
      ],
      "op": "MUL",
      "path": "25"
    },
    "16401": {
      "op": "PUSH4",
      "value": "0xFF000000"
    },
    "16406": {
      "op": "NOT"
    },
    "16407": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15163,
        15236
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16408": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15163,
        15236
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "16409": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15163,
        15236
      ],
      "op": "AND",
      "path": "25"
    },
    "16410": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15163,
        15236
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "16411": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15163,
        15236
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16412": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15163,
        15236
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "16413": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15163,
        15236
      ],
      "op": "OR",
      "path": "25"
    },
    "16414": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15163,
        15236
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16415": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15163,
        15236
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "16416": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15163,
        15236
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "16417": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15163,
        15236
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16418": {
      "op": "POP"
    },
    "16419": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15304,
        15333
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 160,
      "value": "0x402D"
    },
    "16422": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15314,
        15315
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "16424": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15163,
        15236
      ],
      "op": "DUP3",
      "path": "25"
    },
    "16425": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15304,
        15313
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4B61"
    },
    "16428": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        15304,
        15333
      ],
      "op": "JUMP",
      "path": "25"
    },
    "16429": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15304,
        15333
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16430": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15261,
        15276
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "16432": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15261,
        15276
      ],
      "op": "DUP6",
      "path": "25"
    },
    "16433": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15261,
        15276
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16434": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15261,
        15276
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16435": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15261,
        15268
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "16437": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15261,
        15276
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "16439": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15261,
        15276
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16440": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15261,
        15276
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "16442": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15261,
        15276
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16443": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15261,
        15276
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "16444": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15261,
        15283
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "16446": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15261,
        15283
      ],
      "op": "ADD",
      "path": "25"
    },
    "16447": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15260,
        15333
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16448": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15260,
        15333
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "16449": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15260,
        15333
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "16451": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15260,
        15333
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16452": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15260,
        15333
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "16453": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15260,
        15333
      ],
      "op": "AND",
      "path": "25"
    },
    "16454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16456": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16458": {
      "op": "SHL"
    },
    "16459": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15260,
        15333
      ],
      "op": "MUL",
      "path": "25"
    },
    "16460": {
      "op": "PUSH5",
      "value": "0xFF00000000"
    },
    "16466": {
      "op": "NOT"
    },
    "16467": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15260,
        15333
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16468": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15260,
        15333
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "16469": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15260,
        15333
      ],
      "op": "AND",
      "path": "25"
    },
    "16470": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15260,
        15333
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "16471": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15260,
        15333
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16472": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15260,
        15333
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "16473": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15260,
        15333
      ],
      "op": "OR",
      "path": "25"
    },
    "16474": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15260,
        15333
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16475": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15260,
        15333
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "16476": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15260,
        15333
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "16477": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15260,
        15333
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16478": {
      "op": "POP"
    },
    "16479": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15405,
        15434
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 161,
      "value": "0x4069"
    },
    "16482": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15415,
        15416
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x9"
    },
    "16484": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15260,
        15333
      ],
      "op": "DUP3",
      "path": "25"
    },
    "16485": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15405,
        15414
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4B61"
    },
    "16488": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        15405,
        15434
      ],
      "op": "JUMP",
      "path": "25"
    },
    "16489": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15405,
        15434
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16490": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15359,
        15374
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "16492": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15359,
        15374
      ],
      "op": "DUP6",
      "path": "25"
    },
    "16493": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15359,
        15374
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16494": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15359,
        15374
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16495": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15359,
        15366
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "16497": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15359,
        15374
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "16499": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15359,
        15374
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16500": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15359,
        15374
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "16502": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15359,
        15374
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16503": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15359,
        15374
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "16504": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15359,
        15384
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "16506": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15359,
        15384
      ],
      "op": "ADD",
      "path": "25"
    },
    "16507": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15358,
        15434
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16508": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15358,
        15434
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "16509": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15358,
        15434
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "16511": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15358,
        15434
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16512": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15358,
        15434
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "16513": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15358,
        15434
      ],
      "op": "AND",
      "path": "25"
    },
    "16514": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15358,
        15434
      ],
      "op": "PUSH6",
      "path": "25",
      "value": "0x10000000000"
    },
    "16521": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15358,
        15434
      ],
      "op": "MUL",
      "path": "25"
    },
    "16522": {
      "op": "PUSH6",
      "value": "0xFF0000000000"
    },
    "16529": {
      "op": "NOT"
    },
    "16530": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15358,
        15434
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16531": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15358,
        15434
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "16532": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15358,
        15434
      ],
      "op": "AND",
      "path": "25"
    },
    "16533": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15358,
        15434
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "16534": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15358,
        15434
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16535": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15358,
        15434
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "16536": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15358,
        15434
      ],
      "op": "OR",
      "path": "25"
    },
    "16537": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15358,
        15434
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16538": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15358,
        15434
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "16539": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15358,
        15434
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "16540": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15358,
        15434
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16541": {
      "op": "POP"
    },
    "16542": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15506,
        15536
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 162,
      "value": "0x40A8"
    },
    "16545": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15516,
        15518
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1E"
    },
    "16547": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15358,
        15434
      ],
      "op": "DUP3",
      "path": "25"
    },
    "16548": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15506,
        15515
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4B61"
    },
    "16551": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        15506,
        15536
      ],
      "op": "JUMP",
      "path": "25"
    },
    "16552": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15506,
        15536
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16553": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15459,
        15474
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "16555": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15459,
        15474
      ],
      "op": "DUP6",
      "path": "25"
    },
    "16556": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15459,
        15474
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16557": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15459,
        15474
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16558": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15459,
        15466
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "16560": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15459,
        15474
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "16562": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15459,
        15474
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16563": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15459,
        15474
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "16565": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15459,
        15474
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16566": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15459,
        15474
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "16567": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15459,
        15485
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "16569": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15459,
        15485
      ],
      "op": "ADD",
      "path": "25"
    },
    "16570": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15458,
        15536
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16571": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15458,
        15536
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "16572": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15458,
        15536
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "16574": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15458,
        15536
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16575": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15458,
        15536
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "16576": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15458,
        15536
      ],
      "op": "AND",
      "path": "25"
    },
    "16577": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15458,
        15536
      ],
      "op": "PUSH7",
      "path": "25",
      "value": "0x1000000000000"
    },
    "16585": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15458,
        15536
      ],
      "op": "MUL",
      "path": "25"
    },
    "16586": {
      "op": "PUSH7",
      "value": "0xFF000000000000"
    },
    "16594": {
      "op": "NOT"
    },
    "16595": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15458,
        15536
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16596": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15458,
        15536
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "16597": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15458,
        15536
      ],
      "op": "AND",
      "path": "25"
    },
    "16598": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15458,
        15536
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "16599": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15458,
        15536
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16600": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15458,
        15536
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "16601": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15458,
        15536
      ],
      "op": "OR",
      "path": "25"
    },
    "16602": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15458,
        15536
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16603": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15458,
        15536
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "16604": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15458,
        15536
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "16605": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15458,
        15536
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16606": {
      "op": "POP"
    },
    "16607": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15607,
        15637
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 163,
      "value": "0x40E9"
    },
    "16610": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15617,
        15619
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x18"
    },
    "16612": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15458,
        15536
      ],
      "op": "DUP3",
      "path": "25"
    },
    "16613": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15607,
        15616
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4B61"
    },
    "16616": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        15607,
        15637
      ],
      "op": "JUMP",
      "path": "25"
    },
    "16617": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15607,
        15637
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16618": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15562,
        15577
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "16620": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15562,
        15577
      ],
      "op": "DUP6",
      "path": "25"
    },
    "16621": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15562,
        15577
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16622": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15562,
        15577
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16623": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15562,
        15569
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "16625": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15562,
        15577
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "16627": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15562,
        15577
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16628": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15562,
        15577
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "16630": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15562,
        15577
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16631": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15562,
        15577
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "16632": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15562,
        15586
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "16634": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15562,
        15586
      ],
      "op": "ADD",
      "path": "25"
    },
    "16635": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15561,
        15637
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16636": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15561,
        15637
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "16637": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15561,
        15637
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "16639": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15561,
        15637
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16640": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15561,
        15637
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "16641": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15561,
        15637
      ],
      "op": "AND",
      "path": "25"
    },
    "16642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16644": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "16646": {
      "op": "SHL"
    },
    "16647": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15561,
        15637
      ],
      "op": "MUL",
      "path": "25"
    },
    "16648": {
      "op": "PUSH8",
      "value": "0xFF00000000000000"
    },
    "16657": {
      "op": "NOT"
    },
    "16658": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15561,
        15637
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16659": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15561,
        15637
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "16660": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15561,
        15637
      ],
      "op": "AND",
      "path": "25"
    },
    "16661": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15561,
        15637
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "16662": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15561,
        15637
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16663": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15561,
        15637
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "16664": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15561,
        15637
      ],
      "op": "OR",
      "path": "25"
    },
    "16665": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15561,
        15637
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16666": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15561,
        15637
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "16667": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15561,
        15637
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "16668": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15561,
        15637
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16669": {
      "op": "POP"
    },
    "16670": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15707,
        15736
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 164,
      "value": "0x4128"
    },
    "16673": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15562,
        15586
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "16675": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15561,
        15637
      ],
      "op": "DUP3",
      "path": "25"
    },
    "16676": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15707,
        15716
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4B61"
    },
    "16679": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        15707,
        15736
      ],
      "op": "JUMP",
      "path": "25"
    },
    "16680": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15707,
        15736
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16681": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15663,
        15678
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "16683": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15663,
        15678
      ],
      "op": "DUP6",
      "path": "25"
    },
    "16684": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15663,
        15678
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16685": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15663,
        15678
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16686": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15663,
        15670
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "16688": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15663,
        15678
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "16690": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15663,
        15678
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16691": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15663,
        15678
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "16693": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15663,
        15678
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16694": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15663,
        15678
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "16695": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15663,
        15686
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "16697": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15663,
        15686
      ],
      "op": "ADD",
      "path": "25"
    },
    "16698": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15662,
        15736
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16699": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15662,
        15736
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "16700": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15662,
        15736
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "16702": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15662,
        15736
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16703": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15662,
        15736
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "16704": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15662,
        15736
      ],
      "op": "AND",
      "path": "25"
    },
    "16705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16707": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16709": {
      "op": "SHL"
    },
    "16710": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15662,
        15736
      ],
      "op": "MUL",
      "path": "25"
    },
    "16711": {
      "op": "PUSH9",
      "value": "0xFF0000000000000000"
    },
    "16721": {
      "op": "NOT"
    },
    "16722": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15662,
        15736
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16723": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15662,
        15736
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "16724": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15662,
        15736
      ],
      "op": "AND",
      "path": "25"
    },
    "16725": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15662,
        15736
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "16726": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15662,
        15736
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16727": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15662,
        15736
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "16728": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15662,
        15736
      ],
      "op": "OR",
      "path": "25"
    },
    "16729": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15662,
        15736
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16730": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15662,
        15736
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "16731": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15662,
        15736
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "16732": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15662,
        15736
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16733": {
      "op": "POP"
    },
    "16734": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15801,
        15831
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 165,
      "value": "0x4168"
    },
    "16737": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15811,
        15813
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x15"
    },
    "16739": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15662,
        15736
      ],
      "op": "DUP3",
      "path": "25"
    },
    "16740": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15801,
        15810
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4B61"
    },
    "16743": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        15801,
        15831
      ],
      "op": "JUMP",
      "path": "25"
    },
    "16744": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15801,
        15831
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16745": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15762,
        15777
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "16747": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15762,
        15777
      ],
      "op": "DUP6",
      "path": "25"
    },
    "16748": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15762,
        15777
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16749": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15762,
        15777
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16750": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15762,
        15769
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "16752": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15762,
        15777
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "16754": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15762,
        15777
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16755": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15762,
        15777
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "16757": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15762,
        15777
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16758": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15762,
        15777
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "16759": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15762,
        15780
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "16761": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15762,
        15780
      ],
      "op": "ADD",
      "path": "25"
    },
    "16762": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15761,
        15831
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16763": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15761,
        15831
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "16764": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "16766": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "16768": {
      "op": "SHL"
    },
    "16769": {
      "op": "NOT"
    },
    "16770": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15761,
        15831
      ],
      "op": "AND",
      "path": "25"
    },
    "16771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16773": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "16775": {
      "op": "SHL"
    },
    "16776": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15761,
        15831
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "16778": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15761,
        15831
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "16779": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15761,
        15831
      ],
      "op": "DUP6",
      "path": "25"
    },
    "16780": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15761,
        15831
      ],
      "op": "AND",
      "path": "25"
    },
    "16781": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15761,
        15831
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16782": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15761,
        15831
      ],
      "op": "MUL",
      "path": "25"
    },
    "16783": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15761,
        15831
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "16784": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15761,
        15831
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16785": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15761,
        15831
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "16786": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15761,
        15831
      ],
      "op": "OR",
      "path": "25"
    },
    "16787": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15761,
        15831
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "16788": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15761,
        15831
      ],
      "op": "DUP3",
      "path": "25"
    },
    "16789": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15761,
        15831
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16790": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15761,
        15831
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "16791": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15761,
        15831
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "16792": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15761,
        15831
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "16793": {
      "op": "POP"
    },
    "16794": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15882,
        15907
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 166,
      "value": "0x41A8"
    },
    "16797": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15882,
        15907
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "16798": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15882,
        15900
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "16799": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15882,
        15900
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16800": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15882,
        15900
      ],
      "op": "DIV",
      "path": "25"
    },
    "16801": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15882,
        15900
      ],
      "op": "AND",
      "path": "25"
    },
    "16802": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15905,
        15906
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x9"
    },
    "16804": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15882,
        15904
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34D7"
    },
    "16807": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        15882,
        15907
      ],
      "op": "JUMP",
      "path": "25"
    },
    "16808": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15882,
        15907
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16809": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15855,
        15870
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "16811": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15855,
        15870
      ],
      "op": "DUP5",
      "path": "25"
    },
    "16812": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15855,
        15870
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16813": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15855,
        15870
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16814": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15855,
        15862
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "16816": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15855,
        15870
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "16818": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15855,
        15870
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16819": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15855,
        15870
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "16821": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15855,
        15870
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16822": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15855,
        15870
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "16823": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15855,
        15873
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "16825": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15855,
        15873
      ],
      "op": "ADD",
      "path": "25"
    },
    "16826": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15855,
        15908
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16827": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15855,
        15908
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "16828": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15855,
        15908
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "16830": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15855,
        15908
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "16831": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15855,
        15908
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16832": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15855,
        15908
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "16833": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15855,
        15908
      ],
      "op": "AND",
      "path": "25"
    },
    "16834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16836": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "16838": {
      "op": "SHL"
    },
    "16839": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15855,
        15908
      ],
      "op": "MUL",
      "path": "25"
    },
    "16840": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "16842": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "16844": {
      "op": "SHL"
    },
    "16845": {
      "op": "NOT"
    },
    "16846": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15855,
        15908
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16847": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15855,
        15908
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "16848": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15855,
        15908
      ],
      "op": "AND",
      "path": "25"
    },
    "16849": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15855,
        15908
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "16850": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15855,
        15908
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16851": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15855,
        15908
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "16852": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15855,
        15908
      ],
      "op": "OR",
      "path": "25"
    },
    "16853": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15855,
        15908
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16854": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15855,
        15908
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "16855": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15960,
        15990
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 167,
      "value": "0x41E1"
    },
    "16858": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15970,
        15972
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x15"
    },
    "16860": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15974,
        15989
      ],
      "op": "DUP3",
      "path": "25"
    },
    "16861": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15960,
        15969
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4B61"
    },
    "16864": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        15960,
        15990
      ],
      "op": "JUMP",
      "path": "25"
    },
    "16865": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15960,
        15990
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16866": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15919,
        15934
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "16868": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15919,
        15934
      ],
      "op": "DUP6",
      "path": "25"
    },
    "16869": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15919,
        15934
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16870": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15919,
        15934
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16871": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15919,
        15926
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "16873": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15919,
        15934
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "16875": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15919,
        15934
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16876": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15919,
        15934
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "16878": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15919,
        15934
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16879": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15919,
        15934
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "16880": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15919,
        15939
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "16882": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15919,
        15939
      ],
      "op": "ADD",
      "path": "25"
    },
    "16883": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15918,
        15990
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16884": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15918,
        15990
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "16885": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "16887": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "16889": {
      "op": "SHL"
    },
    "16890": {
      "op": "NOT"
    },
    "16891": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15918,
        15990
      ],
      "op": "AND",
      "path": "25"
    },
    "16892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16894": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "16896": {
      "op": "SHL"
    },
    "16897": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15918,
        15990
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "16899": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15918,
        15990
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "16900": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15918,
        15990
      ],
      "op": "DUP6",
      "path": "25"
    },
    "16901": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15918,
        15990
      ],
      "op": "AND",
      "path": "25"
    },
    "16902": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15918,
        15990
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16903": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15918,
        15990
      ],
      "op": "MUL",
      "path": "25"
    },
    "16904": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15918,
        15990
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "16905": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15918,
        15990
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16906": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15918,
        15990
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "16907": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15918,
        15990
      ],
      "op": "OR",
      "path": "25"
    },
    "16908": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15918,
        15990
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "16909": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15918,
        15990
      ],
      "op": "DUP3",
      "path": "25"
    },
    "16910": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15918,
        15990
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16911": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15918,
        15990
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "16912": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15918,
        15990
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "16913": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15918,
        15990
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "16914": {
      "op": "POP"
    },
    "16915": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16043,
        16070
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 168,
      "value": "0x4221"
    },
    "16918": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16043,
        16070
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "16919": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16043,
        16063
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "16920": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16043,
        16063
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16921": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16043,
        16063
      ],
      "op": "DIV",
      "path": "25"
    },
    "16922": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16043,
        16063
      ],
      "op": "AND",
      "path": "25"
    },
    "16923": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16068,
        16069
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x9"
    },
    "16925": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16043,
        16067
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34D7"
    },
    "16928": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        16043,
        16070
      ],
      "op": "JUMP",
      "path": "25"
    },
    "16929": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16043,
        16070
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16930": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16014,
        16029
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "16932": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16014,
        16029
      ],
      "op": "DUP5",
      "path": "25"
    },
    "16933": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16014,
        16029
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16934": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16014,
        16029
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16935": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16014,
        16021
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "16937": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16014,
        16029
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "16939": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16014,
        16029
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16940": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16014,
        16029
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "16942": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16014,
        16029
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16943": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16014,
        16029
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "16944": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16014,
        16034
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "16946": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16014,
        16034
      ],
      "op": "ADD",
      "path": "25"
    },
    "16947": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16014,
        16071
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16948": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16014,
        16071
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "16949": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16014,
        16071
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "16951": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16014,
        16071
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "16952": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16014,
        16071
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16953": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16014,
        16071
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "16954": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16014,
        16071
      ],
      "op": "AND",
      "path": "25"
    },
    "16955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16957": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "16959": {
      "op": "SHL"
    },
    "16960": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16014,
        16071
      ],
      "op": "MUL",
      "path": "25"
    },
    "16961": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "16963": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "16965": {
      "op": "SHL"
    },
    "16966": {
      "op": "NOT"
    },
    "16967": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16014,
        16071
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16968": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16014,
        16071
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "16969": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16014,
        16071
      ],
      "op": "AND",
      "path": "25"
    },
    "16970": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16014,
        16071
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "16971": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16014,
        16071
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16972": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16014,
        16071
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "16973": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16014,
        16071
      ],
      "op": "OR",
      "path": "25"
    },
    "16974": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16014,
        16071
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16975": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16014,
        16071
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "16976": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16126,
        16156
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 169,
      "value": "0x425A"
    },
    "16979": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16136,
        16138
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "16981": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16140,
        16155
      ],
      "op": "DUP3",
      "path": "25"
    },
    "16982": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16126,
        16135
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4B61"
    },
    "16985": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        16126,
        16156
      ],
      "op": "JUMP",
      "path": "25"
    },
    "16986": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16126,
        16156
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16987": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16082,
        16097
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "16989": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16082,
        16097
      ],
      "op": "DUP6",
      "path": "25"
    },
    "16990": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16082,
        16097
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16991": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16082,
        16097
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16992": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16082,
        16089
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "16994": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16082,
        16097
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "16996": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16082,
        16097
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16997": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16082,
        16097
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "16999": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16082,
        16097
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17000": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16082,
        16097
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "17001": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16082,
        16105
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "17003": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16082,
        16105
      ],
      "op": "ADD",
      "path": "25"
    },
    "17004": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16081,
        16156
      ],
      "op": "DUP1",
      "path": "25"
    },
    "17005": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16081,
        16156
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "17006": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17008": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17010": {
      "op": "SHL"
    },
    "17011": {
      "op": "NOT"
    },
    "17012": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16081,
        16156
      ],
      "op": "AND",
      "path": "25"
    },
    "17013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17015": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17017": {
      "op": "SHL"
    },
    "17018": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16081,
        16156
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "17020": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16081,
        16156
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "17021": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16081,
        16156
      ],
      "op": "DUP6",
      "path": "25"
    },
    "17022": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16081,
        16156
      ],
      "op": "AND",
      "path": "25"
    },
    "17023": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16081,
        16156
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17024": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16081,
        16156
      ],
      "op": "MUL",
      "path": "25"
    },
    "17025": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16081,
        16156
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17026": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16081,
        16156
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17027": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16081,
        16156
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17028": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16081,
        16156
      ],
      "op": "OR",
      "path": "25"
    },
    "17029": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16081,
        16156
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17030": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16081,
        16156
      ],
      "op": "DUP3",
      "path": "25"
    },
    "17031": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16081,
        16156
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17032": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16081,
        16156
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "17033": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16081,
        16156
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17034": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16081,
        16156
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "17035": {
      "op": "POP"
    },
    "17036": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16212,
        16242
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 170,
      "value": "0x429A"
    },
    "17039": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16212,
        16242
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17040": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16212,
        16235
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17041": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16212,
        16235
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17042": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16212,
        16235
      ],
      "op": "DIV",
      "path": "25"
    },
    "17043": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16212,
        16235
      ],
      "op": "AND",
      "path": "25"
    },
    "17044": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16240,
        16241
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x9"
    },
    "17046": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16212,
        16239
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34D7"
    },
    "17049": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        16212,
        16242
      ],
      "op": "JUMP",
      "path": "25"
    },
    "17050": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16212,
        16242
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "17051": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16180,
        16195
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "17053": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16180,
        16195
      ],
      "op": "DUP5",
      "path": "25"
    },
    "17054": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16180,
        16195
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17055": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16180,
        16195
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17056": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16180,
        16187
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "17058": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16180,
        16195
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "17060": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16180,
        16195
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17061": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16180,
        16195
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "17063": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16180,
        16195
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17064": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16180,
        16195
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "17065": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16180,
        16203
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "17067": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16180,
        16203
      ],
      "op": "ADD",
      "path": "25"
    },
    "17068": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16180,
        16243
      ],
      "op": "DUP1",
      "path": "25"
    },
    "17069": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16180,
        16243
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "17070": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16180,
        16243
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "17072": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16180,
        16243
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17073": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16180,
        16243
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17074": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16180,
        16243
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17075": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16180,
        16243
      ],
      "op": "AND",
      "path": "25"
    },
    "17076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17078": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17080": {
      "op": "SHL"
    },
    "17081": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16180,
        16243
      ],
      "op": "MUL",
      "path": "25"
    },
    "17082": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17084": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17086": {
      "op": "SHL"
    },
    "17087": {
      "op": "NOT"
    },
    "17088": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16180,
        16243
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17089": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16180,
        16243
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17090": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16180,
        16243
      ],
      "op": "AND",
      "path": "25"
    },
    "17091": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16180,
        16243
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17092": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16180,
        16243
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17093": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16180,
        16243
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17094": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16180,
        16243
      ],
      "op": "OR",
      "path": "25"
    },
    "17095": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16180,
        16243
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17096": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16180,
        16243
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "17097": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16300,
        16330
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 171,
      "value": "0x42D3"
    },
    "17100": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16310,
        16312
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x10"
    },
    "17102": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16314,
        16329
      ],
      "op": "DUP3",
      "path": "25"
    },
    "17103": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16300,
        16309
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4B61"
    },
    "17106": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        16300,
        16330
      ],
      "op": "JUMP",
      "path": "25"
    },
    "17107": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16300,
        16330
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "17108": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16255,
        16270
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "17110": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16255,
        16270
      ],
      "op": "DUP6",
      "path": "25"
    },
    "17111": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16255,
        16270
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17112": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16255,
        16270
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17113": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16255,
        16262
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "17115": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16255,
        16270
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "17117": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16255,
        16270
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17118": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16255,
        16270
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "17120": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16255,
        16270
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17121": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16255,
        16270
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "17122": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16255,
        16279
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "17124": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16255,
        16279
      ],
      "op": "ADD",
      "path": "25"
    },
    "17125": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16254,
        16330
      ],
      "op": "DUP1",
      "path": "25"
    },
    "17126": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16254,
        16330
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "17127": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17129": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "17131": {
      "op": "SHL"
    },
    "17132": {
      "op": "NOT"
    },
    "17133": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16254,
        16330
      ],
      "op": "AND",
      "path": "25"
    },
    "17134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17136": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "17138": {
      "op": "SHL"
    },
    "17139": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16254,
        16330
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "17141": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16254,
        16330
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "17142": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16254,
        16330
      ],
      "op": "DUP6",
      "path": "25"
    },
    "17143": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16254,
        16330
      ],
      "op": "AND",
      "path": "25"
    },
    "17144": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16254,
        16330
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17145": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16254,
        16330
      ],
      "op": "MUL",
      "path": "25"
    },
    "17146": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16254,
        16330
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17147": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16254,
        16330
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17148": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16254,
        16330
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17149": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16254,
        16330
      ],
      "op": "OR",
      "path": "25"
    },
    "17150": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16254,
        16330
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17151": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16254,
        16330
      ],
      "op": "DUP3",
      "path": "25"
    },
    "17152": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16254,
        16330
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17153": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16254,
        16330
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "17154": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16254,
        16330
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17155": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16254,
        16330
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "17156": {
      "op": "POP"
    },
    "17157": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16386,
        16417
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 172,
      "value": "0x4313"
    },
    "17160": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16386,
        16417
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17161": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16386,
        16410
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17162": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16386,
        16410
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17163": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16386,
        16410
      ],
      "op": "DIV",
      "path": "25"
    },
    "17164": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16386,
        16410
      ],
      "op": "AND",
      "path": "25"
    },
    "17165": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16415,
        16416
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "17167": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16386,
        16414
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34D7"
    },
    "17170": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        16386,
        16417
      ],
      "op": "JUMP",
      "path": "25"
    },
    "17171": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16386,
        16417
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "17172": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16353,
        16368
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "17174": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16353,
        16368
      ],
      "op": "DUP5",
      "path": "25"
    },
    "17175": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16353,
        16368
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17176": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16353,
        16368
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17177": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16353,
        16360
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "17179": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16353,
        16368
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "17181": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16353,
        16368
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17182": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16353,
        16368
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "17184": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16353,
        16368
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17185": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16353,
        16368
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "17186": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16353,
        16377
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "17188": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16353,
        16377
      ],
      "op": "ADD",
      "path": "25"
    },
    "17189": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16353,
        16418
      ],
      "op": "DUP1",
      "path": "25"
    },
    "17190": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16353,
        16418
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "17191": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16353,
        16418
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "17193": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16353,
        16418
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17194": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16353,
        16418
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17195": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16353,
        16418
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17196": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16353,
        16418
      ],
      "op": "AND",
      "path": "25"
    },
    "17197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17199": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "17201": {
      "op": "SHL"
    },
    "17202": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16353,
        16418
      ],
      "op": "MUL",
      "path": "25"
    },
    "17203": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17205": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "17207": {
      "op": "SHL"
    },
    "17208": {
      "op": "NOT"
    },
    "17209": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16353,
        16418
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17210": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16353,
        16418
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17211": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16353,
        16418
      ],
      "op": "AND",
      "path": "25"
    },
    "17212": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16353,
        16418
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17213": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16353,
        16418
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17214": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16353,
        16418
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17215": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16353,
        16418
      ],
      "op": "OR",
      "path": "25"
    },
    "17216": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16353,
        16418
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17217": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16353,
        16418
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "17218": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16475,
        16505
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 173,
      "value": "0x434C"
    },
    "17221": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16485,
        16487
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x10"
    },
    "17223": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16489,
        16504
      ],
      "op": "DUP3",
      "path": "25"
    },
    "17224": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16475,
        16484
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4B61"
    },
    "17227": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        16475,
        16505
      ],
      "op": "JUMP",
      "path": "25"
    },
    "17228": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16475,
        16505
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "17229": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16429,
        16444
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "17231": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16429,
        16444
      ],
      "op": "DUP6",
      "path": "25"
    },
    "17232": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16429,
        16444
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17233": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16429,
        16444
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17234": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16429,
        16436
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "17236": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16429,
        16444
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "17238": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16429,
        16444
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17239": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16429,
        16444
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "17241": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16429,
        16444
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17242": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16429,
        16444
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "17243": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16429,
        16454
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "17245": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16429,
        16454
      ],
      "op": "ADD",
      "path": "25"
    },
    "17246": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16428,
        16505
      ],
      "op": "DUP1",
      "path": "25"
    },
    "17247": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16428,
        16505
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "17248": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17250": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "17252": {
      "op": "SHL"
    },
    "17253": {
      "op": "NOT"
    },
    "17254": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16428,
        16505
      ],
      "op": "AND",
      "path": "25"
    },
    "17255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17257": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "17259": {
      "op": "SHL"
    },
    "17260": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16428,
        16505
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "17262": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16428,
        16505
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "17263": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16428,
        16505
      ],
      "op": "DUP6",
      "path": "25"
    },
    "17264": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16428,
        16505
      ],
      "op": "AND",
      "path": "25"
    },
    "17265": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16428,
        16505
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17266": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16428,
        16505
      ],
      "op": "MUL",
      "path": "25"
    },
    "17267": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16428,
        16505
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17268": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16428,
        16505
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17269": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16428,
        16505
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17270": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16428,
        16505
      ],
      "op": "OR",
      "path": "25"
    },
    "17271": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16428,
        16505
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17272": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16428,
        16505
      ],
      "op": "DUP3",
      "path": "25"
    },
    "17273": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16428,
        16505
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17274": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16428,
        16505
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "17275": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16428,
        16505
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17276": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16428,
        16505
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "17277": {
      "op": "POP"
    },
    "17278": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16562,
        16594
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 174,
      "value": "0x438C"
    },
    "17281": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16562,
        16594
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17282": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16562,
        16587
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17283": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16562,
        16587
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17284": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16562,
        16587
      ],
      "op": "DIV",
      "path": "25"
    },
    "17285": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16562,
        16587
      ],
      "op": "AND",
      "path": "25"
    },
    "17286": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16592,
        16593
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "17288": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16562,
        16591
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34D7"
    },
    "17291": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        16562,
        16594
      ],
      "op": "JUMP",
      "path": "25"
    },
    "17292": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16562,
        16594
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "17293": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16528,
        16543
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "17295": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16528,
        16543
      ],
      "op": "DUP5",
      "path": "25"
    },
    "17296": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16528,
        16543
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17297": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16528,
        16543
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17298": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16528,
        16535
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "17300": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16528,
        16543
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "17302": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16528,
        16543
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17303": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16528,
        16543
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "17305": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16528,
        16543
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17306": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16528,
        16543
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "17307": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16528,
        16553
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "17309": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16528,
        16553
      ],
      "op": "ADD",
      "path": "25"
    },
    "17310": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16528,
        16595
      ],
      "op": "DUP1",
      "path": "25"
    },
    "17311": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16528,
        16595
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "17312": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16528,
        16595
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "17314": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16528,
        16595
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17315": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16528,
        16595
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17316": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16528,
        16595
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17317": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16528,
        16595
      ],
      "op": "AND",
      "path": "25"
    },
    "17318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17320": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "17322": {
      "op": "SHL"
    },
    "17323": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16528,
        16595
      ],
      "op": "MUL",
      "path": "25"
    },
    "17324": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17326": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "17328": {
      "op": "SHL"
    },
    "17329": {
      "op": "NOT"
    },
    "17330": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16528,
        16595
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17331": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16528,
        16595
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17332": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16528,
        16595
      ],
      "op": "AND",
      "path": "25"
    },
    "17333": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16528,
        16595
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17334": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16528,
        16595
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17335": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16528,
        16595
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17336": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16528,
        16595
      ],
      "op": "OR",
      "path": "25"
    },
    "17337": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16528,
        16595
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17338": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16528,
        16595
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "17339": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16655,
        16685
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 175,
      "value": "0x43C5"
    },
    "17342": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16665,
        16667
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x10"
    },
    "17344": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16669,
        16684
      ],
      "op": "DUP3",
      "path": "25"
    },
    "17345": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16655,
        16664
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4B61"
    },
    "17348": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        16655,
        16685
      ],
      "op": "JUMP",
      "path": "25"
    },
    "17349": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16655,
        16685
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "17350": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16606,
        16621
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "17352": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16606,
        16621
      ],
      "op": "DUP6",
      "path": "25"
    },
    "17353": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16606,
        16621
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17354": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16606,
        16621
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17355": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16606,
        16613
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "17357": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16606,
        16621
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "17359": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16606,
        16621
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17360": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16606,
        16621
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "17362": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16606,
        16621
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17363": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16606,
        16621
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "17364": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16606,
        16634
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "17366": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16606,
        16634
      ],
      "op": "ADD",
      "path": "25"
    },
    "17367": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16605,
        16685
      ],
      "op": "DUP1",
      "path": "25"
    },
    "17368": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16605,
        16685
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "17369": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17371": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "17373": {
      "op": "SHL"
    },
    "17374": {
      "op": "NOT"
    },
    "17375": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16605,
        16685
      ],
      "op": "AND",
      "path": "25"
    },
    "17376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17378": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "17380": {
      "op": "SHL"
    },
    "17381": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16605,
        16685
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "17383": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16605,
        16685
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "17384": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16605,
        16685
      ],
      "op": "DUP6",
      "path": "25"
    },
    "17385": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16605,
        16685
      ],
      "op": "AND",
      "path": "25"
    },
    "17386": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16605,
        16685
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17387": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16605,
        16685
      ],
      "op": "MUL",
      "path": "25"
    },
    "17388": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16605,
        16685
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17389": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16605,
        16685
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17390": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16605,
        16685
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17391": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16605,
        16685
      ],
      "op": "OR",
      "path": "25"
    },
    "17392": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16605,
        16685
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17393": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16605,
        16685
      ],
      "op": "DUP3",
      "path": "25"
    },
    "17394": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16605,
        16685
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17395": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16605,
        16685
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "17396": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16605,
        16685
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17397": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16605,
        16685
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "17398": {
      "op": "POP"
    },
    "17399": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16745,
        16780
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 176,
      "value": "0x4405"
    },
    "17402": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16745,
        16780
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17403": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16745,
        16773
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17404": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16745,
        16773
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17405": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16745,
        16773
      ],
      "op": "DIV",
      "path": "25"
    },
    "17406": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16745,
        16773
      ],
      "op": "AND",
      "path": "25"
    },
    "17407": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16778,
        16779
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "17409": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16745,
        16777
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34D7"
    },
    "17412": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        16745,
        16780
      ],
      "op": "JUMP",
      "path": "25"
    },
    "17413": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16745,
        16780
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "17414": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16708,
        16723
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "17416": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16708,
        16723
      ],
      "op": "DUP5",
      "path": "25"
    },
    "17417": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16708,
        16723
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17418": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16708,
        16723
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17419": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16708,
        16715
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "17421": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16708,
        16723
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "17423": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16708,
        16723
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17424": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16708,
        16723
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "17426": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16708,
        16723
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17427": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16708,
        16723
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "17428": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16708,
        16736
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "17430": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16708,
        16736
      ],
      "op": "ADD",
      "path": "25"
    },
    "17431": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16708,
        16781
      ],
      "op": "DUP1",
      "path": "25"
    },
    "17432": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16708,
        16781
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "17433": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16708,
        16781
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "17435": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16708,
        16781
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17436": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16708,
        16781
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17437": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16708,
        16781
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17438": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16708,
        16781
      ],
      "op": "AND",
      "path": "25"
    },
    "17439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17441": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "17443": {
      "op": "SHL"
    },
    "17444": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16708,
        16781
      ],
      "op": "MUL",
      "path": "25"
    },
    "17445": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17447": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "17449": {
      "op": "SHL"
    },
    "17450": {
      "op": "NOT"
    },
    "17451": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16708,
        16781
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17452": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16708,
        16781
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17453": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16708,
        16781
      ],
      "op": "AND",
      "path": "25"
    },
    "17454": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16708,
        16781
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17455": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16708,
        16781
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17456": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16708,
        16781
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17457": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16708,
        16781
      ],
      "op": "OR",
      "path": "25"
    },
    "17458": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16708,
        16781
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17459": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16708,
        16781
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "17460": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16841,
        16871
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 177,
      "value": "0x443E"
    },
    "17463": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16851,
        16853
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x10"
    },
    "17465": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16855,
        16870
      ],
      "op": "DUP3",
      "path": "25"
    },
    "17466": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16841,
        16850
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4B61"
    },
    "17469": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        16841,
        16871
      ],
      "op": "JUMP",
      "path": "25"
    },
    "17470": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16841,
        16871
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "17471": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16792,
        16807
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "17473": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16792,
        16807
      ],
      "op": "DUP6",
      "path": "25"
    },
    "17474": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16792,
        16807
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17475": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16792,
        16807
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17476": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16792,
        16799
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "17478": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16792,
        16807
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "17480": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16792,
        16807
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17481": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16792,
        16807
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "17483": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16792,
        16807
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17484": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16792,
        16807
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "17485": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16792,
        16820
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "17487": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16792,
        16820
      ],
      "op": "ADD",
      "path": "25"
    },
    "17488": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16791,
        16871
      ],
      "op": "DUP1",
      "path": "25"
    },
    "17489": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16791,
        16871
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "17490": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17492": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17494": {
      "op": "SHL"
    },
    "17495": {
      "op": "NOT"
    },
    "17496": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16791,
        16871
      ],
      "op": "AND",
      "path": "25"
    },
    "17497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17499": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17501": {
      "op": "SHL"
    },
    "17502": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16791,
        16871
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "17504": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16791,
        16871
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "17505": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16791,
        16871
      ],
      "op": "DUP6",
      "path": "25"
    },
    "17506": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16791,
        16871
      ],
      "op": "AND",
      "path": "25"
    },
    "17507": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16791,
        16871
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17508": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16791,
        16871
      ],
      "op": "MUL",
      "path": "25"
    },
    "17509": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16791,
        16871
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17510": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16791,
        16871
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17511": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16791,
        16871
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17512": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16791,
        16871
      ],
      "op": "OR",
      "path": "25"
    },
    "17513": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16791,
        16871
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17514": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16791,
        16871
      ],
      "op": "DUP3",
      "path": "25"
    },
    "17515": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16791,
        16871
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17516": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16791,
        16871
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "17517": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16791,
        16871
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17518": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16791,
        16871
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "17519": {
      "op": "POP"
    },
    "17520": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16931,
        16966
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 178,
      "value": "0x447E"
    },
    "17523": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16931,
        16966
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17524": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16931,
        16959
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17525": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16931,
        16959
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17526": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16931,
        16959
      ],
      "op": "DIV",
      "path": "25"
    },
    "17527": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16931,
        16959
      ],
      "op": "AND",
      "path": "25"
    },
    "17528": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16964,
        16965
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "17530": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16931,
        16963
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34D7"
    },
    "17533": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        16931,
        16966
      ],
      "op": "JUMP",
      "path": "25"
    },
    "17534": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16931,
        16966
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "17535": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16909
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "17537": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16909
      ],
      "op": "DUP5",
      "path": "25"
    },
    "17538": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16909
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17539": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16909
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17540": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16901
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "17542": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16909
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "17544": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16909
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17545": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16909
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "17547": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16909
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17548": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16909
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "17549": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16922
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "17551": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16922
      ],
      "op": "ADD",
      "path": "25"
    },
    "17552": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16967
      ],
      "op": "DUP1",
      "path": "25"
    },
    "17553": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16967
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "17554": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16967
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "17556": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16967
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17557": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16967
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17558": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16967
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17559": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16967
      ],
      "op": "AND",
      "path": "25"
    },
    "17560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17562": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17564": {
      "op": "SHL"
    },
    "17565": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16967
      ],
      "op": "MUL",
      "path": "25"
    },
    "17566": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17568": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17570": {
      "op": "SHL"
    },
    "17571": {
      "op": "NOT"
    },
    "17572": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16967
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17573": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16967
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17574": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16967
      ],
      "op": "AND",
      "path": "25"
    },
    "17575": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16967
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17576": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16967
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17577": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16967
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17578": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16967
      ],
      "op": "OR",
      "path": "25"
    },
    "17579": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16967
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17580": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16967
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "17581": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17021,
        17051
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 179,
      "value": "0x44B7"
    },
    "17584": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16894,
        16922
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x10"
    },
    "17586": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17035,
        17050
      ],
      "op": "DUP3",
      "path": "25"
    },
    "17587": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17021,
        17030
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4B61"
    },
    "17590": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        17021,
        17051
      ],
      "op": "JUMP",
      "path": "25"
    },
    "17591": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17021,
        17051
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "17592": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16978,
        16993
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "17594": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16978,
        16993
      ],
      "op": "DUP6",
      "path": "25"
    },
    "17595": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16978,
        16993
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17596": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16978,
        16993
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17597": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16978,
        16985
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "17599": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16978,
        16993
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "17601": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16978,
        16993
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17602": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16978,
        16993
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "17604": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16978,
        16993
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17605": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16978,
        16993
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "17606": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16978,
        17000
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "17608": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16978,
        17000
      ],
      "op": "ADD",
      "path": "25"
    },
    "17609": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16977,
        17051
      ],
      "op": "DUP1",
      "path": "25"
    },
    "17610": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16977,
        17051
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "17611": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17613": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "17615": {
      "op": "SHL"
    },
    "17616": {
      "op": "NOT"
    },
    "17617": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16977,
        17051
      ],
      "op": "AND",
      "path": "25"
    },
    "17618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17620": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "17622": {
      "op": "SHL"
    },
    "17623": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16977,
        17051
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "17625": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16977,
        17051
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "17626": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16977,
        17051
      ],
      "op": "DUP6",
      "path": "25"
    },
    "17627": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16977,
        17051
      ],
      "op": "AND",
      "path": "25"
    },
    "17628": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16977,
        17051
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17629": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16977,
        17051
      ],
      "op": "MUL",
      "path": "25"
    },
    "17630": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16977,
        17051
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17631": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16977,
        17051
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17632": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16977,
        17051
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17633": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16977,
        17051
      ],
      "op": "OR",
      "path": "25"
    },
    "17634": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16977,
        17051
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17635": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16977,
        17051
      ],
      "op": "DUP3",
      "path": "25"
    },
    "17636": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16977,
        17051
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17637": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16977,
        17051
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "17638": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16977,
        17051
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17639": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16977,
        17051
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "17640": {
      "op": "POP"
    },
    "17641": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17105,
        17134
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 180,
      "value": "0x44F7"
    },
    "17644": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17105,
        17134
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17645": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17105,
        17127
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17646": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17105,
        17127
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17647": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17105,
        17127
      ],
      "op": "DIV",
      "path": "25"
    },
    "17648": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17105,
        17127
      ],
      "op": "AND",
      "path": "25"
    },
    "17649": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17132,
        17133
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "17651": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17105,
        17131
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34D7"
    },
    "17654": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        17105,
        17134
      ],
      "op": "JUMP",
      "path": "25"
    },
    "17655": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17105,
        17134
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "17656": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17089
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "17658": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17089
      ],
      "op": "DUP5",
      "path": "25"
    },
    "17659": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17089
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17660": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17089
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17661": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17081
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "17663": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17089
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "17665": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17089
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17666": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17089
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "17668": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17089
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17669": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17089
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "17670": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17096
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "17672": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17096
      ],
      "op": "ADD",
      "path": "25"
    },
    "17673": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17135
      ],
      "op": "DUP1",
      "path": "25"
    },
    "17674": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17135
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "17675": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17135
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "17677": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17135
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17678": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17135
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17679": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17135
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17680": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17135
      ],
      "op": "AND",
      "path": "25"
    },
    "17681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17683": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "17685": {
      "op": "SHL"
    },
    "17686": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17135
      ],
      "op": "MUL",
      "path": "25"
    },
    "17687": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17689": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "17691": {
      "op": "SHL"
    },
    "17692": {
      "op": "NOT"
    },
    "17693": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17135
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17694": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17135
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17695": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17135
      ],
      "op": "AND",
      "path": "25"
    },
    "17696": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17135
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17697": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17135
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17698": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17135
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17699": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17135
      ],
      "op": "OR",
      "path": "25"
    },
    "17700": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17135
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17701": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17135
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "17702": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17191,
        17221
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 181,
      "value": "0x4530"
    },
    "17705": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17201,
        17203
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x10"
    },
    "17707": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17205,
        17220
      ],
      "op": "DUP3",
      "path": "25"
    },
    "17708": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17191,
        17200
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4B61"
    },
    "17711": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        17191,
        17221
      ],
      "op": "JUMP",
      "path": "25"
    },
    "17712": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17191,
        17221
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "17713": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17146,
        17161
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "17715": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17146,
        17161
      ],
      "op": "DUP6",
      "path": "25"
    },
    "17716": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17146,
        17161
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17717": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17146,
        17161
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17718": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17146,
        17153
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "17720": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17146,
        17161
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "17722": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17146,
        17161
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17723": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17146,
        17161
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "17725": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17146,
        17161
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17726": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17146,
        17161
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "17727": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17146,
        17170
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "17729": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17146,
        17170
      ],
      "op": "ADD",
      "path": "25"
    },
    "17730": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17145,
        17221
      ],
      "op": "DUP1",
      "path": "25"
    },
    "17731": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17145,
        17221
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "17732": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17734": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "17736": {
      "op": "SHL"
    },
    "17737": {
      "op": "NOT"
    },
    "17738": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17145,
        17221
      ],
      "op": "AND",
      "path": "25"
    },
    "17739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17741": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "17743": {
      "op": "SHL"
    },
    "17744": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17145,
        17221
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "17746": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17145,
        17221
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "17747": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17145,
        17221
      ],
      "op": "DUP6",
      "path": "25"
    },
    "17748": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17145,
        17221
      ],
      "op": "AND",
      "path": "25"
    },
    "17749": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17145,
        17221
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17750": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17145,
        17221
      ],
      "op": "MUL",
      "path": "25"
    },
    "17751": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17145,
        17221
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17752": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17145,
        17221
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17753": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17145,
        17221
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17754": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17145,
        17221
      ],
      "op": "OR",
      "path": "25"
    },
    "17755": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17145,
        17221
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17756": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17145,
        17221
      ],
      "op": "DUP3",
      "path": "25"
    },
    "17757": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17145,
        17221
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17758": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17145,
        17221
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "17759": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17145,
        17221
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17760": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17145,
        17221
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "17761": {
      "op": "POP"
    },
    "17762": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17277,
        17308
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 182,
      "value": "0x4570"
    },
    "17765": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17277,
        17308
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17766": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17277,
        17301
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17767": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17277,
        17301
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17768": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17277,
        17301
      ],
      "op": "DIV",
      "path": "25"
    },
    "17769": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17277,
        17301
      ],
      "op": "AND",
      "path": "25"
    },
    "17770": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17306,
        17307
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "17772": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17277,
        17305
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34D7"
    },
    "17775": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        17277,
        17308
      ],
      "op": "JUMP",
      "path": "25"
    },
    "17776": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17277,
        17308
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "17777": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17259
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "17779": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17259
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "17780": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17259
      ],
      "op": "DUP5",
      "path": "25"
    },
    "17781": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17259
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17782": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17251
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "17784": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17259
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "17786": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17259
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17787": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17259
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "17789": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17259
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17790": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17259
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "17791": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17259
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "17792": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17268
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "17794": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17268
      ],
      "op": "ADD",
      "path": "25"
    },
    "17795": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17309
      ],
      "op": "DUP1",
      "path": "25"
    },
    "17796": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17309
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "17797": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17309
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "17799": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17309
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "17800": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17309
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17801": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17309
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "17802": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17309
      ],
      "op": "AND",
      "path": "25"
    },
    "17803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17805": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "17807": {
      "op": "SHL"
    },
    "17808": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17309
      ],
      "op": "MUL",
      "path": "25"
    },
    "17809": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17811": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "17813": {
      "op": "SHL"
    },
    "17814": {
      "op": "NOT"
    },
    "17815": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17309
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17816": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17309
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "17817": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17309
      ],
      "op": "AND",
      "path": "25"
    },
    "17818": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17309
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "17819": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17309
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17820": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17309
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "17821": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17309
      ],
      "op": "OR",
      "path": "25"
    },
    "17822": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17309
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17823": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17309
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17824": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17244,
        17309
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "17825": {
      "op": "POP"
    },
    "17826": {
      "op": "POP"
    },
    "17827": {
      "op": "POP"
    },
    "17828": {
      "op": "POP"
    },
    "17829": {
      "fn": "CryptoChampions._trainHero",
      "jump": "o",
      "offset": [
        14567,
        17316
      ],
      "op": "JUMP",
      "path": "25"
    },
    "17830": {
      "fn": "SafeMath.mul",
      "offset": [
        3538,
        3753
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17831": {
      "fn": "SafeMath.mul",
      "offset": [
        3596,
        3603
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "17833": {
      "branch": 279,
      "fn": "SafeMath.mul",
      "offset": [
        3619,
        3625
      ],
      "op": "DUP3",
      "path": "3"
    },
    "17834": {
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x45B5"
    },
    "17837": {
      "branch": 279,
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "17838": {
      "op": "POP"
    },
    "17839": {
      "fn": "SafeMath.mul",
      "offset": [
        3634,
        3635
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 183,
      "value": "0x0"
    },
    "17841": {
      "fn": "SafeMath.mul",
      "offset": [
        3627,
        3635
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13A4"
    },
    "17844": {
      "fn": "SafeMath.mul",
      "offset": [
        3627,
        3635
      ],
      "op": "JUMP",
      "path": "3"
    },
    "17845": {
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17846": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "3"
    },
    "17847": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "3"
    },
    "17848": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "MUL",
      "path": "3"
    },
    "17849": {
      "fn": "SafeMath.mul",
      "offset": [
        3661,
        3662
      ],
      "op": "DUP3",
      "path": "3"
    },
    "17850": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3658
      ],
      "op": "DUP5",
      "path": "3"
    },
    "17851": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "3"
    },
    "17852": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3658
      ],
      "op": "DUP2",
      "path": "3"
    },
    "17853": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 184,
      "value": "0x45C2"
    },
    "17856": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "17857": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "INVALID",
      "path": "3"
    },
    "17858": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17859": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "DIV",
      "path": "3"
    },
    "17860": {
      "branch": 280,
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3690
      ],
      "op": "EQ",
      "path": "3"
    },
    "17861": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C19"
    },
    "17864": {
      "branch": 280,
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "17865": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "17867": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "17868": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "17872": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "17874": {
      "op": "SHL"
    },
    "17875": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "3"
    },
    "17876": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "17877": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "17879": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "3"
    },
    "17880": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "3"
    },
    "17881": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "3"
    },
    "17882": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "17884": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "3"
    },
    "17885": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP3",
      "path": "3"
    },
    "17886": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "3"
    },
    "17887": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SUB",
      "path": "3"
    },
    "17888": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP3",
      "path": "3"
    },
    "17889": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "17890": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "17892": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "3"
    },
    "17893": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "17894": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "17896": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "3"
    },
    "17897": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "3"
    },
    "17898": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x526E"
    },
    "17901": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "17903": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "17904": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "17905": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "17907": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "3"
    },
    "17908": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "17909": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "POP",
      "path": "3"
    },
    "17910": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "POP",
      "path": "3"
    },
    "17911": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "17913": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "17914": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "3"
    },
    "17915": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "17916": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SUB",
      "path": "3"
    },
    "17917": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "17918": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "REVERT",
      "path": "3"
    },
    "17919": {
      "fn": "SafeMath.div",
      "offset": [
        4217,
        4367
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17920": {
      "fn": "SafeMath.div",
      "offset": [
        4275,
        4282
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "17922": {
      "fn": "SafeMath.div",
      "offset": [
        4306,
        4307
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 185
    },
    "17923": {
      "fn": "SafeMath.div",
      "offset": [
        4302,
        4303
      ],
      "op": "DUP3",
      "path": "3"
    },
    "17924": {
      "branch": 281,
      "fn": "SafeMath.div",
      "offset": [
        4302,
        4307
      ],
      "op": "GT",
      "path": "3"
    },
    "17925": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4655"
    },
    "17928": {
      "branch": 281,
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "17929": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "17931": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP1",
      "path": "3"
    },
    "17932": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "17933": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "17937": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "17939": {
      "op": "SHL"
    },
    "17940": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP2",
      "path": "3"
    },
    "17941": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "17942": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "17944": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "17946": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "3"
    },
    "17947": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "3"
    },
    "17948": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "17949": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1A"
    },
    "17951": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "17953": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "3"
    },
    "17954": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "3"
    },
    "17955": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "17956": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "17989": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "17991": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "3"
    },
    "17992": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "3"
    },
    "17993": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "17994": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "17995": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "17996": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "17997": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP2",
      "path": "3"
    },
    "17998": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "17999": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SUB",
      "path": "3"
    },
    "18000": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "18002": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "3"
    },
    "18003": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "18004": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "REVERT",
      "path": "3"
    },
    "18005": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "18006": {
      "fn": "SafeMath.div",
      "offset": [
        4359,
        4360
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 186
    },
    "18007": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4356
      ],
      "op": "DUP4",
      "path": "3"
    },
    "18008": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "DUP2",
      "path": "3"
    },
    "18009": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x465E"
    },
    "18012": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "18013": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "INVALID",
      "path": "3"
    },
    "18014": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "18015": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "DIV",
      "path": "3"
    },
    "18016": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "18017": {
      "fn": "SafeMath.div",
      "offset": [
        4217,
        4367
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "18018": {
      "op": "POP"
    },
    "18019": {
      "op": "POP"
    },
    "18020": {
      "op": "POP"
    },
    "18021": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        4217,
        4367
      ],
      "op": "JUMP",
      "path": "3"
    },
    "18022": {
      "fn": "EnumerableSet.at",
      "offset": [
        7677,
        7833
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18023": {
      "fn": "EnumerableSet.at",
      "offset": [
        7751,
        7758
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18025": {
      "fn": "EnumerableSet.at",
      "offset": [
        7801,
        7823
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 187,
      "value": "0x2C19"
    },
    "18028": {
      "fn": "EnumerableSet.at",
      "offset": [
        7805,
        7808
      ],
      "op": "DUP4",
      "path": "12"
    },
    "18029": {
      "fn": "EnumerableSet.at",
      "offset": [
        7817,
        7822
      ],
      "op": "DUP4",
      "path": "12"
    },
    "18030": {
      "fn": "EnumerableSet.at",
      "offset": [
        7801,
        7804
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4B92"
    },
    "18033": {
      "fn": "EnumerableSet.at",
      "jump": "i",
      "offset": [
        7801,
        7823
      ],
      "op": "JUMP",
      "path": "12"
    },
    "18034": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6874,
        7047
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "18035": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6968,
        6996
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 188,
      "value": "0x0"
    },
    "18037": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6968,
        6996
      ],
      "op": "DUP3",
      "path": "25"
    },
    "18038": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6968,
        6996
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18039": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6968,
        6996
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18040": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6968,
        6985
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x15"
    },
    "18042": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6968,
        6996
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "18044": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6968,
        6996
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18045": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6968,
        6996
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "18047": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6968,
        6996
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18048": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6968,
        6996
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "18049": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6968,
        7009
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18050": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6968,
        7009
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18051": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6968,
        7009
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "18052": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        7019,
        7040
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 189,
      "value": "0x1E47"
    },
    "18055": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6986,
        6995
      ],
      "op": "DUP3",
      "path": "25"
    },
    "18056": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        7019,
        7029
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3ECF"
    },
    "18059": {
      "fn": "CryptoChampions.fulfillRandomness",
      "jump": "i",
      "offset": [
        7019,
        7040
      ],
      "op": "JUMP",
      "path": "25"
    },
    "18060": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19041,
        19621
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "18061": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19108,
        19115
      ],
      "op": "DUP1",
      "path": "25"
    },
    "18062": {
      "offset": [
        1766,
        1767
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "18064": {
      "offset": [
        5739,
        5746
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18065": {
      "offset": [
        5739,
        5768
      ],
      "op": "GT",
      "path": "25"
    },
    "18066": {
      "offset": [
        5739,
        5803
      ],
      "op": "DUP1",
      "path": "25"
    },
    "18067": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        5739,
        5803
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "18068": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        5739,
        5803
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x469E"
    },
    "18071": {
      "offset": [
        5739,
        5803
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "18072": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        5739,
        5803
      ],
      "op": "POP",
      "path": "25"
    },
    "18073": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "18075": {
      "offset": [
        5772,
        5779
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18076": {
      "offset": [
        5772,
        5803
      ],
      "op": "GT",
      "path": "25"
    },
    "18077": {
      "branch": 250,
      "fn": "CryptoChampions._burnElder",
      "offset": [
        5772,
        5803
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "18078": {
      "offset": [
        5739,
        5803
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "18079": {
      "offset": [
        5731,
        5804
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x46A7"
    },
    "18082": {
      "branch": 250,
      "offset": [
        5731,
        5804
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "18083": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        5731,
        5804
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "18085": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        5731,
        5804
      ],
      "op": "DUP1",
      "path": "25"
    },
    "18086": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        5731,
        5804
      ],
      "op": "REVERT",
      "path": "25"
    },
    "18087": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        5731,
        5804
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "18088": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19135,
        19157
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 190,
      "value": "0x0"
    },
    "18090": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19135,
        19157
      ],
      "op": "DUP3",
      "path": "25"
    },
    "18091": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19135,
        19157
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18092": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19135,
        19157
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18093": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19135,
        19148
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x9"
    },
    "18095": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19135,
        19157
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "18097": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19135,
        19157
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18098": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19135,
        19157
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "18100": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19135,
        19157
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18101": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19135,
        19157
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "18102": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19135,
        19163
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "18103": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19135,
        19163
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "18105": {
      "branch": 251,
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19135,
        19163
      ],
      "op": "AND",
      "path": "25"
    },
    "18106": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19127,
        19164
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x46C2"
    },
    "18109": {
      "branch": 251,
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19127,
        19164
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "18110": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19127,
        19164
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "18112": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19127,
        19164
      ],
      "op": "DUP1",
      "path": "25"
    },
    "18113": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19127,
        19164
      ],
      "op": "REVERT",
      "path": "25"
    },
    "18114": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19127,
        19164
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "18115": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19402,
        19423
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 191,
      "value": "0x0"
    },
    "18117": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19402,
        19423
      ],
      "op": "DUP3",
      "path": "25"
    },
    "18118": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19402,
        19423
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18119": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19402,
        19423
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18120": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19402,
        19414
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "18122": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19402,
        19423
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "18124": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19402,
        19423
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18125": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19402,
        19423
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "18127": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19402,
        19423
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18128": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19402,
        19423
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "18129": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19402,
        19423
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "18130": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19396,
        19436
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x46E6"
    },
    "18133": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19396,
        19436
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18138": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18140": {
      "op": "SHL"
    },
    "18141": {
      "op": "SUB"
    },
    "18142": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19402,
        19423
      ],
      "op": "AND",
      "path": "25"
    },
    "18143": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19415,
        19422
      ],
      "op": "DUP4",
      "path": "25"
    },
    "18144": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19402,
        19423
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "18146": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19396,
        19401
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x36AE"
    },
    "18149": {
      "fn": "CryptoChampions._burnElder",
      "jump": "i",
      "offset": [
        19396,
        19436
      ],
      "op": "JUMP",
      "path": "25"
    },
    "18150": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19396,
        19436
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "18151": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19505,
        19517
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 192,
      "value": "0x7"
    },
    "18153": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19505,
        19517
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "18154": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19505,
        19524
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x46F4"
    },
    "18157": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19505,
        19524
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18158": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19522,
        19523
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "18160": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19505,
        19521
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x37E1"
    },
    "18163": {
      "fn": "CryptoChampions._burnElder",
      "jump": "i",
      "offset": [
        19505,
        19524
      ],
      "op": "JUMP",
      "path": "25"
    },
    "18164": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19505,
        19524
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "18165": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19490,
        19502
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "18167": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19490,
        19524
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "18168": {
      "op": "POP"
    },
    "18169": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19566,
        19567
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 193,
      "value": "0x0"
    },
    "18171": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19534,
        19555
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18172": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19534,
        19555
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18173": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19534,
        19555
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18174": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19534,
        19546
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "18176": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19534,
        19555
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "18178": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19534,
        19555
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18179": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19534,
        19555
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18180": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19534,
        19555
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18181": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19534,
        19555
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "18183": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19534,
        19555
      ],
      "op": "DUP1",
      "path": "25"
    },
    "18184": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19534,
        19555
      ],
      "op": "DUP4",
      "path": "25"
    },
    "18185": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19534,
        19555
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "18186": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19534,
        19568
      ],
      "op": "DUP1",
      "path": "25"
    },
    "18187": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19534,
        19568
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "18188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18192": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18194": {
      "op": "SHL"
    },
    "18195": {
      "op": "SUB"
    },
    "18196": {
      "op": "NOT"
    },
    "18197": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19534,
        19568
      ],
      "op": "AND",
      "path": "25"
    },
    "18198": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19534,
        19568
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18199": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19534,
        19568
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "18200": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19578,
        19591
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 194,
      "value": "0x9"
    },
    "18202": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19578,
        19600
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18203": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19578,
        19600
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18204": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19578,
        19600
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18205": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19578,
        19600
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18206": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19578,
        19600
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "18207": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19578,
        19614
      ],
      "op": "DUP1",
      "path": "25"
    },
    "18208": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19578,
        19614
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "18209": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18211": {
      "op": "NOT"
    },
    "18212": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19578,
        19614
      ],
      "op": "AND",
      "path": "25"
    },
    "18213": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19578,
        19614
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18214": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19578,
        19614
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "18215": {
      "fn": "CryptoChampions._burnElder",
      "jump": "o",
      "offset": [
        19041,
        19621
      ],
      "op": "JUMP",
      "path": "25"
    },
    "18216": {
      "fn": "EnumerableSet.length",
      "offset": [
        7230,
        7345
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18217": {
      "fn": "EnumerableSet.length",
      "offset": [
        7293,
        7300
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18219": {
      "fn": "EnumerableSet.length",
      "offset": [
        7319,
        7338
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 195,
      "value": "0x13A4"
    },
    "18222": {
      "fn": "EnumerableSet.length",
      "offset": [
        7327,
        7330
      ],
      "op": "DUP3",
      "path": "12"
    },
    "18223": {
      "fn": "EnumerableSet.length",
      "offset": [
        7319,
        7326
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4BF6"
    },
    "18226": {
      "fn": "EnumerableSet.length",
      "jump": "i",
      "offset": [
        7319,
        7338
      ],
      "op": "JUMP",
      "path": "12"
    },
    "18227": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14024,
        14217
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "18228": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "18230": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP1",
      "path": "5"
    },
    "18231": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "18232": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14157,
        14158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "18234": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP1",
      "path": "5"
    },
    "18235": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP3",
      "path": "5"
    },
    "18236": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "18237": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP2",
      "path": "5"
    },
    "18238": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP4",
      "path": "5"
    },
    "18239": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "ADD",
      "path": "5"
    },
    "18240": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "18241": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "18242": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "18243": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14090,
        14106
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "18245": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14090,
        14106
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "18246": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14090,
        14106
      ],
      "op": "DUP3",
      "path": "5"
    },
    "18247": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14090,
        14106
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "18248": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "18249": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "18251": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP1",
      "path": "5"
    },
    "18252": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP4",
      "path": "5"
    },
    "18253": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "ADD",
      "path": "5"
    },
    "18254": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "18255": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP1",
      "path": "5"
    },
    "18256": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "18257": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP4",
      "path": "5"
    },
    "18258": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "18259": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "ADD",
      "path": "5"
    },
    "18260": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "18261": {
      "op": "POP"
    },
    "18262": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "POP",
      "path": "5"
    },
    "18263": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14118,
        14159
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "18264": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14118,
        14159
      ],
      "op": "POP",
      "path": "5"
    },
    "18265": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14180,
        14187
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 196
    },
    "18266": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14174
      ],
      "op": "DUP2",
      "path": "5"
    },
    "18267": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14175,
        14176
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "18269": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "DUP2",
      "path": "5"
    },
    "18270": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "18271": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "DUP2",
      "path": "5"
    },
    "18272": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "LT",
      "path": "5"
    },
    "18273": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4766"
    },
    "18276": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "18277": {
      "dev": "Index out of range",
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "INVALID",
      "path": "5"
    },
    "18278": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "18279": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "18281": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "18282": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "DUP2",
      "path": "5"
    },
    "18283": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "MUL",
      "path": "5"
    },
    "18284": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "18285": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "18286": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "18287": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "ADD",
      "path": "5"
    },
    "18288": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "ADD",
      "path": "5"
    },
    "18289": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14187
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "18290": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14205,
        14210
      ],
      "op": "SWAP3",
      "path": "5",
      "statement": 197
    },
    "18291": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14024,
        14217
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "18292": {
      "op": "POP"
    },
    "18293": {
      "op": "POP"
    },
    "18294": {
      "fn": "ERC1155._asSingletonArray",
      "jump": "o",
      "offset": [
        14024,
        14217
      ],
      "op": "JUMP",
      "path": "5"
    },
    "18295": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12493,
        13234
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "18296": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12712,
        12727
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4789"
    },
    "18299": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12712,
        12714
      ],
      "op": "DUP5",
      "path": "5"
    },
    "18300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18306": {
      "op": "SHL"
    },
    "18307": {
      "op": "SUB"
    },
    "18308": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12712,
        12725
      ],
      "op": "AND",
      "path": "5"
    },
    "18309": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12712,
        12725
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x499C"
    },
    "18312": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        12712,
        12727
      ],
      "op": "JUMP",
      "path": "5"
    },
    "18313": {
      "branch": 271,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12712,
        12727
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "18314": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12708,
        13228
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "18315": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12708,
        13228
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D26"
    },
    "18318": {
      "branch": 271,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12708,
        13228
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "18319": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12764,
        12766
      ],
      "op": "DUP4",
      "path": "5"
    },
    "18320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18326": {
      "op": "SHL"
    },
    "18327": {
      "op": "SUB"
    },
    "18328": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12785
      ],
      "op": "AND",
      "path": "5"
    },
    "18329": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12785
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF23A6E61"
    },
    "18334": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12786,
        12794
      ],
      "op": "DUP8",
      "path": "5"
    },
    "18335": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12796,
        12800
      ],
      "op": "DUP8",
      "path": "5"
    },
    "18336": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12802,
        12804
      ],
      "op": "DUP7",
      "path": "5"
    },
    "18337": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12806,
        12812
      ],
      "op": "DUP7",
      "path": "5"
    },
    "18338": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12814,
        12818
      ],
      "op": "DUP7",
      "path": "5"
    },
    "18339": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "18341": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "18342": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP7",
      "path": "5"
    },
    "18343": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "18348": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "AND",
      "path": "5"
    },
    "18349": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "18351": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SHL",
      "path": "5"
    },
    "18352": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "18353": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "18354": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "18356": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "18357": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "18358": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP7",
      "path": "5"
    },
    "18359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18365": {
      "op": "SHL"
    },
    "18366": {
      "op": "SUB"
    },
    "18367": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "AND",
      "path": "5"
    },
    "18368": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "18369": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "18370": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "18372": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "18373": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP6",
      "path": "5"
    },
    "18374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18378": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18380": {
      "op": "SHL"
    },
    "18381": {
      "op": "SUB"
    },
    "18382": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "AND",
      "path": "5"
    },
    "18383": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "18384": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "18385": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "18387": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "18388": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP5",
      "path": "5"
    },
    "18389": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "18390": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "18391": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "18393": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "18394": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "18395": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "18396": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "18397": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "18399": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "18400": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "18401": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "18403": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "18404": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP3",
      "path": "5"
    },
    "18405": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "18406": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SUB",
      "path": "5"
    },
    "18407": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP3",
      "path": "5"
    },
    "18408": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "18409": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "18410": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "18411": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "18412": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "18413": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "18414": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "18415": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "18417": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "18418": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "18419": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "18420": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "18421": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "18422": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "18423": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "18425": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "18426": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "18427": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "18428": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "18429": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "18430": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "18432": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "18433": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "18434": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "18435": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "LT",
      "path": "5"
    },
    "18436": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "18437": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4818"
    },
    "18440": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "18441": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "18442": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "18443": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "18444": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "18445": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "18446": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP3",
      "path": "5"
    },
    "18447": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "18448": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "18449": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "18451": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "18452": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4800"
    },
    "18455": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMP",
      "path": "5"
    },
    "18456": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "18457": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "18458": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "18459": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "18460": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "18461": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "18462": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "18463": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "18464": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "18465": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "18466": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "18467": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "18469": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "AND",
      "path": "5"
    },
    "18470": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "18471": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "18472": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4845"
    },
    "18475": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "18476": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "18477": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP3",
      "path": "5"
    },
    "18478": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SUB",
      "path": "5"
    },
    "18479": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "18480": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "18481": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "18483": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "18484": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "18486": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SUB",
      "path": "5"
    },
    "18487": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "18490": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "EXP",
      "path": "5"
    },
    "18491": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SUB",
      "path": "5"
    },
    "18492": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "NOT",
      "path": "5"
    },
    "18493": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "AND",
      "path": "5"
    },
    "18494": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "18495": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "18496": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "18498": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "18499": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "18500": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "18501": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "18502": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "18503": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "18504": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "18505": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "18506": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "18507": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "18508": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "18509": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "18510": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "18511": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "18513": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "18515": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "18516": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "18517": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "18518": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SUB",
      "path": "5"
    },
    "18519": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "18520": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "18522": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP8",
      "path": "5"
    },
    "18523": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "18524": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "18525": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "18526": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "18527": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "18528": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4868"
    },
    "18531": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "18532": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "18534": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "18535": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "REVERT",
      "path": "5"
    },
    "18536": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "18537": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "18538": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "GAS",
      "path": "5"
    },
    "18539": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "CALL",
      "path": "5"
    },
    "18540": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "18541": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "18542": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "18543": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "18544": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "18545": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "18546": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x488D"
    },
    "18549": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "18550": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "18551": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "18553": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "18554": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "18555": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "18557": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "18558": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "LT",
      "path": "5"
    },
    "18559": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "18560": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4888"
    },
    "18563": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "18564": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "18566": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "18567": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "REVERT",
      "path": "5"
    },
    "18568": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "18569": {
      "op": "POP"
    },
    "18570": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "18571": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "18573": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "18574": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12743,
        13218
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4899"
    },
    "18577": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12743,
        13218
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "18578": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12743,
        13218
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B85"
    },
    "18581": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12743,
        13218
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4FAF"
    },
    "18584": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        12743,
        13218
      ],
      "op": "JUMP",
      "path": "5"
    },
    "18585": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12743,
        13218
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "18586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18590": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18592": {
      "op": "SHL"
    },
    "18593": {
      "op": "SUB"
    },
    "18594": {
      "op": "NOT"
    },
    "18595": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12868,
        12927
      ],
      "op": "DUP2",
      "path": "5"
    },
    "18596": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12868,
        12927
      ],
      "op": "AND",
      "path": "5"
    },
    "18597": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "18602": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18604": {
      "op": "SHL"
    },
    "18605": {
      "branch": 272,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12868,
        12927
      ],
      "op": "EQ",
      "path": "5"
    },
    "18606": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12864,
        13020
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34A4"
    },
    "18609": {
      "branch": 272,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12864,
        13020
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "18610": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 198,
      "value": "0x40"
    },
    "18612": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "18613": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "18617": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "18619": {
      "op": "SHL"
    },
    "18620": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP2",
      "path": "5"
    },
    "18621": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "18622": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "18624": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "ADD",
      "path": "5"
    },
    "18625": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP1",
      "path": "5"
    },
    "18626": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP1",
      "path": "5"
    },
    "18627": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "18629": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "ADD",
      "path": "5"
    },
    "18630": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP3",
      "path": "5"
    },
    "18631": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP2",
      "path": "5"
    },
    "18632": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "SUB",
      "path": "5"
    },
    "18633": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP3",
      "path": "5"
    },
    "18634": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "18635": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x28"
    },
    "18637": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP2",
      "path": "5"
    },
    "18638": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "18639": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "18641": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "ADD",
      "path": "5"
    },
    "18642": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP1",
      "path": "5"
    },
    "18643": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x50AB"
    },
    "18646": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x28"
    },
    "18648": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "18649": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "18650": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "18652": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "ADD",
      "path": "5"
    },
    "18653": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "18654": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "POP",
      "path": "5"
    },
    "18655": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "POP",
      "path": "5"
    },
    "18656": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "18658": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "18659": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP1",
      "path": "5"
    },
    "18660": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "18661": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "SUB",
      "path": "5"
    },
    "18662": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "18663": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "REVERT",
      "path": "5"
    },
    "18664": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21391,
        21652
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "18665": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21456,
        21463
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "18667": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21456,
        21463
      ],
      "op": "DUP1",
      "path": "25"
    },
    "18668": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21513,
        21514
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "18670": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21532,
        21569
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 199,
      "value": "0x490F"
    },
    "18673": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21565,
        21568
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x64"
    },
    "18675": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21532,
        21560
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x26CB"
    },
    "18678": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21558,
        21559
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "18680": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21532,
        21553
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4909"
    },
    "18683": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21532,
        21541
      ],
      "op": "DUP9",
      "path": "25"
    },
    "18684": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21546,
        21552
      ],
      "op": "PUSH8",
      "path": "25",
      "value": "0xDE0B6B3A7640000"
    },
    "18693": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21532,
        21545
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x45A6"
    },
    "18696": {
      "fn": "CryptoChampions._priceFormula",
      "jump": "i",
      "offset": [
        21532,
        21553
      ],
      "op": "JUMP",
      "path": "25"
    },
    "18697": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21532,
        21553
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "18698": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21532,
        21557
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18699": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21532,
        21557
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x45A6"
    },
    "18702": {
      "fn": "CryptoChampions._priceFormula",
      "jump": "i",
      "offset": [
        21532,
        21560
      ],
      "op": "JUMP",
      "path": "25"
    },
    "18703": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21532,
        21569
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "18704": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21524,
        21569
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18705": {
      "op": "POP"
    },
    "18706": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21587,
        21622
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 200,
      "value": "0x4932"
    },
    "18709": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21597,
        21621
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x492B"
    },
    "18712": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21618,
        21620
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA"
    },
    "18714": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21597,
        21613
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x26CB"
    },
    "18717": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21597,
        21601
      ],
      "op": "DUP5",
      "path": "25"
    },
    "18718": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21606,
        21612
      ],
      "op": "PUSH8",
      "path": "25",
      "value": "0xDE0B6B3A7640000"
    },
    "18727": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21597,
        21605
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x45A6"
    },
    "18730": {
      "fn": "CryptoChampions._priceFormula",
      "jump": "i",
      "offset": [
        21597,
        21613
      ],
      "op": "JUMP",
      "path": "25"
    },
    "18731": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21597,
        21621
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "18732": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21587,
        21592
      ],
      "op": "DUP4",
      "path": "25"
    },
    "18733": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21587,
        21592
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18734": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21587,
        21596
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34D7"
    },
    "18737": {
      "fn": "CryptoChampions._priceFormula",
      "jump": "i",
      "offset": [
        21587,
        21622
      ],
      "op": "JUMP",
      "path": "25"
    },
    "18738": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21587,
        21622
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "18739": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21579,
        21622
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "18740": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21391,
        21652
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "18741": {
      "op": "POP"
    },
    "18742": {
      "op": "POP"
    },
    "18743": {
      "op": "POP"
    },
    "18744": {
      "op": "POP"
    },
    "18745": {
      "fn": "CryptoChampions._priceFormula",
      "jump": "o",
      "offset": [
        21391,
        21652
      ],
      "op": "JUMP",
      "path": "25"
    },
    "18746": {
      "fn": "EnumerableSet._add",
      "offset": [
        1640,
        2044
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18747": {
      "fn": "EnumerableSet._add",
      "offset": [
        1703,
        1707
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18749": {
      "fn": "EnumerableSet._add",
      "offset": [
        1724,
        1745
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4946"
    },
    "18752": {
      "fn": "EnumerableSet._add",
      "offset": [
        1734,
        1737
      ],
      "op": "DUP4",
      "path": "12"
    },
    "18753": {
      "fn": "EnumerableSet._add",
      "offset": [
        1739,
        1744
      ],
      "op": "DUP4",
      "path": "12"
    },
    "18754": {
      "fn": "EnumerableSet._add",
      "offset": [
        1724,
        1733
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4984"
    },
    "18757": {
      "fn": "EnumerableSet._add",
      "jump": "i",
      "offset": [
        1724,
        1745
      ],
      "op": "JUMP",
      "path": "12"
    },
    "18758": {
      "branch": 273,
      "fn": "EnumerableSet._add",
      "offset": [
        1724,
        1745
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18759": {
      "fn": "EnumerableSet._add",
      "offset": [
        1719,
        2038
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x497C"
    },
    "18762": {
      "branch": 273,
      "fn": "EnumerableSet._add",
      "offset": [
        1719,
        2038
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "18763": {
      "op": "POP"
    },
    "18764": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 201
    },
    "18765": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "18766": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "18768": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18769": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18770": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "ADD",
      "path": "12"
    },
    "18771": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP5",
      "path": "12"
    },
    "18772": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "18773": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1772
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18775": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP5",
      "path": "12"
    },
    "18776": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18777": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18778": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "18780": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP1",
      "path": "12"
    },
    "18781": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP3",
      "path": "12"
    },
    "18782": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "18783": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18784": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "18785": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "ADD",
      "path": "12"
    },
    "18786": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP5",
      "path": "12"
    },
    "18787": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18788": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "18789": {
      "fn": "EnumerableSet._add",
      "offset": [
        1941,
        1959
      ],
      "op": "DUP5",
      "path": "12",
      "statement": 202
    },
    "18790": {
      "fn": "EnumerableSet._add",
      "offset": [
        1941,
        1959
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "18791": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "DUP5",
      "path": "12"
    },
    "18792": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "DUP3",
      "path": "12"
    },
    "18793": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18794": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1931
      ],
      "op": "DUP3",
      "path": "12"
    },
    "18795": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1931
      ],
      "op": "DUP7",
      "path": "12"
    },
    "18796": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1931
      ],
      "op": "ADD",
      "path": "12"
    },
    "18797": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18798": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "18799": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18800": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "18802": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18803": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "18804": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1959
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18805": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1959
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18806": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1959
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18807": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1959
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "18808": {
      "fn": "EnumerableSet._add",
      "offset": [
        1973,
        1984
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 203,
      "value": "0x13A4"
    },
    "18811": {
      "fn": "EnumerableSet._add",
      "offset": [
        1973,
        1984
      ],
      "op": "JUMP",
      "path": "12"
    },
    "18812": {
      "fn": "EnumerableSet._add",
      "offset": [
        1719,
        2038
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18813": {
      "op": "POP"
    },
    "18814": {
      "fn": "EnumerableSet._add",
      "offset": [
        2022,
        2027
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 204,
      "value": "0x0"
    },
    "18816": {
      "fn": "EnumerableSet._add",
      "offset": [
        2015,
        2027
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13A4"
    },
    "18819": {
      "fn": "EnumerableSet._add",
      "offset": [
        2015,
        2027
      ],
      "op": "JUMP",
      "path": "12"
    },
    "18820": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3805,
        3932
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18821": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3878,
        3882
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18823": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "SWAP1",
      "path": "12",
      "statement": 205
    },
    "18824": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18825": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18826": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "18828": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18829": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18830": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18831": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "ADD",
      "path": "12"
    },
    "18832": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "18834": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18835": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "18837": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18838": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "18839": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "18840": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3925
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "18841": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3925
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "18842": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3925
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18843": {
      "fn": "EnumerableSet._contains",
      "jump": "o",
      "offset": [
        3805,
        3932
      ],
      "op": "JUMP",
      "path": "12"
    },
    "18844": {
      "fn": "Address.isContract",
      "offset": [
        726,
        1139
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "18845": {
      "fn": "Address.isContract",
      "offset": [
        1086,
        1106
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "18846": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "10",
      "statement": 206
    },
    "18847": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "18848": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "18849": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        726,
        1139
      ],
      "op": "JUMP",
      "path": "10"
    },
    "18850": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6747,
        6903
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18851": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6820,
        6824
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18853": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6843,
        6896
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 207,
      "value": "0x2C19"
    },
    "18856": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6851,
        6854
      ],
      "op": "DUP4",
      "path": "12"
    },
    "18857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18861": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18863": {
      "op": "SHL"
    },
    "18864": {
      "op": "SUB"
    },
    "18865": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6871,
        6894
      ],
      "op": "DUP5",
      "path": "12"
    },
    "18866": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6871,
        6894
      ],
      "op": "AND",
      "path": "12"
    },
    "18867": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6843,
        6850
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4BFA"
    },
    "18870": {
      "fn": "EnumerableSet.remove",
      "jump": "i",
      "offset": [
        6843,
        6896
      ],
      "op": "JUMP",
      "path": "12"
    },
    "18871": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7527,
        8617
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "18872": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7649,
        7666
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "18874": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7682
      ],
      "op": "PUSH32",
      "path": "28",
      "statement": 208,
      "value": "0x0"
    },
    "18907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18911": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18913": {
      "op": "SHL"
    },
    "18914": {
      "op": "SUB"
    },
    "18915": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7698
      ],
      "op": "AND",
      "path": "28"
    },
    "18916": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7698
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x4000AEA0"
    },
    "18921": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7699,
        7713
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0x0"
    },
    "18954": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7715,
        7719
      ],
      "op": "DUP6",
      "path": "28"
    },
    "18955": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7732,
        7740
      ],
      "op": "DUP8",
      "path": "28"
    },
    "18956": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7742,
        7747
      ],
      "op": "DUP7",
      "path": "28"
    },
    "18957": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "18959": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "18960": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "18962": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "ADD",
      "path": "28"
    },
    "18963": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP1",
      "path": "28"
    },
    "18964": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP4",
      "path": "28"
    },
    "18965": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP2",
      "path": "28"
    },
    "18966": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "18967": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "18969": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "ADD",
      "path": "28"
    },
    "18970": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP3",
      "path": "28"
    },
    "18971": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP2",
      "path": "28"
    },
    "18972": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "18973": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "18975": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "ADD",
      "path": "28"
    },
    "18976": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "18977": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "POP",
      "path": "28"
    },
    "18978": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "POP",
      "path": "28"
    },
    "18979": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "POP",
      "path": "28"
    },
    "18980": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "18982": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "18983": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "18985": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP2",
      "path": "28"
    },
    "18986": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP4",
      "path": "28"
    },
    "18987": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "SUB",
      "path": "28"
    },
    "18988": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "SUB",
      "path": "28"
    },
    "18989": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP2",
      "path": "28"
    },
    "18990": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "18991": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "18992": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "18994": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "18995": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "18997": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "18998": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP5",
      "path": "28"
    },
    "18999": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xFFFFFFFF"
    },
    "19004": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "AND",
      "path": "28"
    },
    "19005": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xE0"
    },
    "19007": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SHL",
      "path": "28"
    },
    "19008": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "28"
    },
    "19009": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "19010": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "19012": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "28"
    },
    "19013": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "28"
    },
    "19014": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP5",
      "path": "28"
    },
    "19015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19019": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19021": {
      "op": "SHL"
    },
    "19022": {
      "op": "SUB"
    },
    "19023": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "AND",
      "path": "28"
    },
    "19024": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "28"
    },
    "19025": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "19026": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "19028": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "28"
    },
    "19029": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "28"
    },
    "19030": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "28"
    },
    "19031": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "19032": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "19034": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "28"
    },
    "19035": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "28"
    },
    "19036": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "19038": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "28"
    },
    "19039": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP3",
      "path": "28"
    },
    "19040": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "28"
    },
    "19041": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SUB",
      "path": "28"
    },
    "19042": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP3",
      "path": "28"
    },
    "19043": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "19044": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "28"
    },
    "19045": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "28"
    },
    "19046": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "28"
    },
    "19047": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "19048": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "28"
    },
    "19049": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "19050": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "19052": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "28"
    },
    "19053": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "19054": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "19055": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "28"
    },
    "19056": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "19057": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "19058": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "19060": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "28"
    },
    "19061": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "19062": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "28"
    },
    "19063": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "28"
    },
    "19064": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "28"
    },
    "19065": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "19067": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "19068": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "28"
    },
    "19069": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "28"
    },
    "19070": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "LT",
      "path": "28"
    },
    "19071": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "19072": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4A93"
    },
    "19075": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "19076": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "28"
    },
    "19077": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "28"
    },
    "19078": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "28"
    },
    "19079": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "19080": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "28"
    },
    "19081": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP3",
      "path": "28"
    },
    "19082": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "28"
    },
    "19083": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "19084": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "19086": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "28"
    },
    "19087": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4A7B"
    },
    "19090": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMP",
      "path": "28"
    },
    "19091": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "19092": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "19093": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "19094": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "19095": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "19096": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "19097": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "19098": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "19099": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "28"
    },
    "19100": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "28"
    },
    "19101": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "19102": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "19104": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "AND",
      "path": "28"
    },
    "19105": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "28"
    },
    "19106": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "19107": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4AC0"
    },
    "19110": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "19111": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "28"
    },
    "19112": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP3",
      "path": "28"
    },
    "19113": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SUB",
      "path": "28"
    },
    "19114": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "28"
    },
    "19115": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "19116": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "19118": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "28"
    },
    "19119": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "19121": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SUB",
      "path": "28"
    },
    "19122": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x100"
    },
    "19125": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "EXP",
      "path": "28"
    },
    "19126": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SUB",
      "path": "28"
    },
    "19127": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "NOT",
      "path": "28"
    },
    "19128": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "AND",
      "path": "28"
    },
    "19129": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "28"
    },
    "19130": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "19131": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "19133": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "28"
    },
    "19134": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "19135": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "19136": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "19137": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "19138": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "19139": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "19140": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "19141": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "19142": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "19143": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "19144": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "19146": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "19148": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "19149": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "28"
    },
    "19150": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "28"
    },
    "19151": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SUB",
      "path": "28"
    },
    "19152": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "28"
    },
    "19153": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "19155": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP8",
      "path": "28"
    },
    "19156": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "28"
    },
    "19157": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "EXTCODESIZE",
      "path": "28"
    },
    "19158": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "19159": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "28"
    },
    "19160": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "19161": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4AE1"
    },
    "19164": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "19165": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "19167": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "28"
    },
    "19168": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "REVERT",
      "path": "28"
    },
    "19169": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "19170": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "19171": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "GAS",
      "path": "28"
    },
    "19172": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "CALL",
      "path": "28"
    },
    "19173": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "19174": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "28"
    },
    "19175": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "19176": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4AF5"
    },
    "19179": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "19180": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "19181": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "19183": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "28"
    },
    "19184": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "RETURNDATACOPY",
      "path": "28"
    },
    "19185": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "19186": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "19188": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "REVERT",
      "path": "28"
    },
    "19189": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "19190": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "19191": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "19192": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "19193": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "19194": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "19196": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "19197": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "19198": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "19200": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "28"
    },
    "19201": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "LT",
      "path": "28"
    },
    "19202": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "19203": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4B0B"
    },
    "19206": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "19207": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "19209": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "28"
    },
    "19210": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "REVERT",
      "path": "28"
    },
    "19211": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "19212": {
      "op": "POP"
    },
    "19213": {
      "op": "POP"
    },
    "19214": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7996,
        8011
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "19216": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "DUP5",
      "path": "28"
    },
    "19217": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "DUP2",
      "path": "28"
    },
    "19218": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "19219": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8069
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x5"
    },
    "19221": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "19223": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "19224": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "19226": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "DUP2",
      "path": "28"
    },
    "19227": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "19228": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "19229": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8014,
        8080
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4B2B"
    },
    "19232": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8014,
        8080
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "19233": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8031,
        8039
      ],
      "op": "DUP7",
      "path": "28"
    },
    "19234": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8031,
        8039
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "19235": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8041,
        8046
      ],
      "op": "DUP6",
      "path": "28"
    },
    "19236": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8041,
        8046
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "19237": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8056,
        8060
      ],
      "op": "ADDRESS",
      "path": "28"
    },
    "19238": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8056,
        8060
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "19239": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8014,
        8030
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4CC0"
    },
    "19242": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8014,
        8080
      ],
      "op": "JUMP",
      "path": "28"
    },
    "19243": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8014,
        8080
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "19244": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 209,
      "value": "0x0"
    },
    "19246": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "DUP7",
      "path": "28"
    },
    "19247": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "DUP2",
      "path": "28"
    },
    "19248": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "19249": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8544
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x5"
    },
    "19251": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "19253": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "19254": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "19256": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "19257": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "19258": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "19259": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7996,
        8080
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "19260": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7996,
        8080
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "19261": {
      "op": "POP"
    },
    "19262": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8561
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4B48"
    },
    "19265": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8561
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "19266": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8559,
        8560
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "19268": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8558
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x34D7"
    },
    "19271": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8538,
        8561
      ],
      "op": "JUMP",
      "path": "28"
    },
    "19272": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8561
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "19273": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "19275": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "DUP7",
      "path": "28"
    },
    "19276": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "DUP2",
      "path": "28"
    },
    "19277": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "19278": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8525
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x5"
    },
    "19280": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "19282": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "19283": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "19285": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "19286": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "19287": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8561
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "19288": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8578,
        8610
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 210,
      "value": "0x3297"
    },
    "19291": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8526,
        8534
      ],
      "op": "DUP6",
      "path": "28"
    },
    "19292": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8602,
        8609
      ],
      "op": "DUP3",
      "path": "28"
    },
    "19293": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8578,
        8591
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4D07"
    },
    "19296": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8578,
        8610
      ],
      "op": "JUMP",
      "path": "28"
    },
    "19297": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17580,
        17766
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "19298": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17661,
        17666
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "19300": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17661,
        17666
      ],
      "op": "DUP1",
      "path": "25"
    },
    "19301": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17701,
        17735
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 211,
      "value": "0x4B7C"
    },
    "19304": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17733,
        17734
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "19306": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17701,
        17728
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4B76"
    },
    "19309": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17701,
        17713
      ],
      "op": "DUP6",
      "path": "25"
    },
    "19310": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17701,
        17728
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "19312": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17701,
        17728
      ],
      "op": "DUP9",
      "path": "25"
    },
    "19313": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17701,
        17728
      ],
      "op": "AND",
      "path": "25"
    },
    "19314": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17701,
        17717
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4D33"
    },
    "19317": {
      "fn": "CryptoChampions._rollDice",
      "jump": "i",
      "offset": [
        17701,
        17728
      ],
      "op": "JUMP",
      "path": "25"
    },
    "19318": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17701,
        17728
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "19319": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17701,
        17732
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "19320": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17701,
        17732
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34D7"
    },
    "19323": {
      "fn": "CryptoChampions._rollDice",
      "jump": "i",
      "offset": [
        17701,
        17735
      ],
      "op": "JUMP",
      "path": "25"
    },
    "19324": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17701,
        17735
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "19325": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17738,
        17758
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4B87"
    },
    "19328": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17738,
        17750
      ],
      "op": "DUP5",
      "path": "25"
    },
    "19329": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17755,
        17757
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA"
    },
    "19331": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17738,
        17754
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x45FF"
    },
    "19334": {
      "fn": "CryptoChampions._rollDice",
      "jump": "i",
      "offset": [
        17738,
        17758
      ],
      "op": "JUMP",
      "path": "25"
    },
    "19335": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17738,
        17758
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "19336": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17687,
        17759
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "19337": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17687,
        17759
      ],
      "op": "POP",
      "path": "25"
    },
    "19338": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17687,
        17759
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "19339": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17687,
        17759
      ],
      "op": "POP",
      "path": "25"
    },
    "19340": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17580,
        17766
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "19341": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17580,
        17766
      ],
      "op": "POP",
      "path": "25"
    },
    "19342": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17580,
        17766
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "19343": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17580,
        17766
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "19344": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17580,
        17766
      ],
      "op": "POP",
      "path": "25"
    },
    "19345": {
      "fn": "CryptoChampions._rollDice",
      "jump": "o",
      "offset": [
        17580,
        17766
      ],
      "op": "JUMP",
      "path": "25"
    },
    "19346": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19347": {
      "fn": "EnumerableSet._at",
      "offset": [
        4546,
        4564
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 212
    },
    "19348": {
      "fn": "EnumerableSet._at",
      "offset": [
        4546,
        4564
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "19349": {
      "fn": "EnumerableSet._at",
      "offset": [
        4519,
        4526
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19351": {
      "fn": "EnumerableSet._at",
      "offset": [
        4519,
        4526
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19352": {
      "branch": 274,
      "fn": "EnumerableSet._at",
      "offset": [
        4546,
        4572
      ],
      "op": "DUP3",
      "path": "12"
    },
    "19353": {
      "op": "LT"
    },
    "19354": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4BD4"
    },
    "19357": {
      "branch": 274,
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "19358": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "19360": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "19361": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "19365": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "19367": {
      "op": "SHL"
    },
    "19368": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19369": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19370": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "19372": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "ADD",
      "path": "12"
    },
    "19373": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19374": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19375": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "19377": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "ADD",
      "path": "12"
    },
    "19378": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP3",
      "path": "12"
    },
    "19379": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19380": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SUB",
      "path": "12"
    },
    "19381": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP3",
      "path": "12"
    },
    "19382": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19383": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x22"
    },
    "19385": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19386": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19387": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "19389": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "ADD",
      "path": "12"
    },
    "19390": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19391": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5089"
    },
    "19394": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x22"
    },
    "19396": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19397": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "CODECOPY",
      "path": "12"
    },
    "19398": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "19400": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "ADD",
      "path": "12"
    },
    "19401": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19402": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "POP",
      "path": "12"
    },
    "19403": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "POP",
      "path": "12"
    },
    "19404": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "19406": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "19407": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19408": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19409": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SUB",
      "path": "12"
    },
    "19410": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19411": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "REVERT",
      "path": "12"
    },
    "19412": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19413": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4631
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 213
    },
    "19414": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4639
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19416": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4639
      ],
      "op": "ADD",
      "path": "12"
    },
    "19417": {
      "fn": "EnumerableSet._at",
      "offset": [
        4640,
        4645
      ],
      "op": "DUP3",
      "path": "12"
    },
    "19418": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19419": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "19420": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19421": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "LT",
      "path": "12"
    },
    "19422": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4BE3"
    },
    "19425": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "19426": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "INVALID",
      "path": "12"
    },
    "19427": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19428": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19429": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19431": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19432": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "19434": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19436": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "19437": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "ADD",
      "path": "12"
    },
    "19438": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "19439": {
      "fn": "EnumerableSet._at",
      "offset": [
        4621,
        4646
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19440": {
      "fn": "EnumerableSet._at",
      "offset": [
        4621,
        4646
      ],
      "op": "POP",
      "path": "12"
    },
    "19441": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "19442": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19443": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "POP",
      "path": "12"
    },
    "19444": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "POP",
      "path": "12"
    },
    "19445": {
      "fn": "EnumerableSet._at",
      "jump": "o",
      "offset": [
        4452,
        4653
      ],
      "op": "JUMP",
      "path": "12"
    },
    "19446": {
      "fn": "EnumerableSet._length",
      "offset": [
        4013,
        4120
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19447": {
      "fn": "EnumerableSet._length",
      "offset": [
        4095,
        4113
      ],
      "op": "SLOAD",
      "path": "12",
      "statement": 214
    },
    "19448": {
      "fn": "EnumerableSet._length",
      "offset": [
        4095,
        4113
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19449": {
      "fn": "EnumerableSet._length",
      "jump": "o",
      "offset": [
        4013,
        4120
      ],
      "op": "JUMP",
      "path": "12"
    },
    "19450": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2212,
        3724
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19451": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2278,
        2282
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19453": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19454": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19455": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19456": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "19458": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2427
      ],
      "op": "DUP4",
      "path": "12"
    },
    "19459": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2427
      ],
      "op": "ADD",
      "path": "12"
    },
    "19460": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "19462": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19463": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "19465": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19466": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "19467": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "19468": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2449,
        2464
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19469": {
      "branch": 275,
      "fn": "EnumerableSet._remove",
      "offset": [
        2449,
        2464
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "19470": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2445,
        3718
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4CB6"
    },
    "19473": {
      "branch": 275,
      "fn": "EnumerableSet._remove",
      "offset": [
        2445,
        3718
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "19474": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2896
      ],
      "op": "DUP4",
      "path": "12"
    },
    "19475": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2896
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "19476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19478": {
      "op": "NOT"
    },
    "19479": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2830,
        2844
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19480": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2830,
        2844
      ],
      "op": "DUP4",
      "path": "12"
    },
    "19481": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2830,
        2844
      ],
      "op": "ADD",
      "path": "12"
    },
    "19482": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2830,
        2844
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19483": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19484": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19485": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "ADD",
      "path": "12"
    },
    "19486": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19487": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2806,
        2827
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19489": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2806,
        2827
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19490": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2881
      ],
      "op": "DUP8",
      "path": "12"
    },
    "19491": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2881
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19492": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "DUP4",
      "path": "12"
    },
    "19493": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19494": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19495": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "LT",
      "path": "12"
    },
    "19496": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4C2D"
    },
    "19499": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "19500": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "INVALID",
      "path": "12"
    },
    "19501": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19502": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19503": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19505": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19506": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "19508": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19510": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "19511": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "ADD",
      "path": "12"
    },
    "19512": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "19513": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3140,
        3182
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19514": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3140,
        3182
      ],
      "op": "POP",
      "path": "12"
    },
    "19515": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3303,
        3312
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 215
    },
    "19516": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3277
      ],
      "op": "DUP8",
      "path": "12"
    },
    "19517": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3285
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19519": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3285
      ],
      "op": "ADD",
      "path": "12"
    },
    "19520": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3286,
        3299
      ],
      "op": "DUP5",
      "path": "12"
    },
    "19521": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19522": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "19523": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19524": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "LT",
      "path": "12"
    },
    "19525": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4C4A"
    },
    "19528": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "19529": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "INVALID",
      "path": "12"
    },
    "19530": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19531": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19533": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19534": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP3",
      "path": "12"
    },
    "19535": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19536": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "19538": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19539": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP4",
      "path": "12"
    },
    "19540": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "19541": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19542": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19543": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "ADD",
      "path": "12"
    },
    "19544": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3312
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "19545": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3312
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19546": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3312
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "19547": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3312
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "19548": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 216
    },
    "19549": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19550": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19551": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3420,
        3421
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "19553": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3390
      ],
      "op": "DUP10",
      "path": "12"
    },
    "19554": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3390
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19555": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3390
      ],
      "op": "ADD",
      "path": "12"
    },
    "19556": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19557": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "19558": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19559": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "19561": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19562": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "19563": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3404,
        3421
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19564": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3404,
        3421
      ],
      "op": "DUP5",
      "path": "12"
    },
    "19565": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3404,
        3421
      ],
      "op": "ADD",
      "path": "12"
    },
    "19566": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3421
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19567": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3421
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "19568": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "DUP7",
      "path": "12",
      "statement": 217
    },
    "19569": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "19570": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3381
      ],
      "op": "DUP8",
      "path": "12"
    },
    "19571": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3381
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19572": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19573": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4C7A"
    },
    "19576": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "19577": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "INVALID",
      "path": "12"
    },
    "19578": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19579": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "19581": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19582": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SUB",
      "path": "12"
    },
    "19583": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19584": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19585": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19586": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19588": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19589": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "19591": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19593": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "19594": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "ADD",
      "path": "12"
    },
    "19595": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19597": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19598": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "19599": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19600": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "19601": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3622
      ],
      "op": "DUP7",
      "path": "12",
      "statement": 218
    },
    "19602": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3631
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "19604": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3631
      ],
      "op": "ADD",
      "path": "12"
    },
    "19605": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19607": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3632,
        3637
      ],
      "op": "DUP8",
      "path": "12"
    },
    "19608": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19609": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19610": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "19612": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "ADD",
      "path": "12"
    },
    "19613": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19614": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19615": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19616": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "19618": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "ADD",
      "path": "12"
    },
    "19619": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19621": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "19622": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3612,
        3638
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19624": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3612,
        3638
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19625": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3612,
        3638
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "19626": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3660,
        3664
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 219,
      "value": "0x1"
    },
    "19628": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "19629": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "12"
    },
    "19630": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "12"
    },
    "19631": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "12"
    },
    "19632": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "12"
    },
    "19633": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "12"
    },
    "19634": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13A4"
    },
    "19637": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "JUMP",
      "path": "12"
    },
    "19638": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2445,
        3718
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19639": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3702,
        3707
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 220,
      "value": "0x0"
    },
    "19641": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19642": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "POP",
      "path": "12"
    },
    "19643": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "POP",
      "path": "12"
    },
    "19644": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13A4"
    },
    "19647": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "JUMP",
      "path": "12"
    },
    "19648": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        826,
        1090
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "19649": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 221,
      "value": "0x40"
    },
    "19651": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP1",
      "path": "29"
    },
    "19652": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "19653": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "19655": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP1",
      "path": "29"
    },
    "19656": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP3",
      "path": "29"
    },
    "19657": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "ADD",
      "path": "29"
    },
    "19658": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP7",
      "path": "29"
    },
    "19659": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "19660": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP7",
      "path": "29"
    },
    "19661": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "19662": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP1",
      "path": "29"
    },
    "19663": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP3",
      "path": "29"
    },
    "19664": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "ADD",
      "path": "29"
    },
    "19665": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "19666": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "19667": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "19668": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "19669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19675": {
      "op": "SHL"
    },
    "19676": {
      "op": "SUB"
    },
    "19677": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "19678": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "19679": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "19680": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "AND",
      "path": "29"
    },
    "19681": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "19683": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP5",
      "path": "29"
    },
    "19684": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "ADD",
      "path": "29"
    },
    "19685": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "19686": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x80"
    },
    "19688": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP1",
      "path": "29"
    },
    "19689": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP5",
      "path": "29"
    },
    "19690": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "ADD",
      "path": "29"
    },
    "19691": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "19692": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "19693": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "19694": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "19695": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP2",
      "path": "29"
    },
    "19696": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "19697": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP1",
      "path": "29"
    },
    "19698": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP5",
      "path": "29"
    },
    "19699": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SUB",
      "path": "29"
    },
    "19700": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "19701": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "19702": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "ADD",
      "path": "29"
    },
    "19703": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP2",
      "path": "29"
    },
    "19704": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "19705": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xA0"
    },
    "19707": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "19708": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "19709": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "ADD",
      "path": "29"
    },
    "19710": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "19711": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "19712": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1020,
        1082
      ],
      "op": "DUP1",
      "path": "29"
    },
    "19713": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1020,
        1082
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "19714": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1020,
        1082
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "19715": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1020,
        1082
      ],
      "op": "ADD",
      "path": "29"
    },
    "19716": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1020,
        1082
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "19717": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1020,
        1082
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "19718": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "jump": "o",
      "offset": [
        826,
        1090
      ],
      "op": "JUMP",
      "path": "29"
    },
    "19719": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1490,
        1662
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "19720": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 222,
      "value": "0x40"
    },
    "19722": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP1",
      "path": "29"
    },
    "19723": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "19724": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "19726": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP1",
      "path": "29"
    },
    "19727": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP3",
      "path": "29"
    },
    "19728": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "ADD",
      "path": "29"
    },
    "19729": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "19730": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "19731": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "19732": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "19733": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP1",
      "path": "29"
    },
    "19734": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP3",
      "path": "29"
    },
    "19735": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "ADD",
      "path": "29"
    },
    "19736": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "19737": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "19738": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "19739": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "19740": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP1",
      "path": "29"
    },
    "19741": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "19742": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP1",
      "path": "29"
    },
    "19743": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP4",
      "path": "29"
    },
    "19744": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SUB",
      "path": "29"
    },
    "19745": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP3",
      "path": "29"
    },
    "19746": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "ADD",
      "path": "29"
    },
    "19747": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP2",
      "path": "29"
    },
    "19748": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "19749": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "19751": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "19752": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "19753": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "ADD",
      "path": "29"
    },
    "19754": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "19755": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "19756": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1603,
        1655
      ],
      "op": "DUP1",
      "path": "29"
    },
    "19757": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1603,
        1655
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "19758": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1603,
        1655
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "19759": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1603,
        1655
      ],
      "op": "ADD",
      "path": "29"
    },
    "19760": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1603,
        1655
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "19761": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1603,
        1655
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "19762": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "jump": "o",
      "offset": [
        1490,
        1662
      ],
      "op": "JUMP",
      "path": "29"
    },
    "19763": {
      "fn": "SafeMath.mod",
      "offset": [
        4820,
        4968
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "19764": {
      "fn": "SafeMath.mod",
      "offset": [
        4878,
        4885
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "19766": {
      "fn": "SafeMath.mod",
      "offset": [
        4909,
        4910
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 223
    },
    "19767": {
      "fn": "SafeMath.mod",
      "offset": [
        4905,
        4906
      ],
      "op": "DUP3",
      "path": "3"
    },
    "19768": {
      "branch": 282,
      "fn": "SafeMath.mod",
      "offset": [
        4905,
        4910
      ],
      "op": "GT",
      "path": "3"
    },
    "19769": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4D89"
    },
    "19772": {
      "branch": 282,
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "19773": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "19775": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP1",
      "path": "3"
    },
    "19776": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "19777": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "19781": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "19783": {
      "op": "SHL"
    },
    "19784": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP2",
      "path": "3"
    },
    "19785": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "19786": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "19788": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "19790": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP3",
      "path": "3"
    },
    "19791": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "ADD",
      "path": "3"
    },
    "19792": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "19793": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x18"
    },
    "19795": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "19797": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP3",
      "path": "3"
    },
    "19798": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "ADD",
      "path": "3"
    },
    "19799": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "19800": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206D6F64756C6F206279207A65726F0000000000000000"
    },
    "19833": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "19835": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP3",
      "path": "3"
    },
    "19836": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "ADD",
      "path": "3"
    },
    "19837": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "19838": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "19839": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "19840": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "19841": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP2",
      "path": "3"
    },
    "19842": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "19843": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "SUB",
      "path": "3"
    },
    "19844": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "19846": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "ADD",
      "path": "3"
    },
    "19847": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "19848": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "REVERT",
      "path": "3"
    },
    "19849": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "19850": {
      "fn": "SafeMath.mod",
      "offset": [
        4960,
        4961
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 224
    },
    "19851": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4957
      ],
      "op": "DUP4",
      "path": "3"
    },
    "19852": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "DUP2",
      "path": "3"
    },
    "19853": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4D92"
    },
    "19856": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "19857": {
      "dev": "Modulus by zero",
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "INVALID",
      "path": "3"
    },
    "19858": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "19859": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "MOD",
      "path": "3"
    },
    "19860": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "19861": {
      "fn": "SafeMath.mod",
      "offset": [
        4820,
        4968
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "19862": {
      "op": "POP"
    },
    "19863": {
      "op": "POP"
    },
    "19864": {
      "op": "POP"
    },
    "19865": {
      "fn": "SafeMath.mod",
      "jump": "o",
      "offset": [
        4820,
        4968
      ],
      "op": "JUMP",
      "path": "3"
    },
    "19866": {
      "op": "JUMPDEST"
    },
    "19867": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19869": {
      "op": "MLOAD"
    },
    "19870": {
      "op": "DUP1"
    },
    "19871": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19873": {
      "op": "ADD"
    },
    "19874": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19876": {
      "op": "MSTORE"
    },
    "19877": {
      "op": "DUP1"
    },
    "19878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19880": {
      "op": "ISZERO"
    },
    "19881": {
      "op": "ISZERO"
    },
    "19882": {
      "op": "DUP2"
    },
    "19883": {
      "op": "MSTORE"
    },
    "19884": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19886": {
      "op": "ADD"
    },
    "19887": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19889": {
      "op": "DUP2"
    },
    "19890": {
      "op": "MSTORE"
    },
    "19891": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19893": {
      "op": "ADD"
    },
    "19894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19896": {
      "op": "DUP2"
    },
    "19897": {
      "op": "MSTORE"
    },
    "19898": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19900": {
      "op": "ADD"
    },
    "19901": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "19903": {
      "op": "DUP2"
    },
    "19904": {
      "op": "MSTORE"
    },
    "19905": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19907": {
      "op": "ADD"
    },
    "19908": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19910": {
      "op": "DUP2"
    },
    "19911": {
      "op": "MSTORE"
    },
    "19912": {
      "op": "POP"
    },
    "19913": {
      "op": "SWAP1"
    },
    "19914": {
      "op": "JUMP"
    },
    "19915": {
      "op": "JUMPDEST"
    },
    "19916": {
      "op": "DUP3"
    },
    "19917": {
      "op": "DUP1"
    },
    "19918": {
      "op": "SLOAD"
    },
    "19919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19921": {
      "op": "DUP2"
    },
    "19922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19924": {
      "op": "AND"
    },
    "19925": {
      "op": "ISZERO"
    },
    "19926": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "19929": {
      "op": "MUL"
    },
    "19930": {
      "op": "SUB"
    },
    "19931": {
      "op": "AND"
    },
    "19932": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "19934": {
      "op": "SWAP1"
    },
    "19935": {
      "op": "DIV"
    },
    "19936": {
      "op": "SWAP1"
    },
    "19937": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19939": {
      "op": "MSTORE"
    },
    "19940": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19944": {
      "op": "KECCAK256"
    },
    "19945": {
      "op": "SWAP1"
    },
    "19946": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "19948": {
      "op": "ADD"
    },
    "19949": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19951": {
      "op": "SWAP1"
    },
    "19952": {
      "op": "DIV"
    },
    "19953": {
      "op": "DUP2"
    },
    "19954": {
      "op": "ADD"
    },
    "19955": {
      "op": "SWAP3"
    },
    "19956": {
      "op": "DUP3"
    },
    "19957": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "19959": {
      "op": "LT"
    },
    "19960": {
      "op": "PUSH2",
      "value": "0x4E0C"
    },
    "19963": {
      "op": "JUMPI"
    },
    "19964": {
      "op": "DUP1"
    },
    "19965": {
      "op": "MLOAD"
    },
    "19966": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "19968": {
      "op": "NOT"
    },
    "19969": {
      "op": "AND"
    },
    "19970": {
      "op": "DUP4"
    },
    "19971": {
      "op": "DUP1"
    },
    "19972": {
      "op": "ADD"
    },
    "19973": {
      "op": "OR"
    },
    "19974": {
      "op": "DUP6"
    },
    "19975": {
      "op": "SSTORE"
    },
    "19976": {
      "op": "PUSH2",
      "value": "0x4E39"
    },
    "19979": {
      "op": "JUMP"
    },
    "19980": {
      "op": "JUMPDEST"
    },
    "19981": {
      "op": "DUP3"
    },
    "19982": {
      "op": "DUP1"
    },
    "19983": {
      "op": "ADD"
    },
    "19984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19986": {
      "op": "ADD"
    },
    "19987": {
      "op": "DUP6"
    },
    "19988": {
      "op": "SSTORE"
    },
    "19989": {
      "op": "DUP3"
    },
    "19990": {
      "op": "ISZERO"
    },
    "19991": {
      "op": "PUSH2",
      "value": "0x4E39"
    },
    "19994": {
      "op": "JUMPI"
    },
    "19995": {
      "op": "SWAP2"
    },
    "19996": {
      "op": "DUP3"
    },
    "19997": {
      "op": "ADD"
    },
    "19998": {
      "op": "JUMPDEST"
    },
    "19999": {
      "op": "DUP3"
    },
    "20000": {
      "op": "DUP2"
    },
    "20001": {
      "op": "GT"
    },
    "20002": {
      "op": "ISZERO"
    },
    "20003": {
      "op": "PUSH2",
      "value": "0x4E39"
    },
    "20006": {
      "op": "JUMPI"
    },
    "20007": {
      "op": "DUP3"
    },
    "20008": {
      "op": "MLOAD"
    },
    "20009": {
      "op": "DUP3"
    },
    "20010": {
      "op": "SSTORE"
    },
    "20011": {
      "op": "SWAP2"
    },
    "20012": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20014": {
      "op": "ADD"
    },
    "20015": {
      "op": "SWAP2"
    },
    "20016": {
      "op": "SWAP1"
    },
    "20017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20019": {
      "op": "ADD"
    },
    "20020": {
      "op": "SWAP1"
    },
    "20021": {
      "op": "PUSH2",
      "value": "0x4E1E"
    },
    "20024": {
      "op": "JUMP"
    },
    "20025": {
      "op": "JUMPDEST"
    },
    "20026": {
      "op": "POP"
    },
    "20027": {
      "op": "PUSH2",
      "value": "0x4E45"
    },
    "20030": {
      "op": "SWAP3"
    },
    "20031": {
      "op": "SWAP2"
    },
    "20032": {
      "op": "POP"
    },
    "20033": {
      "op": "PUSH2",
      "value": "0x4F94"
    },
    "20036": {
      "op": "JUMP"
    },
    "20037": {
      "op": "JUMPDEST"
    },
    "20038": {
      "op": "POP"
    },
    "20039": {
      "op": "SWAP1"
    },
    "20040": {
      "op": "JUMP"
    },
    "20041": {
      "op": "JUMPDEST"
    },
    "20042": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20044": {
      "op": "DUP1"
    },
    "20045": {
      "op": "MLOAD"
    },
    "20046": {
      "op": "PUSH2",
      "value": "0x360"
    },
    "20049": {
      "op": "DUP2"
    },
    "20050": {
      "op": "ADD"
    },
    "20051": {
      "op": "DUP3"
    },
    "20052": {
      "op": "MSTORE"
    },
    "20053": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20055": {
      "op": "DUP1"
    },
    "20056": {
      "op": "DUP3"
    },
    "20057": {
      "op": "MSTORE"
    },
    "20058": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "20060": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20062": {
      "op": "DUP4"
    },
    "20063": {
      "op": "ADD"
    },
    "20064": {
      "op": "DUP2"
    },
    "20065": {
      "op": "SWAP1"
    },
    "20066": {
      "op": "MSTORE"
    },
    "20067": {
      "op": "SWAP3"
    },
    "20068": {
      "op": "DUP3"
    },
    "20069": {
      "op": "ADD"
    },
    "20070": {
      "op": "DUP4"
    },
    "20071": {
      "op": "SWAP1"
    },
    "20072": {
      "op": "MSTORE"
    },
    "20073": {
      "op": "SWAP2"
    },
    "20074": {
      "op": "DUP2"
    },
    "20075": {
      "op": "ADD"
    },
    "20076": {
      "op": "DUP3"
    },
    "20077": {
      "op": "SWAP1"
    },
    "20078": {
      "op": "MSTORE"
    },
    "20079": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "20081": {
      "op": "DUP2"
    },
    "20082": {
      "op": "ADD"
    },
    "20083": {
      "op": "DUP3"
    },
    "20084": {
      "op": "SWAP1"
    },
    "20085": {
      "op": "MSTORE"
    },
    "20086": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "20088": {
      "op": "DUP2"
    },
    "20089": {
      "op": "ADD"
    },
    "20090": {
      "op": "DUP3"
    },
    "20091": {
      "op": "SWAP1"
    },
    "20092": {
      "op": "MSTORE"
    },
    "20093": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "20095": {
      "op": "DUP2"
    },
    "20096": {
      "op": "ADD"
    },
    "20097": {
      "op": "DUP3"
    },
    "20098": {
      "op": "SWAP1"
    },
    "20099": {
      "op": "MSTORE"
    },
    "20100": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "20102": {
      "op": "DUP2"
    },
    "20103": {
      "op": "ADD"
    },
    "20104": {
      "op": "DUP3"
    },
    "20105": {
      "op": "SWAP1"
    },
    "20106": {
      "op": "MSTORE"
    },
    "20107": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "20110": {
      "op": "DUP2"
    },
    "20111": {
      "op": "ADD"
    },
    "20112": {
      "op": "DUP3"
    },
    "20113": {
      "op": "SWAP1"
    },
    "20114": {
      "op": "MSTORE"
    },
    "20115": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "20118": {
      "op": "DUP2"
    },
    "20119": {
      "op": "ADD"
    },
    "20120": {
      "op": "DUP3"
    },
    "20121": {
      "op": "SWAP1"
    },
    "20122": {
      "op": "MSTORE"
    },
    "20123": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "20126": {
      "op": "DUP2"
    },
    "20127": {
      "op": "ADD"
    },
    "20128": {
      "op": "DUP3"
    },
    "20129": {
      "op": "SWAP1"
    },
    "20130": {
      "op": "MSTORE"
    },
    "20131": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "20134": {
      "op": "DUP2"
    },
    "20135": {
      "op": "ADD"
    },
    "20136": {
      "op": "DUP3"
    },
    "20137": {
      "op": "SWAP1"
    },
    "20138": {
      "op": "MSTORE"
    },
    "20139": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "20142": {
      "op": "DUP2"
    },
    "20143": {
      "op": "ADD"
    },
    "20144": {
      "op": "DUP3"
    },
    "20145": {
      "op": "SWAP1"
    },
    "20146": {
      "op": "MSTORE"
    },
    "20147": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "20150": {
      "op": "DUP2"
    },
    "20151": {
      "op": "ADD"
    },
    "20152": {
      "op": "DUP3"
    },
    "20153": {
      "op": "SWAP1"
    },
    "20154": {
      "op": "MSTORE"
    },
    "20155": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "20158": {
      "op": "DUP2"
    },
    "20159": {
      "op": "ADD"
    },
    "20160": {
      "op": "DUP3"
    },
    "20161": {
      "op": "SWAP1"
    },
    "20162": {
      "op": "MSTORE"
    },
    "20163": {
      "op": "PUSH2",
      "value": "0x1E0"
    },
    "20166": {
      "op": "DUP2"
    },
    "20167": {
      "op": "ADD"
    },
    "20168": {
      "op": "DUP3"
    },
    "20169": {
      "op": "SWAP1"
    },
    "20170": {
      "op": "MSTORE"
    },
    "20171": {
      "op": "PUSH2",
      "value": "0x200"
    },
    "20174": {
      "op": "DUP2"
    },
    "20175": {
      "op": "ADD"
    },
    "20176": {
      "op": "DUP3"
    },
    "20177": {
      "op": "SWAP1"
    },
    "20178": {
      "op": "MSTORE"
    },
    "20179": {
      "op": "PUSH2",
      "value": "0x220"
    },
    "20182": {
      "op": "DUP2"
    },
    "20183": {
      "op": "ADD"
    },
    "20184": {
      "op": "DUP3"
    },
    "20185": {
      "op": "SWAP1"
    },
    "20186": {
      "op": "MSTORE"
    },
    "20187": {
      "op": "PUSH2",
      "value": "0x240"
    },
    "20190": {
      "op": "DUP2"
    },
    "20191": {
      "op": "ADD"
    },
    "20192": {
      "op": "DUP3"
    },
    "20193": {
      "op": "SWAP1"
    },
    "20194": {
      "op": "MSTORE"
    },
    "20195": {
      "op": "PUSH2",
      "value": "0x260"
    },
    "20198": {
      "op": "DUP2"
    },
    "20199": {
      "op": "ADD"
    },
    "20200": {
      "op": "DUP3"
    },
    "20201": {
      "op": "SWAP1"
    },
    "20202": {
      "op": "MSTORE"
    },
    "20203": {
      "op": "PUSH2",
      "value": "0x280"
    },
    "20206": {
      "op": "DUP2"
    },
    "20207": {
      "op": "ADD"
    },
    "20208": {
      "op": "DUP3"
    },
    "20209": {
      "op": "SWAP1"
    },
    "20210": {
      "op": "MSTORE"
    },
    "20211": {
      "op": "PUSH2",
      "value": "0x2A0"
    },
    "20214": {
      "op": "DUP2"
    },
    "20215": {
      "op": "ADD"
    },
    "20216": {
      "op": "DUP3"
    },
    "20217": {
      "op": "SWAP1"
    },
    "20218": {
      "op": "MSTORE"
    },
    "20219": {
      "op": "PUSH2",
      "value": "0x2C0"
    },
    "20222": {
      "op": "DUP2"
    },
    "20223": {
      "op": "ADD"
    },
    "20224": {
      "op": "DUP3"
    },
    "20225": {
      "op": "SWAP1"
    },
    "20226": {
      "op": "MSTORE"
    },
    "20227": {
      "op": "PUSH2",
      "value": "0x2E0"
    },
    "20230": {
      "op": "DUP2"
    },
    "20231": {
      "op": "ADD"
    },
    "20232": {
      "op": "DUP3"
    },
    "20233": {
      "op": "SWAP1"
    },
    "20234": {
      "op": "MSTORE"
    },
    "20235": {
      "op": "PUSH2",
      "value": "0x300"
    },
    "20238": {
      "op": "DUP2"
    },
    "20239": {
      "op": "ADD"
    },
    "20240": {
      "op": "DUP3"
    },
    "20241": {
      "op": "SWAP1"
    },
    "20242": {
      "op": "MSTORE"
    },
    "20243": {
      "op": "PUSH2",
      "value": "0x320"
    },
    "20246": {
      "op": "DUP2"
    },
    "20247": {
      "op": "ADD"
    },
    "20248": {
      "op": "DUP3"
    },
    "20249": {
      "op": "SWAP1"
    },
    "20250": {
      "op": "MSTORE"
    },
    "20251": {
      "op": "PUSH2",
      "value": "0x340"
    },
    "20254": {
      "op": "DUP2"
    },
    "20255": {
      "op": "ADD"
    },
    "20256": {
      "op": "SWAP2"
    },
    "20257": {
      "op": "SWAP1"
    },
    "20258": {
      "op": "SWAP2"
    },
    "20259": {
      "op": "MSTORE"
    },
    "20260": {
      "op": "SWAP1"
    },
    "20261": {
      "op": "JUMP"
    },
    "20262": {
      "op": "JUMPDEST"
    },
    "20263": {
      "op": "DUP3"
    },
    "20264": {
      "op": "DUP1"
    },
    "20265": {
      "op": "SLOAD"
    },
    "20266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20268": {
      "op": "DUP2"
    },
    "20269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20271": {
      "op": "AND"
    },
    "20272": {
      "op": "ISZERO"
    },
    "20273": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "20276": {
      "op": "MUL"
    },
    "20277": {
      "op": "SUB"
    },
    "20278": {
      "op": "AND"
    },
    "20279": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "20281": {
      "op": "SWAP1"
    },
    "20282": {
      "op": "DIV"
    },
    "20283": {
      "op": "SWAP1"
    },
    "20284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20286": {
      "op": "MSTORE"
    },
    "20287": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20291": {
      "op": "KECCAK256"
    },
    "20292": {
      "op": "SWAP1"
    },
    "20293": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "20295": {
      "op": "ADD"
    },
    "20296": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20298": {
      "op": "SWAP1"
    },
    "20299": {
      "op": "DIV"
    },
    "20300": {
      "op": "DUP2"
    },
    "20301": {
      "op": "ADD"
    },
    "20302": {
      "op": "SWAP3"
    },
    "20303": {
      "op": "DUP3"
    },
    "20304": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "20306": {
      "op": "LT"
    },
    "20307": {
      "op": "PUSH2",
      "value": "0x4F67"
    },
    "20310": {
      "op": "JUMPI"
    },
    "20311": {
      "op": "DUP3"
    },
    "20312": {
      "op": "DUP1"
    },
    "20313": {
      "op": "ADD"
    },
    "20314": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "20316": {
      "op": "NOT"
    },
    "20317": {
      "op": "DUP3"
    },
    "20318": {
      "op": "CALLDATALOAD"
    },
    "20319": {
      "op": "AND"
    },
    "20320": {
      "op": "OR"
    },
    "20321": {
      "op": "DUP6"
    },
    "20322": {
      "op": "SSTORE"
    },
    "20323": {
      "op": "PUSH2",
      "value": "0x4E39"
    },
    "20326": {
      "op": "JUMP"
    },
    "20327": {
      "op": "JUMPDEST"
    },
    "20328": {
      "op": "DUP3"
    },
    "20329": {
      "op": "DUP1"
    },
    "20330": {
      "op": "ADD"
    },
    "20331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20333": {
      "op": "ADD"
    },
    "20334": {
      "op": "DUP6"
    },
    "20335": {
      "op": "SSTORE"
    },
    "20336": {
      "op": "DUP3"
    },
    "20337": {
      "op": "ISZERO"
    },
    "20338": {
      "op": "PUSH2",
      "value": "0x4E39"
    },
    "20341": {
      "op": "JUMPI"
    },
    "20342": {
      "op": "SWAP2"
    },
    "20343": {
      "op": "DUP3"
    },
    "20344": {
      "op": "ADD"
    },
    "20345": {
      "op": "JUMPDEST"
    },
    "20346": {
      "op": "DUP3"
    },
    "20347": {
      "op": "DUP2"
    },
    "20348": {
      "op": "GT"
    },
    "20349": {
      "op": "ISZERO"
    },
    "20350": {
      "op": "PUSH2",
      "value": "0x4E39"
    },
    "20353": {
      "op": "JUMPI"
    },
    "20354": {
      "op": "DUP3"
    },
    "20355": {
      "op": "CALLDATALOAD"
    },
    "20356": {
      "op": "DUP3"
    },
    "20357": {
      "op": "SSTORE"
    },
    "20358": {
      "op": "SWAP2"
    },
    "20359": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20361": {
      "op": "ADD"
    },
    "20362": {
      "op": "SWAP2"
    },
    "20363": {
      "op": "SWAP1"
    },
    "20364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20366": {
      "op": "ADD"
    },
    "20367": {
      "op": "SWAP1"
    },
    "20368": {
      "op": "PUSH2",
      "value": "0x4F79"
    },
    "20371": {
      "op": "JUMP"
    },
    "20372": {
      "op": "JUMPDEST"
    },
    "20373": {
      "op": "JUMPDEST"
    },
    "20374": {
      "op": "DUP1"
    },
    "20375": {
      "op": "DUP3"
    },
    "20376": {
      "op": "GT"
    },
    "20377": {
      "op": "ISZERO"
    },
    "20378": {
      "op": "PUSH2",
      "value": "0x4E45"
    },
    "20381": {
      "op": "JUMPI"
    },
    "20382": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20384": {
      "op": "DUP2"
    },
    "20385": {
      "op": "SSTORE"
    },
    "20386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20388": {
      "op": "ADD"
    },
    "20389": {
      "op": "PUSH2",
      "value": "0x4F95"
    },
    "20392": {
      "op": "JUMP"
    },
    "20393": {
      "op": "JUMPDEST"
    },
    "20394": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "20396": {
      "op": "SHR"
    },
    "20397": {
      "op": "SWAP1"
    },
    "20398": {
      "op": "JUMP"
    },
    "20399": {
      "op": "JUMPDEST"
    },
    "20400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20402": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "20404": {
      "op": "RETURNDATASIZE"
    },
    "20405": {
      "op": "LT"
    },
    "20406": {
      "op": "ISZERO"
    },
    "20407": {
      "op": "PUSH2",
      "value": "0x4FBF"
    },
    "20410": {
      "op": "JUMPI"
    },
    "20411": {
      "op": "PUSH2",
      "value": "0x2856"
    },
    "20414": {
      "op": "JUMP"
    },
    "20415": {
      "op": "JUMPDEST"
    },
    "20416": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "20418": {
      "op": "DUP2"
    },
    "20419": {
      "op": "DUP3"
    },
    "20420": {
      "op": "RETURNDATACOPY"
    },
    "20421": {
      "op": "PUSH4",
      "value": "0x8C379A0"
    },
    "20426": {
      "op": "PUSH2",
      "value": "0x4FD3"
    },
    "20429": {
      "op": "DUP3"
    },
    "20430": {
      "op": "MLOAD"
    },
    "20431": {
      "op": "PUSH2",
      "value": "0x4FA9"
    },
    "20434": {
      "op": "JUMP"
    },
    "20435": {
      "op": "JUMPDEST"
    },
    "20436": {
      "op": "EQ"
    },
    "20437": {
      "op": "PUSH2",
      "value": "0x4FDD"
    },
    "20440": {
      "op": "JUMPI"
    },
    "20441": {
      "op": "PUSH2",
      "value": "0x2856"
    },
    "20444": {
      "op": "JUMP"
    },
    "20445": {
      "op": "JUMPDEST"
    },
    "20446": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20448": {
      "op": "MLOAD"
    },
    "20449": {
      "op": "RETURNDATASIZE"
    },
    "20450": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "20452": {
      "op": "NOT"
    },
    "20453": {
      "op": "ADD"
    },
    "20454": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "20456": {
      "op": "DUP3"
    },
    "20457": {
      "op": "RETURNDATACOPY"
    },
    "20458": {
      "op": "DUP1"
    },
    "20459": {
      "op": "MLOAD"
    },
    "20460": {
      "op": "RETURNDATASIZE"
    },
    "20461": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "20470": {
      "op": "DUP2"
    },
    "20471": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "20473": {
      "op": "DUP5"
    },
    "20474": {
      "op": "ADD"
    },
    "20475": {
      "op": "GT"
    },
    "20476": {
      "op": "DUP2"
    },
    "20477": {
      "op": "DUP5"
    },
    "20478": {
      "op": "GT"
    },
    "20479": {
      "op": "OR"
    },
    "20480": {
      "op": "ISZERO"
    },
    "20481": {
      "op": "PUSH2",
      "value": "0x500D"
    },
    "20484": {
      "op": "JUMPI"
    },
    "20485": {
      "op": "POP"
    },
    "20486": {
      "op": "POP"
    },
    "20487": {
      "op": "POP"
    },
    "20488": {
      "op": "POP"
    },
    "20489": {
      "op": "PUSH2",
      "value": "0x2856"
    },
    "20492": {
      "op": "JUMP"
    },
    "20493": {
      "op": "JUMPDEST"
    },
    "20494": {
      "op": "DUP3"
    },
    "20495": {
      "op": "DUP5"
    },
    "20496": {
      "op": "ADD"
    },
    "20497": {
      "op": "SWAP3"
    },
    "20498": {
      "op": "POP"
    },
    "20499": {
      "op": "DUP3"
    },
    "20500": {
      "op": "MLOAD"
    },
    "20501": {
      "op": "SWAP2"
    },
    "20502": {
      "op": "POP"
    },
    "20503": {
      "op": "DUP1"
    },
    "20504": {
      "op": "DUP3"
    },
    "20505": {
      "op": "GT"
    },
    "20506": {
      "op": "ISZERO"
    },
    "20507": {
      "op": "PUSH2",
      "value": "0x5027"
    },
    "20510": {
      "op": "JUMPI"
    },
    "20511": {
      "op": "POP"
    },
    "20512": {
      "op": "POP"
    },
    "20513": {
      "op": "POP"
    },
    "20514": {
      "op": "POP"
    },
    "20515": {
      "op": "PUSH2",
      "value": "0x2856"
    },
    "20518": {
      "op": "JUMP"
    },
    "20519": {
      "op": "JUMPDEST"
    },
    "20520": {
      "op": "POP"
    },
    "20521": {
      "op": "RETURNDATASIZE"
    },
    "20522": {
      "op": "DUP4"
    },
    "20523": {
      "op": "ADD"
    },
    "20524": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20526": {
      "op": "DUP3"
    },
    "20527": {
      "op": "DUP5"
    },
    "20528": {
      "op": "ADD"
    },
    "20529": {
      "op": "ADD"
    },
    "20530": {
      "op": "GT"
    },
    "20531": {
      "op": "ISZERO"
    },
    "20532": {
      "op": "PUSH2",
      "value": "0x503F"
    },
    "20535": {
      "op": "JUMPI"
    },
    "20536": {
      "op": "POP"
    },
    "20537": {
      "op": "POP"
    },
    "20538": {
      "op": "POP"
    },
    "20539": {
      "op": "PUSH2",
      "value": "0x2856"
    },
    "20542": {
      "op": "JUMP"
    },
    "20543": {
      "op": "JUMPDEST"
    },
    "20544": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "20546": {
      "op": "ADD"
    },
    "20547": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "20549": {
      "op": "NOT"
    },
    "20550": {
      "op": "AND"
    },
    "20551": {
      "op": "DUP2"
    },
    "20552": {
      "op": "ADD"
    },
    "20553": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20555": {
      "op": "ADD"
    },
    "20556": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20558": {
      "op": "MSTORE"
    },
    "20559": {
      "op": "SWAP2"
    },
    "20560": {
      "op": "POP"
    },
    "20561": {
      "op": "POP"
    },
    "20562": {
      "op": "SWAP1"
    },
    "20563": {
      "op": "JUMP"
    }
  },
  "sha1": "ccecc3f2cb7e84ca693f8e66ad79ecb5e821a828",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.6.0;\n\nimport \"../interfaces/ICryptoChampions.sol\";\nimport \"../interfaces/IMinigameFactoryRegistry.sol\";\nimport \"./chainlink_contracts/AggregatorV3Interface.sol\";\nimport \"./chainlink_contracts/VRFConsumerBase.sol\";\nimport \"./minigames/games/priceWars/PriceWarsFactory.sol\";\nimport \"./minigames/games/priceWars/PriceWars.sol\";\n\nimport \"OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/AccessControl.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/ERC1155.sol\";\n\n/// @title Crypto Champions Interface\n/// @author Oozyx\n/// @notice This is the crypto champions class\ncontract CryptoChampions is ICryptoChampions, AccessControl, ERC1155, VRFConsumerBase {\n    using SafeMath for uint256;\n    using SafeMath for uint8;\n\n    // Possible phases the contract can be in.  Phase one is when users can mint elder spirits and two is when they can mint heros.\n    enum Phase { MINT_ELDER, MINT_HERO }\n\n    // The current phase the contract is in.\n    Phase public currentPhase;\n\n    // Number of tokens minted whenever a user mints a hero\n    uint256 internal constant NUM_TOKENS_MINTED = 500 * 10**18;\n\n    // The owner role is used to globally govern the contract\n    bytes32 internal constant ROLE_OWNER = keccak256(\"ROLE_OWNER\");\n\n    // The admin role is used for administrator duties and reports to the owner\n    bytes32 internal constant ROLE_ADMIN = keccak256(\"ROLE_ADMIN\");\n\n    // The role to declare round winners\n    bytes32 internal constant ROLE_GAME_ADMIN = keccak256(\"ROLE_GAME_ADMIN\");\n\n    // Reserved id for the in game currency\n    uint256 internal constant IN_GAME_CURRENCY_ID = 0;\n\n    // Constants used to determine fee proportions.\n    // Usage: fee.mul(proportion).div(10)\n    uint8 internal constant HERO_MINT_ROYALTY_PROPORTION = 8;\n\n    // The identifier for the price wars game\n    string internal constant PRICE_WARS_ID = \"PRICE_WARS\";\n\n    // The max amount of elders that can be minted\n    uint256 public constant MAX_NUMBER_OF_ELDERS = 7;\n\n    // The amount of elders minted\n    // This amount cannot be greater than MAX_NUMBER_OF_ELDERS\n    uint256 public eldersInGame = 0;\n\n    // The mapping of elder id to elder owner, ids can only be in the range of [1, MAX_NUMBER OF ELDERS]\n    mapping(uint256 => address) internal _elderOwners;\n\n    // The mapping of elder id to the elder spirit\n    mapping(uint256 => ElderSpirit) internal _elderSpirits;\n\n    // The amount of heros minted\n    uint256 public heroesMinted = 0;\n\n    // The mapping of hero id to owner, ids can only be in the range of\n    // [1 + MAX_NUMBER_OF_ELDERS, ]\n    mapping(uint256 => address) internal _heroOwners;\n\n    // The mapping of hero id to the hero\n    mapping(uint256 => Hero) internal _heroes;\n\n    // The mapping of the round played to the elder spawns mapping\n    mapping(uint256 => mapping(uint256 => uint256)) internal _roundElderSpawns;\n\n    // The mint price for elders and heroes\n    uint256 public elderMintPrice;\n\n    // The current round index\n    uint256 public currentRound;\n\n    // The mapping of affinities (token ticker) to price feed address\n    mapping(string => address) internal _affinities;\n\n    // List of available affinities\n    string[] public affinities;\n\n    // The key hash used for VRF\n    bytes32 internal _keyHash;\n\n    // The fee in LINK for VRF\n    uint256 internal _fee;\n\n    // Mapping of request id to hero id\n    mapping(bytes32 => uint256) internal _heroRandomRequest;\n\n    // Mapping of request id to random result\n    mapping(bytes32 => uint256) internal _randomResultsVRF;\n\n    // The list of affinities that won in a round\n    string[] public winningAffinitiesByRound;\n\n    // The registry of minigame factories\n    IMinigameFactoryRegistry internal _minigameFactoryRegistry;\n\n    /// @notice Triggered when an elder spirit gets minted\n    /// @param elderId The elder id belonging to the minted elder\n    /// @param owner The address of the owner\n    event ElderSpiritMinted(uint256 elderId, address owner);\n\n    /// @notice Triggered when a hero gets minted\n    /// @param heroId The hero id belonging to the hero that was minted\n    /// @param owner The address of the owner\n    event HeroMinted(uint256 heroId, address owner);\n\n    /// @notice Triggered when the elder spirits have been burned\n    event ElderSpiritsBurned();\n\n    /// @notice Triggered when a hero has been burned\n    /// @param heroId The hero id of the hero that was burned\n    event HeroBurned(uint256 heroId);\n\n    // Initializes a new CryptoChampions contract\n    // TODO: need to provide the proper uri\n    constructor(\n        bytes32 keyhash,\n        address vrfCoordinator,\n        address linkToken,\n        address minigameFactoryRegistry\n    ) public ERC1155(\"uri\") VRFConsumerBase(vrfCoordinator, linkToken) {\n        // Set up administrative roles\n        _setRoleAdmin(ROLE_OWNER, ROLE_OWNER);\n        _setRoleAdmin(ROLE_ADMIN, ROLE_OWNER);\n        _setRoleAdmin(ROLE_GAME_ADMIN, ROLE_OWNER);\n\n        // Set up the deployer as the owner and give admin rights\n        _setupRole(ROLE_OWNER, msg.sender);\n        grantRole(ROLE_ADMIN, msg.sender);\n\n        // Set initial elder mint price\n        elderMintPrice = 0.271 ether;\n\n        // Set the initial round to 0\n        currentRound = 0;\n\n        // Set initial phase to phase one\n        currentPhase = Phase.MINT_ELDER;\n\n        // Set VRF fields\n        _keyHash = keyhash;\n        _fee = 0.1 * 10**18; // 0.1 LINK\n\n        _minigameFactoryRegistry = IMinigameFactoryRegistry(minigameFactoryRegistry);\n    }\n\n    modifier isValidElderSpiritId(uint256 elderId) {\n        require(elderId > IN_GAME_CURRENCY_ID && elderId <= MAX_NUMBER_OF_ELDERS); // dev: Given id is not valid.\n        _;\n    }\n\n    modifier isValidHero(uint256 heroId) {\n        require(heroId > MAX_NUMBER_OF_ELDERS); // dev: Given id is not valid.\n        require(_heroes[heroId].valid); // dev: Hero is not valid.\n        _;\n    }\n\n    // Restrict to only price war addresses\n    modifier onlyGameAdmin {\n        _hasRole(ROLE_GAME_ADMIN);\n        _;\n    }\n\n    // Restrict to only admins\n    modifier onlyAdmin {\n        _hasRole(ROLE_ADMIN);\n        _;\n    }\n\n    /// @notice Makes a request for a random number\n    /// @param userProvidedSeed The seed for the random request\n    /// @return requestId The request id\n    function _getRandomNumber(uint256 userProvidedSeed) internal returns (bytes32 requestId) {\n        require(LINK.balanceOf(address(this)) >= _fee); // dev: Not enough LINK - fill contract with faucet\n        return requestRandomness(_keyHash, _fee, userProvidedSeed);\n    }\n\n    /// @notice Callback function used by the VRF coordinator\n    /// @param requestId The request id\n    /// @param randomness The randomness\n    function fulfillRandomness(bytes32 requestId, uint256 randomness) internal override {\n        _randomResultsVRF[requestId] = randomness;\n        _trainHero(requestId);\n    }\n\n    /// @notice Sets the contract's phase\n    /// @param phase The phase the contract should be set to\n    function setPhase(Phase phase) external onlyAdmin {\n        currentPhase = phase;\n    }\n\n    /// @notice Check if msg.sender has the role\n    /// @param role The role to verify\n    function _hasRole(bytes32 role) internal view {\n        require(hasRole(role, msg.sender)); // dev: Access denied.\n    }\n\n    /// @notice Creates a new token affinity\n    /// @dev This will be called by a priviledged address. It will allow to create new affinities. May need to add a\n    /// remove affinity function as well.\n    /// @param tokenTicker The token ticker of the affinity\n    /// @param feedAddress The price feed address\n    function createAffinity(string calldata tokenTicker, address feedAddress) external override onlyAdmin {\n        _affinities[tokenTicker] = feedAddress;\n        affinities.push(tokenTicker);\n    }\n\n    /// @notice Sets the elder mint price\n    /// @dev Can only be called by an admin address\n    /// @param price The new elder mint price\n    function setElderMintPrice(uint256 price) external override onlyAdmin {\n        elderMintPrice = price;\n    }\n\n    /// @notice Mints an elder spirit\n    /// @dev For now only race, class, and token (affinity) are needed. This will change. The race and class ids will\n    /// probably be public constants defined in the crypto champions contract, this is subject to change.\n    /// @param raceId The race id\n    /// @param classId The class id\n    /// @param affinity The affinity of the minted hero\n    /// @return The elder spirit id\n    function mintElderSpirit(\n        uint256 raceId,\n        uint256 classId,\n        string calldata affinity\n    ) external payable override returns (uint256) {\n        require(currentPhase == Phase.MINT_ELDER); // dev: Can only mint elders in phase one\n        require(eldersInGame < MAX_NUMBER_OF_ELDERS); // dev: Max number of elders already minted.\n        require(msg.value >= elderMintPrice); // dev: Insufficient payment.\n        require(_affinities[affinity] != address(0)); // dev: Affinity does not exist.\n\n        // Generate the elderId and make sure it doesn't already exists\n        uint256 elderId = eldersInGame.add(1);\n        assert(_elderOwners[elderId] == address(0)); // dev: Elder with id already has owner.\n        assert(_elderSpirits[elderId].valid == false); // dev: Elder spirit with id has already been generated.\n\n        // Get the price data of affinity\n        int256 affinityPrice;\n        (, affinityPrice, , , ) = AggregatorV3Interface(_affinities[affinity]).latestRoundData();\n\n        // Create the elder spirit\n        ElderSpirit memory elder;\n        elder.valid = true;\n        elder.raceId = raceId;\n        elder.classId = classId;\n        elder.affinity = affinity;\n        elder.affinityPrice = affinityPrice;\n\n        // Mint the NFT\n        _mint(_msgSender(), elderId, 1, \"\"); // TODO: give the URI\n\n        // Assign the elder id with the owner and its spirit\n        _elderOwners[elderId] = _msgSender();\n        _elderSpirits[elderId] = elder;\n\n        // Increment elders minted\n        eldersInGame = eldersInGame.add(1);\n\n        // Refund if user sent too much\n        _refundSender(elderMintPrice);\n\n        emit ElderSpiritMinted(elderId, _msgSender());\n\n        return elderId;\n    }\n\n    /// @notice Gets the elder owner for the given elder id\n    /// @param elderId The elder id\n    /// @return The owner of the elder\n    function getElderOwner(uint256 elderId) public view override isValidElderSpiritId(elderId) returns (address) {\n        require(_elderOwners[elderId] != address(0)); // dev: Given elder id has not been minted.\n\n        return _elderOwners[elderId];\n    }\n\n    /// @notice Mints a hero based on an elder spirit\n    /// @param elderId The id of the elder spirit this hero is based on\n    /// @return The hero id\n    function mintHero(uint256 elderId, string calldata heroName)\n        external\n        payable\n        override\n        isValidElderSpiritId(elderId)\n        returns (uint256)\n    {\n        require(currentPhase == Phase.MINT_HERO); //dev: Can only mint hero in phase 2.\n        require(_elderSpirits[elderId].valid); // dev: Elder with id doesn't exists or not valid.\n\n        require(_canMintHero(elderId)); // dev: Can't mint hero. Too mnay heroes minted for elder.\n\n        uint256 mintPrice = getHeroMintPrice(currentRound, elderId);\n        require(msg.value >= mintPrice); // dev: Insufficient payment.\n\n        // Generate the hero id\n        uint256 heroId = heroesMinted.add(1) + MAX_NUMBER_OF_ELDERS;\n        assert(_heroOwners[heroId] == address(0)); // dev: Hero with id already has an owner.\n        assert(_heroes[heroId].valid == false); // dev: Hero with id has already been generated.\n\n        // Create the hero\n        Hero memory hero;\n        hero.valid = true;\n        hero.name = heroName;\n        hero.roundMinted = currentRound;\n        hero.elderId = elderId;\n        hero.raceId = _elderSpirits[elderId].raceId;\n        hero.classId = _elderSpirits[elderId].classId;\n        hero.affinity = _elderSpirits[elderId].affinity;\n        _heroes[heroId] = hero;\n\n        // Request the random number and set hero attributes\n        bytes32 requestId = _getRandomNumber(heroId);\n        _heroRandomRequest[requestId] = heroId;\n        _trainHero(requestId);\n\n        // Mint the NFT\n        _mint(_msgSender(), heroId, 1, \"\"); // TODO: give the URI\n\n        // Mint in game currency tokens\n        _mint(_msgSender(), IN_GAME_CURRENCY_ID, NUM_TOKENS_MINTED, \"\");\n\n        // Assign the hero id with the owner and with the hero\n        _heroOwners[heroId] = _msgSender();\n\n        // Increment the heroes minted and the elder spawns\n        heroesMinted = heroesMinted.add(1);\n        _roundElderSpawns[currentRound][elderId] = _roundElderSpawns[currentRound][elderId].add(1);\n\n        // Disburse royalties\n        uint256 royaltyFee = mintPrice.mul(HERO_MINT_ROYALTY_PROPORTION).div(10);\n        address seedOwner = _elderOwners[elderId];\n        (bool success, ) = seedOwner.call{ value: royaltyFee }(\"\");\n        require(success, \"Payment failed\");\n        // Remaining 20% kept for contract/Treum\n\n        // Refund if user sent too much\n        _refundSender(mintPrice);\n\n        emit HeroMinted(heroId, _msgSender());\n\n        return heroId;\n    }\n\n    /// @notice Checks to see if a hero can be minted for a given elder\n    /// @dev (n < 4) || (n <= 2 * m)\n    ///     n is number of champions already minted for elder\n    ///     m is number of champions already minted for elder with least amount of champions\n    /// @param elderId The elder id\n    /// @return True if hero can be minted, false otherwise\n    function _canMintHero(uint256 elderId) internal view returns (bool) {\n        // Verify first condition\n        if (_roundElderSpawns[currentRound][elderId] < 4) {\n            return true;\n        }\n\n        // Find the elder with the least amount of heroes minted\n        uint256 smallestElderAmount = _roundElderSpawns[currentRound][elderId];\n        for (uint256 i = 1; i <= eldersInGame; ++i) {\n            if (_roundElderSpawns[currentRound][i] < smallestElderAmount) {\n                smallestElderAmount = _roundElderSpawns[currentRound][i];\n            }\n        }\n\n        return _roundElderSpawns[currentRound][elderId] <= smallestElderAmount.mul(2);\n    }\n\n    /// @notice Sets the hero attributes\n    /// @param requestId The request id that is mapped to a hero\n    function _trainHero(bytes32 requestId) internal isValidHero(_heroRandomRequest[requestId]) {\n        uint256 heroId = _heroRandomRequest[requestId];\n        uint256 randomNumber = _randomResultsVRF[requestId];\n        uint256 newRandomNumber;\n\n        _heroes[heroId].level = 1; // 1 by default\n        (_heroes[heroId].appearance, newRandomNumber) = _rollDice(2, randomNumber); // 1 out of 2\n\n        (_heroes[heroId].trait1, newRandomNumber) = _rollDice(4, newRandomNumber); // 1 out of 4\n        (_heroes[heroId].trait2, newRandomNumber) = _rollDice(4, newRandomNumber); // 1 out of 4\n        (_heroes[heroId].skill1, newRandomNumber) = _rollDice(4, newRandomNumber); // 1 out of 4\n        (_heroes[heroId].skill2, newRandomNumber) = _rollDice(4, newRandomNumber); // 1 out of 4\n\n        (_heroes[heroId].alignment, newRandomNumber) = _rollDice(9, newRandomNumber); // 1 out of 9\n        (_heroes[heroId].background, newRandomNumber) = _rollDice(30, newRandomNumber); // 1 out of 30\n        (_heroes[heroId].hometown, newRandomNumber) = _rollDice(24, newRandomNumber); // 1 out of 24\n        (_heroes[heroId].weather, newRandomNumber) = _rollDice(7, newRandomNumber); // 1 ouf of 7\n\n        (_heroes[heroId].hp, newRandomNumber) = _rollDice(21, newRandomNumber); // Roll 10-30\n        _heroes[heroId].hp = uint8(_heroes[heroId].hp.add(9));\n        (_heroes[heroId].mana, newRandomNumber) = _rollDice(21, newRandomNumber); // Roll 10-30\n        _heroes[heroId].mana = uint8(_heroes[heroId].mana.add(9));\n        (_heroes[heroId].stamina, newRandomNumber) = _rollDice(31, newRandomNumber); // Roll 10-40\n        _heroes[heroId].stamina = uint8(_heroes[heroId].stamina.add(9));\n\n        (_heroes[heroId].strength, newRandomNumber) = _rollDice(16, newRandomNumber); // Roll 3-18\n        _heroes[heroId].strength = uint8(_heroes[heroId].strength.add(2));\n        (_heroes[heroId].dexterity, newRandomNumber) = _rollDice(16, newRandomNumber); // Roll 3-18\n        _heroes[heroId].dexterity = uint8(_heroes[heroId].dexterity.add(2));\n        (_heroes[heroId].constitution, newRandomNumber) = _rollDice(16, newRandomNumber); // Roll 3-18\n        _heroes[heroId].constitution = uint8(_heroes[heroId].constitution.add(2));\n        (_heroes[heroId].intelligence, newRandomNumber) = _rollDice(16, newRandomNumber); // Roll 3-18\n        _heroes[heroId].intelligence = uint8(_heroes[heroId].intelligence.add(2));\n        (_heroes[heroId].wisdom, newRandomNumber) = _rollDice(16, newRandomNumber); // Roll 3-18\n        _heroes[heroId].wisdom = uint8(_heroes[heroId].wisdom.add(2));\n        (_heroes[heroId].charisma, newRandomNumber) = _rollDice(16, newRandomNumber); // Roll 3-18\n        _heroes[heroId].charisma = uint8(_heroes[heroId].charisma.add(2));\n    }\n\n    /// @notice Simulates rolling dice\n    /// @param maxNumber The max number of the dice (e.g. regular die is 6)\n    /// @param randomNumber The random number\n    /// @return The result of the dice roll and a new random number to use for another dice roll\n    function _rollDice(uint8 maxNumber, uint256 randomNumber) internal pure returns (uint8, uint256) {\n        return (uint8(randomNumber.mod(maxNumber).add(1)), randomNumber.div(10));\n    }\n\n    /// @notice Get the hero owner for the given hero id\n    /// @param heroId The hero id\n    /// @return The owner address\n    function getHeroOwner(uint256 heroId) public view override isValidHero(heroId) returns (address) {\n        require(_heroOwners[heroId] != address(0)); // dev: Given hero id has not been minted.\n\n        return _heroOwners[heroId];\n    }\n\n    /// @notice Disburses the rewards evenly among the heroes of the winning affinity\n    /// @dev This will be called from a priviledged address\n    /// @param winningAffinity The winning affinity token ticker\n    function disburseRewards(string calldata winningAffinity) external override onlyAdmin {}\n\n    /// @notice Burns all the elder spirits in game\n    function burnElders() external override onlyAdmin {\n        require(eldersInGame > 0); // dev: No elders have been minted.\n        for (uint256 i = 1; i <= MAX_NUMBER_OF_ELDERS; ++i) {\n            if (_elderSpirits[i].valid) {\n                _burnElder(i);\n            }\n        }\n\n        // Increment the round\n        currentRound = currentRound.add(1);\n\n        emit ElderSpiritsBurned();\n    }\n\n    /// @notice Burns the elder spirit\n    /// @dev This will only be able to be called by the contract\n    /// @param elderId The elder id\n    function _burnElder(uint256 elderId) internal isValidElderSpiritId(elderId) {\n        require(_elderSpirits[elderId].valid); // dev: Cannot burn elder that does not exist.\n\n        // TODO: need to make sure _elderOwners[elderId] can never be address(0).\n        //     Check recipient before every token send so that we never send to address(0).\n        _burn(_elderOwners[elderId], elderId, 1);\n\n        // Reset elder values for elder id\n        eldersInGame = eldersInGame.sub(1);\n        _elderOwners[elderId] = address(0);\n        _elderSpirits[elderId].valid = false;\n    }\n\n    /// @notice Burns the hero for a refund\n    /// @dev This will only be able to be called from the owner of the hero\n    /// @param heroId The hero id to burn\n    function burnHero(uint256 heroId) external override isValidHero(heroId) {\n        require(_heroes[heroId].valid); // dev: Cannot burn hero that does not exist.\n        require(_heroOwners[heroId] == _msgSender()); // dev: Cannot burn hero that is not yours.\n\n        _burn(_heroOwners[heroId], heroId, 1);\n\n        // Decrement the amount of spawns for the hero's elder\n        uint256 elderId = _heroes[heroId].elderId;\n        uint256 heroRound = _heroes[heroId].roundMinted;\n        _roundElderSpawns[heroRound][elderId] = _roundElderSpawns[heroRound][elderId].sub(1);\n\n        // Reset hero values for hero id\n        _heroOwners[heroId] = address(0);\n        _heroes[heroId].valid = false;\n\n        emit HeroBurned(heroId);\n    }\n\n    /// @notice Gets the minting price of a hero based on specified elder spirit\n    /// @param round The round of the hero to be minted\n    /// @param elderId The elder id for which the hero will be based on\n    /// @return The hero mint price\n    function getHeroMintPrice(uint256 round, uint256 elderId)\n        public\n        view\n        override\n        isValidElderSpiritId(elderId)\n        returns (uint256)\n    {\n        require(round <= currentRound); // dev: Cannot get price round has not started.\n        uint256 heroAmount = _roundElderSpawns[round][elderId].add(1);\n\n        return _priceFormula(heroAmount);\n    }\n\n    /// @notice The bounding curve function that calculates price for the new supply\n    /// @dev price = 0.02*(heroes minted) + 0.1\n    /// @param newSupply The new supply after a burn or mint\n    /// @return The calculated price\n    function _priceFormula(uint256 newSupply) internal pure returns (uint256) {\n        uint256 price;\n        uint256 base = 1;\n        price = newSupply.mul(10**18).mul(2).div(100);\n        price = price.add(base.mul(10**18).div(10));\n\n        return price;\n    }\n\n    /// @dev Hook function called before every token transfer\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual override {\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            // If token is an elder spirit, update owners so can send them royalties\n            if (ids[i] > IN_GAME_CURRENCY_ID && ids[i] <= MAX_NUMBER_OF_ELDERS) {\n                _elderOwners[ids[i]] = payable(to);\n            }\n            if (ids[i] > MAX_NUMBER_OF_ELDERS) {\n                _heroOwners[ids[i]] = to;\n            }\n        }\n    }\n\n    /// @notice Gets the amount of heroes spawn from the elder with the specified id during the specified round\n    /// @param round The round the elder was created\n    /// @param elderId The elder id\n    /// @return The amount of heroes spawned from the elder\n    function getElderSpawnsAmount(uint256 round, uint256 elderId)\n        public\n        view\n        override\n        isValidElderSpiritId(elderId)\n        returns (uint256)\n    {\n        require(round <= currentRound); // dev: Invalid round.\n        return _roundElderSpawns[round][elderId];\n    }\n\n    /// @notice Refunds the sender if they sent too much\n    /// @param cost The cost\n    function _refundSender(uint256 cost) internal {\n        if (msg.value.sub(cost) > 0) {\n            (bool success, ) = msg.sender.call{ value: msg.value.sub(cost) }(\"\");\n            require(success); // dev: Refund failed.\n        }\n    }\n\n    /// @notice Fetches the data of a single elder spirit\n    /// @param elderId The id of the elder being searched for\n    /// @return The elder's attributes in the following order (valid, raceId, classId, affinity)\n    function getElderSpirit(uint256 elderId)\n        external\n        view\n        override\n        isValidElderSpiritId(elderId)\n        returns (\n            bool,\n            uint256,\n            uint256,\n            string memory,\n            int256\n        )\n    {\n        ElderSpirit memory elderSpirit = _elderSpirits[elderId];\n        return (\n            elderSpirit.valid,\n            elderSpirit.raceId,\n            elderSpirit.classId,\n            elderSpirit.affinity,\n            elderSpirit.affinityPrice\n        );\n    }\n\n    /// @notice Hero getter function\n    /// @param heroId The hero id\n    /// @return valid, affinity, affinity price, round minted, elder id\n    function getHeroGameData(uint256 heroId)\n        external\n        view\n        override\n        isValidHero(heroId)\n        returns (\n            bool, // valid\n            string memory, // affinity\n            int256, // affinity price\n            uint256, // round minted\n            uint256 // elder id\n        )\n    {\n        return (\n            _heroes[heroId].valid,\n            _heroes[heroId].affinity,\n            _heroes[heroId].affinityPrice,\n            _heroes[heroId].roundMinted,\n            _heroes[heroId].elderId\n        );\n    }\n\n    /// @notice Hero getter function\n    /// @param heroId The hero id\n    /// @return name, race id, class id, appearance\n    function getHeroVisuals(uint256 heroId)\n        external\n        view\n        override\n        isValidHero(heroId)\n        returns (\n            string memory, // name\n            uint256, // race id\n            uint256, // class id\n            uint8 // appearance\n        )\n    {\n        return (_heroes[heroId].name, _heroes[heroId].raceId, _heroes[heroId].classId, _heroes[heroId].appearance);\n    }\n\n    /// @notice Hero getter function\n    /// @param heroId The hero id\n    /// @return trait 1, trait 2, skill 1, skill 2\n    function getHeroTraitsSkills(uint256 heroId)\n        external\n        view\n        override\n        isValidHero(heroId)\n        returns (\n            uint8, // trait 1\n            uint8, // trait 2\n            uint8, // skill 1\n            uint8 // skill 2\n        )\n    {\n        return (_heroes[heroId].trait1, _heroes[heroId].trait2, _heroes[heroId].skill1, _heroes[heroId].skill2);\n    }\n\n    /// @notice Hero getter function\n    /// @param heroId The hero id\n    /// @return alignment, background, hometown, weather\n    function getHeroLore(uint256 heroId)\n        external\n        view\n        override\n        isValidHero(heroId)\n        returns (\n            uint8, // alignment\n            uint8, // background\n            uint8, // hometown\n            uint8 // weather\n        )\n    {\n        return (\n            _heroes[heroId].alignment,\n            _heroes[heroId].background,\n            _heroes[heroId].hometown,\n            _heroes[heroId].weather\n        );\n    }\n\n    /// @notice Hero getter function\n    /// @param heroId The hero id\n    /// @return level, hp, mana\n    function getHeroVitals(uint256 heroId)\n        external\n        view\n        override\n        isValidHero(heroId)\n        returns (\n            uint8, // level\n            uint8, // hp\n            uint8, // mana\n            uint8 // stamina\n        )\n    {\n        return (_heroes[heroId].level, _heroes[heroId].hp, _heroes[heroId].mana, _heroes[heroId].stamina);\n    }\n\n    /// @notice Hero getter function\n    /// @param heroId The hero id\n    /// @return stamina, strength, dexterity, constitution, intelligence, wisdom, charisma\n    function getHeroStats(uint256 heroId)\n        external\n        view\n        override\n        isValidHero(heroId)\n        returns (\n            uint8, // strength\n            uint8, // dexterity\n            uint8, // constitution\n            uint8, // intelligence\n            uint8, // wisdom\n            uint8 // charisma\n        )\n    {\n        return (\n            _heroes[heroId].strength,\n            _heroes[heroId].dexterity,\n            _heroes[heroId].constitution,\n            _heroes[heroId].intelligence,\n            _heroes[heroId].wisdom,\n            _heroes[heroId].charisma\n        );\n    }\n\n    /// @notice Fetches the feed address for a given affinity\n    /// @param affinity The affinity being searched for\n    /// @return The address of the affinity's feed address\n    function getAffinityFeedAddress(string calldata affinity) external view override returns (address) {\n        return _affinities[affinity];\n    }\n\n    /// @notice Fetches the number of elders currently in the game\n    /// @return The current number of elders in the game\n    function getNumEldersInGame() external view override returns (uint256) {\n        return eldersInGame;\n    }\n\n    /// @notice Declares a winning affinity for a round\n    /// @dev This can only be called by a game admin contract\n    /// @param winningAffinity The affinity that won the game\n    function declareRoundWinner(string calldata winningAffinity) external override onlyGameAdmin {\n        winningAffinitiesByRound.push(winningAffinity);\n    }\n\n    /// @notice Starts a new price game\n    /// @dev This can only be called by the admin of the contract\n    function startNewPriceGame() external override onlyAdmin {\n        address priceWarsFactoryAddress = _minigameFactoryRegistry.getFactory(PRICE_WARS_ID);\n        PriceWarsFactory priceWarsFactory = PriceWarsFactory(priceWarsFactoryAddress);\n        PriceWars priceWar = priceWarsFactory.createPriceWar(address(this));\n        grantRole(ROLE_GAME_ADMIN, address(priceWar));\n        priceWar.startGame();\n    }\n\n    /// @notice Transfers in game currency tokens from one address to another\n    /// @param to The receiving address\n    /// @param amount The amount to transfer\n    function transferInGameTokens(address to, uint256 amount) external override {\n        bytes memory data;\n        safeTransferFrom(msg.sender, to, IN_GAME_CURRENCY_ID, amount, data);\n    }\n\n    /// @notice Transfers in game currency tokens from one address to another.\n    /// @param from The sending address.  Note that the sender must be authorized to transfer funds if the sender is different from the from address.\n    /// @param to The receiving address\n    /// @param amount The amount to transfer\n    function delegatedTransferInGameTokens(\n        address from,\n        address to,\n        uint256 amount\n    ) external override {\n        bytes memory data;\n        safeTransferFrom(from, to, IN_GAME_CURRENCY_ID, amount, data);\n    }\n}\n",
  "sourceMap": "743:29255:25:-:0;;;2271:1;2241:31;;2616:1;2586:31;;4703:965;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4703:965:25;;;;;;;;;;;;;;;;;1976:354:5;;;;;;;;;;;-1:-1:-1;;;1976:354:5;;;;;;;4703:965:25;;;;;;;;;;;768:40:1;-1:-1:-1;;;768:18:1;:40::i;:::-;2026:13:5;2034:4;2026:7;:13::i;:::-;2128:41;-1:-1:-1;;;2128:18:5;:41::i;:::-;2269:54;-1:-1:-1;;;2269:18:5;:54::i;:::-;-1:-1:-1;;;;;;;9212:32:28;;;;;;;;9254;;;;;4960:37:25::2;-1:-1:-1::0;;;;;;;;;;;1375:23:25;4960:13:::2;:37::i;:::-;5007;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;5007:13:25::2;:37::i;:::-;5054:42;1639:28;-1:-1:-1::0;;;;;;;;;;;5054:13:25::2;:42::i;:::-;5173:34;-1:-1:-1::0;;;;;;;;;;;5196:10:25::2;5173;:34::i;:::-;5217:33;-1:-1:-1::0;;;;;;;;;;;5239:10:25::2;5217:9;:33::i;:::-;5318:11;5301:14;:28:::0;5393:1:::2;5378:12;:16:::0;5447:12:::2;:31:::0;;-1:-1:-1;;5447:31:25::2;::::0;;5515:8:::2;:18:::0;;;;-1:-1:-1;;5550:12:25::2;5543:4;:19:::0;5585:24:::2;:76:::0;;-1:-1:-1;;;;;;5585:76:25::2;-1:-1:-1::0;;;;;5585:76:25;;::::2;::::0;;;::::2;::::0;;743:29255;;1507:198:1;-1:-1:-1;;;;;;1590:25:1;;;;;1582:66;;;;;-1:-1:-1;;;1582:66:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1658:33:1;;;;;1694:4;1658:33;;;;;;;;:40;;-1:-1:-1;;1658:40:1;;;;;;1507:198::o;7541:86:5:-;7607:13;;;;:4;;:13;;;;;:::i;:::-;;7541:86;:::o;6823:196:0:-;6934:6;:12;;;;;;;;;;;:22;;;6911:57;;6958:9;;6941:4;;6911:57;;6934:6;6911:57;6978:6;:12;;;;;;;;;;;:22;;:34;6823:196::o;6588:110::-;6666:25;6677:4;6683:7;6666:10;:25::i;4644:223::-;4735:6;:12;;;;;;;;;;:22;;;4727:45;;4759:12;:10;:12::i;:::-;4727:7;:45::i;:::-;4719:105;;;;-1:-1:-1;;;4719:105:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7025:184;7098:6;:12;;;;;;;;;;;:33;;7123:7;;7098:24;;;;;:33;;:::i;:::-;7094:109;;;7179:12;:10;:12::i;:::-;-1:-1:-1;;;;;7152:40:0;7170:7;-1:-1:-1;;;;;7152:40:0;7164:4;7152:40;;;;;;;;;;7025:184;;:::o;598:104:11:-;685:10;598:104;:::o;2950:137:0:-;3019:4;3042:12;;;;;;;;;;:38;;3072:7;;3042:29;;;;;:38;;:::i;:::-;3035:45;;2950:137;;;;;:::o;6429:150:12:-;6499:4;6522:50;6527:3;-1:-1:-1;;;;;6547:23:12;;6522:4;:50::i;6984:165::-;7064:4;7087:55;7097:3;-1:-1:-1;;;;;7117:23:12;;7087:9;:55::i;1640:404::-;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;-1:-1:-1;1761:23:12;;;;;;;;:11;:23;;;;;;;;;;;;;1941:18;;1919:19;;;:12;;;:19;;;;;;:40;;;;1973:11;;1719:319;-1:-1:-1;2022:5:12;2015:12;;3805:127;3878:4;3901:19;;;:12;;;;;:19;;;;;;:24;;;3805:127::o;743:29255:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;743:29255:25;;;-1:-1:-1;743:29255:25;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/CryptoChampions.sol",
  "type": "contract"
}